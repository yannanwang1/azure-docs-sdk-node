### YamlMime:JavaScriptReference
items:
  - uid: azure-common._global
    id: azure-common._global
    name: GLOBAL
    fullName: GLOBAL
    type: Class
    summary: global object
    children:
      - azure-common._global.xmlbuilder
      - azure-common._global.xml2js
      - azure-common._global.Constants
      - azure-common._global.Logger
      - azure-common._global.date
      - azure-common._global.WebResource
      - azure-common._global.js2xml
      - azure-common._global.Service
      - azure-common._global.ServiceClient
      - azure-common._global.StorageServiceClient
      - azure-common._global.ServiceManagementClient
      - azure-common._global.ServiceSettings
      - azure-common._global.ServiceBusSettings
      - azure-common._global.StorageServiceSettings
      - azure-common._global.ServiceManagementSettings
      - azure-common._global.ServiceClientConstants
      - azure-common._global.ConnectionStringParser
      - azure-common._global.CertificateCloudCredentials
      - azure-common._global.TokenCloudCredentials
      - azure-common._global.AnonymousCloudCredentials
      - azure-common._global.LinearRetryPolicyFilter
      - azure-common._global.ExponentialRetryPolicyFilter
      - azure-common._global.UserAgentFilter
      - azure-common._global.ProxyFilter
      - azure-common._global.LogFilter
      - azure-common._global.ErrorHandlingFilter
      - azure-common._global.SigningFilter
      - azure-common._global.SdkConfig
      - azure-common._global.config
      - azure-common._global.configure
      - azure-common._global.dumpConfig
      - azure-common._global.HmacSha256Sign
      - azure-common._global.ISO8061Date
      - azure-common._global.RFC1123
      - azure-common._global.certutils
      - azure-common._global.keyFiles
      - azure-common._global.util
      - azure-common._global.validate
      - azure-common._global.requestPipeline
      - azure-common._global.OdataHandler
      - azure-common._global.atomHandler
      - azure-common._global.edmType
      - azure-common._global.OperationStatus
      - azure-common._global.parse
      - azure-common._global.create
      - azure-common._global.create
      - azure-common._global.create
      - azure-common._global.setAgent
      - azure-common._global.create
      - azure-common._global.create
      - azure-common._global.create
      - azure-common._global._tagRequest
      - azure-common._global.DEFAULT_PROTOCOL
      - azure-common._global.NoMatchError
      - azure-common._global.noMatchConnectionString
      - azure-common._global.noMatchSettings
      - azure-common._global.parseAndValidateKeys
      - azure-common._global.getValidator
      - azure-common._global.setting
      - azure-common._global.atLeastOne
      - azure-common._global.optional
      - azure-common._global.allRequired
      - azure-common._global.settingWithFunc
      - azure-common._global.matchedSpecification
      - azure-common._global.parseHost
      - azure-common._global.parse
      - azure-common._global.serializeEntry
      - azure-common._global.readPemFile
      - azure-common._global.propertyType
      - azure-common._global.serializeValue
      - azure-common._global.unserializeValue
      - azure-common._global.serializeQueryValue
      - azure-common._global.format
      - azure-common._global.parse
      - azure-common._global.read
      - azure-common._global.format
      - azure-common._global.parse
      - azure-common._global.encodeUri
      - azure-common._global.objectKeysLength
      - azure-common._global.objectFirstKey
      - azure-common._global.objectIsNull
      - azure-common._global.objectIsEmpty
      - azure-common._global.objectIsInt
      - azure-common._global.objectIsString
      - azure-common._global.objectIsFunction
      - azure-common._global.zeroPaddingString
      - azure-common._global.stringIsEmpty
      - azure-common._global.stringFormat
      - azure-common._global.stringStartsWith
      - azure-common._global.stringEndsWith
      - azure-common._global.stringIsInt
      - azure-common._global.stringIsFloat
      - azure-common._global.stringIsNumber
      - azure-common._global.stringIsDate
      - azure-common._global.urlIsHTTPS
      - azure-common._global.removeBOM
      - azure-common._global.merge
      - azure-common._global.inArrayInsensitive
      - azure-common._global.tryGetValueInsensitive
      - azure-common._global.getNameSpace
      - azure-common._global.isInt
      - azure-common._global.tryGetValueChain
      - azure-common._global.truncatedISO8061Date
      - azure-common._global.normalizeArgs
      - azure-common._global.getNodeVersion
      - azure-common._global.analyzeStream
      - azure-common._global.isBufferAllZero
      - azure-common._global.writeZeroToStream
      - azure-common._global.getContentMd5
      - azure-common._global.pathExistsSync
      - azure-common._global.isValidUri
      - azure-common._global.isValidHDInsightCreationObject
      - azure-common._global.isValidUuid
      - azure-common._global.isBase64Encoded
      - azure-common._global.isValidFunction
      - azure-common._global.namespaceNameIsValid
      - azure-common._global.containerNameIsValid
      - azure-common._global.blobNameIsValid
      - azure-common._global.tableNameIsValid
      - azure-common._global.pageRangesAreValid
      - azure-common._global.queueNameIsValid
      - azure-common._global.ArgumentValidator
      - azure-common._global.validateArgs
  - uid: azure-common._global.xmlbuilder
    id: azure-common._global.xmlbuilder
    name: xmlbuilder
    summary: ''
    fullName: azure-common.xmlbuilder
    type: Field
    syntax:
      content: xmlbuilder
  - uid: azure-common._global.xml2js
    id: azure-common._global.xml2js
    name: xml2js
    summary: ''
    fullName: azure-common.xml2js
    type: Field
    syntax:
      content: xml2js
  - uid: azure-common._global.Constants
    id: azure-common._global.Constants
    name: Constants
    summary: ''
    fullName: azure-common.Constants
    type: Field
    syntax:
      content: Constants
  - uid: azure-common._global.Logger
    id: azure-common._global.Logger
    name: Logger
    summary: ''
    fullName: azure-common.Logger
    type: Field
    syntax:
      content: Logger
  - uid: azure-common._global.date
    id: azure-common._global.date
    name: date
    summary: ''
    fullName: azure-common.date
    type: Field
    syntax:
      content: date
  - uid: azure-common._global.WebResource
    id: azure-common._global.WebResource
    name: WebResource
    summary: ''
    fullName: azure-common.WebResource
    type: Field
    syntax:
      content: WebResource
  - uid: azure-common._global.js2xml
    id: azure-common._global.js2xml
    name: js2xml
    summary: ''
    fullName: azure-common.js2xml
    type: Field
    syntax:
      content: js2xml
  - uid: azure-common._global.Service
    id: azure-common._global.Service
    name: Service
    summary: ''
    fullName: azure-common.Service
    type: Field
    syntax:
      content: Service
  - uid: azure-common._global.ServiceClient
    id: azure-common._global.ServiceClient
    name: ServiceClient
    summary: ''
    fullName: azure-common.ServiceClient
    type: Field
    syntax:
      content: ServiceClient
  - uid: azure-common._global.StorageServiceClient
    id: azure-common._global.StorageServiceClient
    name: StorageServiceClient
    summary: ''
    fullName: azure-common.StorageServiceClient
    type: Field
    syntax:
      content: StorageServiceClient
  - uid: azure-common._global.ServiceManagementClient
    id: azure-common._global.ServiceManagementClient
    name: ServiceManagementClient
    summary: ''
    fullName: azure-common.ServiceManagementClient
    type: Field
    syntax:
      content: ServiceManagementClient
  - uid: azure-common._global.ServiceSettings
    id: azure-common._global.ServiceSettings
    name: ServiceSettings
    summary: ''
    fullName: azure-common.ServiceSettings
    type: Field
    syntax:
      content: ServiceSettings
  - uid: azure-common._global.ServiceBusSettings
    id: azure-common._global.ServiceBusSettings
    name: ServiceBusSettings
    summary: ''
    fullName: azure-common.ServiceBusSettings
    type: Field
    syntax:
      content: ServiceBusSettings
  - uid: azure-common._global.StorageServiceSettings
    id: azure-common._global.StorageServiceSettings
    name: StorageServiceSettings
    summary: ''
    fullName: azure-common.StorageServiceSettings
    type: Field
    syntax:
      content: StorageServiceSettings
  - uid: azure-common._global.ServiceManagementSettings
    id: azure-common._global.ServiceManagementSettings
    name: ServiceManagementSettings
    summary: ''
    fullName: azure-common.ServiceManagementSettings
    type: Field
    syntax:
      content: ServiceManagementSettings
  - uid: azure-common._global.ServiceClientConstants
    id: azure-common._global.ServiceClientConstants
    name: ServiceClientConstants
    summary: ''
    fullName: azure-common.ServiceClientConstants
    type: Field
    syntax:
      content: ServiceClientConstants
  - uid: azure-common._global.ConnectionStringParser
    id: azure-common._global.ConnectionStringParser
    name: ConnectionStringParser
    summary: ''
    fullName: azure-common.ConnectionStringParser
    type: Field
    syntax:
      content: ConnectionStringParser
  - uid: azure-common._global.CertificateCloudCredentials
    id: azure-common._global.CertificateCloudCredentials
    name: CertificateCloudCredentials
    summary: ''
    fullName: azure-common.CertificateCloudCredentials
    type: Field
    syntax:
      content: CertificateCloudCredentials
  - uid: azure-common._global.TokenCloudCredentials
    id: azure-common._global.TokenCloudCredentials
    name: TokenCloudCredentials
    summary: ''
    fullName: azure-common.TokenCloudCredentials
    type: Field
    syntax:
      content: TokenCloudCredentials
  - uid: azure-common._global.AnonymousCloudCredentials
    id: azure-common._global.AnonymousCloudCredentials
    name: AnonymousCloudCredentials
    summary: ''
    fullName: azure-common.AnonymousCloudCredentials
    type: Field
    syntax:
      content: AnonymousCloudCredentials
  - uid: azure-common._global.LinearRetryPolicyFilter
    id: azure-common._global.LinearRetryPolicyFilter
    name: LinearRetryPolicyFilter
    summary: ''
    fullName: azure-common.LinearRetryPolicyFilter
    type: Field
    syntax:
      content: LinearRetryPolicyFilter
  - uid: azure-common._global.ExponentialRetryPolicyFilter
    id: azure-common._global.ExponentialRetryPolicyFilter
    name: ExponentialRetryPolicyFilter
    summary: ''
    fullName: azure-common.ExponentialRetryPolicyFilter
    type: Field
    syntax:
      content: ExponentialRetryPolicyFilter
  - uid: azure-common._global.UserAgentFilter
    id: azure-common._global.UserAgentFilter
    name: UserAgentFilter
    summary: ''
    fullName: azure-common.UserAgentFilter
    type: Field
    syntax:
      content: UserAgentFilter
  - uid: azure-common._global.ProxyFilter
    id: azure-common._global.ProxyFilter
    name: ProxyFilter
    summary: ''
    fullName: azure-common.ProxyFilter
    type: Field
    syntax:
      content: ProxyFilter
  - uid: azure-common._global.LogFilter
    id: azure-common._global.LogFilter
    name: LogFilter
    summary: ''
    fullName: azure-common.LogFilter
    type: Field
    syntax:
      content: LogFilter
  - uid: azure-common._global.ErrorHandlingFilter
    id: azure-common._global.ErrorHandlingFilter
    name: ErrorHandlingFilter
    summary: ''
    fullName: azure-common.ErrorHandlingFilter
    type: Field
    syntax:
      content: ErrorHandlingFilter
  - uid: azure-common._global.SigningFilter
    id: azure-common._global.SigningFilter
    name: SigningFilter
    summary: ''
    fullName: azure-common.SigningFilter
    type: Field
    syntax:
      content: SigningFilter
  - uid: azure-common._global.SdkConfig
    id: azure-common._global.SdkConfig
    name: SdkConfig
    summary: ''
    fullName: azure-common.SdkConfig
    type: Field
    syntax:
      content: SdkConfig
  - uid: azure-common._global.config
    id: azure-common._global.config
    name: config
    summary: ''
    fullName: azure-common.config
    type: Field
    syntax:
      content: config
  - uid: azure-common._global.configure
    id: azure-common._global.configure
    name: configure()
    summary: ''
    fullName: azure-common.configure()
    type: Method
    syntax:
      content: function configure()
  - uid: azure-common._global.dumpConfig
    id: azure-common._global.dumpConfig
    name: dumpConfig()
    summary: ''
    fullName: azure-common.dumpConfig()
    type: Method
    syntax:
      content: function dumpConfig()
  - uid: azure-common._global.HmacSha256Sign
    id: azure-common._global.HmacSha256Sign
    name: HmacSha256Sign
    summary: ''
    fullName: azure-common.HmacSha256Sign
    type: Field
    syntax:
      content: HmacSha256Sign
  - uid: azure-common._global.ISO8061Date
    id: azure-common._global.ISO8061Date
    name: ISO8061Date
    summary: ''
    fullName: azure-common.ISO8061Date
    type: Field
    syntax:
      content: ISO8061Date
  - uid: azure-common._global.RFC1123
    id: azure-common._global.RFC1123
    name: RFC1123
    summary: ''
    fullName: azure-common.RFC1123
    type: Field
    syntax:
      content: RFC1123
  - uid: azure-common._global.certutils
    id: azure-common._global.certutils
    name: certutils
    summary: ''
    fullName: azure-common.certutils
    type: Field
    syntax:
      content: certutils
  - uid: azure-common._global.keyFiles
    id: azure-common._global.keyFiles
    name: keyFiles
    summary: ''
    fullName: azure-common.keyFiles
    type: Field
    syntax:
      content: keyFiles
  - uid: azure-common._global.util
    id: azure-common._global.util
    name: util
    summary: ''
    fullName: azure-common.util
    type: Field
    syntax:
      content: util
  - uid: azure-common._global.validate
    id: azure-common._global.validate
    name: validate
    summary: ''
    fullName: azure-common.validate
    type: Field
    syntax:
      content: validate
  - uid: azure-common._global.requestPipeline
    id: azure-common._global.requestPipeline
    name: requestPipeline
    summary: ''
    fullName: azure-common.requestPipeline
    type: Field
    syntax:
      content: requestPipeline
  - uid: azure-common._global.OdataHandler
    id: azure-common._global.OdataHandler
    name: OdataHandler
    summary: ''
    fullName: azure-common.OdataHandler
    type: Field
    syntax:
      content: OdataHandler
  - uid: azure-common._global.atomHandler
    id: azure-common._global.atomHandler
    name: atomHandler
    summary: ''
    fullName: azure-common.atomHandler
    type: Field
    syntax:
      content: atomHandler
  - uid: azure-common._global.edmType
    id: azure-common._global.edmType
    name: edmType
    summary: ''
    fullName: azure-common.edmType
    type: Field
    syntax:
      content: edmType
  - uid: azure-common._global.OperationStatus
    id: azure-common._global.OperationStatus
    name: OperationStatus
    summary: ''
    fullName: azure-common.OperationStatus
    type: Field
    syntax:
      content: OperationStatus
  - uid: azure-common._global.parse
    id: azure-common._global.parse
    name: parse(connectionString)
    summary: Parses a connection string.
    fullName: azure-common.parse(connectionString)
    type: Method
    syntax:
      parameters:
        - id: connectionString
          type:
            - number
          description: The connection string to be parsed.
      return:
        type:
          - object
        description: The connection string object.
      content: function parse(connectionString)
  - uid: azure-common._global.create
    id: azure-common._global.create
    name: create()
    summary: >-
      Creates a filter to handle an error response. This includes parsing and
      normalizing error responses.
    fullName: azure-common.create()
    type: Method
    syntax:
      content: function create()
  - uid: azure-common._global.create
    id: azure-common._global.create
    name: create()
    summary: logFilter = simple filter to do logging on requests and responses
    fullName: azure-common.create()
    type: Method
    syntax:
      content: function create()
  - uid: azure-common._global.create
    id: azure-common._global.create
    name: create(proxy)
    summary: Creates a filter to set proxy options;
    fullName: azure-common.create(proxy)
    type: Method
    syntax:
      parameters:
        - id: proxy
          type:
            - object
          description: 'The proxy url (with host, port and protocol properties).'
      content: function create(proxy)
  - uid: azure-common._global.setAgent
    id: azure-common._global.setAgent
    name: 'setAgent(resouce, proxy)'
    summary: |-
      Set the Agent to use for the request
      Result depends on proxy settings and protocol
    fullName: 'azure-common.setAgent(resouce, proxy)'
    type: Method
    syntax:
      parameters:
        - id: resouce
          type:
            - object
          description: request options for request.
        - id: proxy
          type:
            - object
          description: parsed url for the proxy.
      content: 'function setAgent(resouce, proxy)'
  - uid: azure-common._global.create
    id: azure-common._global.create
    name: create()
    summary: Creates a that handles server redirects;
    fullName: azure-common.create()
    type: Method
    syntax:
      content: function create()
  - uid: azure-common._global.create
    id: azure-common._global.create
    name: create(authenticationProvider)
    summary: Creates a filter to do the signing of a request.
    fullName: azure-common.create(authenticationProvider)
    type: Method
    syntax:
      parameters:
        - id: authenticationProvider
          type:
            - object
          description: The authentication provider to use to sign the request.
      content: function create(authenticationProvider)
  - uid: azure-common._global.create
    id: azure-common._global.create
    name: create(userAgent)
    summary: Creates a filter to add the user agent header in a request.
    fullName: azure-common.create(userAgent)
    type: Method
    syntax:
      parameters:
        - id: userAgent
          type:
            - string
          description: The user agent string to use.
      content: function create(userAgent)
  - uid: azure-common._global._tagRequest
    id: azure-common._global._tagRequest
    name: _tagRequest()
    summary: ''
    fullName: azure-common._tagRequest()
    type: Method
    syntax:
      content: function _tagRequest()
  - uid: azure-common._global.DEFAULT_PROTOCOL
    id: azure-common._global.DEFAULT_PROTOCOL
    name: DEFAULT_PROTOCOL
    summary: The default protocol.
    fullName: azure-common.DEFAULT_PROTOCOL
    type: Field
    syntax:
      content: DEFAULT_PROTOCOL
  - uid: azure-common._global.NoMatchError
    id: azure-common._global.NoMatchError
    name: NoMatchError
    summary: ''
    fullName: azure-common.NoMatchError
    type: Field
    syntax:
      content: NoMatchError
  - uid: azure-common._global.noMatchConnectionString
    id: azure-common._global.noMatchConnectionString
    name: noMatchConnectionString(connectionString)
    summary: >-
      Throws an exception if the connection string format does not match any of
      the

      available formats.
    fullName: azure-common.noMatchConnectionString(connectionString)
    type: Method
    syntax:
      parameters:
        - id: connectionString
          type:
            - string
          description: The invalid formatted connection string.
      return:
        description: none
      content: function noMatchConnectionString(connectionString)
  - uid: azure-common._global.noMatchSettings
    id: azure-common._global.noMatchSettings
    name: noMatchSettings(settings)
    summary: |-
      Throws an exception if the settings dont match any of the
      available formats.
    fullName: azure-common.noMatchSettings(settings)
    type: Method
    syntax:
      parameters:
        - id: settings
          type:
            - object
          description: The invalid settings.
      return:
        description: none
      content: function noMatchSettings(settings)
  - uid: azure-common._global.parseAndValidateKeys
    id: azure-common._global.parseAndValidateKeys
    name: 'parseAndValidateKeys(connectionString, validKeys)'
    summary: >-
      Parses the connection string and then validate that the parsed keys belong
      to

      the validSettingKeys
    fullName: 'azure-common.parseAndValidateKeys(connectionString, validKeys)'
    type: Method
    syntax:
      parameters:
        - id: connectionString
          type:
            - string
          description: The user provided connection string.
        - id: validKeys
          type:
            - array
          description: The valid keys.
      return:
        type:
          - array
        description: The tokenized connection string keys.
      content: 'function parseAndValidateKeys(connectionString, validKeys)'
  - uid: azure-common._global.getValidator
    id: azure-common._global.getValidator
    name: 'getValidator(array, boolean, boolean)'
    summary: >-
      Creates an anonymous function that acts as predicate to perform a
      validation.
    fullName: 'azure-common.getValidator(array, boolean, boolean)'
    type: Method
    syntax:
      parameters:
        - id: array
          type:
            - azure-common.requirements
          description: The array of conditions to satisfy.
        - id: boolean
          type:
            - azure-common.isRequired
          description: |-
            Either these conditions are all required or all
            optional.
        - id: boolean
          type:
            - azure-common.atLeastOne
          description: |-
            Indicates that at least one requirement must
            succeed.
      return:
        type:
          - function
        description: ''
      content: 'function getValidator(array, boolean, boolean)'
  - uid: azure-common._global.setting
    id: azure-common._global.setting
    name: setting(name)
    summary: |-
      Creates a setting value condition that validates it is one of the
      passed valid values.
    fullName: azure-common.setting(name)
    type: Method
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: The setting key name.
      return:
        type:
          - array
        description: ''
      content: function setting(name)
  - uid: azure-common._global.atLeastOne
    id: azure-common._global.atLeastOne
    name: atLeastOne()
    summary: Creates an "at lease one" predicate for the provided list of requirements.
    fullName: azure-common.atLeastOne()
    type: Method
    syntax:
      return:
        description: callable
      content: function atLeastOne()
  - uid: azure-common._global.optional
    id: azure-common._global.optional
    name: optional()
    summary: Creates an optional predicate for the provided list of requirements.
    fullName: azure-common.optional()
    type: Method
    syntax:
      return:
        type:
          - function
        description: ''
      content: function optional()
  - uid: azure-common._global.allRequired
    id: azure-common._global.allRequired
    name: allRequired()
    summary: Creates an required predicate for the provided list of requirements.
    fullName: azure-common.allRequired()
    type: Method
    syntax:
      return:
        type:
          - function
        description: ''
      content: function allRequired()
  - uid: azure-common._global.settingWithFunc
    id: azure-common._global.settingWithFunc
    name: 'settingWithFunc(name, predicate)'
    summary: Creates a setting value condition using the passed predicate.
    fullName: 'azure-common.settingWithFunc(name, predicate)'
    type: Method
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: The setting key name.
        - id: predicate
          type:
            - function
          description: The setting value predicate.
      return:
        type:
          - array
        description: ''
      content: 'function settingWithFunc(name, predicate)'
  - uid: azure-common._global.matchedSpecification
    id: azure-common._global.matchedSpecification
    name: matchedSpecification(array)
    summary: Tests to see if a given list of settings matches a set of filters exactly.
    fullName: azure-common.matchedSpecification(array)
    type: Method
    syntax:
      parameters:
        - id: array
          description: $settings The settings to check.
      return:
        description: |-
          boolean If any filter returns null, false. If there are any settings
          left over after all filters are processed, false. Otherwise true.
      content: function matchedSpecification(array)
  - uid: azure-common._global.parseHost
    id: azure-common._global.parseHost
    name: parseHost()
    summary: ''
    fullName: azure-common.parseHost()
    type: Method
    syntax:
      content: function parseHost()
  - uid: azure-common._global.parse
    id: azure-common._global.parse
    name: parse()
    summary: ''
    fullName: azure-common.parse()
    type: Method
    syntax:
      content: function parse()
  - uid: azure-common._global.serializeEntry
    id: azure-common._global.serializeEntry
    name: 'serializeEntry(content, namespaces)'
    summary: ''
    fullName: 'azure-common.serializeEntry(content, namespaces)'
    type: Method
    syntax:
      parameters:
        - id: content
          type:
            - object
          description: >-
            The content payload as it is to be serialized by js2xml. It should
            include any root node(s).
        - id: namespaces
          type:
            - array
          description: An array of top level namespaces to be defined.
      content: 'function serializeEntry(content, namespaces)'
  - uid: azure-common._global.readPemFile
    id: azure-common._global.readPemFile
    name: readPemFile()
    summary: ''
    fullName: azure-common.readPemFile()
    type: Method
    syntax:
      content: function readPemFile()
  - uid: azure-common._global.propertyType
    id: azure-common._global.propertyType
    name: propertyType(value)
    summary: Get the Edm type of an object.
    fullName: azure-common.propertyType(value)
    type: Method
    syntax:
      parameters:
        - id: value
          type:
            - object
          description: A typed instance.
      return:
        type:
          - string
        description: The Edm type.
      content: function propertyType(value)
  - uid: azure-common._global.serializeValue
    id: azure-common._global.serializeValue
    name: serializeValue()
    summary: ''
    fullName: azure-common.serializeValue()
    type: Method
    syntax:
      content: function serializeValue()
  - uid: azure-common._global.unserializeValue
    id: azure-common._global.unserializeValue
    name: 'unserializeValue(type, value)'
    summary: Convert a serialized value into an typed object.
    fullName: 'azure-common.unserializeValue(type, value)'
    type: Method
    syntax:
      parameters:
        - id: type
          type:
            - string
          description: The type of the value as it appears in the type attribute.
        - id: value
          type:
            - string
          description: The value in string format.
      return:
        type:
          - object
        description: The typed value.
      content: 'function unserializeValue(type, value)'
  - uid: azure-common._global.serializeQueryValue
    id: azure-common._global.serializeQueryValue
    name: serializeQueryValue(value)
    summary: Serializes value into proper value to be used in odata query value.
    fullName: azure-common.serializeQueryValue(value)
    type: Method
    syntax:
      parameters:
        - id: value
          type:
            - object
          description: The value to be serialized.
      return:
        type:
          - string
        description: The serialized value.
      content: function serializeQueryValue(value)
  - uid: azure-common._global.format
    id: azure-common._global.format
    name: 'format(date, skipMilliseconds, millisecondsPading)'
    summary: Formats a date into an iso 8061 string.
    fullName: 'azure-common.format(date, skipMilliseconds, millisecondsPading)'
    type: Method
    syntax:
      parameters:
        - id: date
          type:
            - date
          description: The date to format.
        - id: skipMilliseconds
          type:
            - azure-common.bool
          description: >-
            Boolean value indicating if the miliseconds part of the date should
            not be included.
        - id: millisecondsPading
          type:
            - azure-common.integer
          description: Number of digits to left pad the miliseconds.
      return:
        type:
          - string
        description: The date formated in the ISO 8061 date format.
      content: 'function format(date, skipMilliseconds, millisecondsPading)'
  - uid: azure-common._global.parse
    id: azure-common._global.parse
    name: parse(stringDateTime)
    summary: Parses an ISO 8061 date string into a date object.
    fullName: azure-common.parse(stringDateTime)
    type: Method
    syntax:
      parameters:
        - id: stringDateTime
          type:
            - string
          description: The string with the date to parse in the ISO 8061 format.
      return:
        type:
          - date
        description: The parsed date.
      content: function parse(stringDateTime)
  - uid: azure-common._global.read
    id: azure-common._global.read
    name: read()
    summary: ''
    fullName: azure-common.read()
    type: Method
    syntax:
      content: function read()
  - uid: azure-common._global.format
    id: azure-common._global.format
    name: format(date)
    summary: Formats a date into a RFC 1123 string.
    fullName: azure-common.format(date)
    type: Method
    syntax:
      parameters:
        - id: date
          type:
            - date
          description: The date to format.
      return:
        type:
          - string
        description: The date formated in the RFC 1123 date format.
      content: function format(date)
  - uid: azure-common._global.parse
    id: azure-common._global.parse
    name: parse(stringDateTime)
    summary: Parses an RFC 1123 date string into a date object.
    fullName: azure-common.parse(stringDateTime)
    type: Method
    syntax:
      parameters:
        - id: stringDateTime
          type:
            - string
          description: The string with the date to parse in the RFC 1123 format.
      return:
        type:
          - date
        description: The parsed date.
      content: function parse(stringDateTime)
  - uid: azure-common._global.encodeUri
    id: azure-common._global.encodeUri
    name: encodeUri(uri)
    summary: Encodes an URI.
    fullName: azure-common.encodeUri(uri)
    type: Method
    syntax:
      parameters:
        - id: uri
          type:
            - string
          description: The URI to be encoded.
      return:
        type:
          - string
        description: The encoded URI.
      content: function encodeUri(uri)
  - uid: azure-common._global.objectKeysLength
    id: azure-common._global.objectKeysLength
    name: objectKeysLength(value)
    summary: Returns the number of keys (properties) in an object.
    fullName: azure-common.objectKeysLength(value)
    type: Method
    syntax:
      parameters:
        - id: value
          type:
            - object
          description: The object which keys are to be counted.
      return:
        type:
          - number
        description: The number of keys in the object.
      content: function objectKeysLength(value)
  - uid: azure-common._global.objectFirstKey
    id: azure-common._global.objectFirstKey
    name: objectFirstKey(value)
    summary: Returns the name of the first property in an object.
    fullName: azure-common.objectFirstKey(value)
    type: Method
    syntax:
      parameters:
        - id: value
          type:
            - object
          description: The object which key is to be returned.
      return:
        type:
          - number
        description: The name of the first key in the object.
      content: function objectFirstKey(value)
  - uid: azure-common._global.objectIsNull
    id: azure-common._global.objectIsNull
    name: objectIsNull(value)
    summary: Checks if a value is null or undefined.
    fullName: azure-common.objectIsNull(value)
    type: Method
    syntax:
      parameters:
        - id: value
          type:
            - object
          description: The value to check for null or undefined.
      return:
        type:
          - azure-common.bool
        description: 'True if the value is null or undefined, false otherwise.'
      content: function objectIsNull(value)
  - uid: azure-common._global.objectIsEmpty
    id: azure-common._global.objectIsEmpty
    name: objectIsEmpty(object)
    summary: Checks if an object is empty.
    fullName: azure-common.objectIsEmpty(object)
    type: Method
    syntax:
      parameters:
        - id: object
          type:
            - object
          description: The object to check if it is null.
      return:
        type:
          - azure-common.bool
        description: 'True if the object is empty, false otherwise.'
      content: function objectIsEmpty(object)
  - uid: azure-common._global.objectIsInt
    id: azure-common._global.objectIsInt
    name: objectIsInt(value)
    summary: Determines if an object contains an integer number.
    fullName: azure-common.objectIsInt(value)
    type: Method
    syntax:
      parameters:
        - id: value
          type:
            - object
          description: The object to assert.
      return:
        type:
          - azure-common.bool
        description: True if the object contains an integer number; false otherwise.
      content: function objectIsInt(value)
  - uid: azure-common._global.objectIsString
    id: azure-common._global.objectIsString
    name: objectIsString(object)
    summary: Checks if an object is a string.
    fullName: azure-common.objectIsString(object)
    type: Method
    syntax:
      parameters:
        - id: object
          type:
            - object
          description: The object to check if it is a string.
      return:
        type:
          - azure-common.bool
        description: 'True if the object is a strign, false otherwise.'
      content: function objectIsString(object)
  - uid: azure-common._global.objectIsFunction
    id: azure-common._global.objectIsFunction
    name: objectIsFunction(object)
    summary: Check if an object is a function
    fullName: azure-common.objectIsFunction(object)
    type: Method
    syntax:
      parameters:
        - id: object
          type:
            - object
          description: The object to check whether it is function
      return:
        type:
          - azure-common.bool
        description: 'True if the specified object is function, otherwise false'
      content: function objectIsFunction(object)
  - uid: azure-common._global.zeroPaddingString
    id: azure-common._global.zeroPaddingString
    name: zeroPaddingString()
    summary: Front zero padding of string to sepcified length
    fullName: azure-common.zeroPaddingString()
    type: Method
    syntax:
      content: function zeroPaddingString()
  - uid: azure-common._global.stringIsEmpty
    id: azure-common._global.stringIsEmpty
    name: stringIsEmpty(value)
    summary: 'Checks if a value is an empty string, null or undefined.'
    fullName: azure-common.stringIsEmpty(value)
    type: Method
    syntax:
      parameters:
        - id: value
          type:
            - object
          description: 'The value to check for an empty string, null or undefined.'
      return:
        type:
          - azure-common.bool
        description: >-
          True if the value is an empty string, null or undefined, false
          otherwise.
      content: function stringIsEmpty(value)
  - uid: azure-common._global.stringFormat
    id: azure-common._global.stringFormat
    name: 'stringFormat(text, arguments)'
    summary: Formats a text replacing '?' by the arguments.
    fullName: 'azure-common.stringFormat(text, arguments)'
    type: Method
    syntax:
      parameters:
        - id: text
          type:
            - string
          description: The string where the ? should be replaced.
        - id: arguments
          type:
            - array
          description: Value(s) to insert in question mark (?) parameters.
      return:
        type:
          - string
        description: ''
      content: 'function stringFormat(text, arguments)'
  - uid: azure-common._global.stringStartsWith
    id: azure-common._global.stringStartsWith
    name: 'stringStartsWith(text, prefix)'
    summary: Determines if a string starts with another.
    fullName: 'azure-common.stringStartsWith(text, prefix)'
    type: Method
    syntax:
      parameters:
        - id: text
          type:
            - string
          description: The string to assert.
        - id: prefix
          type:
            - string
          description: The string prefix.
      return:
        type:
          - azure-common.Bool
        description: True if the string starts with the prefix; false otherwise.
      content: 'function stringStartsWith(text, prefix)'
  - uid: azure-common._global.stringEndsWith
    id: azure-common._global.stringEndsWith
    name: 'stringEndsWith(text, suffix)'
    summary: Determines if a string ends with another.
    fullName: 'azure-common.stringEndsWith(text, suffix)'
    type: Method
    syntax:
      parameters:
        - id: text
          type:
            - string
          description: The string to assert.
        - id: suffix
          type:
            - string
          description: The string suffix.
      return:
        type:
          - azure-common.Bool
        description: True if the string ends with the suffix; false otherwise.
      content: 'function stringEndsWith(text, suffix)'
  - uid: azure-common._global.stringIsInt
    id: azure-common._global.stringIsInt
    name: stringIsInt(text)
    summary: Determines if a string contains an integer number.
    fullName: azure-common.stringIsInt(text)
    type: Method
    syntax:
      parameters:
        - id: text
          type:
            - string
          description: The string to assert.
      return:
        type:
          - azure-common.Bool
        description: True if the string contains an integer number; false otherwise.
      content: function stringIsInt(text)
  - uid: azure-common._global.stringIsFloat
    id: azure-common._global.stringIsFloat
    name: stringIsFloat(text)
    summary: Determines if a string contains a float number.
    fullName: azure-common.stringIsFloat(text)
    type: Method
    syntax:
      parameters:
        - id: text
          type:
            - string
          description: The string to assert.
      return:
        type:
          - azure-common.Bool
        description: True if the string contains a float number; false otherwise.
      content: function stringIsFloat(text)
  - uid: azure-common._global.stringIsNumber
    id: azure-common._global.stringIsNumber
    name: stringIsNumber(text)
    summary: Determines if a string contains a number.
    fullName: azure-common.stringIsNumber(text)
    type: Method
    syntax:
      parameters:
        - id: text
          type:
            - string
          description: The string to assert.
      return:
        type:
          - azure-common.Bool
        description: True if the string contains a number; false otherwise.
      content: function stringIsNumber(text)
  - uid: azure-common._global.stringIsDate
    id: azure-common._global.stringIsDate
    name: stringIsDate(date)
    summary: Determines if a date object is valid.
    fullName: azure-common.stringIsDate(date)
    type: Method
    syntax:
      parameters:
        - id: date
          type:
            - Date
          description: The date to test
      return:
        type:
          - azure-common.Bool
        description: True if the date is valid; false otherwise.
      content: function stringIsDate(date)
  - uid: azure-common._global.urlIsHTTPS
    id: azure-common._global.urlIsHTTPS
    name: urlIsHTTPS(urlToCheck)
    summary: Checks if a parsed URL is HTTPS
    fullName: azure-common.urlIsHTTPS(urlToCheck)
    type: Method
    syntax:
      parameters:
        - id: urlToCheck
          type:
            - object
          description: The url to check
      return:
        type:
          - azure-common.bool
        description: True if the URL is HTTPS; false otherwise.
      content: function urlIsHTTPS(urlToCheck)
  - uid: azure-common._global.removeBOM
    id: azure-common._global.removeBOM
    name: removeBOM(str)
    summary: Removes the BOM from a string.
    fullName: azure-common.removeBOM(str)
    type: Method
    syntax:
      parameters:
        - id: str
          type:
            - string
          description: The string from where the BOM is to be removed
      return:
        type:
          - string
        description: The string without the BOM.
      content: function removeBOM(str)
  - uid: azure-common._global.merge
    id: azure-common._global.merge
    name: merge(object)
    summary: Merges multiple objects.
    fullName: azure-common.merge(object)
    type: Method
    syntax:
      parameters:
        - id: object
          type:
            - object
          description: The objects to be merged
      return:
        type:
          - object
        description: The merged object.
      content: function merge(object)
  - uid: azure-common._global.inArrayInsensitive
    id: azure-common._global.inArrayInsensitive
    name: 'inArrayInsensitive(needle, haystack)'
    summary: |-
      Checks if a value exists in an array. The comparison is done in a case
      insensitive manner.
    fullName: 'azure-common.inArrayInsensitive(needle, haystack)'
    type: Method
    syntax:
      parameters:
        - id: needle
          type:
            - string
          description: The searched value.
        - id: haystack
          type:
            - array
          description: The array.
      return:
        type:
          - boolean
        description: ''
      content: 'function inArrayInsensitive(needle, haystack)'
  - uid: azure-common._global.tryGetValueInsensitive
    id: azure-common._global.tryGetValueInsensitive
    name: 'tryGetValueInsensitive(key, haystack, default)'
    summary: |-
      Returns the specified value of the key passed from object and in case that
      this key doesn't exist, the default value is returned. The key matching is
      done in a case insensitive manner.
    fullName: 'azure-common.tryGetValueInsensitive(key, haystack, default)'
    type: Method
    syntax:
      parameters:
        - id: key
          type:
            - string
          description: The array key.
        - id: haystack
          type:
            - object
          description: The object to be used.
        - id: default
          type:
            - azure-common.mix
          description: The value to return if $key is not found in $array.
      return:
        description: mix
      content: 'function tryGetValueInsensitive(key, haystack, default)'
  - uid: azure-common._global.getNameSpace
    id: azure-common._global.getNameSpace
    name: getNameSpace()
    summary: 'Returns the namespace for a subscriptoinId, prefix and location'
    fullName: azure-common.getNameSpace()
    type: Method
    syntax:
      return:
        type:
          - azure-common.Bool
        description: True if the value is an integer number; false otherwise.
      content: function getNameSpace()
  - uid: azure-common._global.isInt
    id: azure-common._global.isInt
    name: isInt(The)
    summary: Determines if a value (string or number) is an integer number.
    fullName: azure-common.isInt(The)
    type: Method
    syntax:
      parameters:
        - id: The
          type:
            - object
          description: value to assess.
      return:
        type:
          - azure-common.Bool
        description: True if the value is an integer number; false otherwise.
      content: function isInt(The)
  - uid: azure-common._global.tryGetValueChain
    id: azure-common._global.tryGetValueChain
    name: 'tryGetValueChain(object, keys, default)'
    summary: Returns the value in a chained object.
    fullName: 'azure-common.tryGetValueChain(object, keys, default)'
    type: Method
    syntax:
      parameters:
        - id: object
          type:
            - object
          description: The object with the values.
        - id: keys
          type:
            - array
          description: The keys.
        - id: default
          type:
            - azure-common.mix
          description: The value to return if $key is not found in $array.
      return:
        description: mix
      content: 'function tryGetValueChain(object, keys, default)'
  - uid: azure-common._global.truncatedISO8061Date
    id: azure-common._global.truncatedISO8061Date
    name: truncatedISO8061Date(a)
    summary: Rounds a date off to seconds.
    fullName: azure-common.truncatedISO8061Date(a)
    type: Method
    syntax:
      parameters:
        - id: a
          type:
            - Date
          description: date
      return:
        type:
          - string
        description: 'the date in ISO8061 format, with no milliseconds component'
      content: function truncatedISO8061Date(a)
  - uid: azure-common._global.normalizeArgs
    id: azure-common._global.normalizeArgs
    name: normalizeArgs()
    summary: ''
    fullName: azure-common.normalizeArgs()
    type: Method
    syntax:
      content: function normalizeArgs()
  - uid: azure-common._global.getNodeVersion
    id: azure-common._global.getNodeVersion
    name: getNodeVersion()
    summary: ''
    fullName: azure-common.getNodeVersion()
    type: Method
    syntax:
      content: function getNodeVersion()
  - uid: azure-common._global.analyzeStream
    id: azure-common._global.analyzeStream
    name: analyzeStream()
    summary: ''
    fullName: azure-common.analyzeStream()
    type: Method
    syntax:
      content: function analyzeStream()
  - uid: azure-common._global.isBufferAllZero
    id: azure-common._global.isBufferAllZero
    name: isBufferAllZero()
    summary: Whether the content of buffer is all zero
    fullName: azure-common.isBufferAllZero()
    type: Method
    syntax:
      content: function isBufferAllZero()
  - uid: azure-common._global.writeZeroToStream
    id: azure-common._global.writeZeroToStream
    name: writeZeroToStream()
    summary: ''
    fullName: azure-common.writeZeroToStream()
    type: Method
    syntax:
      content: function writeZeroToStream()
  - uid: azure-common._global.getContentMd5
    id: azure-common._global.getContentMd5
    name: getContentMd5()
    summary: Calculate md5sum for the content
    fullName: azure-common.getContentMd5()
    type: Method
    syntax:
      content: function getContentMd5()
  - uid: azure-common._global.pathExistsSync
    id: azure-common._global.pathExistsSync
    name: pathExistsSync
    summary: ''
    fullName: azure-common.pathExistsSync
    type: Field
    syntax:
      content: pathExistsSync
  - uid: azure-common._global.isValidUri
    id: azure-common._global.isValidUri
    name: isValidUri(uri)
    summary: Creates a anonymous function that check if the given uri is valid or not.
    fullName: azure-common.isValidUri(uri)
    type: Method
    syntax:
      parameters:
        - id: uri
          type:
            - string
          description: The uri to validate.
      return:
        type:
          - function
        description: ''
      content: function isValidUri(uri)
  - uid: azure-common._global.isValidHDInsightCreationObject
    id: azure-common._global.isValidHDInsightCreationObject
    name: isValidHDInsightCreationObject(clusterCreationObject)
    summary: Validates that a clusterCreationObject is properly formed.
    fullName: azure-common.isValidHDInsightCreationObject(clusterCreationObject)
    type: Method
    syntax:
      parameters:
        - id: clusterCreationObject
          type:
            - object
          description: |-
            The object used to supply all parameters needed to create a cluster.
                                                              {
                                                                // the following are required fields
                                                                name: 'the name of the cluster (dns name) all lower case',
                                                                location: 'the Azure data center where the cluster is to be created',
                                                                defaultStorageAccountName: 'The name of the default Azure storage account',
                                                                defaultStorageAccountKey: 'The secret key for the default Azure storage account',
                                                                defaultStorageContainer: 'The container for the default Azure storage account',
                                                                user: 'The username to use for the cluster',
                                                                password: 'The password to use for the cluster',
                                                                nodes: number // The number of nodes to use
                                                                // the following are optional fields
                                                                additionalStorageAccounts : [ {
                                                                    name: 'the name of the storage acount'
                                                                    key: 'the secret key for the storage acount'
                                                                  }, { // additional accounts following the same pattern }
                                                                ]
                                                                // the following are optional but if one is specified the other is required
                                                                oozieMetastore : {
                                                                  server : 'the name of the sql server to use',
                                                                  database : 'the sql databse to use'
                                                                  user : 'the user name to use when logging into the database'
                                                                  password : 'the password to use when logging into the database'
                                                                }
                                                                hiveMetastore : {
                                                                  server : 'the name of the sql server to use',
                                                                  database : 'the sql databse to use'
                                                                  user : 'the user name to use when logging into the database'
                                                                  password : 'the password to use when logging into the database'
                                                                }
                                                              }
      content: function isValidHDInsightCreationObject(clusterCreationObject)
  - uid: azure-common._global.isValidUuid
    id: azure-common._global.isValidUuid
    name: isValidUuid()
    summary: ''
    fullName: azure-common.isValidUuid()
    type: Method
    syntax:
      content: function isValidUuid()
  - uid: azure-common._global.isBase64Encoded
    id: azure-common._global.isBase64Encoded
    name: isBase64Encoded(key)
    summary: Creates a anonymous function that check if a given key is base 64 encoded.
    fullName: azure-common.isBase64Encoded(key)
    type: Method
    syntax:
      parameters:
        - id: key
          type:
            - string
          description: The key to validate.
      return:
        type:
          - function
        description: ''
      content: function isBase64Encoded(key)
  - uid: azure-common._global.isValidFunction
    id: azure-common._global.isValidFunction
    name: isValidFunction(function)
    summary: Validates a function.
    fullName: azure-common.isValidFunction(function)
    type: Method
    syntax:
      parameters:
        - id: function
          type:
            - object
          description: The function to validate.
      return:
        type:
          - function
        description: ''
      content: function isValidFunction(function)
  - uid: azure-common._global.namespaceNameIsValid
    id: azure-common._global.namespaceNameIsValid
    name: namespaceNameIsValid(name)
    summary: |-
      Validates that a Service Bus namespace name
      is legally allowable. Does not check availability.
    fullName: azure-common.namespaceNameIsValid(name)
    type: Method
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: the name to check
      return:
        description: |-
          nothing. Throws exception if name is invalid, message
                           describes what validity criteria it violates.
      content: function namespaceNameIsValid(name)
  - uid: azure-common._global.containerNameIsValid
    id: azure-common._global.containerNameIsValid
    name: containerNameIsValid(containerName)
    summary: Validates a container name.
    fullName: azure-common.containerNameIsValid(containerName)
    type: Method
    syntax:
      parameters:
        - id: containerName
          type:
            - string
          description: The container name.
      return:
        type:
          - undefined
        description: ''
      content: function containerNameIsValid(containerName)
  - uid: azure-common._global.blobNameIsValid
    id: azure-common._global.blobNameIsValid
    name: 'blobNameIsValid(containerName, blobname)'
    summary: Validates a blob name.
    fullName: 'azure-common.blobNameIsValid(containerName, blobname)'
    type: Method
    syntax:
      parameters:
        - id: containerName
          type:
            - string
          description: The container name.
        - id: blobname
          type:
            - string
          description: The blob name.
      return:
        type:
          - undefined
        description: ''
      content: 'function blobNameIsValid(containerName, blobname)'
  - uid: azure-common._global.tableNameIsValid
    id: azure-common._global.tableNameIsValid
    name: tableNameIsValid(table)
    summary: Validates a table name.
    fullName: azure-common.tableNameIsValid(table)
    type: Method
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
      return:
        type:
          - undefined
        description: ''
      content: function tableNameIsValid(table)
  - uid: azure-common._global.pageRangesAreValid
    id: azure-common._global.pageRangesAreValid
    name: pageRangesAreValid()
    summary: ''
    fullName: azure-common.pageRangesAreValid()
    type: Method
    syntax:
      content: function pageRangesAreValid()
  - uid: azure-common._global.queueNameIsValid
    id: azure-common._global.queueNameIsValid
    name: queueNameIsValid(queue)
    summary: Validates a queue name.
    fullName: azure-common.queueNameIsValid(queue)
    type: Method
    syntax:
      parameters:
        - id: queue
          type:
            - string
          description: The queue name.
      return:
        type:
          - undefined
        description: ''
      content: function queueNameIsValid(queue)
  - uid: azure-common._global.ArgumentValidator
    id: azure-common._global.ArgumentValidator
    name: ArgumentValidator
    summary: ''
    fullName: azure-common.ArgumentValidator
    type: Field
    syntax:
      content: ArgumentValidator
  - uid: azure-common._global.validateArgs
    id: azure-common._global.validateArgs
    name: validateArgs
    summary: ''
    fullName: azure-common.validateArgs
    type: Field
    syntax:
      content: validateArgs
references:
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true
  - uid: azure-common.requirements
    name: requirements
    fullName: azure-common.requirements
    isExternal: true
  - uid: azure-common.isRequired
    name: isRequired
    fullName: azure-common.isRequired
    isExternal: true
  - uid: azure-common.atLeastOne
    name: atLeastOne
    fullName: azure-common.atLeastOne
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: date
    name: date
    fullName: date
    isExternal: true
  - uid: azure-common.bool
    name: bool
    fullName: azure-common.bool
    isExternal: true
  - uid: azure-common.integer
    name: integer
    fullName: azure-common.integer
    isExternal: true
  - uid: azure-common.Bool
    name: Bool
    fullName: azure-common.Bool
    isExternal: true
  - uid: Date
    name: Date
    fullName: Date
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: azure-common.mix
    name: mix
    fullName: azure-common.mix
    isExternal: true
  - uid: undefined
    name: undefined
    fullName: undefined
    isExternal: true
