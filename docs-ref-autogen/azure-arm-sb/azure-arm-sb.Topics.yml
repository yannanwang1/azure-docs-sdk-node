### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-sb.Topics
    id: azure-arm-sb.Topics
    name: Topics
    summary: ''
    fullName: azure-arm-sb.Topics
    type: Class
    children:
      - 'azure-arm-sb.Topics.#ctor'
      - 'azure-arm-sb.Topics#client'
      - 'azure-arm-sb.Topics#_listAll'
      - 'azure-arm-sb.Topics#_createOrUpdate'
      - 'azure-arm-sb.Topics#_deleteMethod'
      - 'azure-arm-sb.Topics#_get'
      - 'azure-arm-sb.Topics#_listAuthorizationRules'
      - 'azure-arm-sb.Topics#_createOrUpdateAuthorizationRule'
      - 'azure-arm-sb.Topics#_getAuthorizationRule'
      - 'azure-arm-sb.Topics#_deleteAuthorizationRule'
      - 'azure-arm-sb.Topics#_listKeys'
      - 'azure-arm-sb.Topics#_regenerateKeys'
      - 'azure-arm-sb.Topics#_listAllNext'
      - 'azure-arm-sb.Topics#_listAuthorizationRulesNext'
      - 'azure-arm-sb.Topics#listAllWithHttpOperationResponse'
      - 'azure-arm-sb.Topics#listAll'
      - 'azure-arm-sb.Topics#createOrUpdateWithHttpOperationResponse'
      - 'azure-arm-sb.Topics#createOrUpdate'
      - 'azure-arm-sb.Topics#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-sb.Topics#deleteMethod'
      - 'azure-arm-sb.Topics#getWithHttpOperationResponse'
      - 'azure-arm-sb.Topics#get'
      - 'azure-arm-sb.Topics#listAuthorizationRulesWithHttpOperationResponse'
      - 'azure-arm-sb.Topics#listAuthorizationRules'
      - >-
        azure-arm-sb.Topics#createOrUpdateAuthorizationRuleWithHttpOperationResponse
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule'
      - 'azure-arm-sb.Topics#getAuthorizationRuleWithHttpOperationResponse'
      - 'azure-arm-sb.Topics#getAuthorizationRule'
      - 'azure-arm-sb.Topics#deleteAuthorizationRuleWithHttpOperationResponse'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule'
      - 'azure-arm-sb.Topics#listKeysWithHttpOperationResponse'
      - 'azure-arm-sb.Topics#listKeys'
      - 'azure-arm-sb.Topics#regenerateKeysWithHttpOperationResponse'
      - 'azure-arm-sb.Topics#regenerateKeys'
      - 'azure-arm-sb.Topics#listAllNextWithHttpOperationResponse'
      - 'azure-arm-sb.Topics#listAllNext'
      - 'azure-arm-sb.Topics#listAuthorizationRulesNextWithHttpOperationResponse'
      - 'azure-arm-sb.Topics#listAuthorizationRulesNext'
  - id: 'azure-arm-sb.Topics.#ctor'
    uid: 'azure-arm-sb.Topics.#ctor'
    parent: azure-arm-sb.Topics
    name: Topics()
    fullName: azure-arm-sb.Topics.Topics()
    summary: ''
    type: Constructor
    syntax:
      content: new Topics()
  - uid: 'azure-arm-sb.Topics#client'
    id: 'azure-arm-sb.Topics#client'
    parent: azure-arm-sb.Topics
    name: client
    summary: ''
    fullName: azure-arm-sb.Topics.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-sb.Topics#_listAll'
    id: 'azure-arm-sb.Topics#_listAll'
    parent: azure-arm-sb.Topics
    name: _listAll
    summary: ''
    fullName: azure-arm-sb.Topics._listAll
    type: Field
    syntax:
      content: _listAll
  - uid: 'azure-arm-sb.Topics#_createOrUpdate'
    id: 'azure-arm-sb.Topics#_createOrUpdate'
    parent: azure-arm-sb.Topics
    name: _createOrUpdate
    summary: ''
    fullName: azure-arm-sb.Topics._createOrUpdate
    type: Field
    syntax:
      content: _createOrUpdate
  - uid: 'azure-arm-sb.Topics#_deleteMethod'
    id: 'azure-arm-sb.Topics#_deleteMethod'
    parent: azure-arm-sb.Topics
    name: _deleteMethod
    summary: ''
    fullName: azure-arm-sb.Topics._deleteMethod
    type: Field
    syntax:
      content: _deleteMethod
  - uid: 'azure-arm-sb.Topics#_get'
    id: 'azure-arm-sb.Topics#_get'
    parent: azure-arm-sb.Topics
    name: _get
    summary: ''
    fullName: azure-arm-sb.Topics._get
    type: Field
    syntax:
      content: _get
  - uid: 'azure-arm-sb.Topics#_listAuthorizationRules'
    id: 'azure-arm-sb.Topics#_listAuthorizationRules'
    parent: azure-arm-sb.Topics
    name: _listAuthorizationRules
    summary: ''
    fullName: azure-arm-sb.Topics._listAuthorizationRules
    type: Field
    syntax:
      content: _listAuthorizationRules
  - uid: 'azure-arm-sb.Topics#_createOrUpdateAuthorizationRule'
    id: 'azure-arm-sb.Topics#_createOrUpdateAuthorizationRule'
    parent: azure-arm-sb.Topics
    name: _createOrUpdateAuthorizationRule
    summary: ''
    fullName: azure-arm-sb.Topics._createOrUpdateAuthorizationRule
    type: Field
    syntax:
      content: _createOrUpdateAuthorizationRule
  - uid: 'azure-arm-sb.Topics#_getAuthorizationRule'
    id: 'azure-arm-sb.Topics#_getAuthorizationRule'
    parent: azure-arm-sb.Topics
    name: _getAuthorizationRule
    summary: ''
    fullName: azure-arm-sb.Topics._getAuthorizationRule
    type: Field
    syntax:
      content: _getAuthorizationRule
  - uid: 'azure-arm-sb.Topics#_deleteAuthorizationRule'
    id: 'azure-arm-sb.Topics#_deleteAuthorizationRule'
    parent: azure-arm-sb.Topics
    name: _deleteAuthorizationRule
    summary: ''
    fullName: azure-arm-sb.Topics._deleteAuthorizationRule
    type: Field
    syntax:
      content: _deleteAuthorizationRule
  - uid: 'azure-arm-sb.Topics#_listKeys'
    id: 'azure-arm-sb.Topics#_listKeys'
    parent: azure-arm-sb.Topics
    name: _listKeys
    summary: ''
    fullName: azure-arm-sb.Topics._listKeys
    type: Field
    syntax:
      content: _listKeys
  - uid: 'azure-arm-sb.Topics#_regenerateKeys'
    id: 'azure-arm-sb.Topics#_regenerateKeys'
    parent: azure-arm-sb.Topics
    name: _regenerateKeys
    summary: ''
    fullName: azure-arm-sb.Topics._regenerateKeys
    type: Field
    syntax:
      content: _regenerateKeys
  - uid: 'azure-arm-sb.Topics#_listAllNext'
    id: 'azure-arm-sb.Topics#_listAllNext'
    parent: azure-arm-sb.Topics
    name: _listAllNext
    summary: ''
    fullName: azure-arm-sb.Topics._listAllNext
    type: Field
    syntax:
      content: _listAllNext
  - uid: 'azure-arm-sb.Topics#_listAuthorizationRulesNext'
    id: 'azure-arm-sb.Topics#_listAuthorizationRulesNext'
    parent: azure-arm-sb.Topics
    name: _listAuthorizationRulesNext
    summary: ''
    fullName: azure-arm-sb.Topics._listAuthorizationRulesNext
    type: Field
    syntax:
      content: _listAuthorizationRulesNext
  - uid: 'azure-arm-sb.Topics#listAllWithHttpOperationResponse'
    id: 'azure-arm-sb.Topics#listAllWithHttpOperationResponse'
    parent: azure-arm-sb.Topics
    name: >-
      listAllWithHttpOperationResponse(resourceGroupName, namespaceName,
      options)
    summary: Gets all the topics in a namespace.
    fullName: >-
      azure-arm-sb.Topics.listAllWithHttpOperationResponse(resourceGroupName,
      namespaceName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listAllWithHttpOperationResponse(resourceGroupName,
        namespaceName, options)
  - uid: 'azure-arm-sb.Topics#listAll'
    id: 'azure-arm-sb.Topics#listAll'
    parent: azure-arm-sb.Topics
    name: 'listAll(resourceGroupName, namespaceName, options, optionalCallback)'
    summary: Gets all the topics in a namespace.
    fullName: >-
      azure-arm-sb.Topics.listAll(resourceGroupName, namespaceName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listAll(resourceGroupName, namespaceName, options,
        optionalCallback)
  - uid: 'azure-arm-sb.Topics#createOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-sb.Topics#createOrUpdateWithHttpOperationResponse'
    parent: azure-arm-sb.Topics
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, namespaceName,
      topicName, parameters, options)
    summary: Creates a topic in the specified namespace.
    fullName: >-
      azure-arm-sb.Topics.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: parameters
          type:
            - object
          description: Parameters supplied to create a topic resource.
        - id: parameters.name
          type:
            - string
          description: Topic name.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Location of the resource.
        - id: parameters.autoDeleteOnIdle
          type:
            - string
          description: >-
            TimeSpan idle interval after

            which the topic is automatically deleted. The minimum duration is 5
            minutes.
          optional: true
        - id: parameters.entityAvailabilityStatus
          type:
            - string
          description: >-
            Entity availability

            status for the topic. Possible values include: 'Available',
            'Limited',

            'Renaming', 'Restoring', 'Unknown'
          optional: true
        - id: parameters.defaultMessageTimeToLive
          type:
            - string
          description: >-
            Default message time

            to live value. This is the duration after which the message expires,

            starting from when the message is sent to Service Bus. This is the
            default

            value used when TimeToLive is not set on a message itself.
          optional: true
        - id: parameters.duplicateDetectionHistoryTimeWindow
          type:
            - string
          description: >-
            TimeSpan

            structure that defines the duration of the duplicate detection
            history. The

            default value is 10 minutes.
          optional: true
        - id: parameters.enableBatchedOperations
          type:
            - boolean
          description: |-
            Value that indicates
            whether server-side batched operations are enabled.
          optional: true
        - id: parameters.enableExpress
          type:
            - boolean
          description: >-
            Value that indicates whether

            Express Entities are enabled. An express topic holds a message in
            memory

            temporarily before writing it to persistent storage.
          optional: true
        - id: parameters.enablePartitioning
          type:
            - boolean
          description: >-
            Value that indicates

            whether the topic to be partitioned across multiple message brokers
            is

            enabled.
          optional: true
        - id: parameters.enableSubscriptionPartitioning
          type:
            - boolean
          description: |-
            Value that
            indicates whether partitioning is enabled or disabled.
          optional: true
        - id: parameters.filteringMessagesBeforePublishing
          type:
            - boolean
          description: |-
            Whether
            messages should be filtered before publishing.
          optional: true
        - id: parameters.isAnonymousAccessible
          type:
            - boolean
          description: |-
            Value that indicates
            whether the message is accessible anonymously.
          optional: true
        - id: parameters.isExpress
          type:
            - boolean
          description: ''
          optional: true
        - id: parameters.maxSizeInMegabytes
          type:
            - number
          description: |-
            Maximum size of the topic in
            megabytes, which is the size of the memory allocated for the topic.
          optional: true
        - id: parameters.requiresDuplicateDetection
          type:
            - boolean
          description: |-
            Value indicating if
            this topic requires duplicate detection.
          optional: true
        - id: parameters.status
          type:
            - string
          description: >-
            Enumerates the possible values for the

            status of a messaging entity. Possible values include: 'Active',
            'Creating',

            'Deleting', 'Disabled', 'ReceiveDisabled', 'Renaming', 'Restoring',

            'SendDisabled', 'Unknown'
          optional: true
        - id: parameters.supportOrdering
          type:
            - boolean
          description: |-
            Value that indicates whether
            the topic supports ordering.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        namespaceName, topicName, parameters, options)
  - uid: 'azure-arm-sb.Topics#createOrUpdate'
    id: 'azure-arm-sb.Topics#createOrUpdate'
    parent: azure-arm-sb.Topics
    name: >-
      createOrUpdate(resourceGroupName, namespaceName, topicName, parameters,
      options, optionalCallback)
    summary: Creates a topic in the specified namespace.
    fullName: >-
      azure-arm-sb.Topics.createOrUpdate(resourceGroupName, namespaceName,
      topicName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: parameters
          type:
            - object
          description: Parameters supplied to create a topic resource.
        - id: parameters.name
          type:
            - string
          description: Topic name.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Location of the resource.
        - id: parameters.autoDeleteOnIdle
          type:
            - string
          description: >-
            TimeSpan idle interval after

            which the topic is automatically deleted. The minimum duration is 5
            minutes.
          optional: true
        - id: parameters.entityAvailabilityStatus
          type:
            - string
          description: >-
            Entity availability

            status for the topic. Possible values include: 'Available',
            'Limited',

            'Renaming', 'Restoring', 'Unknown'
          optional: true
        - id: parameters.defaultMessageTimeToLive
          type:
            - string
          description: >-
            Default message time

            to live value. This is the duration after which the message expires,

            starting from when the message is sent to Service Bus. This is the
            default

            value used when TimeToLive is not set on a message itself.
          optional: true
        - id: parameters.duplicateDetectionHistoryTimeWindow
          type:
            - string
          description: >-
            TimeSpan

            structure that defines the duration of the duplicate detection
            history. The

            default value is 10 minutes.
          optional: true
        - id: parameters.enableBatchedOperations
          type:
            - boolean
          description: |-
            Value that indicates
            whether server-side batched operations are enabled.
          optional: true
        - id: parameters.enableExpress
          type:
            - boolean
          description: >-
            Value that indicates whether

            Express Entities are enabled. An express topic holds a message in
            memory

            temporarily before writing it to persistent storage.
          optional: true
        - id: parameters.enablePartitioning
          type:
            - boolean
          description: >-
            Value that indicates

            whether the topic to be partitioned across multiple message brokers
            is

            enabled.
          optional: true
        - id: parameters.enableSubscriptionPartitioning
          type:
            - boolean
          description: |-
            Value that
            indicates whether partitioning is enabled or disabled.
          optional: true
        - id: parameters.filteringMessagesBeforePublishing
          type:
            - boolean
          description: |-
            Whether
            messages should be filtered before publishing.
          optional: true
        - id: parameters.isAnonymousAccessible
          type:
            - boolean
          description: |-
            Value that indicates
            whether the message is accessible anonymously.
          optional: true
        - id: parameters.isExpress
          type:
            - boolean
          description: ''
          optional: true
        - id: parameters.maxSizeInMegabytes
          type:
            - number
          description: |-
            Maximum size of the topic in
            megabytes, which is the size of the memory allocated for the topic.
          optional: true
        - id: parameters.requiresDuplicateDetection
          type:
            - boolean
          description: |-
            Value indicating if
            this topic requires duplicate detection.
          optional: true
        - id: parameters.status
          type:
            - string
          description: >-
            Enumerates the possible values for the

            status of a messaging entity. Possible values include: 'Active',
            'Creating',

            'Deleting', 'Disabled', 'ReceiveDisabled', 'Renaming', 'Restoring',

            'SendDisabled', 'Unknown'
          optional: true
        - id: parameters.supportOrdering
          type:
            - boolean
          description: |-
            Value that indicates whether
            the topic supports ordering.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, namespaceName, topicName,
        parameters, options, optionalCallback)
  - uid: 'azure-arm-sb.Topics#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-sb.Topics#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-sb.Topics
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, namespaceName,
      topicName, options)
    summary: Deletes a topic from the specified namespace and resource group.
    fullName: >-
      azure-arm-sb.Topics.deleteMethodWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        namespaceName, topicName, options)
  - uid: 'azure-arm-sb.Topics#deleteMethod'
    id: 'azure-arm-sb.Topics#deleteMethod'
    parent: azure-arm-sb.Topics
    name: >-
      deleteMethod(resourceGroupName, namespaceName, topicName, options,
      optionalCallback)
    summary: Deletes a topic from the specified namespace and resource group.
    fullName: >-
      azure-arm-sb.Topics.deleteMethod(resourceGroupName, namespaceName,
      topicName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, namespaceName, topicName,
        options, optionalCallback)
  - uid: 'azure-arm-sb.Topics#getWithHttpOperationResponse'
    id: 'azure-arm-sb.Topics#getWithHttpOperationResponse'
    parent: azure-arm-sb.Topics
    name: >-
      getWithHttpOperationResponse(resourceGroupName, namespaceName, topicName,
      options)
    summary: Returns a description for the specified topic.
    fullName: >-
      azure-arm-sb.Topics.getWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, namespaceName,
        topicName, options)
  - uid: 'azure-arm-sb.Topics#get'
    id: 'azure-arm-sb.Topics#get'
    parent: azure-arm-sb.Topics
    name: >-
      get(resourceGroupName, namespaceName, topicName, options,
      optionalCallback)
    summary: Returns a description for the specified topic.
    fullName: >-
      azure-arm-sb.Topics.get(resourceGroupName, namespaceName, topicName,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, namespaceName, topicName, options,
        optionalCallback)
  - uid: 'azure-arm-sb.Topics#listAuthorizationRulesWithHttpOperationResponse'
    id: 'azure-arm-sb.Topics#listAuthorizationRulesWithHttpOperationResponse'
    parent: azure-arm-sb.Topics
    name: >-
      listAuthorizationRulesWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, options)
    summary: Gets authorization rules for a topic.
    fullName: >-
      azure-arm-sb.Topics.listAuthorizationRulesWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listAuthorizationRulesWithHttpOperationResponse(resourceGroupName,
        namespaceName, topicName, options)
  - uid: 'azure-arm-sb.Topics#listAuthorizationRules'
    id: 'azure-arm-sb.Topics#listAuthorizationRules'
    parent: azure-arm-sb.Topics
    name: >-
      listAuthorizationRules(resourceGroupName, namespaceName, topicName,
      options, optionalCallback)
    summary: Gets authorization rules for a topic.
    fullName: >-
      azure-arm-sb.Topics.listAuthorizationRules(resourceGroupName,
      namespaceName, topicName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listAuthorizationRules(resourceGroupName, namespaceName,
        topicName, options, optionalCallback)
  - uid: >-
      azure-arm-sb.Topics#createOrUpdateAuthorizationRuleWithHttpOperationResponse
    id: >-
      azure-arm-sb.Topics#createOrUpdateAuthorizationRuleWithHttpOperationResponse
    parent: azure-arm-sb.Topics
    name: >-
      createOrUpdateAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, authorizationRuleName, parameters, options)
    summary: Creates an authorizatio rule for the specified topic.
    fullName: >-
      azure-arm-sb.Topics.createOrUpdateAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, authorizationRuleName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: parameters
          type:
            - object
          description: The shared access authorization rule.
        - id: parameters.location
          type:
            - string
          description: data center location.
          optional: true
        - id: parameters.name
          type:
            - string
          description: Name of the authorization rule.
          optional: true
        - id: parameters.rights
          type:
            - array
          description: The rights associated with the rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
        namespaceName, topicName, authorizationRuleName, parameters, options)
  - uid: 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule'
    id: 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule'
    parent: azure-arm-sb.Topics
    name: >-
      createOrUpdateAuthorizationRule(resourceGroupName, namespaceName,
      topicName, authorizationRuleName, parameters, options, optionalCallback)
    summary: Creates an authorizatio rule for the specified topic.
    fullName: >-
      azure-arm-sb.Topics.createOrUpdateAuthorizationRule(resourceGroupName,
      namespaceName, topicName, authorizationRuleName, parameters, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: parameters
          type:
            - object
          description: The shared access authorization rule.
        - id: parameters.location
          type:
            - string
          description: data center location.
          optional: true
        - id: parameters.name
          type:
            - string
          description: Name of the authorization rule.
          optional: true
        - id: parameters.rights
          type:
            - array
          description: The rights associated with the rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName,
        namespaceName, topicName, authorizationRuleName, parameters, options,
        optionalCallback)
  - uid: 'azure-arm-sb.Topics#getAuthorizationRuleWithHttpOperationResponse'
    id: 'azure-arm-sb.Topics#getAuthorizationRuleWithHttpOperationResponse'
    parent: azure-arm-sb.Topics
    name: >-
      getAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, authorizationRuleName, options)
    summary: Returns the specified authorization rule.
    fullName: >-
      azure-arm-sb.Topics.getAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, authorizationRuleName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
        namespaceName, topicName, authorizationRuleName, options)
  - uid: 'azure-arm-sb.Topics#getAuthorizationRule'
    id: 'azure-arm-sb.Topics#getAuthorizationRule'
    parent: azure-arm-sb.Topics
    name: >-
      getAuthorizationRule(resourceGroupName, namespaceName, topicName,
      authorizationRuleName, options, optionalCallback)
    summary: Returns the specified authorization rule.
    fullName: >-
      azure-arm-sb.Topics.getAuthorizationRule(resourceGroupName, namespaceName,
      topicName, authorizationRuleName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getAuthorizationRule(resourceGroupName, namespaceName,
        topicName, authorizationRuleName, options, optionalCallback)
  - uid: 'azure-arm-sb.Topics#deleteAuthorizationRuleWithHttpOperationResponse'
    id: 'azure-arm-sb.Topics#deleteAuthorizationRuleWithHttpOperationResponse'
    parent: azure-arm-sb.Topics
    name: >-
      deleteAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, authorizationRuleName, options)
    summary: Deletes a topic authorization rule.
    fullName: >-
      azure-arm-sb.Topics.deleteAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, authorizationRuleName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
        namespaceName, topicName, authorizationRuleName, options)
  - uid: 'azure-arm-sb.Topics#deleteAuthorizationRule'
    id: 'azure-arm-sb.Topics#deleteAuthorizationRule'
    parent: azure-arm-sb.Topics
    name: >-
      deleteAuthorizationRule(resourceGroupName, namespaceName, topicName,
      authorizationRuleName, options, optionalCallback)
    summary: Deletes a topic authorization rule.
    fullName: >-
      azure-arm-sb.Topics.deleteAuthorizationRule(resourceGroupName,
      namespaceName, topicName, authorizationRuleName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteAuthorizationRule(resourceGroupName, namespaceName,
        topicName, authorizationRuleName, options, optionalCallback)
  - uid: 'azure-arm-sb.Topics#listKeysWithHttpOperationResponse'
    id: 'azure-arm-sb.Topics#listKeysWithHttpOperationResponse'
    parent: azure-arm-sb.Topics
    name: >-
      listKeysWithHttpOperationResponse(resourceGroupName, namespaceName,
      topicName, authorizationRuleName, options)
    summary: Gets the primary and secondary connection strings for the topic.
    fullName: >-
      azure-arm-sb.Topics.listKeysWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, authorizationRuleName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listKeysWithHttpOperationResponse(resourceGroupName,
        namespaceName, topicName, authorizationRuleName, options)
  - uid: 'azure-arm-sb.Topics#listKeys'
    id: 'azure-arm-sb.Topics#listKeys'
    parent: azure-arm-sb.Topics
    name: >-
      listKeys(resourceGroupName, namespaceName, topicName,
      authorizationRuleName, options, optionalCallback)
    summary: Gets the primary and secondary connection strings for the topic.
    fullName: >-
      azure-arm-sb.Topics.listKeys(resourceGroupName, namespaceName, topicName,
      authorizationRuleName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listKeys(resourceGroupName, namespaceName, topicName,
        authorizationRuleName, options, optionalCallback)
  - uid: 'azure-arm-sb.Topics#regenerateKeysWithHttpOperationResponse'
    id: 'azure-arm-sb.Topics#regenerateKeysWithHttpOperationResponse'
    parent: azure-arm-sb.Topics
    name: >-
      regenerateKeysWithHttpOperationResponse(resourceGroupName, namespaceName,
      topicName, authorizationRuleName, parameters, options)
    summary: Regenerates primary or secondary connection strings for the topic.
    fullName: >-
      azure-arm-sb.Topics.regenerateKeysWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, authorizationRuleName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to regenerate the
            authorization rule.
        - id: parameters.policykey
          type:
            - string
          description: |-
            Key that needs to be regenerated.
            Possible values include: 'PrimaryKey', 'SecondaryKey'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function regenerateKeysWithHttpOperationResponse(resourceGroupName,
        namespaceName, topicName, authorizationRuleName, parameters, options)
  - uid: 'azure-arm-sb.Topics#regenerateKeys'
    id: 'azure-arm-sb.Topics#regenerateKeys'
    parent: azure-arm-sb.Topics
    name: >-
      regenerateKeys(resourceGroupName, namespaceName, topicName,
      authorizationRuleName, parameters, options, optionalCallback)
    summary: Regenerates primary or secondary connection strings for the topic.
    fullName: >-
      azure-arm-sb.Topics.regenerateKeys(resourceGroupName, namespaceName,
      topicName, authorizationRuleName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to regenerate the
            authorization rule.
        - id: parameters.policykey
          type:
            - string
          description: |-
            Key that needs to be regenerated.
            Possible values include: 'PrimaryKey', 'SecondaryKey'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function regenerateKeys(resourceGroupName, namespaceName, topicName,
        authorizationRuleName, parameters, options, optionalCallback)
  - uid: 'azure-arm-sb.Topics#listAllNextWithHttpOperationResponse'
    id: 'azure-arm-sb.Topics#listAllNextWithHttpOperationResponse'
    parent: azure-arm-sb.Topics
    name: 'listAllNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets all the topics in a namespace.
    fullName: >-
      azure-arm-sb.Topics.listAllNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listAllNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-arm-sb.Topics#listAllNext'
    id: 'azure-arm-sb.Topics#listAllNext'
    parent: azure-arm-sb.Topics
    name: 'listAllNext(nextPageLink, options, optionalCallback)'
    summary: Gets all the topics in a namespace.
    fullName: 'azure-arm-sb.Topics.listAllNext(nextPageLink, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listAllNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-arm-sb.Topics#listAuthorizationRulesNextWithHttpOperationResponse'
    id: 'azure-arm-sb.Topics#listAuthorizationRulesNextWithHttpOperationResponse'
    parent: azure-arm-sb.Topics
    name: 'listAuthorizationRulesNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets authorization rules for a topic.
    fullName: >-
      azure-arm-sb.Topics.listAuthorizationRulesNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listAuthorizationRulesNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-sb.Topics#listAuthorizationRulesNext'
    id: 'azure-arm-sb.Topics#listAuthorizationRulesNext'
    parent: azure-arm-sb.Topics
    name: 'listAuthorizationRulesNext(nextPageLink, options, optionalCallback)'
    summary: Gets authorization rules for a topic.
    fullName: >-
      azure-arm-sb.Topics.listAuthorizationRulesNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listAuthorizationRulesNext(nextPageLink, options,
        optionalCallback)
references:
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: Promise
    name: Promise
    fullName: Promise
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true
