### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-sb.Queues
    id: azure-arm-sb.Queues
    name: Queues
    summary: ''
    fullName: azure-arm-sb.Queues
    type: Class
    children:
      - 'azure-arm-sb.Queues.#ctor'
      - 'azure-arm-sb.Queues#client'
      - 'azure-arm-sb.Queues#_listAll'
      - 'azure-arm-sb.Queues#_createOrUpdate'
      - 'azure-arm-sb.Queues#_deleteMethod'
      - 'azure-arm-sb.Queues#_get'
      - 'azure-arm-sb.Queues#_listAuthorizationRules'
      - 'azure-arm-sb.Queues#_createOrUpdateAuthorizationRule'
      - 'azure-arm-sb.Queues#_deleteAuthorizationRule'
      - 'azure-arm-sb.Queues#_getAuthorizationRule'
      - 'azure-arm-sb.Queues#_listKeys'
      - 'azure-arm-sb.Queues#_regenerateKeys'
      - 'azure-arm-sb.Queues#_listAllNext'
      - 'azure-arm-sb.Queues#_listAuthorizationRulesNext'
      - 'azure-arm-sb.Queues#listAllWithHttpOperationResponse'
      - 'azure-arm-sb.Queues#listAll'
      - 'azure-arm-sb.Queues#createOrUpdateWithHttpOperationResponse'
      - 'azure-arm-sb.Queues#createOrUpdate'
      - 'azure-arm-sb.Queues#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-sb.Queues#deleteMethod'
      - 'azure-arm-sb.Queues#getWithHttpOperationResponse'
      - 'azure-arm-sb.Queues#get'
      - 'azure-arm-sb.Queues#listAuthorizationRulesWithHttpOperationResponse'
      - 'azure-arm-sb.Queues#listAuthorizationRules'
      - >-
        azure-arm-sb.Queues#createOrUpdateAuthorizationRuleWithHttpOperationResponse
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule'
      - 'azure-arm-sb.Queues#deleteAuthorizationRuleWithHttpOperationResponse'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule'
      - 'azure-arm-sb.Queues#getAuthorizationRuleWithHttpOperationResponse'
      - 'azure-arm-sb.Queues#getAuthorizationRule'
      - 'azure-arm-sb.Queues#listKeysWithHttpOperationResponse'
      - 'azure-arm-sb.Queues#listKeys'
      - 'azure-arm-sb.Queues#regenerateKeysWithHttpOperationResponse'
      - 'azure-arm-sb.Queues#regenerateKeys'
      - 'azure-arm-sb.Queues#listAllNextWithHttpOperationResponse'
      - 'azure-arm-sb.Queues#listAllNext'
      - 'azure-arm-sb.Queues#listAuthorizationRulesNextWithHttpOperationResponse'
      - 'azure-arm-sb.Queues#listAuthorizationRulesNext'
  - id: 'azure-arm-sb.Queues.#ctor'
    uid: 'azure-arm-sb.Queues.#ctor'
    parent: azure-arm-sb.Queues
    name: Queues()
    fullName: azure-arm-sb.Queues.Queues()
    summary: ''
    type: Constructor
    syntax:
      content: new Queues()
  - uid: 'azure-arm-sb.Queues#client'
    id: 'azure-arm-sb.Queues#client'
    parent: azure-arm-sb.Queues
    name: client
    summary: ''
    fullName: azure-arm-sb.Queues.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-sb.Queues#_listAll'
    id: 'azure-arm-sb.Queues#_listAll'
    parent: azure-arm-sb.Queues
    name: _listAll
    summary: ''
    fullName: azure-arm-sb.Queues._listAll
    type: Field
    syntax:
      content: _listAll
  - uid: 'azure-arm-sb.Queues#_createOrUpdate'
    id: 'azure-arm-sb.Queues#_createOrUpdate'
    parent: azure-arm-sb.Queues
    name: _createOrUpdate
    summary: ''
    fullName: azure-arm-sb.Queues._createOrUpdate
    type: Field
    syntax:
      content: _createOrUpdate
  - uid: 'azure-arm-sb.Queues#_deleteMethod'
    id: 'azure-arm-sb.Queues#_deleteMethod'
    parent: azure-arm-sb.Queues
    name: _deleteMethod
    summary: ''
    fullName: azure-arm-sb.Queues._deleteMethod
    type: Field
    syntax:
      content: _deleteMethod
  - uid: 'azure-arm-sb.Queues#_get'
    id: 'azure-arm-sb.Queues#_get'
    parent: azure-arm-sb.Queues
    name: _get
    summary: ''
    fullName: azure-arm-sb.Queues._get
    type: Field
    syntax:
      content: _get
  - uid: 'azure-arm-sb.Queues#_listAuthorizationRules'
    id: 'azure-arm-sb.Queues#_listAuthorizationRules'
    parent: azure-arm-sb.Queues
    name: _listAuthorizationRules
    summary: ''
    fullName: azure-arm-sb.Queues._listAuthorizationRules
    type: Field
    syntax:
      content: _listAuthorizationRules
  - uid: 'azure-arm-sb.Queues#_createOrUpdateAuthorizationRule'
    id: 'azure-arm-sb.Queues#_createOrUpdateAuthorizationRule'
    parent: azure-arm-sb.Queues
    name: _createOrUpdateAuthorizationRule
    summary: ''
    fullName: azure-arm-sb.Queues._createOrUpdateAuthorizationRule
    type: Field
    syntax:
      content: _createOrUpdateAuthorizationRule
  - uid: 'azure-arm-sb.Queues#_deleteAuthorizationRule'
    id: 'azure-arm-sb.Queues#_deleteAuthorizationRule'
    parent: azure-arm-sb.Queues
    name: _deleteAuthorizationRule
    summary: ''
    fullName: azure-arm-sb.Queues._deleteAuthorizationRule
    type: Field
    syntax:
      content: _deleteAuthorizationRule
  - uid: 'azure-arm-sb.Queues#_getAuthorizationRule'
    id: 'azure-arm-sb.Queues#_getAuthorizationRule'
    parent: azure-arm-sb.Queues
    name: _getAuthorizationRule
    summary: ''
    fullName: azure-arm-sb.Queues._getAuthorizationRule
    type: Field
    syntax:
      content: _getAuthorizationRule
  - uid: 'azure-arm-sb.Queues#_listKeys'
    id: 'azure-arm-sb.Queues#_listKeys'
    parent: azure-arm-sb.Queues
    name: _listKeys
    summary: ''
    fullName: azure-arm-sb.Queues._listKeys
    type: Field
    syntax:
      content: _listKeys
  - uid: 'azure-arm-sb.Queues#_regenerateKeys'
    id: 'azure-arm-sb.Queues#_regenerateKeys'
    parent: azure-arm-sb.Queues
    name: _regenerateKeys
    summary: ''
    fullName: azure-arm-sb.Queues._regenerateKeys
    type: Field
    syntax:
      content: _regenerateKeys
  - uid: 'azure-arm-sb.Queues#_listAllNext'
    id: 'azure-arm-sb.Queues#_listAllNext'
    parent: azure-arm-sb.Queues
    name: _listAllNext
    summary: ''
    fullName: azure-arm-sb.Queues._listAllNext
    type: Field
    syntax:
      content: _listAllNext
  - uid: 'azure-arm-sb.Queues#_listAuthorizationRulesNext'
    id: 'azure-arm-sb.Queues#_listAuthorizationRulesNext'
    parent: azure-arm-sb.Queues
    name: _listAuthorizationRulesNext
    summary: ''
    fullName: azure-arm-sb.Queues._listAuthorizationRulesNext
    type: Field
    syntax:
      content: _listAuthorizationRulesNext
  - uid: 'azure-arm-sb.Queues#listAllWithHttpOperationResponse'
    id: 'azure-arm-sb.Queues#listAllWithHttpOperationResponse'
    parent: azure-arm-sb.Queues
    name: >-
      listAllWithHttpOperationResponse(resourceGroupName, namespaceName,
      options)
    summary: Gets the queues within a namespace.
    fullName: >-
      azure-arm-sb.Queues.listAllWithHttpOperationResponse(resourceGroupName,
      namespaceName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listAllWithHttpOperationResponse(resourceGroupName,
        namespaceName, options)
  - uid: 'azure-arm-sb.Queues#listAll'
    id: 'azure-arm-sb.Queues#listAll'
    parent: azure-arm-sb.Queues
    name: 'listAll(resourceGroupName, namespaceName, options, optionalCallback)'
    summary: Gets the queues within a namespace.
    fullName: >-
      azure-arm-sb.Queues.listAll(resourceGroupName, namespaceName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listAll(resourceGroupName, namespaceName, options,
        optionalCallback)
  - uid: 'azure-arm-sb.Queues#createOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-sb.Queues#createOrUpdateWithHttpOperationResponse'
    parent: azure-arm-sb.Queues
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, namespaceName,
      queueName, parameters, options)
    summary: Creates or updates a Service Bus queue. This operation is idempotent.
    fullName: >-
      azure-arm-sb.Queues.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to create or update a queue
            resource.
        - id: parameters.name
          type:
            - string
          description: Queue name.
          optional: true
        - id: parameters.location
          type:
            - string
          description: location of the resource.
        - id: parameters.lockDuration
          type:
            - string
          description: >-
            The duration of a peek-lock; that

            is, the amount of time that the message is locked for other
            receivers. The

            maximum value for LockDuration is 5 minutes; the default value is 1
            minute.
          optional: true
        - id: parameters.autoDeleteOnIdle
          type:
            - string
          description: >-
            the TimeSpan idle interval

            after which the queue is automatically deleted. The minimum duration
            is 5

            minutes.
          optional: true
        - id: parameters.entityAvailabilityStatus
          type:
            - string
          description: >-
            Entity availability

            status for the queue. Possible values include: 'Available',
            'Limited',

            'Renaming', 'Restoring', 'Unknown'
          optional: true
        - id: parameters.defaultMessageTimeToLive
          type:
            - string
          description: >-
            The default message

            time to live value. This is the duration after which the message
            expires,

            starting from when the message is sent to Service Bus. This is the
            default

            value used when TimeToLive is not set on a message itself.
          optional: true
        - id: parameters.duplicateDetectionHistoryTimeWindow
          type:
            - string
          description: >-
            TimeSpan

            structure that defines the duration of the duplicate detection
            history. The

            default value is 10 minutes.
          optional: true
        - id: parameters.enableBatchedOperations
          type:
            - boolean
          description: |-
            A value that indicates
            whether server-side batched operations are enabled.
          optional: true
        - id: parameters.deadLetteringOnMessageExpiration
          type:
            - boolean
          description: >-
            A value that

            indicates whether this queue has dead letter support when a message
            expires.
          optional: true
        - id: parameters.enableExpress
          type:
            - boolean
          description: >-
            A value that indicates whether

            Express Entities are enabled. An express queue holds a message in
            memory

            temporarily before writing it to persistent storage.
          optional: true
        - id: parameters.enablePartitioning
          type:
            - boolean
          description: >-
            A value that indicates

            whether the queue is to be partitioned across multiple message
            brokers.
          optional: true
        - id: parameters.isAnonymousAccessible
          type:
            - boolean
          description: |-
            A value that indicates
            whether the message is accessible anonymously.
          optional: true
        - id: parameters.maxDeliveryCount
          type:
            - number
          description: >-
            The maximum delivery count. A

            message is automatically deadlettered after this number of
            deliveries.
          optional: true
        - id: parameters.maxSizeInMegabytes
          type:
            - number
          description: >-
            The maximum size of the

            queue in megabytes, which is the size of memory allocated for the
            queue.
          optional: true
        - id: parameters.requiresDuplicateDetection
          type:
            - boolean
          description: |-
            A value indicating
            if this queue requires duplicate detection.
          optional: true
        - id: parameters.requiresSession
          type:
            - boolean
          description: |-
            A value that indicates whether
            the queue supports the concept of sessions.
          optional: true
        - id: parameters.status
          type:
            - string
          description: >-
            Enumerates the possible values for the

            status of a messaging entity. Possible values include: 'Active',
            'Creating',

            'Deleting', 'Disabled', 'ReceiveDisabled', 'Renaming', 'Restoring',

            'SendDisabled', 'Unknown'
          optional: true
        - id: parameters.supportOrdering
          type:
            - boolean
          description: |-
            A value that indicates whether
            the queue supports ordering.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        namespaceName, queueName, parameters, options)
  - uid: 'azure-arm-sb.Queues#createOrUpdate'
    id: 'azure-arm-sb.Queues#createOrUpdate'
    parent: azure-arm-sb.Queues
    name: >-
      createOrUpdate(resourceGroupName, namespaceName, queueName, parameters,
      options, optionalCallback)
    summary: Creates or updates a Service Bus queue. This operation is idempotent.
    fullName: >-
      azure-arm-sb.Queues.createOrUpdate(resourceGroupName, namespaceName,
      queueName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to create or update a queue
            resource.
        - id: parameters.name
          type:
            - string
          description: Queue name.
          optional: true
        - id: parameters.location
          type:
            - string
          description: location of the resource.
        - id: parameters.lockDuration
          type:
            - string
          description: >-
            The duration of a peek-lock; that

            is, the amount of time that the message is locked for other
            receivers. The

            maximum value for LockDuration is 5 minutes; the default value is 1
            minute.
          optional: true
        - id: parameters.autoDeleteOnIdle
          type:
            - string
          description: >-
            the TimeSpan idle interval

            after which the queue is automatically deleted. The minimum duration
            is 5

            minutes.
          optional: true
        - id: parameters.entityAvailabilityStatus
          type:
            - string
          description: >-
            Entity availability

            status for the queue. Possible values include: 'Available',
            'Limited',

            'Renaming', 'Restoring', 'Unknown'
          optional: true
        - id: parameters.defaultMessageTimeToLive
          type:
            - string
          description: >-
            The default message

            time to live value. This is the duration after which the message
            expires,

            starting from when the message is sent to Service Bus. This is the
            default

            value used when TimeToLive is not set on a message itself.
          optional: true
        - id: parameters.duplicateDetectionHistoryTimeWindow
          type:
            - string
          description: >-
            TimeSpan

            structure that defines the duration of the duplicate detection
            history. The

            default value is 10 minutes.
          optional: true
        - id: parameters.enableBatchedOperations
          type:
            - boolean
          description: |-
            A value that indicates
            whether server-side batched operations are enabled.
          optional: true
        - id: parameters.deadLetteringOnMessageExpiration
          type:
            - boolean
          description: >-
            A value that

            indicates whether this queue has dead letter support when a message
            expires.
          optional: true
        - id: parameters.enableExpress
          type:
            - boolean
          description: >-
            A value that indicates whether

            Express Entities are enabled. An express queue holds a message in
            memory

            temporarily before writing it to persistent storage.
          optional: true
        - id: parameters.enablePartitioning
          type:
            - boolean
          description: >-
            A value that indicates

            whether the queue is to be partitioned across multiple message
            brokers.
          optional: true
        - id: parameters.isAnonymousAccessible
          type:
            - boolean
          description: |-
            A value that indicates
            whether the message is accessible anonymously.
          optional: true
        - id: parameters.maxDeliveryCount
          type:
            - number
          description: >-
            The maximum delivery count. A

            message is automatically deadlettered after this number of
            deliveries.
          optional: true
        - id: parameters.maxSizeInMegabytes
          type:
            - number
          description: >-
            The maximum size of the

            queue in megabytes, which is the size of memory allocated for the
            queue.
          optional: true
        - id: parameters.requiresDuplicateDetection
          type:
            - boolean
          description: |-
            A value indicating
            if this queue requires duplicate detection.
          optional: true
        - id: parameters.requiresSession
          type:
            - boolean
          description: |-
            A value that indicates whether
            the queue supports the concept of sessions.
          optional: true
        - id: parameters.status
          type:
            - string
          description: >-
            Enumerates the possible values for the

            status of a messaging entity. Possible values include: 'Active',
            'Creating',

            'Deleting', 'Disabled', 'ReceiveDisabled', 'Renaming', 'Restoring',

            'SendDisabled', 'Unknown'
          optional: true
        - id: parameters.supportOrdering
          type:
            - boolean
          description: |-
            A value that indicates whether
            the queue supports ordering.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, namespaceName, queueName,
        parameters, options, optionalCallback)
  - uid: 'azure-arm-sb.Queues#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-sb.Queues#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-sb.Queues
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, namespaceName,
      queueName, options)
    summary: Deletes a queue from the specified namespace in a resource group.
    fullName: >-
      azure-arm-sb.Queues.deleteMethodWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        namespaceName, queueName, options)
  - uid: 'azure-arm-sb.Queues#deleteMethod'
    id: 'azure-arm-sb.Queues#deleteMethod'
    parent: azure-arm-sb.Queues
    name: >-
      deleteMethod(resourceGroupName, namespaceName, queueName, options,
      optionalCallback)
    summary: Deletes a queue from the specified namespace in a resource group.
    fullName: >-
      azure-arm-sb.Queues.deleteMethod(resourceGroupName, namespaceName,
      queueName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, namespaceName, queueName,
        options, optionalCallback)
  - uid: 'azure-arm-sb.Queues#getWithHttpOperationResponse'
    id: 'azure-arm-sb.Queues#getWithHttpOperationResponse'
    parent: azure-arm-sb.Queues
    name: >-
      getWithHttpOperationResponse(resourceGroupName, namespaceName, queueName,
      options)
    summary: Returns a description for the specified queue.
    fullName: >-
      azure-arm-sb.Queues.getWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, namespaceName,
        queueName, options)
  - uid: 'azure-arm-sb.Queues#get'
    id: 'azure-arm-sb.Queues#get'
    parent: azure-arm-sb.Queues
    name: >-
      get(resourceGroupName, namespaceName, queueName, options,
      optionalCallback)
    summary: Returns a description for the specified queue.
    fullName: >-
      azure-arm-sb.Queues.get(resourceGroupName, namespaceName, queueName,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, namespaceName, queueName, options,
        optionalCallback)
  - uid: 'azure-arm-sb.Queues#listAuthorizationRulesWithHttpOperationResponse'
    id: 'azure-arm-sb.Queues#listAuthorizationRulesWithHttpOperationResponse'
    parent: azure-arm-sb.Queues
    name: >-
      listAuthorizationRulesWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, options)
    summary: Gets all authorization rules for a queue.
    fullName: >-
      azure-arm-sb.Queues.listAuthorizationRulesWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listAuthorizationRulesWithHttpOperationResponse(resourceGroupName,
        namespaceName, queueName, options)
  - uid: 'azure-arm-sb.Queues#listAuthorizationRules'
    id: 'azure-arm-sb.Queues#listAuthorizationRules'
    parent: azure-arm-sb.Queues
    name: >-
      listAuthorizationRules(resourceGroupName, namespaceName, queueName,
      options, optionalCallback)
    summary: Gets all authorization rules for a queue.
    fullName: >-
      azure-arm-sb.Queues.listAuthorizationRules(resourceGroupName,
      namespaceName, queueName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listAuthorizationRules(resourceGroupName, namespaceName,
        queueName, options, optionalCallback)
  - uid: >-
      azure-arm-sb.Queues#createOrUpdateAuthorizationRuleWithHttpOperationResponse
    id: >-
      azure-arm-sb.Queues#createOrUpdateAuthorizationRuleWithHttpOperationResponse
    parent: azure-arm-sb.Queues
    name: >-
      createOrUpdateAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, authorizationRuleName, parameters, options)
    summary: Creates an authorization rule for a queue.
    fullName: >-
      azure-arm-sb.Queues.createOrUpdateAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, authorizationRuleName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: parameters
          type:
            - object
          description: The shared access authorization rule.
        - id: parameters.location
          type:
            - string
          description: data center location.
          optional: true
        - id: parameters.name
          type:
            - string
          description: Name of the authorization rule.
          optional: true
        - id: parameters.rights
          type:
            - array
          description: The rights associated with the rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
        namespaceName, queueName, authorizationRuleName, parameters, options)
  - uid: 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule'
    id: 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule'
    parent: azure-arm-sb.Queues
    name: >-
      createOrUpdateAuthorizationRule(resourceGroupName, namespaceName,
      queueName, authorizationRuleName, parameters, options, optionalCallback)
    summary: Creates an authorization rule for a queue.
    fullName: >-
      azure-arm-sb.Queues.createOrUpdateAuthorizationRule(resourceGroupName,
      namespaceName, queueName, authorizationRuleName, parameters, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: parameters
          type:
            - object
          description: The shared access authorization rule.
        - id: parameters.location
          type:
            - string
          description: data center location.
          optional: true
        - id: parameters.name
          type:
            - string
          description: Name of the authorization rule.
          optional: true
        - id: parameters.rights
          type:
            - array
          description: The rights associated with the rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName,
        namespaceName, queueName, authorizationRuleName, parameters, options,
        optionalCallback)
  - uid: 'azure-arm-sb.Queues#deleteAuthorizationRuleWithHttpOperationResponse'
    id: 'azure-arm-sb.Queues#deleteAuthorizationRuleWithHttpOperationResponse'
    parent: azure-arm-sb.Queues
    name: >-
      deleteAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, authorizationRuleName, options)
    summary: Deletes a queue authorization rule.
    fullName: >-
      azure-arm-sb.Queues.deleteAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, authorizationRuleName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
        namespaceName, queueName, authorizationRuleName, options)
  - uid: 'azure-arm-sb.Queues#deleteAuthorizationRule'
    id: 'azure-arm-sb.Queues#deleteAuthorizationRule'
    parent: azure-arm-sb.Queues
    name: >-
      deleteAuthorizationRule(resourceGroupName, namespaceName, queueName,
      authorizationRuleName, options, optionalCallback)
    summary: Deletes a queue authorization rule.
    fullName: >-
      azure-arm-sb.Queues.deleteAuthorizationRule(resourceGroupName,
      namespaceName, queueName, authorizationRuleName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteAuthorizationRule(resourceGroupName, namespaceName,
        queueName, authorizationRuleName, options, optionalCallback)
  - uid: 'azure-arm-sb.Queues#getAuthorizationRuleWithHttpOperationResponse'
    id: 'azure-arm-sb.Queues#getAuthorizationRuleWithHttpOperationResponse'
    parent: azure-arm-sb.Queues
    name: >-
      getAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, authorizationRuleName, options)
    summary: Gets an authorization rule for a queue by rule name.
    fullName: >-
      azure-arm-sb.Queues.getAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, authorizationRuleName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getAuthorizationRuleWithHttpOperationResponse(resourceGroupName,
        namespaceName, queueName, authorizationRuleName, options)
  - uid: 'azure-arm-sb.Queues#getAuthorizationRule'
    id: 'azure-arm-sb.Queues#getAuthorizationRule'
    parent: azure-arm-sb.Queues
    name: >-
      getAuthorizationRule(resourceGroupName, namespaceName, queueName,
      authorizationRuleName, options, optionalCallback)
    summary: Gets an authorization rule for a queue by rule name.
    fullName: >-
      azure-arm-sb.Queues.getAuthorizationRule(resourceGroupName, namespaceName,
      queueName, authorizationRuleName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getAuthorizationRule(resourceGroupName, namespaceName,
        queueName, authorizationRuleName, options, optionalCallback)
  - uid: 'azure-arm-sb.Queues#listKeysWithHttpOperationResponse'
    id: 'azure-arm-sb.Queues#listKeysWithHttpOperationResponse'
    parent: azure-arm-sb.Queues
    name: >-
      listKeysWithHttpOperationResponse(resourceGroupName, namespaceName,
      queueName, authorizationRuleName, options)
    summary: Primary and secondary connection strings to the queue.
    fullName: >-
      azure-arm-sb.Queues.listKeysWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, authorizationRuleName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listKeysWithHttpOperationResponse(resourceGroupName,
        namespaceName, queueName, authorizationRuleName, options)
  - uid: 'azure-arm-sb.Queues#listKeys'
    id: 'azure-arm-sb.Queues#listKeys'
    parent: azure-arm-sb.Queues
    name: >-
      listKeys(resourceGroupName, namespaceName, queueName,
      authorizationRuleName, options, optionalCallback)
    summary: Primary and secondary connection strings to the queue.
    fullName: >-
      azure-arm-sb.Queues.listKeys(resourceGroupName, namespaceName, queueName,
      authorizationRuleName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listKeys(resourceGroupName, namespaceName, queueName,
        authorizationRuleName, options, optionalCallback)
  - uid: 'azure-arm-sb.Queues#regenerateKeysWithHttpOperationResponse'
    id: 'azure-arm-sb.Queues#regenerateKeysWithHttpOperationResponse'
    parent: azure-arm-sb.Queues
    name: >-
      regenerateKeysWithHttpOperationResponse(resourceGroupName, namespaceName,
      queueName, authorizationRuleName, parameters, options)
    summary: Regenerates the primary or secondary connection strings to the queue.
    fullName: >-
      azure-arm-sb.Queues.regenerateKeysWithHttpOperationResponse(resourceGroupName,
      namespaceName, queueName, authorizationRuleName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to regenerate the
            authorization rule.
        - id: parameters.policykey
          type:
            - string
          description: |-
            Key that needs to be regenerated.
            Possible values include: 'PrimaryKey', 'SecondaryKey'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function regenerateKeysWithHttpOperationResponse(resourceGroupName,
        namespaceName, queueName, authorizationRuleName, parameters, options)
  - uid: 'azure-arm-sb.Queues#regenerateKeys'
    id: 'azure-arm-sb.Queues#regenerateKeys'
    parent: azure-arm-sb.Queues
    name: >-
      regenerateKeys(resourceGroupName, namespaceName, queueName,
      authorizationRuleName, parameters, options, optionalCallback)
    summary: Regenerates the primary or secondary connection strings to the queue.
    fullName: >-
      azure-arm-sb.Queues.regenerateKeys(resourceGroupName, namespaceName,
      queueName, authorizationRuleName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationrule name.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to regenerate the
            authorization rule.
        - id: parameters.policykey
          type:
            - string
          description: |-
            Key that needs to be regenerated.
            Possible values include: 'PrimaryKey', 'SecondaryKey'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function regenerateKeys(resourceGroupName, namespaceName, queueName,
        authorizationRuleName, parameters, options, optionalCallback)
  - uid: 'azure-arm-sb.Queues#listAllNextWithHttpOperationResponse'
    id: 'azure-arm-sb.Queues#listAllNextWithHttpOperationResponse'
    parent: azure-arm-sb.Queues
    name: 'listAllNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets the queues within a namespace.
    fullName: >-
      azure-arm-sb.Queues.listAllNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listAllNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-arm-sb.Queues#listAllNext'
    id: 'azure-arm-sb.Queues#listAllNext'
    parent: azure-arm-sb.Queues
    name: 'listAllNext(nextPageLink, options, optionalCallback)'
    summary: Gets the queues within a namespace.
    fullName: 'azure-arm-sb.Queues.listAllNext(nextPageLink, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listAllNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-arm-sb.Queues#listAuthorizationRulesNextWithHttpOperationResponse'
    id: 'azure-arm-sb.Queues#listAuthorizationRulesNextWithHttpOperationResponse'
    parent: azure-arm-sb.Queues
    name: 'listAuthorizationRulesNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets all authorization rules for a queue.
    fullName: >-
      azure-arm-sb.Queues.listAuthorizationRulesNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listAuthorizationRulesNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-sb.Queues#listAuthorizationRulesNext'
    id: 'azure-arm-sb.Queues#listAuthorizationRulesNext'
    parent: azure-arm-sb.Queues
    name: 'listAuthorizationRulesNext(nextPageLink, options, optionalCallback)'
    summary: Gets all authorization rules for a queue.
    fullName: >-
      azure-arm-sb.Queues.listAuthorizationRulesNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listAuthorizationRulesNext(nextPageLink, options,
        optionalCallback)
references:
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: Promise
    name: Promise
    fullName: Promise
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true
