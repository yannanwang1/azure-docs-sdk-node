### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-compute.Disks
    id: azure-arm-compute.Disks
    name: Disks
    summary: ''
    fullName: azure-arm-compute.Disks
    type: Class
    children:
      - 'azure-arm-compute.Disks.#ctor'
      - 'azure-arm-compute.Disks#client'
      - 'azure-arm-compute.Disks#_createOrUpdate'
      - 'azure-arm-compute.Disks#_update'
      - 'azure-arm-compute.Disks#_get'
      - 'azure-arm-compute.Disks#_deleteMethod'
      - 'azure-arm-compute.Disks#_listByResourceGroup'
      - 'azure-arm-compute.Disks#_list'
      - 'azure-arm-compute.Disks#_grantAccess'
      - 'azure-arm-compute.Disks#_revokeAccess'
      - 'azure-arm-compute.Disks#_beginCreateOrUpdate'
      - 'azure-arm-compute.Disks#_beginUpdate'
      - 'azure-arm-compute.Disks#_beginDeleteMethod'
      - 'azure-arm-compute.Disks#_beginGrantAccess'
      - 'azure-arm-compute.Disks#_beginRevokeAccess'
      - 'azure-arm-compute.Disks#_listByResourceGroupNext'
      - 'azure-arm-compute.Disks#_listNext'
      - 'azure-arm-compute.Disks#createOrUpdateWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#createOrUpdate'
      - 'azure-arm-compute.Disks#updateWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#update'
      - 'azure-arm-compute.Disks#getWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#get'
      - 'azure-arm-compute.Disks#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#deleteMethod'
      - 'azure-arm-compute.Disks#listByResourceGroupWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#listByResourceGroup'
      - 'azure-arm-compute.Disks#listWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#list'
      - 'azure-arm-compute.Disks#grantAccessWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#grantAccess'
      - 'azure-arm-compute.Disks#revokeAccessWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#revokeAccess'
      - 'azure-arm-compute.Disks#beginCreateOrUpdateWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#beginCreateOrUpdate'
      - 'azure-arm-compute.Disks#beginUpdateWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#beginUpdate'
      - 'azure-arm-compute.Disks#beginDeleteMethodWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#beginDeleteMethod'
      - 'azure-arm-compute.Disks#beginGrantAccessWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#beginGrantAccess'
      - 'azure-arm-compute.Disks#beginRevokeAccessWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#beginRevokeAccess'
      - 'azure-arm-compute.Disks#listByResourceGroupNextWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#listByResourceGroupNext'
      - 'azure-arm-compute.Disks#listNextWithHttpOperationResponse'
      - 'azure-arm-compute.Disks#listNext'
  - id: 'azure-arm-compute.Disks.#ctor'
    uid: 'azure-arm-compute.Disks.#ctor'
    parent: azure-arm-compute.Disks
    name: Disks()
    fullName: azure-arm-compute.Disks.Disks()
    summary: ''
    type: Constructor
    syntax:
      content: new Disks()
  - uid: 'azure-arm-compute.Disks#client'
    id: 'azure-arm-compute.Disks#client'
    parent: azure-arm-compute.Disks
    name: client
    summary: ''
    fullName: azure-arm-compute.Disks.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-compute.Disks#_createOrUpdate'
    id: 'azure-arm-compute.Disks#_createOrUpdate'
    parent: azure-arm-compute.Disks
    name: _createOrUpdate
    summary: ''
    fullName: azure-arm-compute.Disks._createOrUpdate
    type: Field
    syntax:
      content: _createOrUpdate
  - uid: 'azure-arm-compute.Disks#_update'
    id: 'azure-arm-compute.Disks#_update'
    parent: azure-arm-compute.Disks
    name: _update
    summary: ''
    fullName: azure-arm-compute.Disks._update
    type: Field
    syntax:
      content: _update
  - uid: 'azure-arm-compute.Disks#_get'
    id: 'azure-arm-compute.Disks#_get'
    parent: azure-arm-compute.Disks
    name: _get
    summary: ''
    fullName: azure-arm-compute.Disks._get
    type: Field
    syntax:
      content: _get
  - uid: 'azure-arm-compute.Disks#_deleteMethod'
    id: 'azure-arm-compute.Disks#_deleteMethod'
    parent: azure-arm-compute.Disks
    name: _deleteMethod
    summary: ''
    fullName: azure-arm-compute.Disks._deleteMethod
    type: Field
    syntax:
      content: _deleteMethod
  - uid: 'azure-arm-compute.Disks#_listByResourceGroup'
    id: 'azure-arm-compute.Disks#_listByResourceGroup'
    parent: azure-arm-compute.Disks
    name: _listByResourceGroup
    summary: ''
    fullName: azure-arm-compute.Disks._listByResourceGroup
    type: Field
    syntax:
      content: _listByResourceGroup
  - uid: 'azure-arm-compute.Disks#_list'
    id: 'azure-arm-compute.Disks#_list'
    parent: azure-arm-compute.Disks
    name: _list
    summary: ''
    fullName: azure-arm-compute.Disks._list
    type: Field
    syntax:
      content: _list
  - uid: 'azure-arm-compute.Disks#_grantAccess'
    id: 'azure-arm-compute.Disks#_grantAccess'
    parent: azure-arm-compute.Disks
    name: _grantAccess
    summary: ''
    fullName: azure-arm-compute.Disks._grantAccess
    type: Field
    syntax:
      content: _grantAccess
  - uid: 'azure-arm-compute.Disks#_revokeAccess'
    id: 'azure-arm-compute.Disks#_revokeAccess'
    parent: azure-arm-compute.Disks
    name: _revokeAccess
    summary: ''
    fullName: azure-arm-compute.Disks._revokeAccess
    type: Field
    syntax:
      content: _revokeAccess
  - uid: 'azure-arm-compute.Disks#_beginCreateOrUpdate'
    id: 'azure-arm-compute.Disks#_beginCreateOrUpdate'
    parent: azure-arm-compute.Disks
    name: _beginCreateOrUpdate
    summary: ''
    fullName: azure-arm-compute.Disks._beginCreateOrUpdate
    type: Field
    syntax:
      content: _beginCreateOrUpdate
  - uid: 'azure-arm-compute.Disks#_beginUpdate'
    id: 'azure-arm-compute.Disks#_beginUpdate'
    parent: azure-arm-compute.Disks
    name: _beginUpdate
    summary: ''
    fullName: azure-arm-compute.Disks._beginUpdate
    type: Field
    syntax:
      content: _beginUpdate
  - uid: 'azure-arm-compute.Disks#_beginDeleteMethod'
    id: 'azure-arm-compute.Disks#_beginDeleteMethod'
    parent: azure-arm-compute.Disks
    name: _beginDeleteMethod
    summary: ''
    fullName: azure-arm-compute.Disks._beginDeleteMethod
    type: Field
    syntax:
      content: _beginDeleteMethod
  - uid: 'azure-arm-compute.Disks#_beginGrantAccess'
    id: 'azure-arm-compute.Disks#_beginGrantAccess'
    parent: azure-arm-compute.Disks
    name: _beginGrantAccess
    summary: ''
    fullName: azure-arm-compute.Disks._beginGrantAccess
    type: Field
    syntax:
      content: _beginGrantAccess
  - uid: 'azure-arm-compute.Disks#_beginRevokeAccess'
    id: 'azure-arm-compute.Disks#_beginRevokeAccess'
    parent: azure-arm-compute.Disks
    name: _beginRevokeAccess
    summary: ''
    fullName: azure-arm-compute.Disks._beginRevokeAccess
    type: Field
    syntax:
      content: _beginRevokeAccess
  - uid: 'azure-arm-compute.Disks#_listByResourceGroupNext'
    id: 'azure-arm-compute.Disks#_listByResourceGroupNext'
    parent: azure-arm-compute.Disks
    name: _listByResourceGroupNext
    summary: ''
    fullName: azure-arm-compute.Disks._listByResourceGroupNext
    type: Field
    syntax:
      content: _listByResourceGroupNext
  - uid: 'azure-arm-compute.Disks#_listNext'
    id: 'azure-arm-compute.Disks#_listNext'
    parent: azure-arm-compute.Disks
    name: _listNext
    summary: ''
    fullName: azure-arm-compute.Disks._listNext
    type: Field
    syntax:
      content: _listNext
  - uid: 'azure-arm-compute.Disks#createOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#createOrUpdateWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, diskName, disk,
      options)
    summary: Creates or updates a disk.
    fullName: >-
      azure-arm-compute.Disks.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      diskName, disk, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: disk
          type:
            - object
          description: |-
            Disk object supplied in the body of the Put disk
            operation.
        - id: disk.accountType
          type:
            - string
          description: |-
            the storage account type of the disk.
            Possible values include: 'Standard_LRS', 'Premium_LRS'
          optional: true
        - id: disk.osType
          type:
            - string
          description: |-
            The Operating System type. Possible values
            include: 'Windows', 'Linux'
          optional: true
        - id: disk.creationData
          type:
            - object
          description: |-
            Disk source information. CreationData
            information cannot be changed after the disk has been created.
        - id: disk.creationData.createOption
          type:
            - string
          description: |-
            Possible values include:
            'Empty', 'Attach', 'FromImage', 'Import', 'Copy', 'Restore'
        - id: disk.creationData.storageAccountId
          type:
            - string
          description: >-
            If createOption is

            Import, the Azure Resource Manager identifier of the storage account

            containing the blob to import as a disk. Required only if the blob
            is in a

            different subscription
          optional: true
        - id: disk.creationData.imageReference
          type:
            - object
          description: Disk source information.
          optional: true
        - id: disk.creationData.imageReference.id
          type:
            - string
          description: >-
            A relative uri

            containing either a Platform Imgage Repository or user image
            reference.
        - id: disk.creationData.imageReference.lun
          type:
            - number
          description: >-
            If the disk is

            created from an image's data disk, this is an index that indicates
            which of

            the data disks in the image to use. For OS disks, this field is
            null.
          optional: true
        - id: disk.creationData.sourceUri
          type:
            - string
          description: >-
            If creationOption is Import,

            this is a SAS URI to a blob to be imported into a managed disk. If

            creationOption is Copy, this is a relative Uri containing the id of
            the

            source snapshot to be copied into a managed disk.
          optional: true
        - id: disk.creationData.sourceResourceId
          type:
            - string
          description: >-
            If createOption is

            Copy, this is the ARM id of the source snapshot or disk. If
            creationOption

            is Restore, this is the ARM-like id of the source disk restore
            point.
          optional: true
        - id: disk.diskSizeGB
          type:
            - number
          description: >-
            If creationData.createOption is Empty,

            this field is mandatory and it indicates the size of the VHD to
            create. If

            this field is present for updates or creation with other options, it

            indicates a resize. Resizes are only allowed if the disk is not
            attached to

            a running VM, and can only increase the disk's size.
          optional: true
        - id: disk.encryptionSettings
          type:
            - object
          description: |-
            Encryption settings for disk or
            snapshot
          optional: true
        - id: disk.encryptionSettings.enabled
          type:
            - boolean
          description: >-
            Set this flag to true and

            provide DiskEncryptionKey and optional KeyEncryptionKey to enable

            encryption. Set this flag to false and remove DiskEncryptionKey and

            KeyEncryptionKey to disable encryption. If EncryptionSettings is
            null in the

            request object, the existing settings remain unchanged.
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey
          type:
            - object
          description: |-
            Key Vault Secret
            Url and vault id of the disk encryption key
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.diskEncryptionKey.secretUrl
          type:
            - string
          description: |-
            Url
            pointing to a key or secret in KeyVault
        - id: disk.encryptionSettings.keyEncryptionKey
          type:
            - object
          description: |-
            Key Vault Key Url
            and vault id of the key encryption key
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.keyUrl
          type:
            - string
          description: |-
            Url pointing
            to a key or secret in KeyVault
        - id: disk.location
          type:
            - string
          description: Resource location
        - id: disk.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        diskName, disk, options)
  - uid: 'azure-arm-compute.Disks#createOrUpdate'
    id: 'azure-arm-compute.Disks#createOrUpdate'
    parent: azure-arm-compute.Disks
    name: >-
      createOrUpdate(resourceGroupName, diskName, disk, options,
      optionalCallback)
    summary: Creates or updates a disk.
    fullName: >-
      azure-arm-compute.Disks.createOrUpdate(resourceGroupName, diskName, disk,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: disk
          type:
            - object
          description: |-
            Disk object supplied in the body of the Put disk
            operation.
        - id: disk.accountType
          type:
            - string
          description: |-
            the storage account type of the disk.
            Possible values include: 'Standard_LRS', 'Premium_LRS'
          optional: true
        - id: disk.osType
          type:
            - string
          description: |-
            The Operating System type. Possible values
            include: 'Windows', 'Linux'
          optional: true
        - id: disk.creationData
          type:
            - object
          description: |-
            Disk source information. CreationData
            information cannot be changed after the disk has been created.
        - id: disk.creationData.createOption
          type:
            - string
          description: |-
            Possible values include:
            'Empty', 'Attach', 'FromImage', 'Import', 'Copy', 'Restore'
        - id: disk.creationData.storageAccountId
          type:
            - string
          description: >-
            If createOption is

            Import, the Azure Resource Manager identifier of the storage account

            containing the blob to import as a disk. Required only if the blob
            is in a

            different subscription
          optional: true
        - id: disk.creationData.imageReference
          type:
            - object
          description: Disk source information.
          optional: true
        - id: disk.creationData.imageReference.id
          type:
            - string
          description: >-
            A relative uri

            containing either a Platform Imgage Repository or user image
            reference.
        - id: disk.creationData.imageReference.lun
          type:
            - number
          description: >-
            If the disk is

            created from an image's data disk, this is an index that indicates
            which of

            the data disks in the image to use. For OS disks, this field is
            null.
          optional: true
        - id: disk.creationData.sourceUri
          type:
            - string
          description: >-
            If creationOption is Import,

            this is a SAS URI to a blob to be imported into a managed disk. If

            creationOption is Copy, this is a relative Uri containing the id of
            the

            source snapshot to be copied into a managed disk.
          optional: true
        - id: disk.creationData.sourceResourceId
          type:
            - string
          description: >-
            If createOption is

            Copy, this is the ARM id of the source snapshot or disk. If
            creationOption

            is Restore, this is the ARM-like id of the source disk restore
            point.
          optional: true
        - id: disk.diskSizeGB
          type:
            - number
          description: >-
            If creationData.createOption is Empty,

            this field is mandatory and it indicates the size of the VHD to
            create. If

            this field is present for updates or creation with other options, it

            indicates a resize. Resizes are only allowed if the disk is not
            attached to

            a running VM, and can only increase the disk's size.
          optional: true
        - id: disk.encryptionSettings
          type:
            - object
          description: |-
            Encryption settings for disk or
            snapshot
          optional: true
        - id: disk.encryptionSettings.enabled
          type:
            - boolean
          description: >-
            Set this flag to true and

            provide DiskEncryptionKey and optional KeyEncryptionKey to enable

            encryption. Set this flag to false and remove DiskEncryptionKey and

            KeyEncryptionKey to disable encryption. If EncryptionSettings is
            null in the

            request object, the existing settings remain unchanged.
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey
          type:
            - object
          description: |-
            Key Vault Secret
            Url and vault id of the disk encryption key
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.diskEncryptionKey.secretUrl
          type:
            - string
          description: |-
            Url
            pointing to a key or secret in KeyVault
        - id: disk.encryptionSettings.keyEncryptionKey
          type:
            - object
          description: |-
            Key Vault Key Url
            and vault id of the key encryption key
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.keyUrl
          type:
            - string
          description: |-
            Url pointing
            to a key or secret in KeyVault
        - id: disk.location
          type:
            - string
          description: Resource location
        - id: disk.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, diskName, disk, options,
        optionalCallback)
  - uid: 'azure-arm-compute.Disks#updateWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#updateWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: >-
      updateWithHttpOperationResponse(resourceGroupName, diskName, disk,
      options)
    summary: Updates (patches) a disk.
    fullName: >-
      azure-arm-compute.Disks.updateWithHttpOperationResponse(resourceGroupName,
      diskName, disk, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: disk
          type:
            - object
          description: |-
            Disk object supplied in the body of the Patch disk
            operation.
        - id: disk.accountType
          type:
            - string
          description: |-
            the storage account type of the disk.
            Possible values include: 'Standard_LRS', 'Premium_LRS'
          optional: true
        - id: disk.osType
          type:
            - string
          description: |-
            the Operating System type. Possible values
            include: 'Windows', 'Linux'
          optional: true
        - id: disk.creationData
          type:
            - object
          description: |-
            disk source information. CreationData
            information cannot be changed after the disk has been created.
          optional: true
        - id: disk.creationData.createOption
          type:
            - string
          description: |-
            Possible values include:
            'Empty', 'Attach', 'FromImage', 'Import', 'Copy', 'Restore'
        - id: disk.creationData.storageAccountId
          type:
            - string
          description: >-
            If createOption is

            Import, the Azure Resource Manager identifier of the storage account

            containing the blob to import as a disk. Required only if the blob
            is in a

            different subscription
          optional: true
        - id: disk.creationData.imageReference
          type:
            - object
          description: Disk source information.
          optional: true
        - id: disk.creationData.imageReference.id
          type:
            - string
          description: >-
            A relative uri

            containing either a Platform Imgage Repository or user image
            reference.
        - id: disk.creationData.imageReference.lun
          type:
            - number
          description: >-
            If the disk is

            created from an image's data disk, this is an index that indicates
            which of

            the data disks in the image to use. For OS disks, this field is
            null.
          optional: true
        - id: disk.creationData.sourceUri
          type:
            - string
          description: >-
            If creationOption is Import,

            this is a SAS URI to a blob to be imported into a managed disk. If

            creationOption is Copy, this is a relative Uri containing the id of
            the

            source snapshot to be copied into a managed disk.
          optional: true
        - id: disk.creationData.sourceResourceId
          type:
            - string
          description: >-
            If createOption is

            Copy, this is the ARM id of the source snapshot or disk. If
            creationOption

            is Restore, this is the ARM-like id of the source disk restore
            point.
          optional: true
        - id: disk.diskSizeGB
          type:
            - number
          description: >-
            If creationData.createOption is Empty,

            this field is mandatory and it indicates the size of the VHD to
            create. If

            this field is present for updates or creation with other options, it

            indicates a resize. Resizes are only allowed if the disk is not
            attached to

            a running VM, and can only increase the disk's size.
          optional: true
        - id: disk.encryptionSettings
          type:
            - object
          description: |-
            Encryption settings for disk or
            snapshot
          optional: true
        - id: disk.encryptionSettings.enabled
          type:
            - boolean
          description: >-
            Set this flag to true and

            provide DiskEncryptionKey and optional KeyEncryptionKey to enable

            encryption. Set this flag to false and remove DiskEncryptionKey and

            KeyEncryptionKey to disable encryption. If EncryptionSettings is
            null in the

            request object, the existing settings remain unchanged.
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey
          type:
            - object
          description: |-
            Key Vault Secret
            Url and vault id of the disk encryption key
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.diskEncryptionKey.secretUrl
          type:
            - string
          description: |-
            Url
            pointing to a key or secret in KeyVault
        - id: disk.encryptionSettings.keyEncryptionKey
          type:
            - object
          description: |-
            Key Vault Key Url
            and vault id of the key encryption key
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.keyUrl
          type:
            - string
          description: |-
            Url pointing
            to a key or secret in KeyVault
        - id: disk.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName, diskName,
        disk, options)
  - uid: 'azure-arm-compute.Disks#update'
    id: 'azure-arm-compute.Disks#update'
    parent: azure-arm-compute.Disks
    name: 'update(resourceGroupName, diskName, disk, options, optionalCallback)'
    summary: Updates (patches) a disk.
    fullName: >-
      azure-arm-compute.Disks.update(resourceGroupName, diskName, disk, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: disk
          type:
            - object
          description: |-
            Disk object supplied in the body of the Patch disk
            operation.
        - id: disk.accountType
          type:
            - string
          description: |-
            the storage account type of the disk.
            Possible values include: 'Standard_LRS', 'Premium_LRS'
          optional: true
        - id: disk.osType
          type:
            - string
          description: |-
            the Operating System type. Possible values
            include: 'Windows', 'Linux'
          optional: true
        - id: disk.creationData
          type:
            - object
          description: |-
            disk source information. CreationData
            information cannot be changed after the disk has been created.
          optional: true
        - id: disk.creationData.createOption
          type:
            - string
          description: |-
            Possible values include:
            'Empty', 'Attach', 'FromImage', 'Import', 'Copy', 'Restore'
        - id: disk.creationData.storageAccountId
          type:
            - string
          description: >-
            If createOption is

            Import, the Azure Resource Manager identifier of the storage account

            containing the blob to import as a disk. Required only if the blob
            is in a

            different subscription
          optional: true
        - id: disk.creationData.imageReference
          type:
            - object
          description: Disk source information.
          optional: true
        - id: disk.creationData.imageReference.id
          type:
            - string
          description: >-
            A relative uri

            containing either a Platform Imgage Repository or user image
            reference.
        - id: disk.creationData.imageReference.lun
          type:
            - number
          description: >-
            If the disk is

            created from an image's data disk, this is an index that indicates
            which of

            the data disks in the image to use. For OS disks, this field is
            null.
          optional: true
        - id: disk.creationData.sourceUri
          type:
            - string
          description: >-
            If creationOption is Import,

            this is a SAS URI to a blob to be imported into a managed disk. If

            creationOption is Copy, this is a relative Uri containing the id of
            the

            source snapshot to be copied into a managed disk.
          optional: true
        - id: disk.creationData.sourceResourceId
          type:
            - string
          description: >-
            If createOption is

            Copy, this is the ARM id of the source snapshot or disk. If
            creationOption

            is Restore, this is the ARM-like id of the source disk restore
            point.
          optional: true
        - id: disk.diskSizeGB
          type:
            - number
          description: >-
            If creationData.createOption is Empty,

            this field is mandatory and it indicates the size of the VHD to
            create. If

            this field is present for updates or creation with other options, it

            indicates a resize. Resizes are only allowed if the disk is not
            attached to

            a running VM, and can only increase the disk's size.
          optional: true
        - id: disk.encryptionSettings
          type:
            - object
          description: |-
            Encryption settings for disk or
            snapshot
          optional: true
        - id: disk.encryptionSettings.enabled
          type:
            - boolean
          description: >-
            Set this flag to true and

            provide DiskEncryptionKey and optional KeyEncryptionKey to enable

            encryption. Set this flag to false and remove DiskEncryptionKey and

            KeyEncryptionKey to disable encryption. If EncryptionSettings is
            null in the

            request object, the existing settings remain unchanged.
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey
          type:
            - object
          description: |-
            Key Vault Secret
            Url and vault id of the disk encryption key
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.diskEncryptionKey.secretUrl
          type:
            - string
          description: |-
            Url
            pointing to a key or secret in KeyVault
        - id: disk.encryptionSettings.keyEncryptionKey
          type:
            - object
          description: |-
            Key Vault Key Url
            and vault id of the key encryption key
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.keyUrl
          type:
            - string
          description: |-
            Url pointing
            to a key or secret in KeyVault
        - id: disk.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function update(resourceGroupName, diskName, disk, options,
        optionalCallback)
  - uid: 'azure-arm-compute.Disks#getWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#getWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: 'getWithHttpOperationResponse(resourceGroupName, diskName, options)'
    summary: Gets information about a disk.
    fullName: >-
      azure-arm-compute.Disks.getWithHttpOperationResponse(resourceGroupName,
      diskName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, diskName,
        options)
  - uid: 'azure-arm-compute.Disks#get'
    id: 'azure-arm-compute.Disks#get'
    parent: azure-arm-compute.Disks
    name: 'get(resourceGroupName, diskName, options, optionalCallback)'
    summary: Gets information about a disk.
    fullName: >-
      azure-arm-compute.Disks.get(resourceGroupName, diskName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function get(resourceGroupName, diskName, options, optionalCallback)'
  - uid: 'azure-arm-compute.Disks#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, diskName,
      options)
    summary: Deletes a disk.
    fullName: >-
      azure-arm-compute.Disks.deleteMethodWithHttpOperationResponse(resourceGroupName,
      diskName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        diskName, options)
  - uid: 'azure-arm-compute.Disks#deleteMethod'
    id: 'azure-arm-compute.Disks#deleteMethod'
    parent: azure-arm-compute.Disks
    name: 'deleteMethod(resourceGroupName, diskName, options, optionalCallback)'
    summary: Deletes a disk.
    fullName: >-
      azure-arm-compute.Disks.deleteMethod(resourceGroupName, diskName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, diskName, options,
        optionalCallback)
  - uid: 'azure-arm-compute.Disks#listByResourceGroupWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#listByResourceGroupWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: Lists all the disks under a resource group.
    fullName: >-
      azure-arm-compute.Disks.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
  - uid: 'azure-arm-compute.Disks#listByResourceGroup'
    id: 'azure-arm-compute.Disks#listByResourceGroup'
    parent: azure-arm-compute.Disks
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: Lists all the disks under a resource group.
    fullName: >-
      azure-arm-compute.Disks.listByResourceGroup(resourceGroupName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
  - uid: 'azure-arm-compute.Disks#listWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#listWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: listWithHttpOperationResponse(options)
    summary: Lists all the disks under a subscription.
    fullName: azure-arm-compute.Disks.listWithHttpOperationResponse(options)
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
  - uid: 'azure-arm-compute.Disks#list'
    id: 'azure-arm-compute.Disks#list'
    parent: azure-arm-compute.Disks
    name: 'list(options, optionalCallback)'
    summary: Lists all the disks under a subscription.
    fullName: 'azure-arm-compute.Disks.list(options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(options, optionalCallback)'
  - uid: 'azure-arm-compute.Disks#grantAccessWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#grantAccessWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: >-
      grantAccessWithHttpOperationResponse(resourceGroupName, diskName,
      grantAccessData, options)
    summary: Grants access to a disk.
    fullName: >-
      azure-arm-compute.Disks.grantAccessWithHttpOperationResponse(resourceGroupName,
      diskName, grantAccessData, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: grantAccessData
          type:
            - object
          description: |-
            Access data object supplied in the body of
            the get disk access operation.
        - id: grantAccessData.access
          type:
            - string
          description: |-
            Possible values include: 'None',
            'Read'
        - id: grantAccessData.durationInSeconds
          type:
            - number
          description: |-
            Time duration in seconds
            until the SAS access expires.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function grantAccessWithHttpOperationResponse(resourceGroupName,
        diskName, grantAccessData, options)
  - uid: 'azure-arm-compute.Disks#grantAccess'
    id: 'azure-arm-compute.Disks#grantAccess'
    parent: azure-arm-compute.Disks
    name: >-
      grantAccess(resourceGroupName, diskName, grantAccessData, options,
      optionalCallback)
    summary: Grants access to a disk.
    fullName: >-
      azure-arm-compute.Disks.grantAccess(resourceGroupName, diskName,
      grantAccessData, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: grantAccessData
          type:
            - object
          description: |-
            Access data object supplied in the body of
            the get disk access operation.
        - id: grantAccessData.access
          type:
            - string
          description: |-
            Possible values include: 'None',
            'Read'
        - id: grantAccessData.durationInSeconds
          type:
            - number
          description: |-
            Time duration in seconds
            until the SAS access expires.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function grantAccess(resourceGroupName, diskName, grantAccessData,
        options, optionalCallback)
  - uid: 'azure-arm-compute.Disks#revokeAccessWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#revokeAccessWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: >-
      revokeAccessWithHttpOperationResponse(resourceGroupName, diskName,
      options)
    summary: Revokes access to a disk.
    fullName: >-
      azure-arm-compute.Disks.revokeAccessWithHttpOperationResponse(resourceGroupName,
      diskName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function revokeAccessWithHttpOperationResponse(resourceGroupName,
        diskName, options)
  - uid: 'azure-arm-compute.Disks#revokeAccess'
    id: 'azure-arm-compute.Disks#revokeAccess'
    parent: azure-arm-compute.Disks
    name: 'revokeAccess(resourceGroupName, diskName, options, optionalCallback)'
    summary: Revokes access to a disk.
    fullName: >-
      azure-arm-compute.Disks.revokeAccess(resourceGroupName, diskName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function revokeAccess(resourceGroupName, diskName, options,
        optionalCallback)
  - uid: 'azure-arm-compute.Disks#beginCreateOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#beginCreateOrUpdateWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName, diskName,
      disk, options)
    summary: Creates or updates a disk.
    fullName: >-
      azure-arm-compute.Disks.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      diskName, disk, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: disk
          type:
            - object
          description: |-
            Disk object supplied in the body of the Put disk
            operation.
        - id: disk.accountType
          type:
            - string
          description: |-
            the storage account type of the disk.
            Possible values include: 'Standard_LRS', 'Premium_LRS'
          optional: true
        - id: disk.osType
          type:
            - string
          description: |-
            The Operating System type. Possible values
            include: 'Windows', 'Linux'
          optional: true
        - id: disk.creationData
          type:
            - object
          description: |-
            Disk source information. CreationData
            information cannot be changed after the disk has been created.
        - id: disk.creationData.createOption
          type:
            - string
          description: |-
            Possible values include:
            'Empty', 'Attach', 'FromImage', 'Import', 'Copy', 'Restore'
        - id: disk.creationData.storageAccountId
          type:
            - string
          description: >-
            If createOption is

            Import, the Azure Resource Manager identifier of the storage account

            containing the blob to import as a disk. Required only if the blob
            is in a

            different subscription
          optional: true
        - id: disk.creationData.imageReference
          type:
            - object
          description: Disk source information.
          optional: true
        - id: disk.creationData.imageReference.id
          type:
            - string
          description: >-
            A relative uri

            containing either a Platform Imgage Repository or user image
            reference.
        - id: disk.creationData.imageReference.lun
          type:
            - number
          description: >-
            If the disk is

            created from an image's data disk, this is an index that indicates
            which of

            the data disks in the image to use. For OS disks, this field is
            null.
          optional: true
        - id: disk.creationData.sourceUri
          type:
            - string
          description: >-
            If creationOption is Import,

            this is a SAS URI to a blob to be imported into a managed disk. If

            creationOption is Copy, this is a relative Uri containing the id of
            the

            source snapshot to be copied into a managed disk.
          optional: true
        - id: disk.creationData.sourceResourceId
          type:
            - string
          description: >-
            If createOption is

            Copy, this is the ARM id of the source snapshot or disk. If
            creationOption

            is Restore, this is the ARM-like id of the source disk restore
            point.
          optional: true
        - id: disk.diskSizeGB
          type:
            - number
          description: >-
            If creationData.createOption is Empty,

            this field is mandatory and it indicates the size of the VHD to
            create. If

            this field is present for updates or creation with other options, it

            indicates a resize. Resizes are only allowed if the disk is not
            attached to

            a running VM, and can only increase the disk's size.
          optional: true
        - id: disk.encryptionSettings
          type:
            - object
          description: |-
            Encryption settings for disk or
            snapshot
          optional: true
        - id: disk.encryptionSettings.enabled
          type:
            - boolean
          description: >-
            Set this flag to true and

            provide DiskEncryptionKey and optional KeyEncryptionKey to enable

            encryption. Set this flag to false and remove DiskEncryptionKey and

            KeyEncryptionKey to disable encryption. If EncryptionSettings is
            null in the

            request object, the existing settings remain unchanged.
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey
          type:
            - object
          description: |-
            Key Vault Secret
            Url and vault id of the disk encryption key
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.diskEncryptionKey.secretUrl
          type:
            - string
          description: |-
            Url
            pointing to a key or secret in KeyVault
        - id: disk.encryptionSettings.keyEncryptionKey
          type:
            - object
          description: |-
            Key Vault Key Url
            and vault id of the key encryption key
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.keyUrl
          type:
            - string
          description: |-
            Url pointing
            to a key or secret in KeyVault
        - id: disk.location
          type:
            - string
          description: Resource location
        - id: disk.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        diskName, disk, options)
  - uid: 'azure-arm-compute.Disks#beginCreateOrUpdate'
    id: 'azure-arm-compute.Disks#beginCreateOrUpdate'
    parent: azure-arm-compute.Disks
    name: >-
      beginCreateOrUpdate(resourceGroupName, diskName, disk, options,
      optionalCallback)
    summary: Creates or updates a disk.
    fullName: >-
      azure-arm-compute.Disks.beginCreateOrUpdate(resourceGroupName, diskName,
      disk, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: disk
          type:
            - object
          description: |-
            Disk object supplied in the body of the Put disk
            operation.
        - id: disk.accountType
          type:
            - string
          description: |-
            the storage account type of the disk.
            Possible values include: 'Standard_LRS', 'Premium_LRS'
          optional: true
        - id: disk.osType
          type:
            - string
          description: |-
            The Operating System type. Possible values
            include: 'Windows', 'Linux'
          optional: true
        - id: disk.creationData
          type:
            - object
          description: |-
            Disk source information. CreationData
            information cannot be changed after the disk has been created.
        - id: disk.creationData.createOption
          type:
            - string
          description: |-
            Possible values include:
            'Empty', 'Attach', 'FromImage', 'Import', 'Copy', 'Restore'
        - id: disk.creationData.storageAccountId
          type:
            - string
          description: >-
            If createOption is

            Import, the Azure Resource Manager identifier of the storage account

            containing the blob to import as a disk. Required only if the blob
            is in a

            different subscription
          optional: true
        - id: disk.creationData.imageReference
          type:
            - object
          description: Disk source information.
          optional: true
        - id: disk.creationData.imageReference.id
          type:
            - string
          description: >-
            A relative uri

            containing either a Platform Imgage Repository or user image
            reference.
        - id: disk.creationData.imageReference.lun
          type:
            - number
          description: >-
            If the disk is

            created from an image's data disk, this is an index that indicates
            which of

            the data disks in the image to use. For OS disks, this field is
            null.
          optional: true
        - id: disk.creationData.sourceUri
          type:
            - string
          description: >-
            If creationOption is Import,

            this is a SAS URI to a blob to be imported into a managed disk. If

            creationOption is Copy, this is a relative Uri containing the id of
            the

            source snapshot to be copied into a managed disk.
          optional: true
        - id: disk.creationData.sourceResourceId
          type:
            - string
          description: >-
            If createOption is

            Copy, this is the ARM id of the source snapshot or disk. If
            creationOption

            is Restore, this is the ARM-like id of the source disk restore
            point.
          optional: true
        - id: disk.diskSizeGB
          type:
            - number
          description: >-
            If creationData.createOption is Empty,

            this field is mandatory and it indicates the size of the VHD to
            create. If

            this field is present for updates or creation with other options, it

            indicates a resize. Resizes are only allowed if the disk is not
            attached to

            a running VM, and can only increase the disk's size.
          optional: true
        - id: disk.encryptionSettings
          type:
            - object
          description: |-
            Encryption settings for disk or
            snapshot
          optional: true
        - id: disk.encryptionSettings.enabled
          type:
            - boolean
          description: >-
            Set this flag to true and

            provide DiskEncryptionKey and optional KeyEncryptionKey to enable

            encryption. Set this flag to false and remove DiskEncryptionKey and

            KeyEncryptionKey to disable encryption. If EncryptionSettings is
            null in the

            request object, the existing settings remain unchanged.
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey
          type:
            - object
          description: |-
            Key Vault Secret
            Url and vault id of the disk encryption key
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.diskEncryptionKey.secretUrl
          type:
            - string
          description: |-
            Url
            pointing to a key or secret in KeyVault
        - id: disk.encryptionSettings.keyEncryptionKey
          type:
            - object
          description: |-
            Key Vault Key Url
            and vault id of the key encryption key
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.keyUrl
          type:
            - string
          description: |-
            Url pointing
            to a key or secret in KeyVault
        - id: disk.location
          type:
            - string
          description: Resource location
        - id: disk.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreateOrUpdate(resourceGroupName, diskName, disk, options,
        optionalCallback)
  - uid: 'azure-arm-compute.Disks#beginUpdateWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#beginUpdateWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: >-
      beginUpdateWithHttpOperationResponse(resourceGroupName, diskName, disk,
      options)
    summary: Updates (patches) a disk.
    fullName: >-
      azure-arm-compute.Disks.beginUpdateWithHttpOperationResponse(resourceGroupName,
      diskName, disk, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: disk
          type:
            - object
          description: |-
            Disk object supplied in the body of the Patch disk
            operation.
        - id: disk.accountType
          type:
            - string
          description: |-
            the storage account type of the disk.
            Possible values include: 'Standard_LRS', 'Premium_LRS'
          optional: true
        - id: disk.osType
          type:
            - string
          description: |-
            the Operating System type. Possible values
            include: 'Windows', 'Linux'
          optional: true
        - id: disk.creationData
          type:
            - object
          description: |-
            disk source information. CreationData
            information cannot be changed after the disk has been created.
          optional: true
        - id: disk.creationData.createOption
          type:
            - string
          description: |-
            Possible values include:
            'Empty', 'Attach', 'FromImage', 'Import', 'Copy', 'Restore'
        - id: disk.creationData.storageAccountId
          type:
            - string
          description: >-
            If createOption is

            Import, the Azure Resource Manager identifier of the storage account

            containing the blob to import as a disk. Required only if the blob
            is in a

            different subscription
          optional: true
        - id: disk.creationData.imageReference
          type:
            - object
          description: Disk source information.
          optional: true
        - id: disk.creationData.imageReference.id
          type:
            - string
          description: >-
            A relative uri

            containing either a Platform Imgage Repository or user image
            reference.
        - id: disk.creationData.imageReference.lun
          type:
            - number
          description: >-
            If the disk is

            created from an image's data disk, this is an index that indicates
            which of

            the data disks in the image to use. For OS disks, this field is
            null.
          optional: true
        - id: disk.creationData.sourceUri
          type:
            - string
          description: >-
            If creationOption is Import,

            this is a SAS URI to a blob to be imported into a managed disk. If

            creationOption is Copy, this is a relative Uri containing the id of
            the

            source snapshot to be copied into a managed disk.
          optional: true
        - id: disk.creationData.sourceResourceId
          type:
            - string
          description: >-
            If createOption is

            Copy, this is the ARM id of the source snapshot or disk. If
            creationOption

            is Restore, this is the ARM-like id of the source disk restore
            point.
          optional: true
        - id: disk.diskSizeGB
          type:
            - number
          description: >-
            If creationData.createOption is Empty,

            this field is mandatory and it indicates the size of the VHD to
            create. If

            this field is present for updates or creation with other options, it

            indicates a resize. Resizes are only allowed if the disk is not
            attached to

            a running VM, and can only increase the disk's size.
          optional: true
        - id: disk.encryptionSettings
          type:
            - object
          description: |-
            Encryption settings for disk or
            snapshot
          optional: true
        - id: disk.encryptionSettings.enabled
          type:
            - boolean
          description: >-
            Set this flag to true and

            provide DiskEncryptionKey and optional KeyEncryptionKey to enable

            encryption. Set this flag to false and remove DiskEncryptionKey and

            KeyEncryptionKey to disable encryption. If EncryptionSettings is
            null in the

            request object, the existing settings remain unchanged.
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey
          type:
            - object
          description: |-
            Key Vault Secret
            Url and vault id of the disk encryption key
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.diskEncryptionKey.secretUrl
          type:
            - string
          description: |-
            Url
            pointing to a key or secret in KeyVault
        - id: disk.encryptionSettings.keyEncryptionKey
          type:
            - object
          description: |-
            Key Vault Key Url
            and vault id of the key encryption key
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.keyUrl
          type:
            - string
          description: |-
            Url pointing
            to a key or secret in KeyVault
        - id: disk.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName,
        diskName, disk, options)
  - uid: 'azure-arm-compute.Disks#beginUpdate'
    id: 'azure-arm-compute.Disks#beginUpdate'
    parent: azure-arm-compute.Disks
    name: 'beginUpdate(resourceGroupName, diskName, disk, options, optionalCallback)'
    summary: Updates (patches) a disk.
    fullName: >-
      azure-arm-compute.Disks.beginUpdate(resourceGroupName, diskName, disk,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: disk
          type:
            - object
          description: |-
            Disk object supplied in the body of the Patch disk
            operation.
        - id: disk.accountType
          type:
            - string
          description: |-
            the storage account type of the disk.
            Possible values include: 'Standard_LRS', 'Premium_LRS'
          optional: true
        - id: disk.osType
          type:
            - string
          description: |-
            the Operating System type. Possible values
            include: 'Windows', 'Linux'
          optional: true
        - id: disk.creationData
          type:
            - object
          description: |-
            disk source information. CreationData
            information cannot be changed after the disk has been created.
          optional: true
        - id: disk.creationData.createOption
          type:
            - string
          description: |-
            Possible values include:
            'Empty', 'Attach', 'FromImage', 'Import', 'Copy', 'Restore'
        - id: disk.creationData.storageAccountId
          type:
            - string
          description: >-
            If createOption is

            Import, the Azure Resource Manager identifier of the storage account

            containing the blob to import as a disk. Required only if the blob
            is in a

            different subscription
          optional: true
        - id: disk.creationData.imageReference
          type:
            - object
          description: Disk source information.
          optional: true
        - id: disk.creationData.imageReference.id
          type:
            - string
          description: >-
            A relative uri

            containing either a Platform Imgage Repository or user image
            reference.
        - id: disk.creationData.imageReference.lun
          type:
            - number
          description: >-
            If the disk is

            created from an image's data disk, this is an index that indicates
            which of

            the data disks in the image to use. For OS disks, this field is
            null.
          optional: true
        - id: disk.creationData.sourceUri
          type:
            - string
          description: >-
            If creationOption is Import,

            this is a SAS URI to a blob to be imported into a managed disk. If

            creationOption is Copy, this is a relative Uri containing the id of
            the

            source snapshot to be copied into a managed disk.
          optional: true
        - id: disk.creationData.sourceResourceId
          type:
            - string
          description: >-
            If createOption is

            Copy, this is the ARM id of the source snapshot or disk. If
            creationOption

            is Restore, this is the ARM-like id of the source disk restore
            point.
          optional: true
        - id: disk.diskSizeGB
          type:
            - number
          description: >-
            If creationData.createOption is Empty,

            this field is mandatory and it indicates the size of the VHD to
            create. If

            this field is present for updates or creation with other options, it

            indicates a resize. Resizes are only allowed if the disk is not
            attached to

            a running VM, and can only increase the disk's size.
          optional: true
        - id: disk.encryptionSettings
          type:
            - object
          description: |-
            Encryption settings for disk or
            snapshot
          optional: true
        - id: disk.encryptionSettings.enabled
          type:
            - boolean
          description: >-
            Set this flag to true and

            provide DiskEncryptionKey and optional KeyEncryptionKey to enable

            encryption. Set this flag to false and remove DiskEncryptionKey and

            KeyEncryptionKey to disable encryption. If EncryptionSettings is
            null in the

            request object, the existing settings remain unchanged.
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey
          type:
            - object
          description: |-
            Key Vault Secret
            Url and vault id of the disk encryption key
          optional: true
        - id: disk.encryptionSettings.diskEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.diskEncryptionKey.secretUrl
          type:
            - string
          description: |-
            Url
            pointing to a key or secret in KeyVault
        - id: disk.encryptionSettings.keyEncryptionKey
          type:
            - object
          description: |-
            Key Vault Key Url
            and vault id of the key encryption key
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault
          type:
            - object
          description: Resource id of the KeyVault containing the key or secret
        - id: disk.encryptionSettings.keyEncryptionKey.sourceVault.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: disk.encryptionSettings.keyEncryptionKey.keyUrl
          type:
            - string
          description: |-
            Url pointing
            to a key or secret in KeyVault
        - id: disk.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginUpdate(resourceGroupName, diskName, disk, options,
        optionalCallback)
  - uid: 'azure-arm-compute.Disks#beginDeleteMethodWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#beginDeleteMethodWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName, diskName,
      options)
    summary: Deletes a disk.
    fullName: >-
      azure-arm-compute.Disks.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      diskName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        diskName, options)
  - uid: 'azure-arm-compute.Disks#beginDeleteMethod'
    id: 'azure-arm-compute.Disks#beginDeleteMethod'
    parent: azure-arm-compute.Disks
    name: 'beginDeleteMethod(resourceGroupName, diskName, options, optionalCallback)'
    summary: Deletes a disk.
    fullName: >-
      azure-arm-compute.Disks.beginDeleteMethod(resourceGroupName, diskName,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeleteMethod(resourceGroupName, diskName, options,
        optionalCallback)
  - uid: 'azure-arm-compute.Disks#beginGrantAccessWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#beginGrantAccessWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: >-
      beginGrantAccessWithHttpOperationResponse(resourceGroupName, diskName,
      grantAccessData, options)
    summary: Grants access to a disk.
    fullName: >-
      azure-arm-compute.Disks.beginGrantAccessWithHttpOperationResponse(resourceGroupName,
      diskName, grantAccessData, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: grantAccessData
          type:
            - object
          description: |-
            Access data object supplied in the body of
            the get disk access operation.
        - id: grantAccessData.access
          type:
            - string
          description: |-
            Possible values include: 'None',
            'Read'
        - id: grantAccessData.durationInSeconds
          type:
            - number
          description: |-
            Time duration in seconds
            until the SAS access expires.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginGrantAccessWithHttpOperationResponse(resourceGroupName,
        diskName, grantAccessData, options)
  - uid: 'azure-arm-compute.Disks#beginGrantAccess'
    id: 'azure-arm-compute.Disks#beginGrantAccess'
    parent: azure-arm-compute.Disks
    name: >-
      beginGrantAccess(resourceGroupName, diskName, grantAccessData, options,
      optionalCallback)
    summary: Grants access to a disk.
    fullName: >-
      azure-arm-compute.Disks.beginGrantAccess(resourceGroupName, diskName,
      grantAccessData, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: grantAccessData
          type:
            - object
          description: |-
            Access data object supplied in the body of
            the get disk access operation.
        - id: grantAccessData.access
          type:
            - string
          description: |-
            Possible values include: 'None',
            'Read'
        - id: grantAccessData.durationInSeconds
          type:
            - number
          description: |-
            Time duration in seconds
            until the SAS access expires.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginGrantAccess(resourceGroupName, diskName, grantAccessData,
        options, optionalCallback)
  - uid: 'azure-arm-compute.Disks#beginRevokeAccessWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#beginRevokeAccessWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: >-
      beginRevokeAccessWithHttpOperationResponse(resourceGroupName, diskName,
      options)
    summary: Revokes access to a disk.
    fullName: >-
      azure-arm-compute.Disks.beginRevokeAccessWithHttpOperationResponse(resourceGroupName,
      diskName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginRevokeAccessWithHttpOperationResponse(resourceGroupName,
        diskName, options)
  - uid: 'azure-arm-compute.Disks#beginRevokeAccess'
    id: 'azure-arm-compute.Disks#beginRevokeAccess'
    parent: azure-arm-compute.Disks
    name: 'beginRevokeAccess(resourceGroupName, diskName, options, optionalCallback)'
    summary: Revokes access to a disk.
    fullName: >-
      azure-arm-compute.Disks.beginRevokeAccess(resourceGroupName, diskName,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: diskName
          type:
            - string
          description: |-
            The name of the disk within the given subscription
            and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginRevokeAccess(resourceGroupName, diskName, options,
        optionalCallback)
  - uid: 'azure-arm-compute.Disks#listByResourceGroupNextWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#listByResourceGroupNextWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: 'listByResourceGroupNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Lists all the disks under a resource group.
    fullName: >-
      azure-arm-compute.Disks.listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-compute.Disks#listByResourceGroupNext'
    id: 'azure-arm-compute.Disks#listByResourceGroupNext'
    parent: azure-arm-compute.Disks
    name: 'listByResourceGroupNext(nextPageLink, options, optionalCallback)'
    summary: Lists all the disks under a resource group.
    fullName: >-
      azure-arm-compute.Disks.listByResourceGroupNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroupNext(nextPageLink, options,
        optionalCallback)
  - uid: 'azure-arm-compute.Disks#listNextWithHttpOperationResponse'
    id: 'azure-arm-compute.Disks#listNextWithHttpOperationResponse'
    parent: azure-arm-compute.Disks
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Lists all the disks under a subscription.
    fullName: >-
      azure-arm-compute.Disks.listNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-arm-compute.Disks#listNext'
    id: 'azure-arm-compute.Disks#listNext'
    parent: azure-arm-compute.Disks
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Lists all the disks under a subscription.
    fullName: 'azure-arm-compute.Disks.listNext(nextPageLink, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: Promise
    name: Promise
    fullName: Promise
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
