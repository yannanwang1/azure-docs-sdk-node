### YamlMime:JavaScriptReference
items:
  - uid: azure-batch.JobSchedule
    id: azure-batch.JobSchedule
    name: JobSchedule
    summary: ''
    fullName: azure-batch.JobSchedule
    type: Class
    children:
      - 'azure-batch.JobSchedule.#ctor'
      - 'azure-batch.JobSchedule#client'
      - 'azure-batch.JobSchedule#_exists'
      - 'azure-batch.JobSchedule#_deleteMethod'
      - 'azure-batch.JobSchedule#_get'
      - 'azure-batch.JobSchedule#_patch'
      - 'azure-batch.JobSchedule#_update'
      - 'azure-batch.JobSchedule#_disable'
      - 'azure-batch.JobSchedule#_enable'
      - 'azure-batch.JobSchedule#_terminate'
      - 'azure-batch.JobSchedule#_add'
      - 'azure-batch.JobSchedule#_list'
      - 'azure-batch.JobSchedule#_listNext'
      - 'azure-batch.JobSchedule#existsWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#exists'
      - 'azure-batch.JobSchedule#deleteMethodWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#deleteMethod'
      - 'azure-batch.JobSchedule#getWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#get'
      - 'azure-batch.JobSchedule#patchWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#patch'
      - 'azure-batch.JobSchedule#updateWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#update'
      - 'azure-batch.JobSchedule#disableWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#disable'
      - 'azure-batch.JobSchedule#enableWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#enable'
      - 'azure-batch.JobSchedule#terminateWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#terminate'
      - 'azure-batch.JobSchedule#addWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#add'
      - 'azure-batch.JobSchedule#listWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#list'
      - 'azure-batch.JobSchedule#listNextWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#listNext'
  - id: 'azure-batch.JobSchedule.#ctor'
    uid: 'azure-batch.JobSchedule.#ctor'
    parent: azure-batch.JobSchedule
    name: JobSchedule()
    fullName: azure-batch.JobSchedule.JobSchedule()
    summary: ''
    type: Constructor
    syntax:
      content: new JobSchedule()
  - uid: 'azure-batch.JobSchedule#client'
    id: 'azure-batch.JobSchedule#client'
    parent: azure-batch.JobSchedule
    name: client
    summary: ''
    fullName: azure-batch.JobSchedule.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-batch.JobSchedule#_exists'
    id: 'azure-batch.JobSchedule#_exists'
    parent: azure-batch.JobSchedule
    name: _exists
    summary: ''
    fullName: azure-batch.JobSchedule._exists
    type: Field
    syntax:
      content: _exists
  - uid: 'azure-batch.JobSchedule#_deleteMethod'
    id: 'azure-batch.JobSchedule#_deleteMethod'
    parent: azure-batch.JobSchedule
    name: _deleteMethod
    summary: ''
    fullName: azure-batch.JobSchedule._deleteMethod
    type: Field
    syntax:
      content: _deleteMethod
  - uid: 'azure-batch.JobSchedule#_get'
    id: 'azure-batch.JobSchedule#_get'
    parent: azure-batch.JobSchedule
    name: _get
    summary: ''
    fullName: azure-batch.JobSchedule._get
    type: Field
    syntax:
      content: _get
  - uid: 'azure-batch.JobSchedule#_patch'
    id: 'azure-batch.JobSchedule#_patch'
    parent: azure-batch.JobSchedule
    name: _patch
    summary: ''
    fullName: azure-batch.JobSchedule._patch
    type: Field
    syntax:
      content: _patch
  - uid: 'azure-batch.JobSchedule#_update'
    id: 'azure-batch.JobSchedule#_update'
    parent: azure-batch.JobSchedule
    name: _update
    summary: ''
    fullName: azure-batch.JobSchedule._update
    type: Field
    syntax:
      content: _update
  - uid: 'azure-batch.JobSchedule#_disable'
    id: 'azure-batch.JobSchedule#_disable'
    parent: azure-batch.JobSchedule
    name: _disable
    summary: ''
    fullName: azure-batch.JobSchedule._disable
    type: Field
    syntax:
      content: _disable
  - uid: 'azure-batch.JobSchedule#_enable'
    id: 'azure-batch.JobSchedule#_enable'
    parent: azure-batch.JobSchedule
    name: _enable
    summary: ''
    fullName: azure-batch.JobSchedule._enable
    type: Field
    syntax:
      content: _enable
  - uid: 'azure-batch.JobSchedule#_terminate'
    id: 'azure-batch.JobSchedule#_terminate'
    parent: azure-batch.JobSchedule
    name: _terminate
    summary: ''
    fullName: azure-batch.JobSchedule._terminate
    type: Field
    syntax:
      content: _terminate
  - uid: 'azure-batch.JobSchedule#_add'
    id: 'azure-batch.JobSchedule#_add'
    parent: azure-batch.JobSchedule
    name: _add
    summary: ''
    fullName: azure-batch.JobSchedule._add
    type: Field
    syntax:
      content: _add
  - uid: 'azure-batch.JobSchedule#_list'
    id: 'azure-batch.JobSchedule#_list'
    parent: azure-batch.JobSchedule
    name: _list
    summary: ''
    fullName: azure-batch.JobSchedule._list
    type: Field
    syntax:
      content: _list
  - uid: 'azure-batch.JobSchedule#_listNext'
    id: 'azure-batch.JobSchedule#_listNext'
    parent: azure-batch.JobSchedule
    name: _listNext
    summary: ''
    fullName: azure-batch.JobSchedule._listNext
    type: Field
    syntax:
      content: _listNext
  - uid: 'azure-batch.JobSchedule#existsWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#existsWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'existsWithHttpOperationResponse(jobScheduleId, options)'
    summary: Checks the specified job schedule exists.
    fullName: >-
      azure-batch.JobSchedule.existsWithHttpOperationResponse(jobScheduleId,
      options)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: |-
            The ID of the job schedule which you want to
            check.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleExistsOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobScheduleExistsOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleExistsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleExistsOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleExistsOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.jobScheduleExistsOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleExistsOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleExistsOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobScheduleExistsOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function existsWithHttpOperationResponse(jobScheduleId, options)'
  - uid: 'azure-batch.JobSchedule#exists'
    id: 'azure-batch.JobSchedule#exists'
    parent: azure-batch.JobSchedule
    name: 'exists(jobScheduleId, options, optionalCallback)'
    summary: Checks the specified job schedule exists.
    fullName: 'azure-batch.JobSchedule.exists(jobScheduleId, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: |-
            The ID of the job schedule which you want to
            check.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleExistsOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobScheduleExistsOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleExistsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleExistsOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleExistsOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.jobScheduleExistsOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleExistsOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleExistsOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobScheduleExistsOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function exists(jobScheduleId, options, optionalCallback)'
  - uid: 'azure-batch.JobSchedule#deleteMethodWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#deleteMethodWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'deleteMethodWithHttpOperationResponse(jobScheduleId, options)'
    summary: >-
      Deletes a job schedule from the specified account.


      When you delete a job schedule, this also deletes all jobs and tasks under

      that schedule. When tasks are deleted, all the files in their working

      directories on the compute nodes are also deleted (the retention period is

      ignored). The job schedule statistics are no longer accessible once the
      job

      schedule is deleted, though they are still counted towards account
      lifetime

      statistics.
    fullName: >-
      azure-batch.JobSchedule.deleteMethodWithHttpOperationResponse(jobScheduleId,
      options)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifMatch
          type:
            - string
          description: >-
            An ETag

            value associated with the version of the resource known to the
            client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag

            value associated with the version of the resource known to the
            client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifModifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has been modified since the specified time.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function deleteMethodWithHttpOperationResponse(jobScheduleId, options)'
  - uid: 'azure-batch.JobSchedule#deleteMethod'
    id: 'azure-batch.JobSchedule#deleteMethod'
    parent: azure-batch.JobSchedule
    name: 'deleteMethod(jobScheduleId, options, optionalCallback)'
    summary: >-
      Deletes a job schedule from the specified account.


      When you delete a job schedule, this also deletes all jobs and tasks under

      that schedule. When tasks are deleted, all the files in their working

      directories on the compute nodes are also deleted (the retention period is

      ignored). The job schedule statistics are no longer accessible once the
      job

      schedule is deleted, though they are still counted towards account
      lifetime

      statistics.
    fullName: >-
      azure-batch.JobSchedule.deleteMethod(jobScheduleId, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifMatch
          type:
            - string
          description: >-
            An ETag

            value associated with the version of the resource known to the
            client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag

            value associated with the version of the resource known to the
            client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifModifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has been modified since the specified time.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function deleteMethod(jobScheduleId, options, optionalCallback)'
  - uid: 'azure-batch.JobSchedule#getWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#getWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'getWithHttpOperationResponse(jobScheduleId, options)'
    summary: Gets information about the specified job schedule.
    fullName: >-
      azure-batch.JobSchedule.getWithHttpOperationResponse(jobScheduleId,
      options)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleGetOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobScheduleGetOptions.select
          type:
            - string
          description: |-
            An OData $select
            clause.
          optional: true
        - id: options.jobScheduleGetOptions.expand
          type:
            - string
          description: |-
            An OData $expand
            clause.
          optional: true
        - id: options.jobScheduleGetOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleGetOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleGetOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobScheduleGetOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleGetOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleGetOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobScheduleGetOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getWithHttpOperationResponse(jobScheduleId, options)'
  - uid: 'azure-batch.JobSchedule#get'
    id: 'azure-batch.JobSchedule#get'
    parent: azure-batch.JobSchedule
    name: 'get(jobScheduleId, options, optionalCallback)'
    summary: Gets information about the specified job schedule.
    fullName: 'azure-batch.JobSchedule.get(jobScheduleId, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleGetOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobScheduleGetOptions.select
          type:
            - string
          description: |-
            An OData $select
            clause.
          optional: true
        - id: options.jobScheduleGetOptions.expand
          type:
            - string
          description: |-
            An OData $expand
            clause.
          optional: true
        - id: options.jobScheduleGetOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleGetOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleGetOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobScheduleGetOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleGetOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleGetOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobScheduleGetOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function get(jobScheduleId, options, optionalCallback)'
  - uid: 'azure-batch.JobSchedule#patchWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#patchWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: >-
      patchWithHttpOperationResponse(jobScheduleId, jobSchedulePatchParameter,
      options)
    summary: >-
      Updates the properties of the specified job schedule.


      This replaces only the job schedule properties specified in the request.
      For

      example, if the schedule property is not specified with this request, then

      the Batch service will keep the existing schedule. Changes to a job
      schedule

      only impact jobs created by the schedule after the update has taken place;

      currently running jobs are unaffected.
    fullName: >-
      azure-batch.JobSchedule.patchWithHttpOperationResponse(jobScheduleId,
      jobSchedulePatchParameter, options)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobSchedulePatchParameter
          type:
            - object
          description: The parameters for the request.
        - id: jobSchedulePatchParameter.schedule
          type:
            - object
          description: >-
            The schedule according

            to which jobs will be created. If you do not specify this element,
            the

            existing schedule is left unchanged.
          optional: true
        - id: jobSchedulePatchParameter.schedule.doNotRunUntil
          type:
            - date
          description: >-
            The

            earliest time at which any job may be created under this job
            schedule. If

            you do not specify a doNotRunUntil time, the schedule becomes ready
            to

            create jobs immediately.
          optional: true
        - id: jobSchedulePatchParameter.schedule.doNotRunAfter
          type:
            - date
          description: >-
            A time

            after which no job will be created under this job schedule. The
            schedule

            will move to the completed state as soon as this deadline is past
            and there

            is no active job under this job schedule. If you do not specify a

            doNotRunAfter time, and you are creating a recurring job schedule,
            the job

            schedule will remain active until you explicitly terminate it.
          optional: true
        - id: jobSchedulePatchParameter.schedule.startWindow
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval, starting from the time at which the schedule
            indicates a

            job should be created, within which a job must be created. If a job
            is not

            created within the startWindow interval, then the 'opportunity' is
            lost; no

            job will be created until the next recurrence of the schedule. If
            the

            schedule is recurring, and the startWindow is longer than the
            recurrence

            interval, then this is equivalent to an infinite startWindow,
            because the

            job that is 'due' in one recurrenceInterval is not carried forward
            into the

            next recurrence interval. The default is infinite. The minimum value
            is 1

            minute. If you specify a lower value, the Batch service rejects the
            schedule

            with an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: jobSchedulePatchParameter.schedule.recurrenceInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval

            between the start times of two successive jobs under the job
            schedule. A job

            schedule can have at most one active job under it at any given time.
            Because

            a job schedule can have at most one active job under it at any given
            time,

            if it is time to create a new job under a job schedule, but the
            previous job

            is still running, the Batch service will not create the new job
            until the

            previous job finishes. If the previous job does not finish within
            the

            startWindow period of the new recurrenceInterval, then no new job
            will be

            scheduled for that interval. For recurring jobs, you should normally
            specify

            a jobManagerTask in the jobSpecification. If you do not use
            jobManagerTask,

            you will need an external process to monitor when jobs are created,
            add

            tasks to the jobs and terminate the jobs ready for the next
            recurrence. The

            default is that the schedule does not recur: one job is created,
            within the

            startWindow after the doNotRunUntil time, and the schedule is
            complete as

            soon as that job finishes. The minimum value is 1 minute. If you
            specify a

            lower value, the Batch service rejects the schedule with an error;
            if you

            are calling the REST API directly, the HTTP status code is 400 (Bad

            Request).
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification
          type:
            - object
          description: >-
            The details of

            the jobs to be created on this schedule. Updates affect only jobs
            that are

            started after the update has taken place. Any currently active job
            continues

            with the older specification.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.priority
          type:
            - number
          description: >-
            The

            priority of jobs created under this schedule. Priority values can
            range from

            -1000 to 1000, with -1000 being the lowest priority and 1000 being
            the

            highest priority. The default value is 0. This priority is used as
            the

            default for all jobs under the job schedule. You can update a job's
            priority

            after it has been created using by using the update job API.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.displayName
          type:
            - string
          description: >-
            The

            display name for jobs created under this schedule. The name need not
            be

            unique and can contain any Unicode characters up to a maximum length
            of

            1024.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.usesTaskDependencies
          type:
            - boolean
          description: |-
            The flag
            that determines if this job will use tasks with dependencies.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.onAllTasksComplete
          type:
            - string
          description: >-
            The action

            the Batch service should take when all tasks in a job created under
            this

            schedule are in the completed state. Note that if a job contains no
            tasks,

            then all tasks are considered complete. This option is therefore
            most

            commonly used with a Job Manager task; if you want to use automatic
            job

            termination without a Job Manager, you should initially set

            onAllTasksComplete to noAction and update the job properties to set

            onAllTasksComplete to terminateJob once you have finished adding
            tasks. The

            default is noAction. Possible values include: 'noAction',
            'terminateJob'
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.onTaskFailure
          type:
            - string
          description: >-
            The action the Batch service should take when any task fails in a
            job

            created under this schedule. A task is considered to have failed if
            it

            completes with a non-zero exit code and has exhausted its retry
            count, or if

            it had a scheduling error. The default is noAction. Possible values
            include:

            'noAction', 'performExitOptionsJobAction'
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.constraints
          type:
            - object
          description: |-
            The
            execution constraints for jobs created under this schedule.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the job may run, measured from the
            time the

            job is created. If the job does not complete within the time limit,
            the

            Batch service terminates it and any tasks that are still running. In
            this

            case, the termination reason will be MaxWallClockTimeExpiry. If this

            property is not specified, there is no time limit on how long the
            job may

            run.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times each task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try each

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries a task up to 4 times (one initial try
            and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            tasks. If the maximum retry count is -1, the Batch service retries
            tasks

            without limit. The default value is 0 (no retries).
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobManagerTask
          type:
            - object
          description: >-
            The details of a Job Manager task to be launched when a job is
            started under

            this schedule. If the job does not specify a Job Manager task, the
            user must

            explicitly add tasks to the job using the Task API. If the job does
            specify

            a Job Manager task, the Batch service creates the Job Manager task
            when the

            job is created, and will try to schedule the Job Manager task before

            scheduling other tasks in the job.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobManagerTask.id
          type:
            - string
          description: >-
            A string that uniquely identifies the Job Manager taskwithin the
            job. The id

            can contain any combination of alphanumeric characters including
            hyphens and

            underscores and cannot contain more than 64 characters.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.displayName
          type:
            - string
          description: >-
            The

            display name of the Job Manager task. It need not be unique and can
            contain

            any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.commandLine
          type:
            - string
          description: >-
            The

            command line of the Job Manager task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.resourceFiles
          type:
            - array
          description: >-
            A

            list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Manager task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Manager task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: >-
            Whether completion of the Job Manager task signifies completion of
            the

            entire job. If true, when the Job Manager task completes, the Batch
            service

            marks the job as complete. If any tasks are still running at this
            time

            (other than Job Release), those tasks are terminated. If false, the

            completion of the Job Manager task does not affect the job status.
            In this

            case, you should either use the onAllTasksComplete attribute to
            terminate

            the job, or have a client or user terminate the job explicitly. An
            example

            of this is if the Job Manager creates a set of tasks but then takes
            no

            further role in their execution. The default value is true. If you
            are using

            the onAllTasksComplete and onTaskFailure attributes to control job
            lifetime,

            and using the Job Manager task only to create the tasks for the job
            (not to

            monitor progress), then it is important to set killJobOnCompletion
            to false.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.userIdentity
          type:
            - object
          description: >-
            The

            user identity under which the Job Manager task runs. If omitted, the
            task

            runs as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.runExclusive
          type:
            - boolean
          description: >-
            Whether the Job Manager task requires exclusive use of the compute
            node

            where it runs. If true, no other tasks will run on the same compute
            node for

            as long as the Job Manager is running. If false, other tasks can run

            simultaneously with the Job Manager on a compute node. The Job
            Manager task

            counts normally against the node's concurrent task limit, so this is
            only

            relevant if the node allows multiple concurrent tasks. The default
            value is

            true.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: >-
            A list of application packages that the Batch service will deploy to
            the

            compute node before running the command line. Application packages
            are

            downloaded and deployed to a shared directory, not the task
            directory.

            Therefore, if a referenced package is already on the compute node,
            and is up

            to date, then it is not re-downloaded; the existing copy on the
            compute node

            is used. If a referenced application package cannot be installed,
            for

            example because the package has been deleted or because download
            failed, the

            task fails with a scheduling error. This property is currently not
            supported

            on jobs running on pools created using the
            virtualMachineConfiguration

            (IaaS) property. If a task specifying applicationPackageReferences
            runs on

            such a pool, it fails with a scheduling error with code

            TaskSchedulingConstraintFailed.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: >-
            The settings for an authentication token that the task can use to
            perform

            Batch service operations. If this property is set, the Batch service

            provides the task with an authentication token which can be used to

            authenticate Batch service operations without requiring an account
            access

            key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN
            environment

            variable. The operations that the task can carry out using the token
            depend

            on the settings. For example, a task can request job permissions in
            order to

            add other tasks to the job, or check the status of the job or of
            other tasks

            under the job.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: >-
            The Batch resources to which the token grants access. The
            authentication

            token grants access to a limited set of Batch service operations.
            Currently

            the only supported value for the access property is 'job', which
            grants

            access to all operations related to the job which contains the task.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobPreparationTask
          type:
            - object
          description: >-
            The Job

            Preparation task for jobs created under this schedule. If a job has
            a Job

            Preparation task, the Batch service will run the Job Preparation
            task on a

            compute node before starting any tasks of that job on that compute
            node.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobPreparationTask.id
          type:
            - string
          description: >-
            A string

            that uniquely identifies the Job Preparation task within the job.
            The ID can

            contain any combination of alphanumeric characters including hyphens
            and

            underscores and cannot contain more than 64 characters. If you do
            not

            specify this property, the Batch service assigns a default value of

            'jobpreparation'. No other task in the job can have the same id as
            the Job

            Preparation task. If you try to submit a task with the same id, the
            Batch

            service rejects the request with error code
            TaskIdSameAsJobPreparationTask;

            if you are calling the REST API directly, the HTTP status code is
            409

            (Conflict).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.commandLine
          type:
            - string
          description: >-
            The command line of the Job Preparation task. The command line does
            not run

            under a shell, and therefore cannot take advantage of shell features
            such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.environmentSettings
          type:
            - array
          description: >-
            A list of environment variable settings for the Job Preparation
            task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Preparation task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the task may run, measured from the
            time the

            task starts. If the task does not complete within the time limit,
            the Batch

            service terminates it. If this is not specified, there is no time
            limit on

            how long the task may run.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time to retain the task directory on the compute node
            where it

            ran, from the time it completes execution. After this time, the
            Batch

            service may delete the task directory and all its contents. The
            default is

            infinite, i.e. the task directory will be retained until the compute
            node is

            removed or reimaged.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the Job Preparation task
            to

            complete successfully before scheduling any other tasks of the job
            on the

            compute node. If true and the Job Preparation task fails on a
            compute node,

            the Batch service retries the Job Preparation task up to its maximum
            retry

            count (as specified in the constraints element). If the task has
            still not

            completed successfully after all retries, then the Batch service
            will not

            schedule tasks of the job to the compute node. The compute node
            remains

            active and eligible to run tasks of other jobs. If false, the Batch
            service

            will not wait for the Job Preparation task to complete. In this
            case, other

            tasks of the job can start executing on the compute node while the
            Job

            Preparation task is still running; and even if the Job Preparation
            task

            fails, new tasks will continue to be scheduled on the node. The
            default

            value is true.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the Job Preparation task runs. If
            omitted, the

            task runs as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should rerun the Job Preparation task
            after a

            compute node reboots. The Job Preparation task is always rerun if a
            compute

            node is reimaged, or if the Job Preparation task did not complete
            (e.g.

            because the reboot occurred while the task was running). Therefore,
            you

            should always write a Job Preparation task to be idempotent and to
            behave

            correctly if run multiple times. The default value is true.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobReleaseTask
          type:
            - object
          description: >-
            The Job Release task for jobs created under this schedule. The
            primary

            purpose of the Job Release task is to undo changes to compute nodes
            made by

            the Job Preparation task. Example activities include deleting local
            files,

            or shutting down services that were started as part of job
            preparation. A

            Job Release task cannot be specified without also specifying a Job

            Preparation task for the job. The Batch service runs the Job Release
            task on

            the compute nodes that have run the Job Preparation task.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobReleaseTask.id
          type:
            - string
          description: >-
            A string that

            uniquely identifies the Job Release task within the job. The ID can
            contain

            any combination of alphanumeric characters including hyphens and
            underscores

            and cannot contain more than 64 characters. If you do not specify
            this

            property, the Batch service assigns a default value of 'jobrelease'.
            No

            other task in the job can have the same id as the Job Release task.
            If you

            try to submit a task with the same id, the Batch service rejects the
            request

            with error code TaskIdSameAsJobReleaseTask; if you are calling the
            REST API

            directly, the HTTP status code is 409 (Conflict).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.commandLine
          type:
            - string
          description: >-
            The

            command line of the Job Release task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.resourceFiles
          type:
            - array
          description: >-
            A

            list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Release task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the Job Release task may run on a
            given

            compute node, measured from the time the task starts. If the task
            does not

            complete within the time limit, the Batch service terminates it. The
            default

            value is 15 minutes. You may not specify a timeout longer than 15
            minutes.

            If you do, the Batch service rejects it with an error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time to retain the task directory for the Job Release
            task on

            the compute node. After this time, the Batch service may delete the
            task

            directory and all its contents. The default is infinite, i.e. the
            task

            directory will be retained until the compute node is removed or
            reimaged.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.userIdentity
          type:
            - object
          description: >-
            The

            user identity under which the Job Release task runs. If omitted, the
            task

            runs as a non-administrative user unique to the task.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.commonEnvironmentSettings
          type:
            - array
          description: >-
            A

            list of common environment variable settings. These environment
            variables

            are set for all tasks in jobs created under this schedule (including
            the Job

            Manager, Job Preparation and Job Release tasks). Individual tasks
            can

            override an environment setting specified here by specifying the
            same

            setting name with a different value.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.poolInfo
          type:
            - object
          description: |-
            The pool
            on which the Batch service runs the tasks of jobs created under this
            schedule.
        - id: jobSchedulePatchParameter.jobSpecification.poolInfo.poolId
          type:
            - string
          description: >-
            The ID of an existing pool. All the tasks of the job will run on the

            specified pool. You must ensure that the pool referenced by this
            property

            exists. If the pool does not exist at the time the Batch service
            tries to

            schedule a job, no tasks for the job will run until you create a
            pool with

            that id. Note that the Batch service will not reject the job
            request; it

            will simply not run tasks until the pool exists. You must specify
            either the

            pool ID or the auto pool specification, but not both.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification
          type:
            - object
          description: >-
            Characteristics for a temporary 'auto pool'. The Batch service will
            create

            this auto pool when the job is submitted. If auto pool creation
            fails, the

            Batch service moves the job to a completed state, and the pool
            creation

            error is set in the job's scheduling error property. The Batch
            service

            manages the lifetime (both creation and, unless keepAlive is
            specified,

            deletion) of the auto pool. Any user actions that affect the
            lifetime of the

            auto pool while the job is active will result in unexpected
            behavior. You

            must specify either the pool ID or the auto pool specification, but
            not

            both.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: >-
            A prefix to be added to the unique identifier when a pool is
            automatically

            created. The Batch service assigns each auto pool a unique
            identifier on

            creation. To distinguish between pools created for different
            purposes, you

            can specify this element to add a prefix to the id that is assigned.
            The

            prefix can be up to 20 characters long.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: >-
            The minimum lifetime of created auto pools, and how multiple jobs on
            a

            schedule are assigned to pools. When the pool lifetime scope is
            jobSchedule

            level, the Batch service keeps track of the last autopool created
            for the

            job schedule, and deletes that pool when the job schedule completes.
            Batch

            will also delete this pool if the user updates the auto pool
            specification

            in a way that changes this lifetime. Possible values include:
            'jobSchedule',

            'job', 'unmapped'
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: >-
            Whether to keep an auto pool alive after its lifetime expires. If
            false, the

            Batch service deletes the pool once its lifetime (as determined by
            the

            poolLifetimeOption setting) expires; that is, when the job or job
            schedule

            completes. If true, the Batch service does not delete the pool

            automatically. It is up to the user to delete auto pools created
            with this

            option.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: The pool specification for the auto pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: >-
            The display name for the pool. The display name need not be unique
            and can

            contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: >-
            The size of the virtual machines in the pool. All virtual machines
            in a pool

            are the same size. For information about available sizes of virtual
            machines

            for Cloud Services pools (pools created with
            cloudServiceConfiguration), see

            Sizes for Cloud Services

            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall. For

            information about available VM sizes for pools using images from the
            Virtual

            Machines Marketplace (pools created with
            virtualMachineConfiguration) see

            Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The cloud service configuration for the pool. This property must be

            specified if the pool needs to be created with Azure PaaS VMs. This
            property

            and virtualMachineConfiguration are mutually exclusive and one of
            the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request). This property cannot be specified if the
            Batch

            account was created with its poolAllocationMode property set to

            'UserSubscription'.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the

            pool. Possible values are: 2 - OS Family 2, equivalent to Windows
            Server

            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 -
            OS

            Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5,
            equivalent

            to Windows Server 2016. For more information, see Azure Guest OS
            Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the

            pool. The default value is * which specifies the latest operating
            system

            version for the specified OS family.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS Version currently installed on the virtual
            machines in

            the pool. This may differ from targetOSVersion if the pool state is

            Upgrading. In this case some virtual machines may be on the
            targetOSVersion

            and some may be on the currentOSVersion during the upgrade process.
            Once all

            virtual machines have upgraded, currentOSVersion is updated to be
            the same

            as targetOSVersion.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The virtual machine configuration for the pool. This property must
            be

            specified if the pool needs to be created with Azure IaaS VMs. This
            property

            and cloudServiceConfiguration are mutually exclusive and one of the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference to the Azure Virtual Machines Marketplace image to use.
            This

            property and osDisk are mutually exclusive and one of the properties
            must be

            specified.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: >-
            The SKU of the Azure Virtual Machines Marketplace image. For
            example,

            14.04.0-LTS or 2012-R2-Datacenter.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: >-
            A reference to the OS disk image to use. This property can be
            specified only

            if the Batch account was created with its poolAllocationMode
            property set to

            'UserSubscription'. This property and imageReference are mutually
            exclusive

            and one of the properties must be specified.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.imageUris
          type:
            - array
          description: >-
            The collection of Virtual Hard Disk (VHD) URIs. All the VHDs must be

            identical and must reside in an Azure Storage account within the
            same

            subscription and same region as the Batch account. For best
            performance, it

            is recommended that each VHD resides in a separate Azure Storage
            account.

            Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute
            nodes.

            You must supply enough VHD URIs to satisfy the 'targetDedicated'
            property of

            the pool. If you do not supply enough VHD URIs, the pool will
            partially

            allocate compute nodes, and a resize error will occur.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type of caching to enable for the OS disk. none - The caching
            mode for

            the disk is not enabled. readOnly - The caching mode for the disk is
            read

            only. readWrite - The caching mode for the disk is read and write.
            The

            default value for caching is none. For information about the caching
            options

            see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of the Batch node agent to be provisioned on compute nodes
            in the

            pool. The Batch node agent is a program that runs on each node in
            the pool,

            and provides the command-and-control interface between the node and
            the

            Batch service. There are different implementations of the node
            agent, known

            as SKUs, for different operating systems. You must specify a node
            agent SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: >-
            The maximum number of tasks that can run concurrently on a single
            compute

            node in the pool. The default value is 1. The maximum value of this
            setting

            depends on the size of the compute nodes in the pool (the vmSize
            setting).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed among compute nodes in the pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: >-
            How tasks should be distributed across compute nodes. Possible
            values

            include: 'spread', 'pack', 'unmapped'
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for allocation of compute nodes to the pool. This
            timeout

            applies only to manual scaling; it has no effect when
            enableAutoScale is set

            to true. The default value is 15 minutes. The minimum value is 5
            minutes. If

            you specify a value less than 5 minutes, the Batch service rejects
            the

            request with an error; if you are calling the REST API directly, the
            HTTP

            status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicated
          type:
            - number
          description: >-
            The desired number of compute nodes in the pool. This property must
            not be

            specified if enableAutoScale is set to true. It is required if

            enableAutoScale is set to false.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should automatically adjust over time. If
            false, the

            targetDedicated element is required. If true, the autoScaleFormula
            element

            is required. The pool automatically resizes according to the
            formula. The

            default value is false.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool.
            This

            property must not be specified if enableAutoScale is set to false.
            It is

            required if enableAutoScale is set to true. The formula is checked
            for

            validity before the pool is created. If the formula is not valid,
            the Batch

            service rejects the request with detailed error information.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval at which to automatically adjust the pool size
            according

            to the autoscale formula. The default value is 15 minutes. The
            minimum and

            maximum value are 5 minutes and 168 hours respectively. If you
            specify a

            value less than 5 minutes or greater than 168 hours, the Batch
            service

            rejects the request with an invalid property value error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool permits direct communication between nodes.
            Enabling

            inter-node communication limits the maximum size of the pool due to

            deployment restrictions on the nodes of the pool. This may result in
            the

            pool not reaching its desired size. The default value is false.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The ARM resource identifier of the virtual network subnet which the
            compute

            nodes of the pool will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. This
            property

            can only be specified for pools created with a
            cloudServiceConfiguration.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: >-
            A task to run on each compute node as it joins the pool. The task
            runs when

            the node is added to the pool or when the node is restarted.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: >-
            The command line of the start task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the start task runs. If omitted, the
            task runs

            as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity under which the task is run. The
            userName and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the task is run. The userName and autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user pool - specifies that the task runs as
            the

            common auto user account which is created on every node in a pool.
            task -

            specifies that the service should create a new user for the task.
            The

            default value is task. Possible values include: 'task', 'pool'
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation level of the auto user. nonAdmin - The auto user is a
            standard

            user without elevated access. admin - The auto user is a user with
            elevated

            access and operates with full Administrator permissions. The default
            value

            is nonAdmin. Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the start task to complete

            successfully (that is, to exit with exit code 0) before scheduling
            any tasks

            on the compute node. If true and the start task fails on a compute
            node, the

            Batch service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and scheduling error detail. If false, the Batch service will
            not wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool. For

            Windows compute nodes, the Batch service installs the certificates
            to the

            specified certificate store and location. For Linux compute nodes,
            the

            certificates are stored in a directory inside the task working
            directory and

            an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            task to

            query for this location. For certificates with visibility of
            'remoteUser', a

            'certs' directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: >-
            The list of application packages to be installed on each compute
            node in the

            pool. This property is currently not supported on auto pools created
            with

            the virtualMachineConfiguration (IaaS) property.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: The list of user accounts to be created on each node in the pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: >-
            A list of name-value pairs associated with the pool as metadata. The
            Batch

            service does not assign any meaning to metadata; it is solely for
            the use of

            user code.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.metadata
          type:
            - array
          description: >-
            A list

            of name-value pairs associated with each job created under this
            schedule as

            metadata. The Batch service does not assign any meaning to metadata;
            it is

            solely for the use of user code.
          optional: true
        - id: jobSchedulePatchParameter.metadata
          type:
            - array
          description: >-
            A list of name-value

            pairs associated with the job schedule as metadata. If you do not
            specify

            this element, existing metadata is left unchanged.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobSchedulePatchOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobSchedulePatchOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobSchedulePatchOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobSchedulePatchOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobSchedulePatchOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobSchedulePatchOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobSchedulePatchOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobSchedulePatchOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobSchedulePatchOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function patchWithHttpOperationResponse(jobScheduleId,
        jobSchedulePatchParameter, options)
  - uid: 'azure-batch.JobSchedule#patch'
    id: 'azure-batch.JobSchedule#patch'
    parent: azure-batch.JobSchedule
    name: 'patch(jobScheduleId, jobSchedulePatchParameter, options, optionalCallback)'
    summary: >-
      Updates the properties of the specified job schedule.


      This replaces only the job schedule properties specified in the request.
      For

      example, if the schedule property is not specified with this request, then

      the Batch service will keep the existing schedule. Changes to a job
      schedule

      only impact jobs created by the schedule after the update has taken place;

      currently running jobs are unaffected.
    fullName: >-
      azure-batch.JobSchedule.patch(jobScheduleId, jobSchedulePatchParameter,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobSchedulePatchParameter
          type:
            - object
          description: The parameters for the request.
        - id: jobSchedulePatchParameter.schedule
          type:
            - object
          description: >-
            The schedule according

            to which jobs will be created. If you do not specify this element,
            the

            existing schedule is left unchanged.
          optional: true
        - id: jobSchedulePatchParameter.schedule.doNotRunUntil
          type:
            - date
          description: >-
            The

            earliest time at which any job may be created under this job
            schedule. If

            you do not specify a doNotRunUntil time, the schedule becomes ready
            to

            create jobs immediately.
          optional: true
        - id: jobSchedulePatchParameter.schedule.doNotRunAfter
          type:
            - date
          description: >-
            A time

            after which no job will be created under this job schedule. The
            schedule

            will move to the completed state as soon as this deadline is past
            and there

            is no active job under this job schedule. If you do not specify a

            doNotRunAfter time, and you are creating a recurring job schedule,
            the job

            schedule will remain active until you explicitly terminate it.
          optional: true
        - id: jobSchedulePatchParameter.schedule.startWindow
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval, starting from the time at which the schedule
            indicates a

            job should be created, within which a job must be created. If a job
            is not

            created within the startWindow interval, then the 'opportunity' is
            lost; no

            job will be created until the next recurrence of the schedule. If
            the

            schedule is recurring, and the startWindow is longer than the
            recurrence

            interval, then this is equivalent to an infinite startWindow,
            because the

            job that is 'due' in one recurrenceInterval is not carried forward
            into the

            next recurrence interval. The default is infinite. The minimum value
            is 1

            minute. If you specify a lower value, the Batch service rejects the
            schedule

            with an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: jobSchedulePatchParameter.schedule.recurrenceInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval

            between the start times of two successive jobs under the job
            schedule. A job

            schedule can have at most one active job under it at any given time.
            Because

            a job schedule can have at most one active job under it at any given
            time,

            if it is time to create a new job under a job schedule, but the
            previous job

            is still running, the Batch service will not create the new job
            until the

            previous job finishes. If the previous job does not finish within
            the

            startWindow period of the new recurrenceInterval, then no new job
            will be

            scheduled for that interval. For recurring jobs, you should normally
            specify

            a jobManagerTask in the jobSpecification. If you do not use
            jobManagerTask,

            you will need an external process to monitor when jobs are created,
            add

            tasks to the jobs and terminate the jobs ready for the next
            recurrence. The

            default is that the schedule does not recur: one job is created,
            within the

            startWindow after the doNotRunUntil time, and the schedule is
            complete as

            soon as that job finishes. The minimum value is 1 minute. If you
            specify a

            lower value, the Batch service rejects the schedule with an error;
            if you

            are calling the REST API directly, the HTTP status code is 400 (Bad

            Request).
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification
          type:
            - object
          description: >-
            The details of

            the jobs to be created on this schedule. Updates affect only jobs
            that are

            started after the update has taken place. Any currently active job
            continues

            with the older specification.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.priority
          type:
            - number
          description: >-
            The

            priority of jobs created under this schedule. Priority values can
            range from

            -1000 to 1000, with -1000 being the lowest priority and 1000 being
            the

            highest priority. The default value is 0. This priority is used as
            the

            default for all jobs under the job schedule. You can update a job's
            priority

            after it has been created using by using the update job API.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.displayName
          type:
            - string
          description: >-
            The

            display name for jobs created under this schedule. The name need not
            be

            unique and can contain any Unicode characters up to a maximum length
            of

            1024.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.usesTaskDependencies
          type:
            - boolean
          description: |-
            The flag
            that determines if this job will use tasks with dependencies.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.onAllTasksComplete
          type:
            - string
          description: >-
            The action

            the Batch service should take when all tasks in a job created under
            this

            schedule are in the completed state. Note that if a job contains no
            tasks,

            then all tasks are considered complete. This option is therefore
            most

            commonly used with a Job Manager task; if you want to use automatic
            job

            termination without a Job Manager, you should initially set

            onAllTasksComplete to noAction and update the job properties to set

            onAllTasksComplete to terminateJob once you have finished adding
            tasks. The

            default is noAction. Possible values include: 'noAction',
            'terminateJob'
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.onTaskFailure
          type:
            - string
          description: >-
            The action the Batch service should take when any task fails in a
            job

            created under this schedule. A task is considered to have failed if
            it

            completes with a non-zero exit code and has exhausted its retry
            count, or if

            it had a scheduling error. The default is noAction. Possible values
            include:

            'noAction', 'performExitOptionsJobAction'
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.constraints
          type:
            - object
          description: |-
            The
            execution constraints for jobs created under this schedule.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the job may run, measured from the
            time the

            job is created. If the job does not complete within the time limit,
            the

            Batch service terminates it and any tasks that are still running. In
            this

            case, the termination reason will be MaxWallClockTimeExpiry. If this

            property is not specified, there is no time limit on how long the
            job may

            run.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times each task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try each

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries a task up to 4 times (one initial try
            and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            tasks. If the maximum retry count is -1, the Batch service retries
            tasks

            without limit. The default value is 0 (no retries).
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobManagerTask
          type:
            - object
          description: >-
            The details of a Job Manager task to be launched when a job is
            started under

            this schedule. If the job does not specify a Job Manager task, the
            user must

            explicitly add tasks to the job using the Task API. If the job does
            specify

            a Job Manager task, the Batch service creates the Job Manager task
            when the

            job is created, and will try to schedule the Job Manager task before

            scheduling other tasks in the job.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobManagerTask.id
          type:
            - string
          description: >-
            A string that uniquely identifies the Job Manager taskwithin the
            job. The id

            can contain any combination of alphanumeric characters including
            hyphens and

            underscores and cannot contain more than 64 characters.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.displayName
          type:
            - string
          description: >-
            The

            display name of the Job Manager task. It need not be unique and can
            contain

            any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.commandLine
          type:
            - string
          description: >-
            The

            command line of the Job Manager task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.resourceFiles
          type:
            - array
          description: >-
            A

            list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Manager task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Manager task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: >-
            Whether completion of the Job Manager task signifies completion of
            the

            entire job. If true, when the Job Manager task completes, the Batch
            service

            marks the job as complete. If any tasks are still running at this
            time

            (other than Job Release), those tasks are terminated. If false, the

            completion of the Job Manager task does not affect the job status.
            In this

            case, you should either use the onAllTasksComplete attribute to
            terminate

            the job, or have a client or user terminate the job explicitly. An
            example

            of this is if the Job Manager creates a set of tasks but then takes
            no

            further role in their execution. The default value is true. If you
            are using

            the onAllTasksComplete and onTaskFailure attributes to control job
            lifetime,

            and using the Job Manager task only to create the tasks for the job
            (not to

            monitor progress), then it is important to set killJobOnCompletion
            to false.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.userIdentity
          type:
            - object
          description: >-
            The

            user identity under which the Job Manager task runs. If omitted, the
            task

            runs as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.runExclusive
          type:
            - boolean
          description: >-
            Whether the Job Manager task requires exclusive use of the compute
            node

            where it runs. If true, no other tasks will run on the same compute
            node for

            as long as the Job Manager is running. If false, other tasks can run

            simultaneously with the Job Manager on a compute node. The Job
            Manager task

            counts normally against the node's concurrent task limit, so this is
            only

            relevant if the node allows multiple concurrent tasks. The default
            value is

            true.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: >-
            A list of application packages that the Batch service will deploy to
            the

            compute node before running the command line. Application packages
            are

            downloaded and deployed to a shared directory, not the task
            directory.

            Therefore, if a referenced package is already on the compute node,
            and is up

            to date, then it is not re-downloaded; the existing copy on the
            compute node

            is used. If a referenced application package cannot be installed,
            for

            example because the package has been deleted or because download
            failed, the

            task fails with a scheduling error. This property is currently not
            supported

            on jobs running on pools created using the
            virtualMachineConfiguration

            (IaaS) property. If a task specifying applicationPackageReferences
            runs on

            such a pool, it fails with a scheduling error with code

            TaskSchedulingConstraintFailed.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: >-
            The settings for an authentication token that the task can use to
            perform

            Batch service operations. If this property is set, the Batch service

            provides the task with an authentication token which can be used to

            authenticate Batch service operations without requiring an account
            access

            key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN
            environment

            variable. The operations that the task can carry out using the token
            depend

            on the settings. For example, a task can request job permissions in
            order to

            add other tasks to the job, or check the status of the job or of
            other tasks

            under the job.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: >-
            The Batch resources to which the token grants access. The
            authentication

            token grants access to a limited set of Batch service operations.
            Currently

            the only supported value for the access property is 'job', which
            grants

            access to all operations related to the job which contains the task.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobPreparationTask
          type:
            - object
          description: >-
            The Job

            Preparation task for jobs created under this schedule. If a job has
            a Job

            Preparation task, the Batch service will run the Job Preparation
            task on a

            compute node before starting any tasks of that job on that compute
            node.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobPreparationTask.id
          type:
            - string
          description: >-
            A string

            that uniquely identifies the Job Preparation task within the job.
            The ID can

            contain any combination of alphanumeric characters including hyphens
            and

            underscores and cannot contain more than 64 characters. If you do
            not

            specify this property, the Batch service assigns a default value of

            'jobpreparation'. No other task in the job can have the same id as
            the Job

            Preparation task. If you try to submit a task with the same id, the
            Batch

            service rejects the request with error code
            TaskIdSameAsJobPreparationTask;

            if you are calling the REST API directly, the HTTP status code is
            409

            (Conflict).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.commandLine
          type:
            - string
          description: >-
            The command line of the Job Preparation task. The command line does
            not run

            under a shell, and therefore cannot take advantage of shell features
            such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.environmentSettings
          type:
            - array
          description: >-
            A list of environment variable settings for the Job Preparation
            task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Preparation task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the task may run, measured from the
            time the

            task starts. If the task does not complete within the time limit,
            the Batch

            service terminates it. If this is not specified, there is no time
            limit on

            how long the task may run.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time to retain the task directory on the compute node
            where it

            ran, from the time it completes execution. After this time, the
            Batch

            service may delete the task directory and all its contents. The
            default is

            infinite, i.e. the task directory will be retained until the compute
            node is

            removed or reimaged.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the Job Preparation task
            to

            complete successfully before scheduling any other tasks of the job
            on the

            compute node. If true and the Job Preparation task fails on a
            compute node,

            the Batch service retries the Job Preparation task up to its maximum
            retry

            count (as specified in the constraints element). If the task has
            still not

            completed successfully after all retries, then the Batch service
            will not

            schedule tasks of the job to the compute node. The compute node
            remains

            active and eligible to run tasks of other jobs. If false, the Batch
            service

            will not wait for the Job Preparation task to complete. In this
            case, other

            tasks of the job can start executing on the compute node while the
            Job

            Preparation task is still running; and even if the Job Preparation
            task

            fails, new tasks will continue to be scheduled on the node. The
            default

            value is true.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the Job Preparation task runs. If
            omitted, the

            task runs as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should rerun the Job Preparation task
            after a

            compute node reboots. The Job Preparation task is always rerun if a
            compute

            node is reimaged, or if the Job Preparation task did not complete
            (e.g.

            because the reboot occurred while the task was running). Therefore,
            you

            should always write a Job Preparation task to be idempotent and to
            behave

            correctly if run multiple times. The default value is true.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobReleaseTask
          type:
            - object
          description: >-
            The Job Release task for jobs created under this schedule. The
            primary

            purpose of the Job Release task is to undo changes to compute nodes
            made by

            the Job Preparation task. Example activities include deleting local
            files,

            or shutting down services that were started as part of job
            preparation. A

            Job Release task cannot be specified without also specifying a Job

            Preparation task for the job. The Batch service runs the Job Release
            task on

            the compute nodes that have run the Job Preparation task.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobReleaseTask.id
          type:
            - string
          description: >-
            A string that

            uniquely identifies the Job Release task within the job. The ID can
            contain

            any combination of alphanumeric characters including hyphens and
            underscores

            and cannot contain more than 64 characters. If you do not specify
            this

            property, the Batch service assigns a default value of 'jobrelease'.
            No

            other task in the job can have the same id as the Job Release task.
            If you

            try to submit a task with the same id, the Batch service rejects the
            request

            with error code TaskIdSameAsJobReleaseTask; if you are calling the
            REST API

            directly, the HTTP status code is 409 (Conflict).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.commandLine
          type:
            - string
          description: >-
            The

            command line of the Job Release task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.resourceFiles
          type:
            - array
          description: >-
            A

            list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Release task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the Job Release task may run on a
            given

            compute node, measured from the time the task starts. If the task
            does not

            complete within the time limit, the Batch service terminates it. The
            default

            value is 15 minutes. You may not specify a timeout longer than 15
            minutes.

            If you do, the Batch service rejects it with an error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time to retain the task directory for the Job Release
            task on

            the compute node. After this time, the Batch service may delete the
            task

            directory and all its contents. The default is infinite, i.e. the
            task

            directory will be retained until the compute node is removed or
            reimaged.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.userIdentity
          type:
            - object
          description: >-
            The

            user identity under which the Job Release task runs. If omitted, the
            task

            runs as a non-administrative user unique to the task.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.commonEnvironmentSettings
          type:
            - array
          description: >-
            A

            list of common environment variable settings. These environment
            variables

            are set for all tasks in jobs created under this schedule (including
            the Job

            Manager, Job Preparation and Job Release tasks). Individual tasks
            can

            override an environment setting specified here by specifying the
            same

            setting name with a different value.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.poolInfo
          type:
            - object
          description: |-
            The pool
            on which the Batch service runs the tasks of jobs created under this
            schedule.
        - id: jobSchedulePatchParameter.jobSpecification.poolInfo.poolId
          type:
            - string
          description: >-
            The ID of an existing pool. All the tasks of the job will run on the

            specified pool. You must ensure that the pool referenced by this
            property

            exists. If the pool does not exist at the time the Batch service
            tries to

            schedule a job, no tasks for the job will run until you create a
            pool with

            that id. Note that the Batch service will not reject the job
            request; it

            will simply not run tasks until the pool exists. You must specify
            either the

            pool ID or the auto pool specification, but not both.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification
          type:
            - object
          description: >-
            Characteristics for a temporary 'auto pool'. The Batch service will
            create

            this auto pool when the job is submitted. If auto pool creation
            fails, the

            Batch service moves the job to a completed state, and the pool
            creation

            error is set in the job's scheduling error property. The Batch
            service

            manages the lifetime (both creation and, unless keepAlive is
            specified,

            deletion) of the auto pool. Any user actions that affect the
            lifetime of the

            auto pool while the job is active will result in unexpected
            behavior. You

            must specify either the pool ID or the auto pool specification, but
            not

            both.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: >-
            A prefix to be added to the unique identifier when a pool is
            automatically

            created. The Batch service assigns each auto pool a unique
            identifier on

            creation. To distinguish between pools created for different
            purposes, you

            can specify this element to add a prefix to the id that is assigned.
            The

            prefix can be up to 20 characters long.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: >-
            The minimum lifetime of created auto pools, and how multiple jobs on
            a

            schedule are assigned to pools. When the pool lifetime scope is
            jobSchedule

            level, the Batch service keeps track of the last autopool created
            for the

            job schedule, and deletes that pool when the job schedule completes.
            Batch

            will also delete this pool if the user updates the auto pool
            specification

            in a way that changes this lifetime. Possible values include:
            'jobSchedule',

            'job', 'unmapped'
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: >-
            Whether to keep an auto pool alive after its lifetime expires. If
            false, the

            Batch service deletes the pool once its lifetime (as determined by
            the

            poolLifetimeOption setting) expires; that is, when the job or job
            schedule

            completes. If true, the Batch service does not delete the pool

            automatically. It is up to the user to delete auto pools created
            with this

            option.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: The pool specification for the auto pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: >-
            The display name for the pool. The display name need not be unique
            and can

            contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: >-
            The size of the virtual machines in the pool. All virtual machines
            in a pool

            are the same size. For information about available sizes of virtual
            machines

            for Cloud Services pools (pools created with
            cloudServiceConfiguration), see

            Sizes for Cloud Services

            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall. For

            information about available VM sizes for pools using images from the
            Virtual

            Machines Marketplace (pools created with
            virtualMachineConfiguration) see

            Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The cloud service configuration for the pool. This property must be

            specified if the pool needs to be created with Azure PaaS VMs. This
            property

            and virtualMachineConfiguration are mutually exclusive and one of
            the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request). This property cannot be specified if the
            Batch

            account was created with its poolAllocationMode property set to

            'UserSubscription'.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the

            pool. Possible values are: 2 - OS Family 2, equivalent to Windows
            Server

            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 -
            OS

            Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5,
            equivalent

            to Windows Server 2016. For more information, see Azure Guest OS
            Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the

            pool. The default value is * which specifies the latest operating
            system

            version for the specified OS family.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS Version currently installed on the virtual
            machines in

            the pool. This may differ from targetOSVersion if the pool state is

            Upgrading. In this case some virtual machines may be on the
            targetOSVersion

            and some may be on the currentOSVersion during the upgrade process.
            Once all

            virtual machines have upgraded, currentOSVersion is updated to be
            the same

            as targetOSVersion.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The virtual machine configuration for the pool. This property must
            be

            specified if the pool needs to be created with Azure IaaS VMs. This
            property

            and cloudServiceConfiguration are mutually exclusive and one of the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference to the Azure Virtual Machines Marketplace image to use.
            This

            property and osDisk are mutually exclusive and one of the properties
            must be

            specified.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: >-
            The SKU of the Azure Virtual Machines Marketplace image. For
            example,

            14.04.0-LTS or 2012-R2-Datacenter.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: >-
            A reference to the OS disk image to use. This property can be
            specified only

            if the Batch account was created with its poolAllocationMode
            property set to

            'UserSubscription'. This property and imageReference are mutually
            exclusive

            and one of the properties must be specified.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.imageUris
          type:
            - array
          description: >-
            The collection of Virtual Hard Disk (VHD) URIs. All the VHDs must be

            identical and must reside in an Azure Storage account within the
            same

            subscription and same region as the Batch account. For best
            performance, it

            is recommended that each VHD resides in a separate Azure Storage
            account.

            Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute
            nodes.

            You must supply enough VHD URIs to satisfy the 'targetDedicated'
            property of

            the pool. If you do not supply enough VHD URIs, the pool will
            partially

            allocate compute nodes, and a resize error will occur.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type of caching to enable for the OS disk. none - The caching
            mode for

            the disk is not enabled. readOnly - The caching mode for the disk is
            read

            only. readWrite - The caching mode for the disk is read and write.
            The

            default value for caching is none. For information about the caching
            options

            see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of the Batch node agent to be provisioned on compute nodes
            in the

            pool. The Batch node agent is a program that runs on each node in
            the pool,

            and provides the command-and-control interface between the node and
            the

            Batch service. There are different implementations of the node
            agent, known

            as SKUs, for different operating systems. You must specify a node
            agent SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: >-
            The maximum number of tasks that can run concurrently on a single
            compute

            node in the pool. The default value is 1. The maximum value of this
            setting

            depends on the size of the compute nodes in the pool (the vmSize
            setting).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed among compute nodes in the pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: >-
            How tasks should be distributed across compute nodes. Possible
            values

            include: 'spread', 'pack', 'unmapped'
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for allocation of compute nodes to the pool. This
            timeout

            applies only to manual scaling; it has no effect when
            enableAutoScale is set

            to true. The default value is 15 minutes. The minimum value is 5
            minutes. If

            you specify a value less than 5 minutes, the Batch service rejects
            the

            request with an error; if you are calling the REST API directly, the
            HTTP

            status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicated
          type:
            - number
          description: >-
            The desired number of compute nodes in the pool. This property must
            not be

            specified if enableAutoScale is set to true. It is required if

            enableAutoScale is set to false.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should automatically adjust over time. If
            false, the

            targetDedicated element is required. If true, the autoScaleFormula
            element

            is required. The pool automatically resizes according to the
            formula. The

            default value is false.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool.
            This

            property must not be specified if enableAutoScale is set to false.
            It is

            required if enableAutoScale is set to true. The formula is checked
            for

            validity before the pool is created. If the formula is not valid,
            the Batch

            service rejects the request with detailed error information.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval at which to automatically adjust the pool size
            according

            to the autoscale formula. The default value is 15 minutes. The
            minimum and

            maximum value are 5 minutes and 168 hours respectively. If you
            specify a

            value less than 5 minutes or greater than 168 hours, the Batch
            service

            rejects the request with an invalid property value error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool permits direct communication between nodes.
            Enabling

            inter-node communication limits the maximum size of the pool due to

            deployment restrictions on the nodes of the pool. This may result in
            the

            pool not reaching its desired size. The default value is false.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The ARM resource identifier of the virtual network subnet which the
            compute

            nodes of the pool will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. This
            property

            can only be specified for pools created with a
            cloudServiceConfiguration.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: >-
            A task to run on each compute node as it joins the pool. The task
            runs when

            the node is added to the pool or when the node is restarted.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: >-
            The command line of the start task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the start task runs. If omitted, the
            task runs

            as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity under which the task is run. The
            userName and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the task is run. The userName and autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user pool - specifies that the task runs as
            the

            common auto user account which is created on every node in a pool.
            task -

            specifies that the service should create a new user for the task.
            The

            default value is task. Possible values include: 'task', 'pool'
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation level of the auto user. nonAdmin - The auto user is a
            standard

            user without elevated access. admin - The auto user is a user with
            elevated

            access and operates with full Administrator permissions. The default
            value

            is nonAdmin. Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the start task to complete

            successfully (that is, to exit with exit code 0) before scheduling
            any tasks

            on the compute node. If true and the start task fails on a compute
            node, the

            Batch service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and scheduling error detail. If false, the Batch service will
            not wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool. For

            Windows compute nodes, the Batch service installs the certificates
            to the

            specified certificate store and location. For Linux compute nodes,
            the

            certificates are stored in a directory inside the task working
            directory and

            an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            task to

            query for this location. For certificates with visibility of
            'remoteUser', a

            'certs' directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: >-
            The list of application packages to be installed on each compute
            node in the

            pool. This property is currently not supported on auto pools created
            with

            the virtualMachineConfiguration (IaaS) property.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: The list of user accounts to be created on each node in the pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: >-
            A list of name-value pairs associated with the pool as metadata. The
            Batch

            service does not assign any meaning to metadata; it is solely for
            the use of

            user code.
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.metadata
          type:
            - array
          description: >-
            A list

            of name-value pairs associated with each job created under this
            schedule as

            metadata. The Batch service does not assign any meaning to metadata;
            it is

            solely for the use of user code.
          optional: true
        - id: jobSchedulePatchParameter.metadata
          type:
            - array
          description: >-
            A list of name-value

            pairs associated with the job schedule as metadata. If you do not
            specify

            this element, existing metadata is left unchanged.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobSchedulePatchOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobSchedulePatchOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobSchedulePatchOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobSchedulePatchOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobSchedulePatchOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobSchedulePatchOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobSchedulePatchOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobSchedulePatchOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobSchedulePatchOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function patch(jobScheduleId, jobSchedulePatchParameter, options,
        optionalCallback)
  - uid: 'azure-batch.JobSchedule#updateWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#updateWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: >-
      updateWithHttpOperationResponse(jobScheduleId, jobScheduleUpdateParameter,
      options)
    summary: >-
      Updates the properties of the specified job schedule.


      This fully replaces all the updateable properties of the job schedule. For

      example, if the schedule property is not specified with this request, then

      the Batch service will remove the existing schedule. Changes to a job

      schedule only impact jobs created by the schedule after the update has
      taken

      place; currently running jobs are unaffected.
    fullName: >-
      azure-batch.JobSchedule.updateWithHttpOperationResponse(jobScheduleId,
      jobScheduleUpdateParameter, options)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobScheduleUpdateParameter
          type:
            - object
          description: The parameters for the request.
        - id: jobScheduleUpdateParameter.schedule
          type:
            - object
          description: >-
            The schedule according

            to which jobs will be created. If you do not specify this element,
            it is

            equivalent to passing the default schedule: that is, a single job
            scheduled

            to run immediately.
        - id: jobScheduleUpdateParameter.schedule.doNotRunUntil
          type:
            - date
          description: >-
            The

            earliest time at which any job may be created under this job
            schedule. If

            you do not specify a doNotRunUntil time, the schedule becomes ready
            to

            create jobs immediately.
          optional: true
        - id: jobScheduleUpdateParameter.schedule.doNotRunAfter
          type:
            - date
          description: >-
            A time

            after which no job will be created under this job schedule. The
            schedule

            will move to the completed state as soon as this deadline is past
            and there

            is no active job under this job schedule. If you do not specify a

            doNotRunAfter time, and you are creating a recurring job schedule,
            the job

            schedule will remain active until you explicitly terminate it.
          optional: true
        - id: jobScheduleUpdateParameter.schedule.startWindow
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval, starting from the time at which the schedule
            indicates a

            job should be created, within which a job must be created. If a job
            is not

            created within the startWindow interval, then the 'opportunity' is
            lost; no

            job will be created until the next recurrence of the schedule. If
            the

            schedule is recurring, and the startWindow is longer than the
            recurrence

            interval, then this is equivalent to an infinite startWindow,
            because the

            job that is 'due' in one recurrenceInterval is not carried forward
            into the

            next recurrence interval. The default is infinite. The minimum value
            is 1

            minute. If you specify a lower value, the Batch service rejects the
            schedule

            with an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: jobScheduleUpdateParameter.schedule.recurrenceInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval

            between the start times of two successive jobs under the job
            schedule. A job

            schedule can have at most one active job under it at any given time.
            Because

            a job schedule can have at most one active job under it at any given
            time,

            if it is time to create a new job under a job schedule, but the
            previous job

            is still running, the Batch service will not create the new job
            until the

            previous job finishes. If the previous job does not finish within
            the

            startWindow period of the new recurrenceInterval, then no new job
            will be

            scheduled for that interval. For recurring jobs, you should normally
            specify

            a jobManagerTask in the jobSpecification. If you do not use
            jobManagerTask,

            you will need an external process to monitor when jobs are created,
            add

            tasks to the jobs and terminate the jobs ready for the next
            recurrence. The

            default is that the schedule does not recur: one job is created,
            within the

            startWindow after the doNotRunUntil time, and the schedule is
            complete as

            soon as that job finishes. The minimum value is 1 minute. If you
            specify a

            lower value, the Batch service rejects the schedule with an error;
            if you

            are calling the REST API directly, the HTTP status code is 400 (Bad

            Request).
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification
          type:
            - object
          description: >-
            Details of the

            jobs to be created on this schedule. Updates affect only jobs that
            are

            started after the update has taken place. Any currently active job
            continues

            with the older specification.
        - id: jobScheduleUpdateParameter.jobSpecification.priority
          type:
            - number
          description: >-
            The

            priority of jobs created under this schedule. Priority values can
            range from

            -1000 to 1000, with -1000 being the lowest priority and 1000 being
            the

            highest priority. The default value is 0. This priority is used as
            the

            default for all jobs under the job schedule. You can update a job's
            priority

            after it has been created using by using the update job API.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.displayName
          type:
            - string
          description: >-
            The display name for jobs created under this schedule. The name need
            not be

            unique and can contain any Unicode characters up to a maximum length
            of

            1024.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.usesTaskDependencies
          type:
            - boolean
          description: |-
            The flag
            that determines if this job will use tasks with dependencies.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.onAllTasksComplete
          type:
            - string
          description: >-
            The action

            the Batch service should take when all tasks in a job created under
            this

            schedule are in the completed state. Note that if a job contains no
            tasks,

            then all tasks are considered complete. This option is therefore
            most

            commonly used with a Job Manager task; if you want to use automatic
            job

            termination without a Job Manager, you should initially set

            onAllTasksComplete to noAction and update the job properties to set

            onAllTasksComplete to terminateJob once you have finished adding
            tasks. The

            default is noAction. Possible values include: 'noAction',
            'terminateJob'
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.onTaskFailure
          type:
            - string
          description: >-
            The action the Batch service should take when any task fails in a
            job

            created under this schedule. A task is considered to have failed if
            it

            completes with a non-zero exit code and has exhausted its retry
            count, or if

            it had a scheduling error. The default is noAction. Possible values
            include:

            'noAction', 'performExitOptionsJobAction'
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.constraints
          type:
            - object
          description: The execution constraints for jobs created under this schedule.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the job may run, measured from the
            time the

            job is created. If the job does not complete within the time limit,
            the

            Batch service terminates it and any tasks that are still running. In
            this

            case, the termination reason will be MaxWallClockTimeExpiry. If this

            property is not specified, there is no time limit on how long the
            job may

            run.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times each task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try each

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries a task up to 4 times (one initial try
            and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            tasks. If the maximum retry count is -1, the Batch service retries
            tasks

            without limit. The default value is 0 (no retries).
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobManagerTask
          type:
            - object
          description: >-
            The details of a Job Manager task to be launched when a job is
            started under

            this schedule. If the job does not specify a Job Manager task, the
            user must

            explicitly add tasks to the job using the Task API. If the job does
            specify

            a Job Manager task, the Batch service creates the Job Manager task
            when the

            job is created, and will try to schedule the Job Manager task before

            scheduling other tasks in the job.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobManagerTask.id
          type:
            - string
          description: >-
            A string that

            uniquely identifies the Job Manager taskwithin the job. The id can
            contain

            any combination of alphanumeric characters including hyphens and
            underscores

            and cannot contain more than 64 characters.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.displayName
          type:
            - string
          description: >-
            The

            display name of the Job Manager task. It need not be unique and can
            contain

            any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.commandLine
          type:
            - string
          description: >-
            The

            command line of the Job Manager task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.resourceFiles
          type:
            - array
          description: >-
            A

            list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Manager task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Manager task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: >-
            Whether completion of the Job Manager task signifies completion of
            the

            entire job. If true, when the Job Manager task completes, the Batch
            service

            marks the job as complete. If any tasks are still running at this
            time

            (other than Job Release), those tasks are terminated. If false, the

            completion of the Job Manager task does not affect the job status.
            In this

            case, you should either use the onAllTasksComplete attribute to
            terminate

            the job, or have a client or user terminate the job explicitly. An
            example

            of this is if the Job Manager creates a set of tasks but then takes
            no

            further role in their execution. The default value is true. If you
            are using

            the onAllTasksComplete and onTaskFailure attributes to control job
            lifetime,

            and using the Job Manager task only to create the tasks for the job
            (not to

            monitor progress), then it is important to set killJobOnCompletion
            to false.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the Job Manager task runs. If omitted,
            the

            task runs as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.runExclusive
          type:
            - boolean
          description: >-
            Whether the Job Manager task requires exclusive use of the compute
            node

            where it runs. If true, no other tasks will run on the same compute
            node for

            as long as the Job Manager is running. If false, other tasks can run

            simultaneously with the Job Manager on a compute node. The Job
            Manager task

            counts normally against the node's concurrent task limit, so this is
            only

            relevant if the node allows multiple concurrent tasks. The default
            value is

            true.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: >-
            A list of application packages that the Batch service will deploy to
            the

            compute node before running the command line. Application packages
            are

            downloaded and deployed to a shared directory, not the task
            directory.

            Therefore, if a referenced package is already on the compute node,
            and is up

            to date, then it is not re-downloaded; the existing copy on the
            compute node

            is used. If a referenced application package cannot be installed,
            for

            example because the package has been deleted or because download
            failed, the

            task fails with a scheduling error. This property is currently not
            supported

            on jobs running on pools created using the
            virtualMachineConfiguration

            (IaaS) property. If a task specifying applicationPackageReferences
            runs on

            such a pool, it fails with a scheduling error with code

            TaskSchedulingConstraintFailed.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: >-
            The settings for an authentication token that the task can use to
            perform

            Batch service operations. If this property is set, the Batch service

            provides the task with an authentication token which can be used to

            authenticate Batch service operations without requiring an account
            access

            key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN
            environment

            variable. The operations that the task can carry out using the token
            depend

            on the settings. For example, a task can request job permissions in
            order to

            add other tasks to the job, or check the status of the job or of
            other tasks

            under the job.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: >-
            The Batch resources to which the token grants access. The
            authentication

            token grants access to a limited set of Batch service operations.
            Currently

            the only supported value for the access property is 'job', which
            grants

            access to all operations related to the job which contains the task.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobPreparationTask
          type:
            - object
          description: >-
            The Job

            Preparation task for jobs created under this schedule. If a job has
            a Job

            Preparation task, the Batch service will run the Job Preparation
            task on a

            compute node before starting any tasks of that job on that compute
            node.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.id
          type:
            - string
          description: >-
            A string

            that uniquely identifies the Job Preparation task within the job.
            The ID can

            contain any combination of alphanumeric characters including hyphens
            and

            underscores and cannot contain more than 64 characters. If you do
            not

            specify this property, the Batch service assigns a default value of

            'jobpreparation'. No other task in the job can have the same id as
            the Job

            Preparation task. If you try to submit a task with the same id, the
            Batch

            service rejects the request with error code
            TaskIdSameAsJobPreparationTask;

            if you are calling the REST API directly, the HTTP status code is
            409

            (Conflict).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.commandLine
          type:
            - string
          description: >-
            The command line of the Job Preparation task. The command line does
            not run

            under a shell, and therefore cannot take advantage of shell features
            such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.environmentSettings
          type:
            - array
          description: >-
            A list of environment variable settings for the Job Preparation
            task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Preparation task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the task may run, measured from the
            time the

            task starts. If the task does not complete within the time limit,
            the Batch

            service terminates it. If this is not specified, there is no time
            limit on

            how long the task may run.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time to retain the task directory on the compute node
            where it

            ran, from the time it completes execution. After this time, the
            Batch

            service may delete the task directory and all its contents. The
            default is

            infinite, i.e. the task directory will be retained until the compute
            node is

            removed or reimaged.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the Job Preparation task
            to

            complete successfully before scheduling any other tasks of the job
            on the

            compute node. If true and the Job Preparation task fails on a
            compute node,

            the Batch service retries the Job Preparation task up to its maximum
            retry

            count (as specified in the constraints element). If the task has
            still not

            completed successfully after all retries, then the Batch service
            will not

            schedule tasks of the job to the compute node. The compute node
            remains

            active and eligible to run tasks of other jobs. If false, the Batch
            service

            will not wait for the Job Preparation task to complete. In this
            case, other

            tasks of the job can start executing on the compute node while the
            Job

            Preparation task is still running; and even if the Job Preparation
            task

            fails, new tasks will continue to be scheduled on the node. The
            default

            value is true.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the Job Preparation task runs. If
            omitted, the

            task runs as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should rerun the Job Preparation task
            after a

            compute node reboots. The Job Preparation task is always rerun if a
            compute

            node is reimaged, or if the Job Preparation task did not complete
            (e.g.

            because the reboot occurred while the task was running). Therefore,
            you

            should always write a Job Preparation task to be idempotent and to
            behave

            correctly if run multiple times. The default value is true.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobReleaseTask
          type:
            - object
          description: >-
            The Job Release task for jobs created under this schedule. The
            primary

            purpose of the Job Release task is to undo changes to compute nodes
            made by

            the Job Preparation task. Example activities include deleting local
            files,

            or shutting down services that were started as part of job
            preparation. A

            Job Release task cannot be specified without also specifying a Job

            Preparation task for the job. The Batch service runs the Job Release
            task on

            the compute nodes that have run the Job Preparation task.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.id
          type:
            - string
          description: >-
            A string

            that uniquely identifies the Job Release task within the job. The ID
            can

            contain any combination of alphanumeric characters including hyphens
            and

            underscores and cannot contain more than 64 characters. If you do
            not

            specify this property, the Batch service assigns a default value of

            'jobrelease'. No other task in the job can have the same id as the
            Job

            Release task. If you try to submit a task with the same id, the
            Batch

            service rejects the request with error code
            TaskIdSameAsJobReleaseTask; if

            you are calling the REST API directly, the HTTP status code is 409

            (Conflict).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.commandLine
          type:
            - string
          description: >-
            The

            command line of the Job Release task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.resourceFiles
          type:
            - array
          description: >-
            A

            list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Release task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the Job Release task may run on a
            given

            compute node, measured from the time the task starts. If the task
            does not

            complete within the time limit, the Batch service terminates it. The
            default

            value is 15 minutes. You may not specify a timeout longer than 15
            minutes.

            If you do, the Batch service rejects it with an error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time to retain the task directory for the Job Release
            task on

            the compute node. After this time, the Batch service may delete the
            task

            directory and all its contents. The default is infinite, i.e. the
            task

            directory will be retained until the compute node is removed or
            reimaged.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the Job Release task runs. If omitted,
            the

            task runs as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.commonEnvironmentSettings
          type:
            - array
          description: >-
            A

            list of common environment variable settings. These environment
            variables

            are set for all tasks in jobs created under this schedule (including
            the Job

            Manager, Job Preparation and Job Release tasks). Individual tasks
            can

            override an environment setting specified here by specifying the
            same

            setting name with a different value.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.poolInfo
          type:
            - object
          description: >-
            The

            pool on which the Batch service runs the tasks of jobs created under
            this

            schedule.
        - id: jobScheduleUpdateParameter.jobSpecification.poolInfo.poolId
          type:
            - string
          description: >-
            The ID of an

            existing pool. All the tasks of the job will run on the specified
            pool. You

            must ensure that the pool referenced by this property exists. If the
            pool

            does not exist at the time the Batch service tries to schedule a
            job, no

            tasks for the job will run until you create a pool with that id.
            Note that

            the Batch service will not reject the job request; it will simply
            not run

            tasks until the pool exists. You must specify either the pool ID or
            the auto

            pool specification, but not both.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification
          type:
            - object
          description: >-
            Characteristics for a temporary 'auto pool'. The Batch service will
            create

            this auto pool when the job is submitted. If auto pool creation
            fails, the

            Batch service moves the job to a completed state, and the pool
            creation

            error is set in the job's scheduling error property. The Batch
            service

            manages the lifetime (both creation and, unless keepAlive is
            specified,

            deletion) of the auto pool. Any user actions that affect the
            lifetime of the

            auto pool while the job is active will result in unexpected
            behavior. You

            must specify either the pool ID or the auto pool specification, but
            not

            both.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: >-
            A prefix to be added to the unique identifier when a pool is
            automatically

            created. The Batch service assigns each auto pool a unique
            identifier on

            creation. To distinguish between pools created for different
            purposes, you

            can specify this element to add a prefix to the id that is assigned.
            The

            prefix can be up to 20 characters long.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: >-
            The minimum lifetime of created auto pools, and how multiple jobs on
            a

            schedule are assigned to pools. When the pool lifetime scope is
            jobSchedule

            level, the Batch service keeps track of the last autopool created
            for the

            job schedule, and deletes that pool when the job schedule completes.
            Batch

            will also delete this pool if the user updates the auto pool
            specification

            in a way that changes this lifetime. Possible values include:
            'jobSchedule',

            'job', 'unmapped'
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: >-
            Whether to keep an auto pool alive after its lifetime expires. If
            false, the

            Batch service deletes the pool once its lifetime (as determined by
            the

            poolLifetimeOption setting) expires; that is, when the job or job
            schedule

            completes. If true, the Batch service does not delete the pool

            automatically. It is up to the user to delete auto pools created
            with this

            option.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: The pool specification for the auto pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: >-
            The display name for the pool. The display name need not be unique
            and can

            contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: >-
            The size of the virtual machines in the pool. All virtual machines
            in a pool

            are the same size. For information about available sizes of virtual
            machines

            for Cloud Services pools (pools created with
            cloudServiceConfiguration), see

            Sizes for Cloud Services

            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall. For

            information about available VM sizes for pools using images from the
            Virtual

            Machines Marketplace (pools created with
            virtualMachineConfiguration) see

            Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The cloud service configuration for the pool. This property must be

            specified if the pool needs to be created with Azure PaaS VMs. This
            property

            and virtualMachineConfiguration are mutually exclusive and one of
            the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request). This property cannot be specified if the
            Batch

            account was created with its poolAllocationMode property set to

            'UserSubscription'.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the

            pool. Possible values are: 2 - OS Family 2, equivalent to Windows
            Server

            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 -
            OS

            Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5,
            equivalent

            to Windows Server 2016. For more information, see Azure Guest OS
            Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the

            pool. The default value is * which specifies the latest operating
            system

            version for the specified OS family.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS Version currently installed on the virtual
            machines in

            the pool. This may differ from targetOSVersion if the pool state is

            Upgrading. In this case some virtual machines may be on the
            targetOSVersion

            and some may be on the currentOSVersion during the upgrade process.
            Once all

            virtual machines have upgraded, currentOSVersion is updated to be
            the same

            as targetOSVersion.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The virtual machine configuration for the pool. This property must
            be

            specified if the pool needs to be created with Azure IaaS VMs. This
            property

            and cloudServiceConfiguration are mutually exclusive and one of the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference to the Azure Virtual Machines Marketplace image to use.
            This

            property and osDisk are mutually exclusive and one of the properties
            must be

            specified.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: >-
            The SKU of the Azure Virtual Machines Marketplace image. For
            example,

            14.04.0-LTS or 2012-R2-Datacenter.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: >-
            A reference to the OS disk image to use. This property can be
            specified only

            if the Batch account was created with its poolAllocationMode
            property set to

            'UserSubscription'. This property and imageReference are mutually
            exclusive

            and one of the properties must be specified.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.imageUris
          type:
            - array
          description: >-
            The collection of Virtual Hard Disk (VHD) URIs. All the VHDs must be

            identical and must reside in an Azure Storage account within the
            same

            subscription and same region as the Batch account. For best
            performance, it

            is recommended that each VHD resides in a separate Azure Storage
            account.

            Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute
            nodes.

            You must supply enough VHD URIs to satisfy the 'targetDedicated'
            property of

            the pool. If you do not supply enough VHD URIs, the pool will
            partially

            allocate compute nodes, and a resize error will occur.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type of caching to enable for the OS disk. none - The caching
            mode for

            the disk is not enabled. readOnly - The caching mode for the disk is
            read

            only. readWrite - The caching mode for the disk is read and write.
            The

            default value for caching is none. For information about the caching
            options

            see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of the Batch node agent to be provisioned on compute nodes
            in the

            pool. The Batch node agent is a program that runs on each node in
            the pool,

            and provides the command-and-control interface between the node and
            the

            Batch service. There are different implementations of the node
            agent, known

            as SKUs, for different operating systems. You must specify a node
            agent SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: >-
            The maximum number of tasks that can run concurrently on a single
            compute

            node in the pool. The default value is 1. The maximum value of this
            setting

            depends on the size of the compute nodes in the pool (the vmSize
            setting).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed among compute nodes in the pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: >-
            How tasks should be distributed across compute nodes. Possible
            values

            include: 'spread', 'pack', 'unmapped'
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for allocation of compute nodes to the pool. This
            timeout

            applies only to manual scaling; it has no effect when
            enableAutoScale is set

            to true. The default value is 15 minutes. The minimum value is 5
            minutes. If

            you specify a value less than 5 minutes, the Batch service rejects
            the

            request with an error; if you are calling the REST API directly, the
            HTTP

            status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicated
          type:
            - number
          description: >-
            The desired number of compute nodes in the pool. This property must
            not be

            specified if enableAutoScale is set to true. It is required if

            enableAutoScale is set to false.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should automatically adjust over time. If
            false, the

            targetDedicated element is required. If true, the autoScaleFormula
            element

            is required. The pool automatically resizes according to the
            formula. The

            default value is false.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool.
            This

            property must not be specified if enableAutoScale is set to false.
            It is

            required if enableAutoScale is set to true. The formula is checked
            for

            validity before the pool is created. If the formula is not valid,
            the Batch

            service rejects the request with detailed error information.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval at which to automatically adjust the pool size
            according

            to the autoscale formula. The default value is 15 minutes. The
            minimum and

            maximum value are 5 minutes and 168 hours respectively. If you
            specify a

            value less than 5 minutes or greater than 168 hours, the Batch
            service

            rejects the request with an invalid property value error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool permits direct communication between nodes.
            Enabling

            inter-node communication limits the maximum size of the pool due to

            deployment restrictions on the nodes of the pool. This may result in
            the

            pool not reaching its desired size. The default value is false.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The ARM resource identifier of the virtual network subnet which the
            compute

            nodes of the pool will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. This
            property

            can only be specified for pools created with a
            cloudServiceConfiguration.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: >-
            A task to run on each compute node as it joins the pool. The task
            runs when

            the node is added to the pool or when the node is restarted.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: >-
            The command line of the start task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the start task runs. If omitted, the
            task runs

            as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity under which the task is run. The
            userName and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the task is run. The userName and autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user pool - specifies that the task runs as
            the

            common auto user account which is created on every node in a pool.
            task -

            specifies that the service should create a new user for the task.
            The

            default value is task. Possible values include: 'task', 'pool'
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation level of the auto user. nonAdmin - The auto user is a
            standard

            user without elevated access. admin - The auto user is a user with
            elevated

            access and operates with full Administrator permissions. The default
            value

            is nonAdmin. Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the start task to complete

            successfully (that is, to exit with exit code 0) before scheduling
            any tasks

            on the compute node. If true and the start task fails on a compute
            node, the

            Batch service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and scheduling error detail. If false, the Batch service will
            not wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool. For

            Windows compute nodes, the Batch service installs the certificates
            to the

            specified certificate store and location. For Linux compute nodes,
            the

            certificates are stored in a directory inside the task working
            directory and

            an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            task to

            query for this location. For certificates with visibility of
            'remoteUser', a

            'certs' directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: >-
            The list of application packages to be installed on each compute
            node in the

            pool. This property is currently not supported on auto pools created
            with

            the virtualMachineConfiguration (IaaS) property.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: The list of user accounts to be created on each node in the pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: >-
            A list of name-value pairs associated with the pool as metadata. The
            Batch

            service does not assign any meaning to metadata; it is solely for
            the use of

            user code.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.metadata
          type:
            - array
          description: >-
            A list

            of name-value pairs associated with each job created under this
            schedule as

            metadata. The Batch service does not assign any meaning to metadata;
            it is

            solely for the use of user code.
          optional: true
        - id: jobScheduleUpdateParameter.metadata
          type:
            - array
          description: >-
            A list of name-value

            pairs associated with the job schedule as metadata. If you do not
            specify

            this element, it takes the default value of an empty list; in
            effect, any

            existing metadata is deleted.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleUpdateOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobScheduleUpdateOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleUpdateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleUpdateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleUpdateOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.jobScheduleUpdateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleUpdateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleUpdateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobScheduleUpdateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(jobScheduleId,
        jobScheduleUpdateParameter, options)
  - uid: 'azure-batch.JobSchedule#update'
    id: 'azure-batch.JobSchedule#update'
    parent: azure-batch.JobSchedule
    name: >-
      update(jobScheduleId, jobScheduleUpdateParameter, options,
      optionalCallback)
    summary: >-
      Updates the properties of the specified job schedule.


      This fully replaces all the updateable properties of the job schedule. For

      example, if the schedule property is not specified with this request, then

      the Batch service will remove the existing schedule. Changes to a job

      schedule only impact jobs created by the schedule after the update has
      taken

      place; currently running jobs are unaffected.
    fullName: >-
      azure-batch.JobSchedule.update(jobScheduleId, jobScheduleUpdateParameter,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobScheduleUpdateParameter
          type:
            - object
          description: The parameters for the request.
        - id: jobScheduleUpdateParameter.schedule
          type:
            - object
          description: >-
            The schedule according

            to which jobs will be created. If you do not specify this element,
            it is

            equivalent to passing the default schedule: that is, a single job
            scheduled

            to run immediately.
        - id: jobScheduleUpdateParameter.schedule.doNotRunUntil
          type:
            - date
          description: >-
            The

            earliest time at which any job may be created under this job
            schedule. If

            you do not specify a doNotRunUntil time, the schedule becomes ready
            to

            create jobs immediately.
          optional: true
        - id: jobScheduleUpdateParameter.schedule.doNotRunAfter
          type:
            - date
          description: >-
            A time

            after which no job will be created under this job schedule. The
            schedule

            will move to the completed state as soon as this deadline is past
            and there

            is no active job under this job schedule. If you do not specify a

            doNotRunAfter time, and you are creating a recurring job schedule,
            the job

            schedule will remain active until you explicitly terminate it.
          optional: true
        - id: jobScheduleUpdateParameter.schedule.startWindow
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval, starting from the time at which the schedule
            indicates a

            job should be created, within which a job must be created. If a job
            is not

            created within the startWindow interval, then the 'opportunity' is
            lost; no

            job will be created until the next recurrence of the schedule. If
            the

            schedule is recurring, and the startWindow is longer than the
            recurrence

            interval, then this is equivalent to an infinite startWindow,
            because the

            job that is 'due' in one recurrenceInterval is not carried forward
            into the

            next recurrence interval. The default is infinite. The minimum value
            is 1

            minute. If you specify a lower value, the Batch service rejects the
            schedule

            with an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: jobScheduleUpdateParameter.schedule.recurrenceInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval

            between the start times of two successive jobs under the job
            schedule. A job

            schedule can have at most one active job under it at any given time.
            Because

            a job schedule can have at most one active job under it at any given
            time,

            if it is time to create a new job under a job schedule, but the
            previous job

            is still running, the Batch service will not create the new job
            until the

            previous job finishes. If the previous job does not finish within
            the

            startWindow period of the new recurrenceInterval, then no new job
            will be

            scheduled for that interval. For recurring jobs, you should normally
            specify

            a jobManagerTask in the jobSpecification. If you do not use
            jobManagerTask,

            you will need an external process to monitor when jobs are created,
            add

            tasks to the jobs and terminate the jobs ready for the next
            recurrence. The

            default is that the schedule does not recur: one job is created,
            within the

            startWindow after the doNotRunUntil time, and the schedule is
            complete as

            soon as that job finishes. The minimum value is 1 minute. If you
            specify a

            lower value, the Batch service rejects the schedule with an error;
            if you

            are calling the REST API directly, the HTTP status code is 400 (Bad

            Request).
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification
          type:
            - object
          description: >-
            Details of the

            jobs to be created on this schedule. Updates affect only jobs that
            are

            started after the update has taken place. Any currently active job
            continues

            with the older specification.
        - id: jobScheduleUpdateParameter.jobSpecification.priority
          type:
            - number
          description: >-
            The

            priority of jobs created under this schedule. Priority values can
            range from

            -1000 to 1000, with -1000 being the lowest priority and 1000 being
            the

            highest priority. The default value is 0. This priority is used as
            the

            default for all jobs under the job schedule. You can update a job's
            priority

            after it has been created using by using the update job API.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.displayName
          type:
            - string
          description: >-
            The display name for jobs created under this schedule. The name need
            not be

            unique and can contain any Unicode characters up to a maximum length
            of

            1024.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.usesTaskDependencies
          type:
            - boolean
          description: |-
            The flag
            that determines if this job will use tasks with dependencies.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.onAllTasksComplete
          type:
            - string
          description: >-
            The action

            the Batch service should take when all tasks in a job created under
            this

            schedule are in the completed state. Note that if a job contains no
            tasks,

            then all tasks are considered complete. This option is therefore
            most

            commonly used with a Job Manager task; if you want to use automatic
            job

            termination without a Job Manager, you should initially set

            onAllTasksComplete to noAction and update the job properties to set

            onAllTasksComplete to terminateJob once you have finished adding
            tasks. The

            default is noAction. Possible values include: 'noAction',
            'terminateJob'
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.onTaskFailure
          type:
            - string
          description: >-
            The action the Batch service should take when any task fails in a
            job

            created under this schedule. A task is considered to have failed if
            it

            completes with a non-zero exit code and has exhausted its retry
            count, or if

            it had a scheduling error. The default is noAction. Possible values
            include:

            'noAction', 'performExitOptionsJobAction'
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.constraints
          type:
            - object
          description: The execution constraints for jobs created under this schedule.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the job may run, measured from the
            time the

            job is created. If the job does not complete within the time limit,
            the

            Batch service terminates it and any tasks that are still running. In
            this

            case, the termination reason will be MaxWallClockTimeExpiry. If this

            property is not specified, there is no time limit on how long the
            job may

            run.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times each task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try each

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries a task up to 4 times (one initial try
            and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            tasks. If the maximum retry count is -1, the Batch service retries
            tasks

            without limit. The default value is 0 (no retries).
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobManagerTask
          type:
            - object
          description: >-
            The details of a Job Manager task to be launched when a job is
            started under

            this schedule. If the job does not specify a Job Manager task, the
            user must

            explicitly add tasks to the job using the Task API. If the job does
            specify

            a Job Manager task, the Batch service creates the Job Manager task
            when the

            job is created, and will try to schedule the Job Manager task before

            scheduling other tasks in the job.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobManagerTask.id
          type:
            - string
          description: >-
            A string that

            uniquely identifies the Job Manager taskwithin the job. The id can
            contain

            any combination of alphanumeric characters including hyphens and
            underscores

            and cannot contain more than 64 characters.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.displayName
          type:
            - string
          description: >-
            The

            display name of the Job Manager task. It need not be unique and can
            contain

            any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.commandLine
          type:
            - string
          description: >-
            The

            command line of the Job Manager task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.resourceFiles
          type:
            - array
          description: >-
            A

            list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Manager task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Manager task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: >-
            Whether completion of the Job Manager task signifies completion of
            the

            entire job. If true, when the Job Manager task completes, the Batch
            service

            marks the job as complete. If any tasks are still running at this
            time

            (other than Job Release), those tasks are terminated. If false, the

            completion of the Job Manager task does not affect the job status.
            In this

            case, you should either use the onAllTasksComplete attribute to
            terminate

            the job, or have a client or user terminate the job explicitly. An
            example

            of this is if the Job Manager creates a set of tasks but then takes
            no

            further role in their execution. The default value is true. If you
            are using

            the onAllTasksComplete and onTaskFailure attributes to control job
            lifetime,

            and using the Job Manager task only to create the tasks for the job
            (not to

            monitor progress), then it is important to set killJobOnCompletion
            to false.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the Job Manager task runs. If omitted,
            the

            task runs as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.runExclusive
          type:
            - boolean
          description: >-
            Whether the Job Manager task requires exclusive use of the compute
            node

            where it runs. If true, no other tasks will run on the same compute
            node for

            as long as the Job Manager is running. If false, other tasks can run

            simultaneously with the Job Manager on a compute node. The Job
            Manager task

            counts normally against the node's concurrent task limit, so this is
            only

            relevant if the node allows multiple concurrent tasks. The default
            value is

            true.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: >-
            A list of application packages that the Batch service will deploy to
            the

            compute node before running the command line. Application packages
            are

            downloaded and deployed to a shared directory, not the task
            directory.

            Therefore, if a referenced package is already on the compute node,
            and is up

            to date, then it is not re-downloaded; the existing copy on the
            compute node

            is used. If a referenced application package cannot be installed,
            for

            example because the package has been deleted or because download
            failed, the

            task fails with a scheduling error. This property is currently not
            supported

            on jobs running on pools created using the
            virtualMachineConfiguration

            (IaaS) property. If a task specifying applicationPackageReferences
            runs on

            such a pool, it fails with a scheduling error with code

            TaskSchedulingConstraintFailed.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: >-
            The settings for an authentication token that the task can use to
            perform

            Batch service operations. If this property is set, the Batch service

            provides the task with an authentication token which can be used to

            authenticate Batch service operations without requiring an account
            access

            key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN
            environment

            variable. The operations that the task can carry out using the token
            depend

            on the settings. For example, a task can request job permissions in
            order to

            add other tasks to the job, or check the status of the job or of
            other tasks

            under the job.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: >-
            The Batch resources to which the token grants access. The
            authentication

            token grants access to a limited set of Batch service operations.
            Currently

            the only supported value for the access property is 'job', which
            grants

            access to all operations related to the job which contains the task.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobPreparationTask
          type:
            - object
          description: >-
            The Job

            Preparation task for jobs created under this schedule. If a job has
            a Job

            Preparation task, the Batch service will run the Job Preparation
            task on a

            compute node before starting any tasks of that job on that compute
            node.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.id
          type:
            - string
          description: >-
            A string

            that uniquely identifies the Job Preparation task within the job.
            The ID can

            contain any combination of alphanumeric characters including hyphens
            and

            underscores and cannot contain more than 64 characters. If you do
            not

            specify this property, the Batch service assigns a default value of

            'jobpreparation'. No other task in the job can have the same id as
            the Job

            Preparation task. If you try to submit a task with the same id, the
            Batch

            service rejects the request with error code
            TaskIdSameAsJobPreparationTask;

            if you are calling the REST API directly, the HTTP status code is
            409

            (Conflict).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.commandLine
          type:
            - string
          description: >-
            The command line of the Job Preparation task. The command line does
            not run

            under a shell, and therefore cannot take advantage of shell features
            such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.environmentSettings
          type:
            - array
          description: >-
            A list of environment variable settings for the Job Preparation
            task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Preparation task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the task may run, measured from the
            time the

            task starts. If the task does not complete within the time limit,
            the Batch

            service terminates it. If this is not specified, there is no time
            limit on

            how long the task may run.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time to retain the task directory on the compute node
            where it

            ran, from the time it completes execution. After this time, the
            Batch

            service may delete the task directory and all its contents. The
            default is

            infinite, i.e. the task directory will be retained until the compute
            node is

            removed or reimaged.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the Job Preparation task
            to

            complete successfully before scheduling any other tasks of the job
            on the

            compute node. If true and the Job Preparation task fails on a
            compute node,

            the Batch service retries the Job Preparation task up to its maximum
            retry

            count (as specified in the constraints element). If the task has
            still not

            completed successfully after all retries, then the Batch service
            will not

            schedule tasks of the job to the compute node. The compute node
            remains

            active and eligible to run tasks of other jobs. If false, the Batch
            service

            will not wait for the Job Preparation task to complete. In this
            case, other

            tasks of the job can start executing on the compute node while the
            Job

            Preparation task is still running; and even if the Job Preparation
            task

            fails, new tasks will continue to be scheduled on the node. The
            default

            value is true.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the Job Preparation task runs. If
            omitted, the

            task runs as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should rerun the Job Preparation task
            after a

            compute node reboots. The Job Preparation task is always rerun if a
            compute

            node is reimaged, or if the Job Preparation task did not complete
            (e.g.

            because the reboot occurred while the task was running). Therefore,
            you

            should always write a Job Preparation task to be idempotent and to
            behave

            correctly if run multiple times. The default value is true.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobReleaseTask
          type:
            - object
          description: >-
            The Job Release task for jobs created under this schedule. The
            primary

            purpose of the Job Release task is to undo changes to compute nodes
            made by

            the Job Preparation task. Example activities include deleting local
            files,

            or shutting down services that were started as part of job
            preparation. A

            Job Release task cannot be specified without also specifying a Job

            Preparation task for the job. The Batch service runs the Job Release
            task on

            the compute nodes that have run the Job Preparation task.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.id
          type:
            - string
          description: >-
            A string

            that uniquely identifies the Job Release task within the job. The ID
            can

            contain any combination of alphanumeric characters including hyphens
            and

            underscores and cannot contain more than 64 characters. If you do
            not

            specify this property, the Batch service assigns a default value of

            'jobrelease'. No other task in the job can have the same id as the
            Job

            Release task. If you try to submit a task with the same id, the
            Batch

            service rejects the request with error code
            TaskIdSameAsJobReleaseTask; if

            you are calling the REST API directly, the HTTP status code is 409

            (Conflict).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.commandLine
          type:
            - string
          description: >-
            The

            command line of the Job Release task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.resourceFiles
          type:
            - array
          description: >-
            A

            list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Release task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the Job Release task may run on a
            given

            compute node, measured from the time the task starts. If the task
            does not

            complete within the time limit, the Batch service terminates it. The
            default

            value is 15 minutes. You may not specify a timeout longer than 15
            minutes.

            If you do, the Batch service rejects it with an error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time to retain the task directory for the Job Release
            task on

            the compute node. After this time, the Batch service may delete the
            task

            directory and all its contents. The default is infinite, i.e. the
            task

            directory will be retained until the compute node is removed or
            reimaged.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the Job Release task runs. If omitted,
            the

            task runs as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.commonEnvironmentSettings
          type:
            - array
          description: >-
            A

            list of common environment variable settings. These environment
            variables

            are set for all tasks in jobs created under this schedule (including
            the Job

            Manager, Job Preparation and Job Release tasks). Individual tasks
            can

            override an environment setting specified here by specifying the
            same

            setting name with a different value.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.poolInfo
          type:
            - object
          description: >-
            The

            pool on which the Batch service runs the tasks of jobs created under
            this

            schedule.
        - id: jobScheduleUpdateParameter.jobSpecification.poolInfo.poolId
          type:
            - string
          description: >-
            The ID of an

            existing pool. All the tasks of the job will run on the specified
            pool. You

            must ensure that the pool referenced by this property exists. If the
            pool

            does not exist at the time the Batch service tries to schedule a
            job, no

            tasks for the job will run until you create a pool with that id.
            Note that

            the Batch service will not reject the job request; it will simply
            not run

            tasks until the pool exists. You must specify either the pool ID or
            the auto

            pool specification, but not both.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification
          type:
            - object
          description: >-
            Characteristics for a temporary 'auto pool'. The Batch service will
            create

            this auto pool when the job is submitted. If auto pool creation
            fails, the

            Batch service moves the job to a completed state, and the pool
            creation

            error is set in the job's scheduling error property. The Batch
            service

            manages the lifetime (both creation and, unless keepAlive is
            specified,

            deletion) of the auto pool. Any user actions that affect the
            lifetime of the

            auto pool while the job is active will result in unexpected
            behavior. You

            must specify either the pool ID or the auto pool specification, but
            not

            both.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: >-
            A prefix to be added to the unique identifier when a pool is
            automatically

            created. The Batch service assigns each auto pool a unique
            identifier on

            creation. To distinguish between pools created for different
            purposes, you

            can specify this element to add a prefix to the id that is assigned.
            The

            prefix can be up to 20 characters long.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: >-
            The minimum lifetime of created auto pools, and how multiple jobs on
            a

            schedule are assigned to pools. When the pool lifetime scope is
            jobSchedule

            level, the Batch service keeps track of the last autopool created
            for the

            job schedule, and deletes that pool when the job schedule completes.
            Batch

            will also delete this pool if the user updates the auto pool
            specification

            in a way that changes this lifetime. Possible values include:
            'jobSchedule',

            'job', 'unmapped'
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: >-
            Whether to keep an auto pool alive after its lifetime expires. If
            false, the

            Batch service deletes the pool once its lifetime (as determined by
            the

            poolLifetimeOption setting) expires; that is, when the job or job
            schedule

            completes. If true, the Batch service does not delete the pool

            automatically. It is up to the user to delete auto pools created
            with this

            option.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: The pool specification for the auto pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: >-
            The display name for the pool. The display name need not be unique
            and can

            contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: >-
            The size of the virtual machines in the pool. All virtual machines
            in a pool

            are the same size. For information about available sizes of virtual
            machines

            for Cloud Services pools (pools created with
            cloudServiceConfiguration), see

            Sizes for Cloud Services

            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall. For

            information about available VM sizes for pools using images from the
            Virtual

            Machines Marketplace (pools created with
            virtualMachineConfiguration) see

            Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The cloud service configuration for the pool. This property must be

            specified if the pool needs to be created with Azure PaaS VMs. This
            property

            and virtualMachineConfiguration are mutually exclusive and one of
            the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request). This property cannot be specified if the
            Batch

            account was created with its poolAllocationMode property set to

            'UserSubscription'.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the

            pool. Possible values are: 2 - OS Family 2, equivalent to Windows
            Server

            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 -
            OS

            Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5,
            equivalent

            to Windows Server 2016. For more information, see Azure Guest OS
            Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the

            pool. The default value is * which specifies the latest operating
            system

            version for the specified OS family.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS Version currently installed on the virtual
            machines in

            the pool. This may differ from targetOSVersion if the pool state is

            Upgrading. In this case some virtual machines may be on the
            targetOSVersion

            and some may be on the currentOSVersion during the upgrade process.
            Once all

            virtual machines have upgraded, currentOSVersion is updated to be
            the same

            as targetOSVersion.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The virtual machine configuration for the pool. This property must
            be

            specified if the pool needs to be created with Azure IaaS VMs. This
            property

            and cloudServiceConfiguration are mutually exclusive and one of the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference to the Azure Virtual Machines Marketplace image to use.
            This

            property and osDisk are mutually exclusive and one of the properties
            must be

            specified.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: >-
            The SKU of the Azure Virtual Machines Marketplace image. For
            example,

            14.04.0-LTS or 2012-R2-Datacenter.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: >-
            A reference to the OS disk image to use. This property can be
            specified only

            if the Batch account was created with its poolAllocationMode
            property set to

            'UserSubscription'. This property and imageReference are mutually
            exclusive

            and one of the properties must be specified.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.imageUris
          type:
            - array
          description: >-
            The collection of Virtual Hard Disk (VHD) URIs. All the VHDs must be

            identical and must reside in an Azure Storage account within the
            same

            subscription and same region as the Batch account. For best
            performance, it

            is recommended that each VHD resides in a separate Azure Storage
            account.

            Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute
            nodes.

            You must supply enough VHD URIs to satisfy the 'targetDedicated'
            property of

            the pool. If you do not supply enough VHD URIs, the pool will
            partially

            allocate compute nodes, and a resize error will occur.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type of caching to enable for the OS disk. none - The caching
            mode for

            the disk is not enabled. readOnly - The caching mode for the disk is
            read

            only. readWrite - The caching mode for the disk is read and write.
            The

            default value for caching is none. For information about the caching
            options

            see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of the Batch node agent to be provisioned on compute nodes
            in the

            pool. The Batch node agent is a program that runs on each node in
            the pool,

            and provides the command-and-control interface between the node and
            the

            Batch service. There are different implementations of the node
            agent, known

            as SKUs, for different operating systems. You must specify a node
            agent SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: >-
            The maximum number of tasks that can run concurrently on a single
            compute

            node in the pool. The default value is 1. The maximum value of this
            setting

            depends on the size of the compute nodes in the pool (the vmSize
            setting).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed among compute nodes in the pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: >-
            How tasks should be distributed across compute nodes. Possible
            values

            include: 'spread', 'pack', 'unmapped'
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for allocation of compute nodes to the pool. This
            timeout

            applies only to manual scaling; it has no effect when
            enableAutoScale is set

            to true. The default value is 15 minutes. The minimum value is 5
            minutes. If

            you specify a value less than 5 minutes, the Batch service rejects
            the

            request with an error; if you are calling the REST API directly, the
            HTTP

            status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicated
          type:
            - number
          description: >-
            The desired number of compute nodes in the pool. This property must
            not be

            specified if enableAutoScale is set to true. It is required if

            enableAutoScale is set to false.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should automatically adjust over time. If
            false, the

            targetDedicated element is required. If true, the autoScaleFormula
            element

            is required. The pool automatically resizes according to the
            formula. The

            default value is false.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool.
            This

            property must not be specified if enableAutoScale is set to false.
            It is

            required if enableAutoScale is set to true. The formula is checked
            for

            validity before the pool is created. If the formula is not valid,
            the Batch

            service rejects the request with detailed error information.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval at which to automatically adjust the pool size
            according

            to the autoscale formula. The default value is 15 minutes. The
            minimum and

            maximum value are 5 minutes and 168 hours respectively. If you
            specify a

            value less than 5 minutes or greater than 168 hours, the Batch
            service

            rejects the request with an invalid property value error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool permits direct communication between nodes.
            Enabling

            inter-node communication limits the maximum size of the pool due to

            deployment restrictions on the nodes of the pool. This may result in
            the

            pool not reaching its desired size. The default value is false.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The ARM resource identifier of the virtual network subnet which the
            compute

            nodes of the pool will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. This
            property

            can only be specified for pools created with a
            cloudServiceConfiguration.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: >-
            A task to run on each compute node as it joins the pool. The task
            runs when

            the node is added to the pool or when the node is restarted.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: >-
            The command line of the start task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the start task runs. If omitted, the
            task runs

            as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity under which the task is run. The
            userName and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the task is run. The userName and autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user pool - specifies that the task runs as
            the

            common auto user account which is created on every node in a pool.
            task -

            specifies that the service should create a new user for the task.
            The

            default value is task. Possible values include: 'task', 'pool'
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation level of the auto user. nonAdmin - The auto user is a
            standard

            user without elevated access. admin - The auto user is a user with
            elevated

            access and operates with full Administrator permissions. The default
            value

            is nonAdmin. Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the start task to complete

            successfully (that is, to exit with exit code 0) before scheduling
            any tasks

            on the compute node. If true and the start task fails on a compute
            node, the

            Batch service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and scheduling error detail. If false, the Batch service will
            not wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool. For

            Windows compute nodes, the Batch service installs the certificates
            to the

            specified certificate store and location. For Linux compute nodes,
            the

            certificates are stored in a directory inside the task working
            directory and

            an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            task to

            query for this location. For certificates with visibility of
            'remoteUser', a

            'certs' directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: >-
            The list of application packages to be installed on each compute
            node in the

            pool. This property is currently not supported on auto pools created
            with

            the virtualMachineConfiguration (IaaS) property.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: The list of user accounts to be created on each node in the pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: >-
            A list of name-value pairs associated with the pool as metadata. The
            Batch

            service does not assign any meaning to metadata; it is solely for
            the use of

            user code.
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.metadata
          type:
            - array
          description: >-
            A list

            of name-value pairs associated with each job created under this
            schedule as

            metadata. The Batch service does not assign any meaning to metadata;
            it is

            solely for the use of user code.
          optional: true
        - id: jobScheduleUpdateParameter.metadata
          type:
            - array
          description: >-
            A list of name-value

            pairs associated with the job schedule as metadata. If you do not
            specify

            this element, it takes the default value of an empty list; in
            effect, any

            existing metadata is deleted.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleUpdateOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobScheduleUpdateOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleUpdateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleUpdateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleUpdateOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.jobScheduleUpdateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleUpdateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleUpdateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobScheduleUpdateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function update(jobScheduleId, jobScheduleUpdateParameter, options,
        optionalCallback)
  - uid: 'azure-batch.JobSchedule#disableWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#disableWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'disableWithHttpOperationResponse(jobScheduleId, options)'
    summary: |-
      Disables a job schedule.

      No new jobs will be created until the job schedule is enabled again.
    fullName: >-
      azure-batch.JobSchedule.disableWithHttpOperationResponse(jobScheduleId,
      options)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to disable.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleDisableOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.jobScheduleDisableOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleDisableOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleDisableOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleDisableOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.jobScheduleDisableOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleDisableOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag

            value associated with the version of the resource known to the
            client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleDisableOptions.ifModifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has been modified since the specified time.
          optional: true
        - id: options.jobScheduleDisableOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function disableWithHttpOperationResponse(jobScheduleId, options)'
  - uid: 'azure-batch.JobSchedule#disable'
    id: 'azure-batch.JobSchedule#disable'
    parent: azure-batch.JobSchedule
    name: 'disable(jobScheduleId, options, optionalCallback)'
    summary: |-
      Disables a job schedule.

      No new jobs will be created until the job schedule is enabled again.
    fullName: 'azure-batch.JobSchedule.disable(jobScheduleId, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to disable.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleDisableOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.jobScheduleDisableOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleDisableOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleDisableOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleDisableOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.jobScheduleDisableOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleDisableOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag

            value associated with the version of the resource known to the
            client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleDisableOptions.ifModifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has been modified since the specified time.
          optional: true
        - id: options.jobScheduleDisableOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function disable(jobScheduleId, options, optionalCallback)'
  - uid: 'azure-batch.JobSchedule#enableWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#enableWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'enableWithHttpOperationResponse(jobScheduleId, options)'
    summary: Enables a job schedule.
    fullName: >-
      azure-batch.JobSchedule.enableWithHttpOperationResponse(jobScheduleId,
      options)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to enable.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleEnableOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobScheduleEnableOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleEnableOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleEnableOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleEnableOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.jobScheduleEnableOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleEnableOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleEnableOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobScheduleEnableOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function enableWithHttpOperationResponse(jobScheduleId, options)'
  - uid: 'azure-batch.JobSchedule#enable'
    id: 'azure-batch.JobSchedule#enable'
    parent: azure-batch.JobSchedule
    name: 'enable(jobScheduleId, options, optionalCallback)'
    summary: Enables a job schedule.
    fullName: 'azure-batch.JobSchedule.enable(jobScheduleId, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to enable.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleEnableOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobScheduleEnableOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleEnableOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleEnableOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleEnableOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.jobScheduleEnableOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleEnableOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleEnableOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobScheduleEnableOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function enable(jobScheduleId, options, optionalCallback)'
  - uid: 'azure-batch.JobSchedule#terminateWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#terminateWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'terminateWithHttpOperationResponse(jobScheduleId, options)'
    summary: Terminates a job schedule.
    fullName: >-
      azure-batch.JobSchedule.terminateWithHttpOperationResponse(jobScheduleId,
      options)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to terminates.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleTerminateOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.jobScheduleTerminateOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.jobScheduleTerminateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleTerminateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleTerminateOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.jobScheduleTerminateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleTerminateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag

            value associated with the version of the resource known to the
            client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleTerminateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has been modified since the specified time.
          optional: true
        - id: options.jobScheduleTerminateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function terminateWithHttpOperationResponse(jobScheduleId, options)'
  - uid: 'azure-batch.JobSchedule#terminate'
    id: 'azure-batch.JobSchedule#terminate'
    parent: azure-batch.JobSchedule
    name: 'terminate(jobScheduleId, options, optionalCallback)'
    summary: Terminates a job schedule.
    fullName: >-
      azure-batch.JobSchedule.terminate(jobScheduleId, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to terminates.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleTerminateOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.jobScheduleTerminateOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.jobScheduleTerminateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleTerminateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleTerminateOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.jobScheduleTerminateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobScheduleTerminateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag

            value associated with the version of the resource known to the
            client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobScheduleTerminateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has been modified since the specified time.
          optional: true
        - id: options.jobScheduleTerminateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function terminate(jobScheduleId, options, optionalCallback)'
  - uid: 'azure-batch.JobSchedule#addWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#addWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'addWithHttpOperationResponse(cloudJobSchedule, options)'
    summary: Adds a job schedule to the specified account.
    fullName: >-
      azure-batch.JobSchedule.addWithHttpOperationResponse(cloudJobSchedule,
      options)
    type: Method
    syntax:
      parameters:
        - id: cloudJobSchedule
          type:
            - object
          description: The job schedule to be added.
        - id: cloudJobSchedule.id
          type:
            - string
          description: >-
            A string that uniquely identifies the

            schedule within the account. The ID can contain any combination of

            alphanumeric characters including hyphens and underscores, and
            cannot

            contain more than 64 characters. The id is case-preserving and

            case-insensitive (that is, you may not have two ids within an
            account that

            differ only by case).
        - id: cloudJobSchedule.displayName
          type:
            - string
          description: >-
            The display name for the

            schedule. The display name need not be unique and can contain any
            Unicode

            characters up to a maximum length of 1024.
          optional: true
        - id: cloudJobSchedule.schedule
          type:
            - object
          description: |-
            The schedule according to which
            jobs will be created.
        - id: cloudJobSchedule.schedule.doNotRunUntil
          type:
            - date
          description: >-
            The earliest time at

            which any job may be created under this job schedule. If you do not
            specify

            a doNotRunUntil time, the schedule becomes ready to create jobs
            immediately.
          optional: true
        - id: cloudJobSchedule.schedule.doNotRunAfter
          type:
            - date
          description: >-
            A time after which

            no job will be created under this job schedule. The schedule will
            move to

            the completed state as soon as this deadline is past and there is no
            active

            job under this job schedule. If you do not specify a doNotRunAfter
            time, and

            you are creating a recurring job schedule, the job schedule will
            remain

            active until you explicitly terminate it.
          optional: true
        - id: cloudJobSchedule.schedule.startWindow
          type:
            - azure-batch.moment.duration
          description: >-
            The time

            interval, starting from the time at which the schedule indicates a
            job

            should be created, within which a job must be created. If a job is
            not

            created within the startWindow interval, then the 'opportunity' is
            lost; no

            job will be created until the next recurrence of the schedule. If
            the

            schedule is recurring, and the startWindow is longer than the
            recurrence

            interval, then this is equivalent to an infinite startWindow,
            because the

            job that is 'due' in one recurrenceInterval is not carried forward
            into the

            next recurrence interval. The default is infinite. The minimum value
            is 1

            minute. If you specify a lower value, the Batch service rejects the
            schedule

            with an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: cloudJobSchedule.schedule.recurrenceInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The

            time interval between the start times of two successive jobs under
            the job

            schedule. A job schedule can have at most one active job under it at
            any

            given time. Because a job schedule can have at most one active job
            under it

            at any given time, if it is time to create a new job under a job
            schedule,

            but the previous job is still running, the Batch service will not
            create the

            new job until the previous job finishes. If the previous job does
            not finish

            within the startWindow period of the new recurrenceInterval, then no
            new job

            will be scheduled for that interval. For recurring jobs, you should
            normally

            specify a jobManagerTask in the jobSpecification. If you do not use

            jobManagerTask, you will need an external process to monitor when
            jobs are

            created, add tasks to the jobs and terminate the jobs ready for the
            next

            recurrence. The default is that the schedule does not recur: one job
            is

            created, within the startWindow after the doNotRunUntil time, and
            the

            schedule is complete as soon as that job finishes. The minimum value
            is 1

            minute. If you specify a lower value, the Batch service rejects the
            schedule

            with an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: cloudJobSchedule.jobSpecification
          type:
            - object
          description: |-
            The details of the jobs to
            be created on this schedule.
        - id: cloudJobSchedule.jobSpecification.priority
          type:
            - number
          description: >-
            The priority of

            jobs created under this schedule. Priority values can range from
            -1000 to

            1000, with -1000 being the lowest priority and 1000 being the
            highest

            priority. The default value is 0. This priority is used as the
            default for

            all jobs under the job schedule. You can update a job's priority
            after it

            has been created using by using the update job API.
          optional: true
        - id: cloudJobSchedule.jobSpecification.displayName
          type:
            - string
          description: >-
            The display

            name for jobs created under this schedule. The name need not be
            unique and

            can contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: cloudJobSchedule.jobSpecification.usesTaskDependencies
          type:
            - boolean
          description: >-
            The flag that determines if this job will use tasks with
            dependencies.
          optional: true
        - id: cloudJobSchedule.jobSpecification.onAllTasksComplete
          type:
            - string
          description: >-
            The

            action the Batch service should take when all tasks in a job created
            under

            this schedule are in the completed state. Note that if a job
            contains no

            tasks, then all tasks are considered complete. This option is
            therefore most

            commonly used with a Job Manager task; if you want to use automatic
            job

            termination without a Job Manager, you should initially set

            onAllTasksComplete to noAction and update the job properties to set

            onAllTasksComplete to terminateJob once you have finished adding
            tasks. The

            default is noAction. Possible values include: 'noAction',
            'terminateJob'
          optional: true
        - id: cloudJobSchedule.jobSpecification.onTaskFailure
          type:
            - string
          description: >-
            The action

            the Batch service should take when any task fails in a job created
            under

            this schedule. A task is considered to have failed if it completes
            with a

            non-zero exit code and has exhausted its retry count, or if it had a

            scheduling error. The default is noAction. Possible values include:

            'noAction', 'performExitOptionsJobAction'
          optional: true
        - id: cloudJobSchedule.jobSpecification.constraints
          type:
            - object
          description: |-
            The
            execution constraints for jobs created under this schedule.
          optional: true
        - id: cloudJobSchedule.jobSpecification.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum

            elapsed time that the job may run, measured from the time the job is

            created. If the job does not complete within the time limit, the
            Batch

            service terminates it and any tasks that are still running. In this
            case,

            the termination reason will be MaxWallClockTimeExpiry. If this
            property is

            not specified, there is no time limit on how long the job may run.
          optional: true
        - id: cloudJobSchedule.jobSpecification.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The

            maximum number of times each task may be retried. The Batch service
            retries

            a task if its exit code is nonzero. Note that this value
            specifically

            controls the number of retries. The Batch service will try each task
            once,

            and may then retry up to this limit. For example, if the maximum
            retry count

            is 3, Batch tries a task up to 4 times (one initial try and 3
            retries). If

            the maximum retry count is 0, the Batch service does not retry
            tasks. If the

            maximum retry count is -1, the Batch service retries tasks without
            limit.

            The default value is 0 (no retries).
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask
          type:
            - object
          description: >-
            The

            details of a Job Manager task to be launched when a job is started
            under

            this schedule. If the job does not specify a Job Manager task, the
            user must

            explicitly add tasks to the job using the Task API. If the job does
            specify

            a Job Manager task, the Batch service creates the Job Manager task
            when the

            job is created, and will try to schedule the Job Manager task before

            scheduling other tasks in the job.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.id
          type:
            - string
          description: >-
            A string

            that uniquely identifies the Job Manager taskwithin the job. The id
            can

            contain any combination of alphanumeric characters including hyphens
            and

            underscores and cannot contain more than 64 characters.
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.displayName
          type:
            - string
          description: >-
            The display

            name of the Job Manager task. It need not be unique and can contain
            any

            Unicode characters up to a maximum length of 1024.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.commandLine
          type:
            - string
          description: >-
            The command line of the Job Manager task. The command line does not
            run

            under a shell, and therefore cannot take advantage of shell features
            such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.resourceFiles
          type:
            - array
          description: >-
            A list of

            files that the Batch service will download to the compute node
            before

            running the command line. Files listed under this element are
            located in the

            task's working directory.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.environmentSettings
          type:
            - array
          description: |-
            A
            list of environment variable settings for the Job Manager task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.constraints
          type:
            - object
          description: |-
            Constraints
            that apply to the Job Manager task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: >-
            Whether completion of the Job Manager task signifies completion of
            the

            entire job. If true, when the Job Manager task completes, the Batch
            service

            marks the job as complete. If any tasks are still running at this
            time

            (other than Job Release), those tasks are terminated. If false, the

            completion of the Job Manager task does not affect the job status.
            In this

            case, you should either use the onAllTasksComplete attribute to
            terminate

            the job, or have a client or user terminate the job explicitly. An
            example

            of this is if the Job Manager creates a set of tasks but then takes
            no

            further role in their execution. The default value is true. If you
            are using

            the onAllTasksComplete and onTaskFailure attributes to control job
            lifetime,

            and using the Job Manager task only to create the tasks for the job
            (not to

            monitor progress), then it is important to set killJobOnCompletion
            to false.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.userIdentity
          type:
            - object
          description: >-
            The user

            identity under which the Job Manager task runs. If omitted, the task
            runs as

            a non-administrative user unique to the task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.runExclusive
          type:
            - boolean
          description: >-
            Whether the

            Job Manager task requires exclusive use of the compute node where it
            runs.

            If true, no other tasks will run on the same compute node for as
            long as the

            Job Manager is running. If false, other tasks can run simultaneously
            with

            the Job Manager on a compute node. The Job Manager task counts
            normally

            against the node's concurrent task limit, so this is only relevant
            if the

            node allows multiple concurrent tasks. The default value is true.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: >-
            A list of application packages that the Batch service will deploy to
            the

            compute node before running the command line. Application packages
            are

            downloaded and deployed to a shared directory, not the task
            directory.

            Therefore, if a referenced package is already on the compute node,
            and is up

            to date, then it is not re-downloaded; the existing copy on the
            compute node

            is used. If a referenced application package cannot be installed,
            for

            example because the package has been deleted or because download
            failed, the

            task fails with a scheduling error. This property is currently not
            supported

            on jobs running on pools created using the
            virtualMachineConfiguration

            (IaaS) property. If a task specifying applicationPackageReferences
            runs on

            such a pool, it fails with a scheduling error with code

            TaskSchedulingConstraintFailed.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: >-
            The settings for an authentication token that the task can use to
            perform

            Batch service operations. If this property is set, the Batch service

            provides the task with an authentication token which can be used to

            authenticate Batch service operations without requiring an account
            access

            key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN
            environment

            variable. The operations that the task can carry out using the token
            depend

            on the settings. For example, a task can request job permissions in
            order to

            add other tasks to the job, or check the status of the job or of
            other tasks

            under the job.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: >-
            The Batch resources to which the token grants access. The
            authentication

            token grants access to a limited set of Batch service operations.
            Currently

            the only supported value for the access property is 'job', which
            grants

            access to all operations related to the job which contains the task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask
          type:
            - object
          description: >-
            The

            Job Preparation task for jobs created under this schedule. If a job
            has a

            Job Preparation task, the Batch service will run the Job Preparation
            task on

            a compute node before starting any tasks of that job on that compute
            node.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.id
          type:
            - string
          description: >-
            A

            string that uniquely identifies the Job Preparation task within the
            job. The

            ID can contain any combination of alphanumeric characters including
            hyphens

            and underscores and cannot contain more than 64 characters. If you
            do not

            specify this property, the Batch service assigns a default value of

            'jobpreparation'. No other task in the job can have the same id as
            the Job

            Preparation task. If you try to submit a task with the same id, the
            Batch

            service rejects the request with error code
            TaskIdSameAsJobPreparationTask;

            if you are calling the REST API directly, the HTTP status code is
            409

            (Conflict).
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.commandLine
          type:
            - string
          description: >-
            The command

            line of the Job Preparation task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.resourceFiles
          type:
            - array
          description: >-
            A list

            of files that the Batch service will download to the compute node
            before

            running the command line. Files listed under this element are
            located in the

            task's working directory.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.environmentSettings
          type:
            - array
          description: |-
            A
            list of environment variable settings for the Job Preparation task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Preparation task.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the task may run, measured from the
            time the

            task starts. If the task does not complete within the time limit,
            the Batch

            service terminates it. If this is not specified, there is no time
            limit on

            how long the task may run.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time to retain the task directory on the compute node
            where it

            ran, from the time it completes execution. After this time, the
            Batch

            service may delete the task directory and all its contents. The
            default is

            infinite, i.e. the task directory will be retained until the compute
            node is

            removed or reimaged.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the Job Preparation task
            to

            complete successfully before scheduling any other tasks of the job
            on the

            compute node. If true and the Job Preparation task fails on a
            compute node,

            the Batch service retries the Job Preparation task up to its maximum
            retry

            count (as specified in the constraints element). If the task has
            still not

            completed successfully after all retries, then the Batch service
            will not

            schedule tasks of the job to the compute node. The compute node
            remains

            active and eligible to run tasks of other jobs. If false, the Batch
            service

            will not wait for the Job Preparation task to complete. In this
            case, other

            tasks of the job can start executing on the compute node while the
            Job

            Preparation task is still running; and even if the Job Preparation
            task

            fails, new tasks will continue to be scheduled on the node. The
            default

            value is true.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.userIdentity
          type:
            - object
          description: >-
            The user

            identity under which the Job Preparation task runs. If omitted, the
            task

            runs as a non-administrative user unique to the task.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should rerun the Job Preparation task
            after a

            compute node reboots. The Job Preparation task is always rerun if a
            compute

            node is reimaged, or if the Job Preparation task did not complete
            (e.g.

            because the reboot occurred while the task was running). Therefore,
            you

            should always write a Job Preparation task to be idempotent and to
            behave

            correctly if run multiple times. The default value is true.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask
          type:
            - object
          description: >-
            The Job

            Release task for jobs created under this schedule. The primary
            purpose of

            the Job Release task is to undo changes to compute nodes made by the
            Job

            Preparation task. Example activities include deleting local files,
            or

            shutting down services that were started as part of job preparation.
            A Job

            Release task cannot be specified without also specifying a Job
            Preparation

            task for the job. The Batch service runs the Job Release task on the
            compute

            nodes that have run the Job Preparation task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.id
          type:
            - string
          description: >-
            A

            string that uniquely identifies the Job Release task within the job.
            The ID

            can contain any combination of alphanumeric characters including
            hyphens and

            underscores and cannot contain more than 64 characters. If you do
            not

            specify this property, the Batch service assigns a default value of

            'jobrelease'. No other task in the job can have the same id as the
            Job

            Release task. If you try to submit a task with the same id, the
            Batch

            service rejects the request with error code
            TaskIdSameAsJobReleaseTask; if

            you are calling the REST API directly, the HTTP status code is 409

            (Conflict).
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.commandLine
          type:
            - string
          description: >-
            The command line of the Job Release task. The command line does not
            run

            under a shell, and therefore cannot take advantage of shell features
            such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.resourceFiles
          type:
            - array
          description: >-
            A list of

            files that the Batch service will download to the compute node
            before

            running the command line. Files listed under this element are
            located in the

            task's working directory.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.environmentSettings
          type:
            - array
          description: |-
            A
            list of environment variable settings for the Job Release task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The

            maximum elapsed time that the Job Release task may run on a given
            compute

            node, measured from the time the task starts. If the task does not
            complete

            within the time limit, the Batch service terminates it. The default
            value is

            15 minutes. You may not specify a timeout longer than 15 minutes. If
            you do,

            the Batch service rejects it with an error; if you are calling the
            REST API

            directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum

            time to retain the task directory for the Job Release task on the
            compute

            node. After this time, the Batch service may delete the task
            directory and

            all its contents. The default is infinite, i.e. the task directory
            will be

            retained until the compute node is removed or reimaged.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.userIdentity
          type:
            - object
          description: >-
            The user

            identity under which the Job Release task runs. If omitted, the task
            runs as

            a non-administrative user unique to the task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.commonEnvironmentSettings
          type:
            - array
          description: >-
            A list of common environment variable settings. These environment
            variables

            are set for all tasks in jobs created under this schedule (including
            the Job

            Manager, Job Preparation and Job Release tasks). Individual tasks
            can

            override an environment setting specified here by specifying the
            same

            setting name with a different value.
          optional: true
        - id: cloudJobSchedule.jobSpecification.poolInfo
          type:
            - object
          description: >-
            The pool on which

            the Batch service runs the tasks of jobs created under this
            schedule.
        - id: cloudJobSchedule.jobSpecification.poolInfo.poolId
          type:
            - string
          description: >-
            The ID

            of an existing pool. All the tasks of the job will run on the
            specified

            pool. You must ensure that the pool referenced by this property
            exists. If

            the pool does not exist at the time the Batch service tries to
            schedule a

            job, no tasks for the job will run until you create a pool with that
            id.

            Note that the Batch service will not reject the job request; it will
            simply

            not run tasks until the pool exists. You must specify either the
            pool ID or

            the auto pool specification, but not both.
          optional: true
        - id: cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification
          type:
            - object
          description: >-
            Characteristics for a temporary 'auto pool'. The Batch service will
            create

            this auto pool when the job is submitted. If auto pool creation
            fails, the

            Batch service moves the job to a completed state, and the pool
            creation

            error is set in the job's scheduling error property. The Batch
            service

            manages the lifetime (both creation and, unless keepAlive is
            specified,

            deletion) of the auto pool. Any user actions that affect the
            lifetime of the

            auto pool while the job is active will result in unexpected
            behavior. You

            must specify either the pool ID or the auto pool specification, but
            not

            both.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: >-
            A prefix to be added to the unique identifier when a pool is
            automatically

            created. The Batch service assigns each auto pool a unique
            identifier on

            creation. To distinguish between pools created for different
            purposes, you

            can specify this element to add a prefix to the id that is assigned.
            The

            prefix can be up to 20 characters long.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: >-
            The minimum lifetime of created auto pools, and how multiple jobs on
            a

            schedule are assigned to pools. When the pool lifetime scope is
            jobSchedule

            level, the Batch service keeps track of the last autopool created
            for the

            job schedule, and deletes that pool when the job schedule completes.
            Batch

            will also delete this pool if the user updates the auto pool
            specification

            in a way that changes this lifetime. Possible values include:
            'jobSchedule',

            'job', 'unmapped'
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: >-
            Whether to keep an auto pool alive after its lifetime expires. If
            false, the

            Batch service deletes the pool once its lifetime (as determined by
            the

            poolLifetimeOption setting) expires; that is, when the job or job
            schedule

            completes. If true, the Batch service does not delete the pool

            automatically. It is up to the user to delete auto pools created
            with this

            option.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: |-
            The
            pool specification for the auto pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: >-
            The display name for the pool. The display name need not be unique
            and can

            contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: >-
            The size of the virtual machines in the pool. All virtual machines
            in a pool

            are the same size. For information about available sizes of virtual
            machines

            for Cloud Services pools (pools created with
            cloudServiceConfiguration), see

            Sizes for Cloud Services

            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall. For

            information about available VM sizes for pools using images from the
            Virtual

            Machines Marketplace (pools created with
            virtualMachineConfiguration) see

            Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The cloud service configuration for the pool. This property must be

            specified if the pool needs to be created with Azure PaaS VMs. This
            property

            and virtualMachineConfiguration are mutually exclusive and one of
            the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request). This property cannot be specified if the
            Batch

            account was created with its poolAllocationMode property set to

            'UserSubscription'.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the

            pool. Possible values are: 2 - OS Family 2, equivalent to Windows
            Server

            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 -
            OS

            Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5,
            equivalent

            to Windows Server 2016. For more information, see Azure Guest OS
            Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the

            pool. The default value is * which specifies the latest operating
            system

            version for the specified OS family.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS Version currently installed on the virtual
            machines in

            the pool. This may differ from targetOSVersion if the pool state is

            Upgrading. In this case some virtual machines may be on the
            targetOSVersion

            and some may be on the currentOSVersion during the upgrade process.
            Once all

            virtual machines have upgraded, currentOSVersion is updated to be
            the same

            as targetOSVersion.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The virtual machine configuration for the pool. This property must
            be

            specified if the pool needs to be created with Azure IaaS VMs. This
            property

            and cloudServiceConfiguration are mutually exclusive and one of the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference to the Azure Virtual Machines Marketplace image to use.
            This

            property and osDisk are mutually exclusive and one of the properties
            must be

            specified.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: >-
            The SKU of the Azure Virtual Machines Marketplace image. For
            example,

            14.04.0-LTS or 2012-R2-Datacenter.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: >-
            A reference to the OS disk image to use. This property can be
            specified only

            if the Batch account was created with its poolAllocationMode
            property set to

            'UserSubscription'. This property and imageReference are mutually
            exclusive

            and one of the properties must be specified.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.imageUris
          type:
            - array
          description: >-
            The collection of Virtual Hard Disk (VHD) URIs. All the VHDs must be

            identical and must reside in an Azure Storage account within the
            same

            subscription and same region as the Batch account. For best
            performance, it

            is recommended that each VHD resides in a separate Azure Storage
            account.

            Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute
            nodes.

            You must supply enough VHD URIs to satisfy the 'targetDedicated'
            property of

            the pool. If you do not supply enough VHD URIs, the pool will
            partially

            allocate compute nodes, and a resize error will occur.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type of caching to enable for the OS disk. none - The caching
            mode for

            the disk is not enabled. readOnly - The caching mode for the disk is
            read

            only. readWrite - The caching mode for the disk is read and write.
            The

            default value for caching is none. For information about the caching
            options

            see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of the Batch node agent to be provisioned on compute nodes
            in the

            pool. The Batch node agent is a program that runs on each node in
            the pool,

            and provides the command-and-control interface between the node and
            the

            Batch service. There are different implementations of the node
            agent, known

            as SKUs, for different operating systems. You must specify a node
            agent SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: >-
            The maximum number of tasks that can run concurrently on a single
            compute

            node in the pool. The default value is 1. The maximum value of this
            setting

            depends on the size of the compute nodes in the pool (the vmSize
            setting).
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed among compute nodes in the pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: >-
            How tasks should be distributed across compute nodes. Possible
            values

            include: 'spread', 'pack', 'unmapped'
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for allocation of compute nodes to the pool. This
            timeout

            applies only to manual scaling; it has no effect when
            enableAutoScale is set

            to true. The default value is 15 minutes. The minimum value is 5
            minutes. If

            you specify a value less than 5 minutes, the Batch service rejects
            the

            request with an error; if you are calling the REST API directly, the
            HTTP

            status code is 400 (Bad Request).
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicated
          type:
            - number
          description: >-
            The desired number of compute nodes in the pool. This property must
            not be

            specified if enableAutoScale is set to true. It is required if

            enableAutoScale is set to false.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should automatically adjust over time. If
            false, the

            targetDedicated element is required. If true, the autoScaleFormula
            element

            is required. The pool automatically resizes according to the
            formula. The

            default value is false.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool.
            This

            property must not be specified if enableAutoScale is set to false.
            It is

            required if enableAutoScale is set to true. The formula is checked
            for

            validity before the pool is created. If the formula is not valid,
            the Batch

            service rejects the request with detailed error information.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval at which to automatically adjust the pool size
            according

            to the autoscale formula. The default value is 15 minutes. The
            minimum and

            maximum value are 5 minutes and 168 hours respectively. If you
            specify a

            value less than 5 minutes or greater than 168 hours, the Batch
            service

            rejects the request with an invalid property value error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool permits direct communication between nodes.
            Enabling

            inter-node communication limits the maximum size of the pool due to

            deployment restrictions on the nodes of the pool. This may result in
            the

            pool not reaching its desired size. The default value is false.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The ARM resource identifier of the virtual network subnet which the
            compute

            nodes of the pool will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. This
            property

            can only be specified for pools created with a
            cloudServiceConfiguration.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: >-
            A task to run on each compute node as it joins the pool. The task
            runs when

            the node is added to the pool or when the node is restarted.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: >-
            The command line of the start task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the start task runs. If omitted, the
            task runs

            as a non-administrative user unique to the task.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity under which the task is run. The
            userName and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the task is run. The userName and autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user pool - specifies that the task runs as
            the

            common auto user account which is created on every node in a pool.
            task -

            specifies that the service should create a new user for the task.
            The

            default value is task. Possible values include: 'task', 'pool'
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation level of the auto user. nonAdmin - The auto user is a
            standard

            user without elevated access. admin - The auto user is a user with
            elevated

            access and operates with full Administrator permissions. The default
            value

            is nonAdmin. Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the start task to complete

            successfully (that is, to exit with exit code 0) before scheduling
            any tasks

            on the compute node. If true and the start task fails on a compute
            node, the

            Batch service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and scheduling error detail. If false, the Batch service will
            not wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool. For

            Windows compute nodes, the Batch service installs the certificates
            to the

            specified certificate store and location. For Linux compute nodes,
            the

            certificates are stored in a directory inside the task working
            directory and

            an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            task to

            query for this location. For certificates with visibility of
            'remoteUser', a

            'certs' directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: >-
            The list of application packages to be installed on each compute
            node in the

            pool. This property is currently not supported on auto pools created
            with

            the virtualMachineConfiguration (IaaS) property.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: The list of user accounts to be created on each node in the pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: >-
            A list of name-value pairs associated with the pool as metadata. The
            Batch

            service does not assign any meaning to metadata; it is solely for
            the use of

            user code.
          optional: true
        - id: cloudJobSchedule.jobSpecification.metadata
          type:
            - array
          description: >-
            A list of

            name-value pairs associated with each job created under this
            schedule as

            metadata. The Batch service does not assign any meaning to metadata;
            it is

            solely for the use of user code.
          optional: true
        - id: cloudJobSchedule.metadata
          type:
            - array
          description: >-
            A list of name-value pairs

            associated with the schedule as metadata. The Batch service does not
            assign

            any meaning to metadata; it is solely for the use of user code.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleAddOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobScheduleAddOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleAddOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleAddOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleAddOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function addWithHttpOperationResponse(cloudJobSchedule, options)'
  - uid: 'azure-batch.JobSchedule#add'
    id: 'azure-batch.JobSchedule#add'
    parent: azure-batch.JobSchedule
    name: 'add(cloudJobSchedule, options, optionalCallback)'
    summary: Adds a job schedule to the specified account.
    fullName: 'azure-batch.JobSchedule.add(cloudJobSchedule, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: cloudJobSchedule
          type:
            - object
          description: The job schedule to be added.
        - id: cloudJobSchedule.id
          type:
            - string
          description: >-
            A string that uniquely identifies the

            schedule within the account. The ID can contain any combination of

            alphanumeric characters including hyphens and underscores, and
            cannot

            contain more than 64 characters. The id is case-preserving and

            case-insensitive (that is, you may not have two ids within an
            account that

            differ only by case).
        - id: cloudJobSchedule.displayName
          type:
            - string
          description: >-
            The display name for the

            schedule. The display name need not be unique and can contain any
            Unicode

            characters up to a maximum length of 1024.
          optional: true
        - id: cloudJobSchedule.schedule
          type:
            - object
          description: |-
            The schedule according to which
            jobs will be created.
        - id: cloudJobSchedule.schedule.doNotRunUntil
          type:
            - date
          description: >-
            The earliest time at

            which any job may be created under this job schedule. If you do not
            specify

            a doNotRunUntil time, the schedule becomes ready to create jobs
            immediately.
          optional: true
        - id: cloudJobSchedule.schedule.doNotRunAfter
          type:
            - date
          description: >-
            A time after which

            no job will be created under this job schedule. The schedule will
            move to

            the completed state as soon as this deadline is past and there is no
            active

            job under this job schedule. If you do not specify a doNotRunAfter
            time, and

            you are creating a recurring job schedule, the job schedule will
            remain

            active until you explicitly terminate it.
          optional: true
        - id: cloudJobSchedule.schedule.startWindow
          type:
            - azure-batch.moment.duration
          description: >-
            The time

            interval, starting from the time at which the schedule indicates a
            job

            should be created, within which a job must be created. If a job is
            not

            created within the startWindow interval, then the 'opportunity' is
            lost; no

            job will be created until the next recurrence of the schedule. If
            the

            schedule is recurring, and the startWindow is longer than the
            recurrence

            interval, then this is equivalent to an infinite startWindow,
            because the

            job that is 'due' in one recurrenceInterval is not carried forward
            into the

            next recurrence interval. The default is infinite. The minimum value
            is 1

            minute. If you specify a lower value, the Batch service rejects the
            schedule

            with an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: cloudJobSchedule.schedule.recurrenceInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The

            time interval between the start times of two successive jobs under
            the job

            schedule. A job schedule can have at most one active job under it at
            any

            given time. Because a job schedule can have at most one active job
            under it

            at any given time, if it is time to create a new job under a job
            schedule,

            but the previous job is still running, the Batch service will not
            create the

            new job until the previous job finishes. If the previous job does
            not finish

            within the startWindow period of the new recurrenceInterval, then no
            new job

            will be scheduled for that interval. For recurring jobs, you should
            normally

            specify a jobManagerTask in the jobSpecification. If you do not use

            jobManagerTask, you will need an external process to monitor when
            jobs are

            created, add tasks to the jobs and terminate the jobs ready for the
            next

            recurrence. The default is that the schedule does not recur: one job
            is

            created, within the startWindow after the doNotRunUntil time, and
            the

            schedule is complete as soon as that job finishes. The minimum value
            is 1

            minute. If you specify a lower value, the Batch service rejects the
            schedule

            with an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: cloudJobSchedule.jobSpecification
          type:
            - object
          description: |-
            The details of the jobs to
            be created on this schedule.
        - id: cloudJobSchedule.jobSpecification.priority
          type:
            - number
          description: >-
            The priority of

            jobs created under this schedule. Priority values can range from
            -1000 to

            1000, with -1000 being the lowest priority and 1000 being the
            highest

            priority. The default value is 0. This priority is used as the
            default for

            all jobs under the job schedule. You can update a job's priority
            after it

            has been created using by using the update job API.
          optional: true
        - id: cloudJobSchedule.jobSpecification.displayName
          type:
            - string
          description: >-
            The display

            name for jobs created under this schedule. The name need not be
            unique and

            can contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: cloudJobSchedule.jobSpecification.usesTaskDependencies
          type:
            - boolean
          description: >-
            The flag that determines if this job will use tasks with
            dependencies.
          optional: true
        - id: cloudJobSchedule.jobSpecification.onAllTasksComplete
          type:
            - string
          description: >-
            The

            action the Batch service should take when all tasks in a job created
            under

            this schedule are in the completed state. Note that if a job
            contains no

            tasks, then all tasks are considered complete. This option is
            therefore most

            commonly used with a Job Manager task; if you want to use automatic
            job

            termination without a Job Manager, you should initially set

            onAllTasksComplete to noAction and update the job properties to set

            onAllTasksComplete to terminateJob once you have finished adding
            tasks. The

            default is noAction. Possible values include: 'noAction',
            'terminateJob'
          optional: true
        - id: cloudJobSchedule.jobSpecification.onTaskFailure
          type:
            - string
          description: >-
            The action

            the Batch service should take when any task fails in a job created
            under

            this schedule. A task is considered to have failed if it completes
            with a

            non-zero exit code and has exhausted its retry count, or if it had a

            scheduling error. The default is noAction. Possible values include:

            'noAction', 'performExitOptionsJobAction'
          optional: true
        - id: cloudJobSchedule.jobSpecification.constraints
          type:
            - object
          description: |-
            The
            execution constraints for jobs created under this schedule.
          optional: true
        - id: cloudJobSchedule.jobSpecification.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum

            elapsed time that the job may run, measured from the time the job is

            created. If the job does not complete within the time limit, the
            Batch

            service terminates it and any tasks that are still running. In this
            case,

            the termination reason will be MaxWallClockTimeExpiry. If this
            property is

            not specified, there is no time limit on how long the job may run.
          optional: true
        - id: cloudJobSchedule.jobSpecification.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The

            maximum number of times each task may be retried. The Batch service
            retries

            a task if its exit code is nonzero. Note that this value
            specifically

            controls the number of retries. The Batch service will try each task
            once,

            and may then retry up to this limit. For example, if the maximum
            retry count

            is 3, Batch tries a task up to 4 times (one initial try and 3
            retries). If

            the maximum retry count is 0, the Batch service does not retry
            tasks. If the

            maximum retry count is -1, the Batch service retries tasks without
            limit.

            The default value is 0 (no retries).
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask
          type:
            - object
          description: >-
            The

            details of a Job Manager task to be launched when a job is started
            under

            this schedule. If the job does not specify a Job Manager task, the
            user must

            explicitly add tasks to the job using the Task API. If the job does
            specify

            a Job Manager task, the Batch service creates the Job Manager task
            when the

            job is created, and will try to schedule the Job Manager task before

            scheduling other tasks in the job.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.id
          type:
            - string
          description: >-
            A string

            that uniquely identifies the Job Manager taskwithin the job. The id
            can

            contain any combination of alphanumeric characters including hyphens
            and

            underscores and cannot contain more than 64 characters.
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.displayName
          type:
            - string
          description: >-
            The display

            name of the Job Manager task. It need not be unique and can contain
            any

            Unicode characters up to a maximum length of 1024.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.commandLine
          type:
            - string
          description: >-
            The command line of the Job Manager task. The command line does not
            run

            under a shell, and therefore cannot take advantage of shell features
            such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.resourceFiles
          type:
            - array
          description: >-
            A list of

            files that the Batch service will download to the compute node
            before

            running the command line. Files listed under this element are
            located in the

            task's working directory.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.environmentSettings
          type:
            - array
          description: |-
            A
            list of environment variable settings for the Job Manager task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.constraints
          type:
            - object
          description: |-
            Constraints
            that apply to the Job Manager task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: >-
            Whether completion of the Job Manager task signifies completion of
            the

            entire job. If true, when the Job Manager task completes, the Batch
            service

            marks the job as complete. If any tasks are still running at this
            time

            (other than Job Release), those tasks are terminated. If false, the

            completion of the Job Manager task does not affect the job status.
            In this

            case, you should either use the onAllTasksComplete attribute to
            terminate

            the job, or have a client or user terminate the job explicitly. An
            example

            of this is if the Job Manager creates a set of tasks but then takes
            no

            further role in their execution. The default value is true. If you
            are using

            the onAllTasksComplete and onTaskFailure attributes to control job
            lifetime,

            and using the Job Manager task only to create the tasks for the job
            (not to

            monitor progress), then it is important to set killJobOnCompletion
            to false.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.userIdentity
          type:
            - object
          description: >-
            The user

            identity under which the Job Manager task runs. If omitted, the task
            runs as

            a non-administrative user unique to the task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.runExclusive
          type:
            - boolean
          description: >-
            Whether the

            Job Manager task requires exclusive use of the compute node where it
            runs.

            If true, no other tasks will run on the same compute node for as
            long as the

            Job Manager is running. If false, other tasks can run simultaneously
            with

            the Job Manager on a compute node. The Job Manager task counts
            normally

            against the node's concurrent task limit, so this is only relevant
            if the

            node allows multiple concurrent tasks. The default value is true.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: >-
            A list of application packages that the Batch service will deploy to
            the

            compute node before running the command line. Application packages
            are

            downloaded and deployed to a shared directory, not the task
            directory.

            Therefore, if a referenced package is already on the compute node,
            and is up

            to date, then it is not re-downloaded; the existing copy on the
            compute node

            is used. If a referenced application package cannot be installed,
            for

            example because the package has been deleted or because download
            failed, the

            task fails with a scheduling error. This property is currently not
            supported

            on jobs running on pools created using the
            virtualMachineConfiguration

            (IaaS) property. If a task specifying applicationPackageReferences
            runs on

            such a pool, it fails with a scheduling error with code

            TaskSchedulingConstraintFailed.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: >-
            The settings for an authentication token that the task can use to
            perform

            Batch service operations. If this property is set, the Batch service

            provides the task with an authentication token which can be used to

            authenticate Batch service operations without requiring an account
            access

            key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN
            environment

            variable. The operations that the task can carry out using the token
            depend

            on the settings. For example, a task can request job permissions in
            order to

            add other tasks to the job, or check the status of the job or of
            other tasks

            under the job.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: >-
            The Batch resources to which the token grants access. The
            authentication

            token grants access to a limited set of Batch service operations.
            Currently

            the only supported value for the access property is 'job', which
            grants

            access to all operations related to the job which contains the task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask
          type:
            - object
          description: >-
            The

            Job Preparation task for jobs created under this schedule. If a job
            has a

            Job Preparation task, the Batch service will run the Job Preparation
            task on

            a compute node before starting any tasks of that job on that compute
            node.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.id
          type:
            - string
          description: >-
            A

            string that uniquely identifies the Job Preparation task within the
            job. The

            ID can contain any combination of alphanumeric characters including
            hyphens

            and underscores and cannot contain more than 64 characters. If you
            do not

            specify this property, the Batch service assigns a default value of

            'jobpreparation'. No other task in the job can have the same id as
            the Job

            Preparation task. If you try to submit a task with the same id, the
            Batch

            service rejects the request with error code
            TaskIdSameAsJobPreparationTask;

            if you are calling the REST API directly, the HTTP status code is
            409

            (Conflict).
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.commandLine
          type:
            - string
          description: >-
            The command

            line of the Job Preparation task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.resourceFiles
          type:
            - array
          description: >-
            A list

            of files that the Batch service will download to the compute node
            before

            running the command line. Files listed under this element are
            located in the

            task's working directory.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.environmentSettings
          type:
            - array
          description: |-
            A
            list of environment variable settings for the Job Preparation task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Preparation task.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the task may run, measured from the
            time the

            task starts. If the task does not complete within the time limit,
            the Batch

            service terminates it. If this is not specified, there is no time
            limit on

            how long the task may run.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time to retain the task directory on the compute node
            where it

            ran, from the time it completes execution. After this time, the
            Batch

            service may delete the task directory and all its contents. The
            default is

            infinite, i.e. the task directory will be retained until the compute
            node is

            removed or reimaged.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the Job Preparation task
            to

            complete successfully before scheduling any other tasks of the job
            on the

            compute node. If true and the Job Preparation task fails on a
            compute node,

            the Batch service retries the Job Preparation task up to its maximum
            retry

            count (as specified in the constraints element). If the task has
            still not

            completed successfully after all retries, then the Batch service
            will not

            schedule tasks of the job to the compute node. The compute node
            remains

            active and eligible to run tasks of other jobs. If false, the Batch
            service

            will not wait for the Job Preparation task to complete. In this
            case, other

            tasks of the job can start executing on the compute node while the
            Job

            Preparation task is still running; and even if the Job Preparation
            task

            fails, new tasks will continue to be scheduled on the node. The
            default

            value is true.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.userIdentity
          type:
            - object
          description: >-
            The user

            identity under which the Job Preparation task runs. If omitted, the
            task

            runs as a non-administrative user unique to the task.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should rerun the Job Preparation task
            after a

            compute node reboots. The Job Preparation task is always rerun if a
            compute

            node is reimaged, or if the Job Preparation task did not complete
            (e.g.

            because the reboot occurred while the task was running). Therefore,
            you

            should always write a Job Preparation task to be idempotent and to
            behave

            correctly if run multiple times. The default value is true.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask
          type:
            - object
          description: >-
            The Job

            Release task for jobs created under this schedule. The primary
            purpose of

            the Job Release task is to undo changes to compute nodes made by the
            Job

            Preparation task. Example activities include deleting local files,
            or

            shutting down services that were started as part of job preparation.
            A Job

            Release task cannot be specified without also specifying a Job
            Preparation

            task for the job. The Batch service runs the Job Release task on the
            compute

            nodes that have run the Job Preparation task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.id
          type:
            - string
          description: >-
            A

            string that uniquely identifies the Job Release task within the job.
            The ID

            can contain any combination of alphanumeric characters including
            hyphens and

            underscores and cannot contain more than 64 characters. If you do
            not

            specify this property, the Batch service assigns a default value of

            'jobrelease'. No other task in the job can have the same id as the
            Job

            Release task. If you try to submit a task with the same id, the
            Batch

            service rejects the request with error code
            TaskIdSameAsJobReleaseTask; if

            you are calling the REST API directly, the HTTP status code is 409

            (Conflict).
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.commandLine
          type:
            - string
          description: >-
            The command line of the Job Release task. The command line does not
            run

            under a shell, and therefore cannot take advantage of shell features
            such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.resourceFiles
          type:
            - array
          description: >-
            A list of

            files that the Batch service will download to the compute node
            before

            running the command line. Files listed under this element are
            located in the

            task's working directory.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.environmentSettings
          type:
            - array
          description: |-
            A
            list of environment variable settings for the Job Release task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The

            maximum elapsed time that the Job Release task may run on a given
            compute

            node, measured from the time the task starts. If the task does not
            complete

            within the time limit, the Batch service terminates it. The default
            value is

            15 minutes. You may not specify a timeout longer than 15 minutes. If
            you do,

            the Batch service rejects it with an error; if you are calling the
            REST API

            directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum

            time to retain the task directory for the Job Release task on the
            compute

            node. After this time, the Batch service may delete the task
            directory and

            all its contents. The default is infinite, i.e. the task directory
            will be

            retained until the compute node is removed or reimaged.
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.userIdentity
          type:
            - object
          description: >-
            The user

            identity under which the Job Release task runs. If omitted, the task
            runs as

            a non-administrative user unique to the task.
          optional: true
        - id: cloudJobSchedule.jobSpecification.commonEnvironmentSettings
          type:
            - array
          description: >-
            A list of common environment variable settings. These environment
            variables

            are set for all tasks in jobs created under this schedule (including
            the Job

            Manager, Job Preparation and Job Release tasks). Individual tasks
            can

            override an environment setting specified here by specifying the
            same

            setting name with a different value.
          optional: true
        - id: cloudJobSchedule.jobSpecification.poolInfo
          type:
            - object
          description: >-
            The pool on which

            the Batch service runs the tasks of jobs created under this
            schedule.
        - id: cloudJobSchedule.jobSpecification.poolInfo.poolId
          type:
            - string
          description: >-
            The ID

            of an existing pool. All the tasks of the job will run on the
            specified

            pool. You must ensure that the pool referenced by this property
            exists. If

            the pool does not exist at the time the Batch service tries to
            schedule a

            job, no tasks for the job will run until you create a pool with that
            id.

            Note that the Batch service will not reject the job request; it will
            simply

            not run tasks until the pool exists. You must specify either the
            pool ID or

            the auto pool specification, but not both.
          optional: true
        - id: cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification
          type:
            - object
          description: >-
            Characteristics for a temporary 'auto pool'. The Batch service will
            create

            this auto pool when the job is submitted. If auto pool creation
            fails, the

            Batch service moves the job to a completed state, and the pool
            creation

            error is set in the job's scheduling error property. The Batch
            service

            manages the lifetime (both creation and, unless keepAlive is
            specified,

            deletion) of the auto pool. Any user actions that affect the
            lifetime of the

            auto pool while the job is active will result in unexpected
            behavior. You

            must specify either the pool ID or the auto pool specification, but
            not

            both.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: >-
            A prefix to be added to the unique identifier when a pool is
            automatically

            created. The Batch service assigns each auto pool a unique
            identifier on

            creation. To distinguish between pools created for different
            purposes, you

            can specify this element to add a prefix to the id that is assigned.
            The

            prefix can be up to 20 characters long.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: >-
            The minimum lifetime of created auto pools, and how multiple jobs on
            a

            schedule are assigned to pools. When the pool lifetime scope is
            jobSchedule

            level, the Batch service keeps track of the last autopool created
            for the

            job schedule, and deletes that pool when the job schedule completes.
            Batch

            will also delete this pool if the user updates the auto pool
            specification

            in a way that changes this lifetime. Possible values include:
            'jobSchedule',

            'job', 'unmapped'
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: >-
            Whether to keep an auto pool alive after its lifetime expires. If
            false, the

            Batch service deletes the pool once its lifetime (as determined by
            the

            poolLifetimeOption setting) expires; that is, when the job or job
            schedule

            completes. If true, the Batch service does not delete the pool

            automatically. It is up to the user to delete auto pools created
            with this

            option.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: |-
            The
            pool specification for the auto pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: >-
            The display name for the pool. The display name need not be unique
            and can

            contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: >-
            The size of the virtual machines in the pool. All virtual machines
            in a pool

            are the same size. For information about available sizes of virtual
            machines

            for Cloud Services pools (pools created with
            cloudServiceConfiguration), see

            Sizes for Cloud Services

            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall. For

            information about available VM sizes for pools using images from the
            Virtual

            Machines Marketplace (pools created with
            virtualMachineConfiguration) see

            Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The cloud service configuration for the pool. This property must be

            specified if the pool needs to be created with Azure PaaS VMs. This
            property

            and virtualMachineConfiguration are mutually exclusive and one of
            the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request). This property cannot be specified if the
            Batch

            account was created with its poolAllocationMode property set to

            'UserSubscription'.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the

            pool. Possible values are: 2 - OS Family 2, equivalent to Windows
            Server

            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 -
            OS

            Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5,
            equivalent

            to Windows Server 2016. For more information, see Azure Guest OS
            Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the

            pool. The default value is * which specifies the latest operating
            system

            version for the specified OS family.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS Version currently installed on the virtual
            machines in

            the pool. This may differ from targetOSVersion if the pool state is

            Upgrading. In this case some virtual machines may be on the
            targetOSVersion

            and some may be on the currentOSVersion during the upgrade process.
            Once all

            virtual machines have upgraded, currentOSVersion is updated to be
            the same

            as targetOSVersion.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The virtual machine configuration for the pool. This property must
            be

            specified if the pool needs to be created with Azure IaaS VMs. This
            property

            and cloudServiceConfiguration are mutually exclusive and one of the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference to the Azure Virtual Machines Marketplace image to use.
            This

            property and osDisk are mutually exclusive and one of the properties
            must be

            specified.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: >-
            The SKU of the Azure Virtual Machines Marketplace image. For
            example,

            14.04.0-LTS or 2012-R2-Datacenter.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: >-
            A reference to the OS disk image to use. This property can be
            specified only

            if the Batch account was created with its poolAllocationMode
            property set to

            'UserSubscription'. This property and imageReference are mutually
            exclusive

            and one of the properties must be specified.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.imageUris
          type:
            - array
          description: >-
            The collection of Virtual Hard Disk (VHD) URIs. All the VHDs must be

            identical and must reside in an Azure Storage account within the
            same

            subscription and same region as the Batch account. For best
            performance, it

            is recommended that each VHD resides in a separate Azure Storage
            account.

            Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute
            nodes.

            You must supply enough VHD URIs to satisfy the 'targetDedicated'
            property of

            the pool. If you do not supply enough VHD URIs, the pool will
            partially

            allocate compute nodes, and a resize error will occur.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type of caching to enable for the OS disk. none - The caching
            mode for

            the disk is not enabled. readOnly - The caching mode for the disk is
            read

            only. readWrite - The caching mode for the disk is read and write.
            The

            default value for caching is none. For information about the caching
            options

            see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of the Batch node agent to be provisioned on compute nodes
            in the

            pool. The Batch node agent is a program that runs on each node in
            the pool,

            and provides the command-and-control interface between the node and
            the

            Batch service. There are different implementations of the node
            agent, known

            as SKUs, for different operating systems. You must specify a node
            agent SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: >-
            The maximum number of tasks that can run concurrently on a single
            compute

            node in the pool. The default value is 1. The maximum value of this
            setting

            depends on the size of the compute nodes in the pool (the vmSize
            setting).
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed among compute nodes in the pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: >-
            How tasks should be distributed across compute nodes. Possible
            values

            include: 'spread', 'pack', 'unmapped'
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for allocation of compute nodes to the pool. This
            timeout

            applies only to manual scaling; it has no effect when
            enableAutoScale is set

            to true. The default value is 15 minutes. The minimum value is 5
            minutes. If

            you specify a value less than 5 minutes, the Batch service rejects
            the

            request with an error; if you are calling the REST API directly, the
            HTTP

            status code is 400 (Bad Request).
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicated
          type:
            - number
          description: >-
            The desired number of compute nodes in the pool. This property must
            not be

            specified if enableAutoScale is set to true. It is required if

            enableAutoScale is set to false.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should automatically adjust over time. If
            false, the

            targetDedicated element is required. If true, the autoScaleFormula
            element

            is required. The pool automatically resizes according to the
            formula. The

            default value is false.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool.
            This

            property must not be specified if enableAutoScale is set to false.
            It is

            required if enableAutoScale is set to true. The formula is checked
            for

            validity before the pool is created. If the formula is not valid,
            the Batch

            service rejects the request with detailed error information.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval at which to automatically adjust the pool size
            according

            to the autoscale formula. The default value is 15 minutes. The
            minimum and

            maximum value are 5 minutes and 168 hours respectively. If you
            specify a

            value less than 5 minutes or greater than 168 hours, the Batch
            service

            rejects the request with an invalid property value error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool permits direct communication between nodes.
            Enabling

            inter-node communication limits the maximum size of the pool due to

            deployment restrictions on the nodes of the pool. This may result in
            the

            pool not reaching its desired size. The default value is false.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The ARM resource identifier of the virtual network subnet which the
            compute

            nodes of the pool will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. This
            property

            can only be specified for pools created with a
            cloudServiceConfiguration.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: >-
            A task to run on each compute node as it joins the pool. The task
            runs when

            the node is added to the pool or when the node is restarted.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: >-
            The command line of the start task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the start task runs. If omitted, the
            task runs

            as a non-administrative user unique to the task.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity under which the task is run. The
            userName and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the task is run. The userName and autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user pool - specifies that the task runs as
            the

            common auto user account which is created on every node in a pool.
            task -

            specifies that the service should create a new user for the task.
            The

            default value is task. Possible values include: 'task', 'pool'
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation level of the auto user. nonAdmin - The auto user is a
            standard

            user without elevated access. admin - The auto user is a user with
            elevated

            access and operates with full Administrator permissions. The default
            value

            is nonAdmin. Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the start task to complete

            successfully (that is, to exit with exit code 0) before scheduling
            any tasks

            on the compute node. If true and the start task fails on a compute
            node, the

            Batch service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and scheduling error detail. If false, the Batch service will
            not wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool. For

            Windows compute nodes, the Batch service installs the certificates
            to the

            specified certificate store and location. For Linux compute nodes,
            the

            certificates are stored in a directory inside the task working
            directory and

            an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            task to

            query for this location. For certificates with visibility of
            'remoteUser', a

            'certs' directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: >-
            The list of application packages to be installed on each compute
            node in the

            pool. This property is currently not supported on auto pools created
            with

            the virtualMachineConfiguration (IaaS) property.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: The list of user accounts to be created on each node in the pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: >-
            A list of name-value pairs associated with the pool as metadata. The
            Batch

            service does not assign any meaning to metadata; it is solely for
            the use of

            user code.
          optional: true
        - id: cloudJobSchedule.jobSpecification.metadata
          type:
            - array
          description: >-
            A list of

            name-value pairs associated with each job created under this
            schedule as

            metadata. The Batch service does not assign any meaning to metadata;
            it is

            solely for the use of user code.
          optional: true
        - id: cloudJobSchedule.metadata
          type:
            - array
          description: >-
            A list of name-value pairs

            associated with the schedule as metadata. The Batch service does not
            assign

            any meaning to metadata; it is solely for the use of user code.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleAddOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobScheduleAddOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleAddOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleAddOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleAddOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function add(cloudJobSchedule, options, optionalCallback)'
  - uid: 'azure-batch.JobSchedule#listWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#listWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: listWithHttpOperationResponse(options)
    summary: Lists all of the job schedules in the specified account.
    fullName: azure-batch.JobSchedule.listWithHttpOperationResponse(options)
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleListOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobScheduleListOptions.filter
          type:
            - string
          description: |-
            An OData $filter
            clause.
          optional: true
        - id: options.jobScheduleListOptions.select
          type:
            - string
          description: |-
            An OData $select
            clause.
          optional: true
        - id: options.jobScheduleListOptions.expand
          type:
            - string
          description: |-
            An OData $expand
            clause.
          optional: true
        - id: options.jobScheduleListOptions.maxResults
          type:
            - number
          description: >-
            The maximum

            number of items to return in the response. A maximum of 1000 job
            schedules

            can be returned.
          optional: true
        - id: options.jobScheduleListOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleListOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleListOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
  - uid: 'azure-batch.JobSchedule#list'
    id: 'azure-batch.JobSchedule#list'
    parent: azure-batch.JobSchedule
    name: 'list(options, optionalCallback)'
    summary: Lists all of the job schedules in the specified account.
    fullName: 'azure-batch.JobSchedule.list(options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleListOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobScheduleListOptions.filter
          type:
            - string
          description: |-
            An OData $filter
            clause.
          optional: true
        - id: options.jobScheduleListOptions.select
          type:
            - string
          description: |-
            An OData $select
            clause.
          optional: true
        - id: options.jobScheduleListOptions.expand
          type:
            - string
          description: |-
            An OData $expand
            clause.
          optional: true
        - id: options.jobScheduleListOptions.maxResults
          type:
            - number
          description: >-
            The maximum

            number of items to return in the response. A maximum of 1000 job
            schedules

            can be returned.
          optional: true
        - id: options.jobScheduleListOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobScheduleListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleListOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleListOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(options, optionalCallback)'
  - uid: 'azure-batch.JobSchedule#listNextWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#listNextWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Lists all of the job schedules in the specified account.
    fullName: >-
      azure-batch.JobSchedule.listNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleListNextOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.jobScheduleListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleListNextOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleListNextOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-batch.JobSchedule#listNext'
    id: 'azure-batch.JobSchedule#listNext'
    parent: azure-batch.JobSchedule
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Lists all of the job schedules in the specified account.
    fullName: 'azure-batch.JobSchedule.listNext(nextPageLink, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleListNextOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.jobScheduleListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobScheduleListNextOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleListNextOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: azure-batch.uuid
    name: uuid
    fullName: azure-batch.uuid
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: date
    name: date
    fullName: date
    isExternal: true
  - uid: Promise
    name: Promise
    fullName: Promise
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: azure-batch.moment.duration
    name: moment.duration
    fullName: azure-batch.moment.duration
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true
