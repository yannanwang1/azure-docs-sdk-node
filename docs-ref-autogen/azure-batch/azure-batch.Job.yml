### YamlMime:JavaScriptReference
items:
  - uid: azure-batch.Job
    id: azure-batch.Job
    name: Job
    summary: ''
    fullName: azure-batch.Job
    type: Class
    children:
      - 'azure-batch.Job.#ctor'
      - 'azure-batch.Job#client'
      - 'azure-batch.Job#_getAllLifetimeStatistics'
      - 'azure-batch.Job#_deleteMethod'
      - 'azure-batch.Job#_get'
      - 'azure-batch.Job#_patch'
      - 'azure-batch.Job#_update'
      - 'azure-batch.Job#_disable'
      - 'azure-batch.Job#_enable'
      - 'azure-batch.Job#_terminate'
      - 'azure-batch.Job#_add'
      - 'azure-batch.Job#_list'
      - 'azure-batch.Job#_listFromJobSchedule'
      - 'azure-batch.Job#_listPreparationAndReleaseTaskStatus'
      - 'azure-batch.Job#_listNext'
      - 'azure-batch.Job#_listFromJobScheduleNext'
      - 'azure-batch.Job#_listPreparationAndReleaseTaskStatusNext'
      - 'azure-batch.Job#getAllLifetimeStatisticsWithHttpOperationResponse'
      - 'azure-batch.Job#getAllLifetimeStatistics'
      - 'azure-batch.Job#deleteMethodWithHttpOperationResponse'
      - 'azure-batch.Job#deleteMethod'
      - 'azure-batch.Job#getWithHttpOperationResponse'
      - 'azure-batch.Job#get'
      - 'azure-batch.Job#patchWithHttpOperationResponse'
      - 'azure-batch.Job#patch'
      - 'azure-batch.Job#updateWithHttpOperationResponse'
      - 'azure-batch.Job#update'
      - 'azure-batch.Job#disableWithHttpOperationResponse'
      - 'azure-batch.Job#disable'
      - 'azure-batch.Job#enableWithHttpOperationResponse'
      - 'azure-batch.Job#enable'
      - 'azure-batch.Job#terminateWithHttpOperationResponse'
      - 'azure-batch.Job#terminate'
      - 'azure-batch.Job#addWithHttpOperationResponse'
      - 'azure-batch.Job#add'
      - 'azure-batch.Job#listWithHttpOperationResponse'
      - 'azure-batch.Job#list'
      - 'azure-batch.Job#listFromJobScheduleWithHttpOperationResponse'
      - 'azure-batch.Job#listFromJobSchedule'
      - >-
        azure-batch.Job#listPreparationAndReleaseTaskStatusWithHttpOperationResponse
      - 'azure-batch.Job#listPreparationAndReleaseTaskStatus'
      - 'azure-batch.Job#listNextWithHttpOperationResponse'
      - 'azure-batch.Job#listNext'
      - 'azure-batch.Job#listFromJobScheduleNextWithHttpOperationResponse'
      - 'azure-batch.Job#listFromJobScheduleNext'
      - >-
        azure-batch.Job#listPreparationAndReleaseTaskStatusNextWithHttpOperationResponse
      - 'azure-batch.Job#listPreparationAndReleaseTaskStatusNext'
  - id: 'azure-batch.Job.#ctor'
    uid: 'azure-batch.Job.#ctor'
    parent: azure-batch.Job
    name: Job()
    fullName: azure-batch.Job.Job()
    summary: ''
    type: Constructor
    syntax:
      content: new Job()
  - uid: 'azure-batch.Job#client'
    id: 'azure-batch.Job#client'
    parent: azure-batch.Job
    name: client
    summary: ''
    fullName: azure-batch.Job.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-batch.Job#_getAllLifetimeStatistics'
    id: 'azure-batch.Job#_getAllLifetimeStatistics'
    parent: azure-batch.Job
    name: _getAllLifetimeStatistics
    summary: ''
    fullName: azure-batch.Job._getAllLifetimeStatistics
    type: Field
    syntax:
      content: _getAllLifetimeStatistics
  - uid: 'azure-batch.Job#_deleteMethod'
    id: 'azure-batch.Job#_deleteMethod'
    parent: azure-batch.Job
    name: _deleteMethod
    summary: ''
    fullName: azure-batch.Job._deleteMethod
    type: Field
    syntax:
      content: _deleteMethod
  - uid: 'azure-batch.Job#_get'
    id: 'azure-batch.Job#_get'
    parent: azure-batch.Job
    name: _get
    summary: ''
    fullName: azure-batch.Job._get
    type: Field
    syntax:
      content: _get
  - uid: 'azure-batch.Job#_patch'
    id: 'azure-batch.Job#_patch'
    parent: azure-batch.Job
    name: _patch
    summary: ''
    fullName: azure-batch.Job._patch
    type: Field
    syntax:
      content: _patch
  - uid: 'azure-batch.Job#_update'
    id: 'azure-batch.Job#_update'
    parent: azure-batch.Job
    name: _update
    summary: ''
    fullName: azure-batch.Job._update
    type: Field
    syntax:
      content: _update
  - uid: 'azure-batch.Job#_disable'
    id: 'azure-batch.Job#_disable'
    parent: azure-batch.Job
    name: _disable
    summary: ''
    fullName: azure-batch.Job._disable
    type: Field
    syntax:
      content: _disable
  - uid: 'azure-batch.Job#_enable'
    id: 'azure-batch.Job#_enable'
    parent: azure-batch.Job
    name: _enable
    summary: ''
    fullName: azure-batch.Job._enable
    type: Field
    syntax:
      content: _enable
  - uid: 'azure-batch.Job#_terminate'
    id: 'azure-batch.Job#_terminate'
    parent: azure-batch.Job
    name: _terminate
    summary: ''
    fullName: azure-batch.Job._terminate
    type: Field
    syntax:
      content: _terminate
  - uid: 'azure-batch.Job#_add'
    id: 'azure-batch.Job#_add'
    parent: azure-batch.Job
    name: _add
    summary: ''
    fullName: azure-batch.Job._add
    type: Field
    syntax:
      content: _add
  - uid: 'azure-batch.Job#_list'
    id: 'azure-batch.Job#_list'
    parent: azure-batch.Job
    name: _list
    summary: ''
    fullName: azure-batch.Job._list
    type: Field
    syntax:
      content: _list
  - uid: 'azure-batch.Job#_listFromJobSchedule'
    id: 'azure-batch.Job#_listFromJobSchedule'
    parent: azure-batch.Job
    name: _listFromJobSchedule
    summary: ''
    fullName: azure-batch.Job._listFromJobSchedule
    type: Field
    syntax:
      content: _listFromJobSchedule
  - uid: 'azure-batch.Job#_listPreparationAndReleaseTaskStatus'
    id: 'azure-batch.Job#_listPreparationAndReleaseTaskStatus'
    parent: azure-batch.Job
    name: _listPreparationAndReleaseTaskStatus
    summary: ''
    fullName: azure-batch.Job._listPreparationAndReleaseTaskStatus
    type: Field
    syntax:
      content: _listPreparationAndReleaseTaskStatus
  - uid: 'azure-batch.Job#_listNext'
    id: 'azure-batch.Job#_listNext'
    parent: azure-batch.Job
    name: _listNext
    summary: ''
    fullName: azure-batch.Job._listNext
    type: Field
    syntax:
      content: _listNext
  - uid: 'azure-batch.Job#_listFromJobScheduleNext'
    id: 'azure-batch.Job#_listFromJobScheduleNext'
    parent: azure-batch.Job
    name: _listFromJobScheduleNext
    summary: ''
    fullName: azure-batch.Job._listFromJobScheduleNext
    type: Field
    syntax:
      content: _listFromJobScheduleNext
  - uid: 'azure-batch.Job#_listPreparationAndReleaseTaskStatusNext'
    id: 'azure-batch.Job#_listPreparationAndReleaseTaskStatusNext'
    parent: azure-batch.Job
    name: _listPreparationAndReleaseTaskStatusNext
    summary: ''
    fullName: azure-batch.Job._listPreparationAndReleaseTaskStatusNext
    type: Field
    syntax:
      content: _listPreparationAndReleaseTaskStatusNext
  - uid: 'azure-batch.Job#getAllLifetimeStatisticsWithHttpOperationResponse'
    id: 'azure-batch.Job#getAllLifetimeStatisticsWithHttpOperationResponse'
    parent: azure-batch.Job
    name: getAllLifetimeStatisticsWithHttpOperationResponse(options)
    summary: |-
      Gets lifetime summary statistics for all of the jobs in the
      specified account.

      Statistics are aggregated across all jobs that have ever existed in the
      account, from account creation to the last update time of the statistics.
    fullName: azure-batch.Job.getAllLifetimeStatisticsWithHttpOperationResponse(options)
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobGetAllLifetimeStatisticsOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.jobGetAllLifetimeStatisticsOptions.timeout
          type:
            - number
          description: >-
            The

            maximum time that the server can spend processing the request, in
            seconds.

            The default is 30 seconds.
          optional: true
        - id: options.jobGetAllLifetimeStatisticsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated request identity, in the form of a GUID with no

            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobGetAllLifetimeStatisticsOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobGetAllLifetimeStatisticsOptions.ocpDate
          type:
            - date
          description: >-
            The time

            the request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getAllLifetimeStatisticsWithHttpOperationResponse(options)
  - uid: 'azure-batch.Job#getAllLifetimeStatistics'
    id: 'azure-batch.Job#getAllLifetimeStatistics'
    parent: azure-batch.Job
    name: 'getAllLifetimeStatistics(options, optionalCallback)'
    summary: |-
      Gets lifetime summary statistics for all of the jobs in the
      specified account.

      Statistics are aggregated across all jobs that have ever existed in the
      account, from account creation to the last update time of the statistics.
    fullName: 'azure-batch.Job.getAllLifetimeStatistics(options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobGetAllLifetimeStatisticsOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.jobGetAllLifetimeStatisticsOptions.timeout
          type:
            - number
          description: >-
            The

            maximum time that the server can spend processing the request, in
            seconds.

            The default is 30 seconds.
          optional: true
        - id: options.jobGetAllLifetimeStatisticsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated request identity, in the form of a GUID with no

            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobGetAllLifetimeStatisticsOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobGetAllLifetimeStatisticsOptions.ocpDate
          type:
            - date
          description: >-
            The time

            the request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getAllLifetimeStatistics(options, optionalCallback)'
  - uid: 'azure-batch.Job#deleteMethodWithHttpOperationResponse'
    id: 'azure-batch.Job#deleteMethodWithHttpOperationResponse'
    parent: azure-batch.Job
    name: 'deleteMethodWithHttpOperationResponse(jobId, options)'
    summary: >-
      Deletes a job.


      Deleting a job also deletes all tasks that are part of that job, and all
      job

      statistics. This also overrides the retention period for task data; that
      is,

      if the job contains tasks which are still retained on compute nodes, the

      Batch services deletes those tasks' working directories and all their

      contents.
    fullName: 'azure-batch.Job.deleteMethodWithHttpOperationResponse(jobId, options)'
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobDeleteMethodOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobDeleteMethodOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobDeleteMethodOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobDeleteMethodOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobDeleteMethodOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobDeleteMethodOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobDeleteMethodOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobDeleteMethodOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobDeleteMethodOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function deleteMethodWithHttpOperationResponse(jobId, options)'
  - uid: 'azure-batch.Job#deleteMethod'
    id: 'azure-batch.Job#deleteMethod'
    parent: azure-batch.Job
    name: 'deleteMethod(jobId, options, optionalCallback)'
    summary: >-
      Deletes a job.


      Deleting a job also deletes all tasks that are part of that job, and all
      job

      statistics. This also overrides the retention period for task data; that
      is,

      if the job contains tasks which are still retained on compute nodes, the

      Batch services deletes those tasks' working directories and all their

      contents.
    fullName: 'azure-batch.Job.deleteMethod(jobId, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobDeleteMethodOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.jobDeleteMethodOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.jobDeleteMethodOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobDeleteMethodOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobDeleteMethodOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobDeleteMethodOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobDeleteMethodOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobDeleteMethodOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobDeleteMethodOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function deleteMethod(jobId, options, optionalCallback)'
  - uid: 'azure-batch.Job#getWithHttpOperationResponse'
    id: 'azure-batch.Job#getWithHttpOperationResponse'
    parent: azure-batch.Job
    name: 'getWithHttpOperationResponse(jobId, options)'
    summary: Gets information about the specified job.
    fullName: 'azure-batch.Job.getWithHttpOperationResponse(jobId, options)'
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobGetOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobGetOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.jobGetOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.jobGetOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.jobGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobGetOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.jobGetOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobGetOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.jobGetOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service does
            not match

            the value specified by the client.
          optional: true
        - id: options.jobGetOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp indicating

            the last modified time of the resource known to the client. The
            operation

            will be performed only if the resource on the service has been
            modified

            since the specified time.
          optional: true
        - id: options.jobGetOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getWithHttpOperationResponse(jobId, options)'
  - uid: 'azure-batch.Job#get'
    id: 'azure-batch.Job#get'
    parent: azure-batch.Job
    name: 'get(jobId, options, optionalCallback)'
    summary: Gets information about the specified job.
    fullName: 'azure-batch.Job.get(jobId, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobGetOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobGetOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.jobGetOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.jobGetOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.jobGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobGetOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.jobGetOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobGetOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.jobGetOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service does
            not match

            the value specified by the client.
          optional: true
        - id: options.jobGetOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp indicating

            the last modified time of the resource known to the client. The
            operation

            will be performed only if the resource on the service has been
            modified

            since the specified time.
          optional: true
        - id: options.jobGetOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function get(jobId, options, optionalCallback)'
  - uid: 'azure-batch.Job#patchWithHttpOperationResponse'
    id: 'azure-batch.Job#patchWithHttpOperationResponse'
    parent: azure-batch.Job
    name: 'patchWithHttpOperationResponse(jobId, jobPatchParameter, options)'
    summary: >-
      Updates the properties of the specified job.


      This replaces only the job properties specified in the request. For
      example,

      if the job has constraints, and a request does not specify the constraints

      element, then the job keeps the existing constraints.
    fullName: >-
      azure-batch.Job.patchWithHttpOperationResponse(jobId, jobPatchParameter,
      options)
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job whose properties you want to update.
        - id: jobPatchParameter
          type:
            - object
          description: The parameters for the request.
        - id: jobPatchParameter.priority
          type:
            - number
          description: >-
            The priority of the job.

            Priority values can range from -1000 to 1000, with -1000 being the
            lowest

            priority and 1000 being the highest priority. If omitted, the
            priority of

            the job is left unchanged.
          optional: true
        - id: jobPatchParameter.onAllTasksComplete
          type:
            - string
          description: >-
            The action the Batch

            service should take when all tasks in the job are in the completed
            state. If

            omitted, the completion behavior is left unchanged. You may not
            change the

            value from terminateJob to noAction - that is, once you have engaged

            automatic job termination, you cannot turn it off again. If you try
            to do

            this, the request fails with an 'invalid property value' error
            response; if

            you are calling the REST API directly, the HTTP status code is 400
            (Bad

            Request). Possible values include: 'noAction', 'terminateJob'
          optional: true
        - id: jobPatchParameter.constraints
          type:
            - object
          description: |-
            The execution constraints
            for the job. If omitted, the existing execution constraints are left
            unchanged.
          optional: true
        - id: jobPatchParameter.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the job may run, measured from the
            time the

            job is created. If the job does not complete within the time limit,
            the

            Batch service terminates it and any tasks that are still running. In
            this

            case, the termination reason will be MaxWallClockTimeExpiry. If this

            property is not specified, there is no time limit on how long the
            job may

            run.
          optional: true
        - id: jobPatchParameter.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The

            maximum number of times each task may be retried. The Batch service
            retries

            a task if its exit code is nonzero. Note that this value
            specifically

            controls the number of retries. The Batch service will try each task
            once,

            and may then retry up to this limit. For example, if the maximum
            retry count

            is 3, Batch tries a task up to 4 times (one initial try and 3
            retries). If

            the maximum retry count is 0, the Batch service does not retry
            tasks. If the

            maximum retry count is -1, the Batch service retries tasks without
            limit.

            The default value is 0 (no retries).
          optional: true
        - id: jobPatchParameter.poolInfo
          type:
            - object
          description: >-
            The pool on which the Batch

            service runs the job's tasks. You may change the pool for a job only
            when

            the job is disabled. The Patch Job call will fail if you include the

            poolInfo element and the job is not disabled. If you specify an

            autoPoolSpecification specification in the poolInfo, only the
            keepAlive

            property can be updated, and then only if the auto pool has a

            poolLifetimeOption of job. If omitted, the job continues to run on
            its

            current pool.
          optional: true
        - id: jobPatchParameter.poolInfo.poolId
          type:
            - string
          description: >-
            The ID of an existing

            pool. All the tasks of the job will run on the specified pool. You
            must

            ensure that the pool referenced by this property exists. If the pool
            does

            not exist at the time the Batch service tries to schedule a job, no
            tasks

            for the job will run until you create a pool with that id. Note that
            the

            Batch service will not reject the job request; it will simply not
            run tasks

            until the pool exists. You must specify either the pool ID or the
            auto pool

            specification, but not both.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification
          type:
            - object
          description: >-
            Characteristics for a temporary 'auto pool'. The Batch service will
            create

            this auto pool when the job is submitted. If auto pool creation
            fails, the

            Batch service moves the job to a completed state, and the pool
            creation

            error is set in the job's scheduling error property. The Batch
            service

            manages the lifetime (both creation and, unless keepAlive is
            specified,

            deletion) of the auto pool. Any user actions that affect the
            lifetime of the

            auto pool while the job is active will result in unexpected
            behavior. You

            must specify either the pool ID or the auto pool specification, but
            not

            both.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: >-
            A prefix

            to be added to the unique identifier when a pool is automatically
            created.

            The Batch service assigns each auto pool a unique identifier on
            creation. To

            distinguish between pools created for different purposes, you can
            specify

            this element to add a prefix to the id that is assigned. The prefix
            can be

            up to 20 characters long.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: >-
            The

            minimum lifetime of created auto pools, and how multiple jobs on a
            schedule

            are assigned to pools. When the pool lifetime scope is jobSchedule
            level,

            the Batch service keeps track of the last autopool created for the
            job

            schedule, and deletes that pool when the job schedule completes.
            Batch will

            also delete this pool if the user updates the auto pool
            specification in a

            way that changes this lifetime. Possible values include:
            'jobSchedule',

            'job', 'unmapped'
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: >-
            Whether to keep

            an auto pool alive after its lifetime expires. If false, the Batch
            service

            deletes the pool once its lifetime (as determined by the
            poolLifetimeOption

            setting) expires; that is, when the job or job schedule completes.
            If true,

            the Batch service does not delete the pool automatically. It is up
            to the

            user to delete auto pools created with this option.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: |-
            The
            pool specification for the auto pool.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: >-
            The

            display name for the pool. The display name need not be unique and
            can

            contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: >-
            The size of the virtual machines in the pool. All virtual machines
            in a pool

            are the same size. For information about available sizes of virtual
            machines

            for Cloud Services pools (pools created with
            cloudServiceConfiguration), see

            Sizes for Cloud Services

            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall. For

            information about available VM sizes for pools using images from the
            Virtual

            Machines Marketplace (pools created with
            virtualMachineConfiguration) see

            Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The cloud service configuration for the pool. This property must be

            specified if the pool needs to be created with Azure PaaS VMs. This
            property

            and virtualMachineConfiguration are mutually exclusive and one of
            the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request). This property cannot be specified if the
            Batch

            account was created with its poolAllocationMode property set to

            'UserSubscription'.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the

            pool. Possible values are: 2 - OS Family 2, equivalent to Windows
            Server

            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 -
            OS

            Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5,
            equivalent

            to Windows Server 2016. For more information, see Azure Guest OS
            Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the

            pool. The default value is * which specifies the latest operating
            system

            version for the specified OS family.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS Version currently installed on the virtual
            machines in

            the pool. This may differ from targetOSVersion if the pool state is

            Upgrading. In this case some virtual machines may be on the
            targetOSVersion

            and some may be on the currentOSVersion during the upgrade process.
            Once all

            virtual machines have upgraded, currentOSVersion is updated to be
            the same

            as targetOSVersion.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The virtual machine configuration for the pool. This property must
            be

            specified if the pool needs to be created with Azure IaaS VMs. This
            property

            and cloudServiceConfiguration are mutually exclusive and one of the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference to the Azure Virtual Machines Marketplace image to use.
            This

            property and osDisk are mutually exclusive and one of the properties
            must be

            specified.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: >-
            The SKU of the Azure Virtual Machines Marketplace image. For
            example,

            14.04.0-LTS or 2012-R2-Datacenter.
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: >-
            A reference to the OS disk image to use. This property can be
            specified only

            if the Batch account was created with its poolAllocationMode
            property set to

            'UserSubscription'. This property and imageReference are mutually
            exclusive

            and one of the properties must be specified.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.imageUris
          type:
            - array
          description: >-
            The collection of Virtual Hard Disk (VHD) URIs. All the VHDs must be

            identical and must reside in an Azure Storage account within the
            same

            subscription and same region as the Batch account. For best
            performance, it

            is recommended that each VHD resides in a separate Azure Storage
            account.

            Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute
            nodes.

            You must supply enough VHD URIs to satisfy the 'targetDedicated'
            property of

            the pool. If you do not supply enough VHD URIs, the pool will
            partially

            allocate compute nodes, and a resize error will occur.
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type of caching to enable for the OS disk. none - The caching
            mode for

            the disk is not enabled. readOnly - The caching mode for the disk is
            read

            only. readWrite - The caching mode for the disk is read and write.
            The

            default value for caching is none. For information about the caching
            options

            see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of the Batch node agent to be provisioned on compute nodes
            in the

            pool. The Batch node agent is a program that runs on each node in
            the pool,

            and provides the command-and-control interface between the node and
            the

            Batch service. There are different implementations of the node
            agent, known

            as SKUs, for different operating systems. You must specify a node
            agent SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: >-
            The

            maximum number of tasks that can run concurrently on a single
            compute node

            in the pool. The default value is 1. The maximum value of this
            setting

            depends on the size of the compute nodes in the pool (the vmSize
            setting).
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed among compute nodes in the pool.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: >-
            How tasks should be distributed across compute nodes. Possible
            values

            include: 'spread', 'pack', 'unmapped'
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The

            timeout for allocation of compute nodes to the pool. This timeout
            applies

            only to manual scaling; it has no effect when enableAutoScale is set
            to

            true. The default value is 15 minutes. The minimum value is 5
            minutes. If

            you specify a value less than 5 minutes, the Batch service rejects
            the

            request with an error; if you are calling the REST API directly, the
            HTTP

            status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.targetDedicated
          type:
            - number
          description: >-
            The

            desired number of compute nodes in the pool. This property must not
            be

            specified if enableAutoScale is set to true. It is required if

            enableAutoScale is set to false.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should automatically adjust over time. If
            false, the

            targetDedicated element is required. If true, the autoScaleFormula
            element

            is required. The pool automatically resizes according to the
            formula. The

            default value is false.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: >-
            The

            formula for the desired number of compute nodes in the pool. This
            property

            must not be specified if enableAutoScale is set to false. It is
            required if

            enableAutoScale is set to true. The formula is checked for validity
            before

            the pool is created. If the formula is not valid, the Batch service
            rejects

            the request with detailed error information.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval at which to automatically adjust the pool size
            according

            to the autoscale formula. The default value is 15 minutes. The
            minimum and

            maximum value are 5 minutes and 168 hours respectively. If you
            specify a

            value less than 5 minutes or greater than 168 hours, the Batch
            service

            rejects the request with an invalid property value error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool permits direct communication between nodes.
            Enabling

            inter-node communication limits the maximum size of the pool due to

            deployment restrictions on the nodes of the pool. This may result in
            the

            pool not reaching its desired size. The default value is false.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The ARM resource identifier of the virtual network subnet which the
            compute

            nodes of the pool will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. This
            property

            can only be specified for pools created with a
            cloudServiceConfiguration.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: >-
            A task to

            run on each compute node as it joins the pool. The task runs when
            the node

            is added to the pool or when the node is restarted.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: >-
            The command line of the start task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the start task runs. If omitted, the
            task runs

            as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity under which the task is run. The
            userName and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the task is run. The userName and autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user pool - specifies that the task runs as
            the

            common auto user account which is created on every node in a pool.
            task -

            specifies that the service should create a new user for the task.
            The

            default value is task. Possible values include: 'task', 'pool'
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation level of the auto user. nonAdmin - The auto user is a
            standard

            user without elevated access. admin - The auto user is a user with
            elevated

            access and operates with full Administrator permissions. The default
            value

            is nonAdmin. Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the start task to complete

            successfully (that is, to exit with exit code 0) before scheduling
            any tasks

            on the compute node. If true and the start task fails on a compute
            node, the

            Batch service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and scheduling error detail. If false, the Batch service will
            not wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool. For

            Windows compute nodes, the Batch service installs the certificates
            to the

            specified certificate store and location. For Linux compute nodes,
            the

            certificates are stored in a directory inside the task working
            directory and

            an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            task to

            query for this location. For certificates with visibility of
            'remoteUser', a

            'certs' directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: >-
            The list of application packages to be installed on each compute
            node in the

            pool. This property is currently not supported on auto pools created
            with

            the virtualMachineConfiguration (IaaS) property.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: |-
            The
            list of user accounts to be created on each node in the pool.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: >-
            A list of

            name-value pairs associated with the pool as metadata. The Batch
            service

            does not assign any meaning to metadata; it is solely for the use of
            user

            code.
          optional: true
        - id: jobPatchParameter.metadata
          type:
            - array
          description: >-
            A list of name-value pairs

            associated with the job as metadata. If omitted, the existing job
            metadata

            is left unchanged.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobPatchOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobPatchOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.jobPatchOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobPatchOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.jobPatchOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobPatchOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.jobPatchOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobPatchOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobPatchOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function patchWithHttpOperationResponse(jobId, jobPatchParameter,
        options)
  - uid: 'azure-batch.Job#patch'
    id: 'azure-batch.Job#patch'
    parent: azure-batch.Job
    name: 'patch(jobId, jobPatchParameter, options, optionalCallback)'
    summary: >-
      Updates the properties of the specified job.


      This replaces only the job properties specified in the request. For
      example,

      if the job has constraints, and a request does not specify the constraints

      element, then the job keeps the existing constraints.
    fullName: 'azure-batch.Job.patch(jobId, jobPatchParameter, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job whose properties you want to update.
        - id: jobPatchParameter
          type:
            - object
          description: The parameters for the request.
        - id: jobPatchParameter.priority
          type:
            - number
          description: >-
            The priority of the job.

            Priority values can range from -1000 to 1000, with -1000 being the
            lowest

            priority and 1000 being the highest priority. If omitted, the
            priority of

            the job is left unchanged.
          optional: true
        - id: jobPatchParameter.onAllTasksComplete
          type:
            - string
          description: >-
            The action the Batch

            service should take when all tasks in the job are in the completed
            state. If

            omitted, the completion behavior is left unchanged. You may not
            change the

            value from terminateJob to noAction - that is, once you have engaged

            automatic job termination, you cannot turn it off again. If you try
            to do

            this, the request fails with an 'invalid property value' error
            response; if

            you are calling the REST API directly, the HTTP status code is 400
            (Bad

            Request). Possible values include: 'noAction', 'terminateJob'
          optional: true
        - id: jobPatchParameter.constraints
          type:
            - object
          description: |-
            The execution constraints
            for the job. If omitted, the existing execution constraints are left
            unchanged.
          optional: true
        - id: jobPatchParameter.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the job may run, measured from the
            time the

            job is created. If the job does not complete within the time limit,
            the

            Batch service terminates it and any tasks that are still running. In
            this

            case, the termination reason will be MaxWallClockTimeExpiry. If this

            property is not specified, there is no time limit on how long the
            job may

            run.
          optional: true
        - id: jobPatchParameter.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The

            maximum number of times each task may be retried. The Batch service
            retries

            a task if its exit code is nonzero. Note that this value
            specifically

            controls the number of retries. The Batch service will try each task
            once,

            and may then retry up to this limit. For example, if the maximum
            retry count

            is 3, Batch tries a task up to 4 times (one initial try and 3
            retries). If

            the maximum retry count is 0, the Batch service does not retry
            tasks. If the

            maximum retry count is -1, the Batch service retries tasks without
            limit.

            The default value is 0 (no retries).
          optional: true
        - id: jobPatchParameter.poolInfo
          type:
            - object
          description: >-
            The pool on which the Batch

            service runs the job's tasks. You may change the pool for a job only
            when

            the job is disabled. The Patch Job call will fail if you include the

            poolInfo element and the job is not disabled. If you specify an

            autoPoolSpecification specification in the poolInfo, only the
            keepAlive

            property can be updated, and then only if the auto pool has a

            poolLifetimeOption of job. If omitted, the job continues to run on
            its

            current pool.
          optional: true
        - id: jobPatchParameter.poolInfo.poolId
          type:
            - string
          description: >-
            The ID of an existing

            pool. All the tasks of the job will run on the specified pool. You
            must

            ensure that the pool referenced by this property exists. If the pool
            does

            not exist at the time the Batch service tries to schedule a job, no
            tasks

            for the job will run until you create a pool with that id. Note that
            the

            Batch service will not reject the job request; it will simply not
            run tasks

            until the pool exists. You must specify either the pool ID or the
            auto pool

            specification, but not both.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification
          type:
            - object
          description: >-
            Characteristics for a temporary 'auto pool'. The Batch service will
            create

            this auto pool when the job is submitted. If auto pool creation
            fails, the

            Batch service moves the job to a completed state, and the pool
            creation

            error is set in the job's scheduling error property. The Batch
            service

            manages the lifetime (both creation and, unless keepAlive is
            specified,

            deletion) of the auto pool. Any user actions that affect the
            lifetime of the

            auto pool while the job is active will result in unexpected
            behavior. You

            must specify either the pool ID or the auto pool specification, but
            not

            both.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: >-
            A prefix

            to be added to the unique identifier when a pool is automatically
            created.

            The Batch service assigns each auto pool a unique identifier on
            creation. To

            distinguish between pools created for different purposes, you can
            specify

            this element to add a prefix to the id that is assigned. The prefix
            can be

            up to 20 characters long.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: >-
            The

            minimum lifetime of created auto pools, and how multiple jobs on a
            schedule

            are assigned to pools. When the pool lifetime scope is jobSchedule
            level,

            the Batch service keeps track of the last autopool created for the
            job

            schedule, and deletes that pool when the job schedule completes.
            Batch will

            also delete this pool if the user updates the auto pool
            specification in a

            way that changes this lifetime. Possible values include:
            'jobSchedule',

            'job', 'unmapped'
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: >-
            Whether to keep

            an auto pool alive after its lifetime expires. If false, the Batch
            service

            deletes the pool once its lifetime (as determined by the
            poolLifetimeOption

            setting) expires; that is, when the job or job schedule completes.
            If true,

            the Batch service does not delete the pool automatically. It is up
            to the

            user to delete auto pools created with this option.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: |-
            The
            pool specification for the auto pool.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: >-
            The

            display name for the pool. The display name need not be unique and
            can

            contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: >-
            The size of the virtual machines in the pool. All virtual machines
            in a pool

            are the same size. For information about available sizes of virtual
            machines

            for Cloud Services pools (pools created with
            cloudServiceConfiguration), see

            Sizes for Cloud Services

            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall. For

            information about available VM sizes for pools using images from the
            Virtual

            Machines Marketplace (pools created with
            virtualMachineConfiguration) see

            Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The cloud service configuration for the pool. This property must be

            specified if the pool needs to be created with Azure PaaS VMs. This
            property

            and virtualMachineConfiguration are mutually exclusive and one of
            the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request). This property cannot be specified if the
            Batch

            account was created with its poolAllocationMode property set to

            'UserSubscription'.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the

            pool. Possible values are: 2 - OS Family 2, equivalent to Windows
            Server

            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 -
            OS

            Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5,
            equivalent

            to Windows Server 2016. For more information, see Azure Guest OS
            Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the

            pool. The default value is * which specifies the latest operating
            system

            version for the specified OS family.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS Version currently installed on the virtual
            machines in

            the pool. This may differ from targetOSVersion if the pool state is

            Upgrading. In this case some virtual machines may be on the
            targetOSVersion

            and some may be on the currentOSVersion during the upgrade process.
            Once all

            virtual machines have upgraded, currentOSVersion is updated to be
            the same

            as targetOSVersion.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The virtual machine configuration for the pool. This property must
            be

            specified if the pool needs to be created with Azure IaaS VMs. This
            property

            and cloudServiceConfiguration are mutually exclusive and one of the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference to the Azure Virtual Machines Marketplace image to use.
            This

            property and osDisk are mutually exclusive and one of the properties
            must be

            specified.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: >-
            The SKU of the Azure Virtual Machines Marketplace image. For
            example,

            14.04.0-LTS or 2012-R2-Datacenter.
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: >-
            A reference to the OS disk image to use. This property can be
            specified only

            if the Batch account was created with its poolAllocationMode
            property set to

            'UserSubscription'. This property and imageReference are mutually
            exclusive

            and one of the properties must be specified.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.imageUris
          type:
            - array
          description: >-
            The collection of Virtual Hard Disk (VHD) URIs. All the VHDs must be

            identical and must reside in an Azure Storage account within the
            same

            subscription and same region as the Batch account. For best
            performance, it

            is recommended that each VHD resides in a separate Azure Storage
            account.

            Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute
            nodes.

            You must supply enough VHD URIs to satisfy the 'targetDedicated'
            property of

            the pool. If you do not supply enough VHD URIs, the pool will
            partially

            allocate compute nodes, and a resize error will occur.
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type of caching to enable for the OS disk. none - The caching
            mode for

            the disk is not enabled. readOnly - The caching mode for the disk is
            read

            only. readWrite - The caching mode for the disk is read and write.
            The

            default value for caching is none. For information about the caching
            options

            see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of the Batch node agent to be provisioned on compute nodes
            in the

            pool. The Batch node agent is a program that runs on each node in
            the pool,

            and provides the command-and-control interface between the node and
            the

            Batch service. There are different implementations of the node
            agent, known

            as SKUs, for different operating systems. You must specify a node
            agent SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: >-
            The

            maximum number of tasks that can run concurrently on a single
            compute node

            in the pool. The default value is 1. The maximum value of this
            setting

            depends on the size of the compute nodes in the pool (the vmSize
            setting).
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed among compute nodes in the pool.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: >-
            How tasks should be distributed across compute nodes. Possible
            values

            include: 'spread', 'pack', 'unmapped'
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The

            timeout for allocation of compute nodes to the pool. This timeout
            applies

            only to manual scaling; it has no effect when enableAutoScale is set
            to

            true. The default value is 15 minutes. The minimum value is 5
            minutes. If

            you specify a value less than 5 minutes, the Batch service rejects
            the

            request with an error; if you are calling the REST API directly, the
            HTTP

            status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.targetDedicated
          type:
            - number
          description: >-
            The

            desired number of compute nodes in the pool. This property must not
            be

            specified if enableAutoScale is set to true. It is required if

            enableAutoScale is set to false.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should automatically adjust over time. If
            false, the

            targetDedicated element is required. If true, the autoScaleFormula
            element

            is required. The pool automatically resizes according to the
            formula. The

            default value is false.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: >-
            The

            formula for the desired number of compute nodes in the pool. This
            property

            must not be specified if enableAutoScale is set to false. It is
            required if

            enableAutoScale is set to true. The formula is checked for validity
            before

            the pool is created. If the formula is not valid, the Batch service
            rejects

            the request with detailed error information.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval at which to automatically adjust the pool size
            according

            to the autoscale formula. The default value is 15 minutes. The
            minimum and

            maximum value are 5 minutes and 168 hours respectively. If you
            specify a

            value less than 5 minutes or greater than 168 hours, the Batch
            service

            rejects the request with an invalid property value error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool permits direct communication between nodes.
            Enabling

            inter-node communication limits the maximum size of the pool due to

            deployment restrictions on the nodes of the pool. This may result in
            the

            pool not reaching its desired size. The default value is false.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The ARM resource identifier of the virtual network subnet which the
            compute

            nodes of the pool will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. This
            property

            can only be specified for pools created with a
            cloudServiceConfiguration.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: >-
            A task to

            run on each compute node as it joins the pool. The task runs when
            the node

            is added to the pool or when the node is restarted.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: >-
            The command line of the start task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the start task runs. If omitted, the
            task runs

            as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity under which the task is run. The
            userName and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the task is run. The userName and autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user pool - specifies that the task runs as
            the

            common auto user account which is created on every node in a pool.
            task -

            specifies that the service should create a new user for the task.
            The

            default value is task. Possible values include: 'task', 'pool'
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation level of the auto user. nonAdmin - The auto user is a
            standard

            user without elevated access. admin - The auto user is a user with
            elevated

            access and operates with full Administrator permissions. The default
            value

            is nonAdmin. Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the start task to complete

            successfully (that is, to exit with exit code 0) before scheduling
            any tasks

            on the compute node. If true and the start task fails on a compute
            node, the

            Batch service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and scheduling error detail. If false, the Batch service will
            not wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool. For

            Windows compute nodes, the Batch service installs the certificates
            to the

            specified certificate store and location. For Linux compute nodes,
            the

            certificates are stored in a directory inside the task working
            directory and

            an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            task to

            query for this location. For certificates with visibility of
            'remoteUser', a

            'certs' directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: >-
            jobPatchParameter.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: >-
            The list of application packages to be installed on each compute
            node in the

            pool. This property is currently not supported on auto pools created
            with

            the virtualMachineConfiguration (IaaS) property.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: |-
            The
            list of user accounts to be created on each node in the pool.
          optional: true
        - id: jobPatchParameter.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: >-
            A list of

            name-value pairs associated with the pool as metadata. The Batch
            service

            does not assign any meaning to metadata; it is solely for the use of
            user

            code.
          optional: true
        - id: jobPatchParameter.metadata
          type:
            - array
          description: >-
            A list of name-value pairs

            associated with the job as metadata. If omitted, the existing job
            metadata

            is left unchanged.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobPatchOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobPatchOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.jobPatchOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobPatchOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.jobPatchOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobPatchOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.jobPatchOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobPatchOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobPatchOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function patch(jobId, jobPatchParameter, options, optionalCallback)'
  - uid: 'azure-batch.Job#updateWithHttpOperationResponse'
    id: 'azure-batch.Job#updateWithHttpOperationResponse'
    parent: azure-batch.Job
    name: 'updateWithHttpOperationResponse(jobId, jobUpdateParameter, options)'
    summary: >-
      Updates the properties of the specified job.


      This fully replaces all the updateable properties of the job. For example,

      if the job has constraints associated with it and if constraints is not

      specified with this request, then the Batch service will remove the
      existing

      constraints.
    fullName: >-
      azure-batch.Job.updateWithHttpOperationResponse(jobId, jobUpdateParameter,
      options)
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job whose properties you want to update.
        - id: jobUpdateParameter
          type:
            - object
          description: The parameters for the request.
        - id: jobUpdateParameter.priority
          type:
            - number
          description: >-
            The priority of the job.

            Priority values can range from -1000 to 1000, with -1000 being the
            lowest

            priority and 1000 being the highest priority. If omitted, it is set
            to the

            default value 0.
          optional: true
        - id: jobUpdateParameter.constraints
          type:
            - object
          description: |-
            The execution constraints
            for the job. If omitted, the constraints are cleared.
          optional: true
        - id: jobUpdateParameter.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the job may run, measured from the
            time the

            job is created. If the job does not complete within the time limit,
            the

            Batch service terminates it and any tasks that are still running. In
            this

            case, the termination reason will be MaxWallClockTimeExpiry. If this

            property is not specified, there is no time limit on how long the
            job may

            run.
          optional: true
        - id: jobUpdateParameter.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The

            maximum number of times each task may be retried. The Batch service
            retries

            a task if its exit code is nonzero. Note that this value
            specifically

            controls the number of retries. The Batch service will try each task
            once,

            and may then retry up to this limit. For example, if the maximum
            retry count

            is 3, Batch tries a task up to 4 times (one initial try and 3
            retries). If

            the maximum retry count is 0, the Batch service does not retry
            tasks. If the

            maximum retry count is -1, the Batch service retries tasks without
            limit.

            The default value is 0 (no retries).
          optional: true
        - id: jobUpdateParameter.poolInfo
          type:
            - object
          description: >-
            The pool on which the Batch

            service runs the job's tasks. You may change the pool for a job only
            when

            the job is disabled. The Update Job call will fail if you include
            the

            poolInfo element and the job is not disabled. If you specify an

            autoPoolSpecification specification in the poolInfo, only the
            keepAlive

            property can be updated, and then only if the auto pool has a

            poolLifetimeOption of job.
        - id: jobUpdateParameter.poolInfo.poolId
          type:
            - string
          description: >-
            The ID of an existing

            pool. All the tasks of the job will run on the specified pool. You
            must

            ensure that the pool referenced by this property exists. If the pool
            does

            not exist at the time the Batch service tries to schedule a job, no
            tasks

            for the job will run until you create a pool with that id. Note that
            the

            Batch service will not reject the job request; it will simply not
            run tasks

            until the pool exists. You must specify either the pool ID or the
            auto pool

            specification, but not both.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification
          type:
            - object
          description: >-
            Characteristics for a temporary 'auto pool'. The Batch service will
            create

            this auto pool when the job is submitted. If auto pool creation
            fails, the

            Batch service moves the job to a completed state, and the pool
            creation

            error is set in the job's scheduling error property. The Batch
            service

            manages the lifetime (both creation and, unless keepAlive is
            specified,

            deletion) of the auto pool. Any user actions that affect the
            lifetime of the

            auto pool while the job is active will result in unexpected
            behavior. You

            must specify either the pool ID or the auto pool specification, but
            not

            both.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: >-
            A

            prefix to be added to the unique identifier when a pool is
            automatically

            created. The Batch service assigns each auto pool a unique
            identifier on

            creation. To distinguish between pools created for different
            purposes, you

            can specify this element to add a prefix to the id that is assigned.
            The

            prefix can be up to 20 characters long.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: >-
            The

            minimum lifetime of created auto pools, and how multiple jobs on a
            schedule

            are assigned to pools. When the pool lifetime scope is jobSchedule
            level,

            the Batch service keeps track of the last autopool created for the
            job

            schedule, and deletes that pool when the job schedule completes.
            Batch will

            also delete this pool if the user updates the auto pool
            specification in a

            way that changes this lifetime. Possible values include:
            'jobSchedule',

            'job', 'unmapped'
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: >-
            Whether to

            keep an auto pool alive after its lifetime expires. If false, the
            Batch

            service deletes the pool once its lifetime (as determined by the

            poolLifetimeOption setting) expires; that is, when the job or job
            schedule

            completes. If true, the Batch service does not delete the pool

            automatically. It is up to the user to delete auto pools created
            with this

            option.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: |-
            The
            pool specification for the auto pool.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: >-
            The

            display name for the pool. The display name need not be unique and
            can

            contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: >-
            The size of

            the virtual machines in the pool. All virtual machines in a pool are
            the

            same size. For information about available sizes of virtual machines
            for

            Cloud Services pools (pools created with cloudServiceConfiguration),
            see

            Sizes for Cloud Services

            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall. For

            information about available VM sizes for pools using images from the
            Virtual

            Machines Marketplace (pools created with
            virtualMachineConfiguration) see

            Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The cloud service configuration for the pool. This property must be

            specified if the pool needs to be created with Azure PaaS VMs. This
            property

            and virtualMachineConfiguration are mutually exclusive and one of
            the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request). This property cannot be specified if the
            Batch

            account was created with its poolAllocationMode property set to

            'UserSubscription'.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the

            pool. Possible values are: 2 - OS Family 2, equivalent to Windows
            Server

            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 -
            OS

            Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5,
            equivalent

            to Windows Server 2016. For more information, see Azure Guest OS
            Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the

            pool. The default value is * which specifies the latest operating
            system

            version for the specified OS family.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS Version currently installed on the virtual
            machines in

            the pool. This may differ from targetOSVersion if the pool state is

            Upgrading. In this case some virtual machines may be on the
            targetOSVersion

            and some may be on the currentOSVersion during the upgrade process.
            Once all

            virtual machines have upgraded, currentOSVersion is updated to be
            the same

            as targetOSVersion.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The virtual machine configuration for the pool. This property must
            be

            specified if the pool needs to be created with Azure IaaS VMs. This
            property

            and cloudServiceConfiguration are mutually exclusive and one of the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference to the Azure Virtual Machines Marketplace image to use.
            This

            property and osDisk are mutually exclusive and one of the properties
            must be

            specified.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: >-
            The SKU of the Azure Virtual Machines Marketplace image. For
            example,

            14.04.0-LTS or 2012-R2-Datacenter.
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: >-
            A reference to the OS disk image to use. This property can be
            specified only

            if the Batch account was created with its poolAllocationMode
            property set to

            'UserSubscription'. This property and imageReference are mutually
            exclusive

            and one of the properties must be specified.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.imageUris
          type:
            - array
          description: >-
            The collection of Virtual Hard Disk (VHD) URIs. All the VHDs must be

            identical and must reside in an Azure Storage account within the
            same

            subscription and same region as the Batch account. For best
            performance, it

            is recommended that each VHD resides in a separate Azure Storage
            account.

            Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute
            nodes.

            You must supply enough VHD URIs to satisfy the 'targetDedicated'
            property of

            the pool. If you do not supply enough VHD URIs, the pool will
            partially

            allocate compute nodes, and a resize error will occur.
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type of caching to enable for the OS disk. none - The caching
            mode for

            the disk is not enabled. readOnly - The caching mode for the disk is
            read

            only. readWrite - The caching mode for the disk is read and write.
            The

            default value for caching is none. For information about the caching
            options

            see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of the Batch node agent to be provisioned on compute nodes
            in the

            pool. The Batch node agent is a program that runs on each node in
            the pool,

            and provides the command-and-control interface between the node and
            the

            Batch service. There are different implementations of the node
            agent, known

            as SKUs, for different operating systems. You must specify a node
            agent SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: >-
            The

            maximum number of tasks that can run concurrently on a single
            compute node

            in the pool. The default value is 1. The maximum value of this
            setting

            depends on the size of the compute nodes in the pool (the vmSize
            setting).
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed among compute nodes in the pool.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: >-
            How tasks should be distributed across compute nodes. Possible
            values

            include: 'spread', 'pack', 'unmapped'
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The

            timeout for allocation of compute nodes to the pool. This timeout
            applies

            only to manual scaling; it has no effect when enableAutoScale is set
            to

            true. The default value is 15 minutes. The minimum value is 5
            minutes. If

            you specify a value less than 5 minutes, the Batch service rejects
            the

            request with an error; if you are calling the REST API directly, the
            HTTP

            status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.targetDedicated
          type:
            - number
          description: >-
            The

            desired number of compute nodes in the pool. This property must not
            be

            specified if enableAutoScale is set to true. It is required if

            enableAutoScale is set to false.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should automatically adjust over time. If
            false, the

            targetDedicated element is required. If true, the autoScaleFormula
            element

            is required. The pool automatically resizes according to the
            formula. The

            default value is false.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool.
            This

            property must not be specified if enableAutoScale is set to false.
            It is

            required if enableAutoScale is set to true. The formula is checked
            for

            validity before the pool is created. If the formula is not valid,
            the Batch

            service rejects the request with detailed error information.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval at which to automatically adjust the pool size
            according

            to the autoscale formula. The default value is 15 minutes. The
            minimum and

            maximum value are 5 minutes and 168 hours respectively. If you
            specify a

            value less than 5 minutes or greater than 168 hours, the Batch
            service

            rejects the request with an invalid property value error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool permits direct communication between nodes.
            Enabling

            inter-node communication limits the maximum size of the pool due to

            deployment restrictions on the nodes of the pool. This may result in
            the

            pool not reaching its desired size. The default value is false.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The ARM resource identifier of the virtual network subnet which the
            compute

            nodes of the pool will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. This
            property

            can only be specified for pools created with a
            cloudServiceConfiguration.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: >-
            A task to

            run on each compute node as it joins the pool. The task runs when
            the node

            is added to the pool or when the node is restarted.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: >-
            The command line of the start task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the start task runs. If omitted, the
            task runs

            as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity under which the task is run. The
            userName and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the task is run. The userName and autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user pool - specifies that the task runs as
            the

            common auto user account which is created on every node in a pool.
            task -

            specifies that the service should create a new user for the task.
            The

            default value is task. Possible values include: 'task', 'pool'
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation level of the auto user. nonAdmin - The auto user is a
            standard

            user without elevated access. admin - The auto user is a user with
            elevated

            access and operates with full Administrator permissions. The default
            value

            is nonAdmin. Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the start task to complete

            successfully (that is, to exit with exit code 0) before scheduling
            any tasks

            on the compute node. If true and the start task fails on a compute
            node, the

            Batch service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and scheduling error detail. If false, the Batch service will
            not wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool. For

            Windows compute nodes, the Batch service installs the certificates
            to the

            specified certificate store and location. For Linux compute nodes,
            the

            certificates are stored in a directory inside the task working
            directory and

            an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            task to

            query for this location. For certificates with visibility of
            'remoteUser', a

            'certs' directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: >-
            The list of application packages to be installed on each compute
            node in the

            pool. This property is currently not supported on auto pools created
            with

            the virtualMachineConfiguration (IaaS) property.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: |-
            The
            list of user accounts to be created on each node in the pool.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: >-
            A list of

            name-value pairs associated with the pool as metadata. The Batch
            service

            does not assign any meaning to metadata; it is solely for the use of
            user

            code.
          optional: true
        - id: jobUpdateParameter.metadata
          type:
            - array
          description: >-
            A list of name-value pairs

            associated with the job as metadata. If omitted, it takes the
            default value

            of an empty list; in effect, any existing metadata is deleted.
          optional: true
        - id: jobUpdateParameter.onAllTasksComplete
          type:
            - string
          description: >-
            The action the Batch

            service should take when all tasks in the job are in the completed
            state. If

            omitted, the completion behavior is set to noAction. If the current
            value is

            terminateJob, this is an error because a job's completion behavior
            may not

            be changed from terminateJob to noAction. Possible values include:

            'noAction', 'terminateJob'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobUpdateOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobUpdateOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.jobUpdateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobUpdateOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobUpdateOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobUpdateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.jobUpdateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobUpdateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobUpdateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(jobId, jobUpdateParameter,
        options)
  - uid: 'azure-batch.Job#update'
    id: 'azure-batch.Job#update'
    parent: azure-batch.Job
    name: 'update(jobId, jobUpdateParameter, options, optionalCallback)'
    summary: >-
      Updates the properties of the specified job.


      This fully replaces all the updateable properties of the job. For example,

      if the job has constraints associated with it and if constraints is not

      specified with this request, then the Batch service will remove the
      existing

      constraints.
    fullName: >-
      azure-batch.Job.update(jobId, jobUpdateParameter, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job whose properties you want to update.
        - id: jobUpdateParameter
          type:
            - object
          description: The parameters for the request.
        - id: jobUpdateParameter.priority
          type:
            - number
          description: >-
            The priority of the job.

            Priority values can range from -1000 to 1000, with -1000 being the
            lowest

            priority and 1000 being the highest priority. If omitted, it is set
            to the

            default value 0.
          optional: true
        - id: jobUpdateParameter.constraints
          type:
            - object
          description: |-
            The execution constraints
            for the job. If omitted, the constraints are cleared.
          optional: true
        - id: jobUpdateParameter.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed time that the job may run, measured from the
            time the

            job is created. If the job does not complete within the time limit,
            the

            Batch service terminates it and any tasks that are still running. In
            this

            case, the termination reason will be MaxWallClockTimeExpiry. If this

            property is not specified, there is no time limit on how long the
            job may

            run.
          optional: true
        - id: jobUpdateParameter.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The

            maximum number of times each task may be retried. The Batch service
            retries

            a task if its exit code is nonzero. Note that this value
            specifically

            controls the number of retries. The Batch service will try each task
            once,

            and may then retry up to this limit. For example, if the maximum
            retry count

            is 3, Batch tries a task up to 4 times (one initial try and 3
            retries). If

            the maximum retry count is 0, the Batch service does not retry
            tasks. If the

            maximum retry count is -1, the Batch service retries tasks without
            limit.

            The default value is 0 (no retries).
          optional: true
        - id: jobUpdateParameter.poolInfo
          type:
            - object
          description: >-
            The pool on which the Batch

            service runs the job's tasks. You may change the pool for a job only
            when

            the job is disabled. The Update Job call will fail if you include
            the

            poolInfo element and the job is not disabled. If you specify an

            autoPoolSpecification specification in the poolInfo, only the
            keepAlive

            property can be updated, and then only if the auto pool has a

            poolLifetimeOption of job.
        - id: jobUpdateParameter.poolInfo.poolId
          type:
            - string
          description: >-
            The ID of an existing

            pool. All the tasks of the job will run on the specified pool. You
            must

            ensure that the pool referenced by this property exists. If the pool
            does

            not exist at the time the Batch service tries to schedule a job, no
            tasks

            for the job will run until you create a pool with that id. Note that
            the

            Batch service will not reject the job request; it will simply not
            run tasks

            until the pool exists. You must specify either the pool ID or the
            auto pool

            specification, but not both.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification
          type:
            - object
          description: >-
            Characteristics for a temporary 'auto pool'. The Batch service will
            create

            this auto pool when the job is submitted. If auto pool creation
            fails, the

            Batch service moves the job to a completed state, and the pool
            creation

            error is set in the job's scheduling error property. The Batch
            service

            manages the lifetime (both creation and, unless keepAlive is
            specified,

            deletion) of the auto pool. Any user actions that affect the
            lifetime of the

            auto pool while the job is active will result in unexpected
            behavior. You

            must specify either the pool ID or the auto pool specification, but
            not

            both.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: >-
            A

            prefix to be added to the unique identifier when a pool is
            automatically

            created. The Batch service assigns each auto pool a unique
            identifier on

            creation. To distinguish between pools created for different
            purposes, you

            can specify this element to add a prefix to the id that is assigned.
            The

            prefix can be up to 20 characters long.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: >-
            The

            minimum lifetime of created auto pools, and how multiple jobs on a
            schedule

            are assigned to pools. When the pool lifetime scope is jobSchedule
            level,

            the Batch service keeps track of the last autopool created for the
            job

            schedule, and deletes that pool when the job schedule completes.
            Batch will

            also delete this pool if the user updates the auto pool
            specification in a

            way that changes this lifetime. Possible values include:
            'jobSchedule',

            'job', 'unmapped'
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: >-
            Whether to

            keep an auto pool alive after its lifetime expires. If false, the
            Batch

            service deletes the pool once its lifetime (as determined by the

            poolLifetimeOption setting) expires; that is, when the job or job
            schedule

            completes. If true, the Batch service does not delete the pool

            automatically. It is up to the user to delete auto pools created
            with this

            option.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: |-
            The
            pool specification for the auto pool.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: >-
            The

            display name for the pool. The display name need not be unique and
            can

            contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: >-
            The size of

            the virtual machines in the pool. All virtual machines in a pool are
            the

            same size. For information about available sizes of virtual machines
            for

            Cloud Services pools (pools created with cloudServiceConfiguration),
            see

            Sizes for Cloud Services

            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall. For

            information about available VM sizes for pools using images from the
            Virtual

            Machines Marketplace (pools created with
            virtualMachineConfiguration) see

            Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The cloud service configuration for the pool. This property must be

            specified if the pool needs to be created with Azure PaaS VMs. This
            property

            and virtualMachineConfiguration are mutually exclusive and one of
            the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request). This property cannot be specified if the
            Batch

            account was created with its poolAllocationMode property set to

            'UserSubscription'.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the

            pool. Possible values are: 2 - OS Family 2, equivalent to Windows
            Server

            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 -
            OS

            Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5,
            equivalent

            to Windows Server 2016. For more information, see Azure Guest OS
            Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the

            pool. The default value is * which specifies the latest operating
            system

            version for the specified OS family.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS Version currently installed on the virtual
            machines in

            the pool. This may differ from targetOSVersion if the pool state is

            Upgrading. In this case some virtual machines may be on the
            targetOSVersion

            and some may be on the currentOSVersion during the upgrade process.
            Once all

            virtual machines have upgraded, currentOSVersion is updated to be
            the same

            as targetOSVersion.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The virtual machine configuration for the pool. This property must
            be

            specified if the pool needs to be created with Azure IaaS VMs. This
            property

            and cloudServiceConfiguration are mutually exclusive and one of the

            properties must be specified. If neither is specified then the Batch
            service

            returns an error; if you are calling the REST API directly, the HTTP
            status

            code is 400 (Bad Request).
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference to the Azure Virtual Machines Marketplace image to use.
            This

            property and osDisk are mutually exclusive and one of the properties
            must be

            specified.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: >-
            The SKU of the Azure Virtual Machines Marketplace image. For
            example,

            14.04.0-LTS or 2012-R2-Datacenter.
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: >-
            A reference to the OS disk image to use. This property can be
            specified only

            if the Batch account was created with its poolAllocationMode
            property set to

            'UserSubscription'. This property and imageReference are mutually
            exclusive

            and one of the properties must be specified.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.imageUris
          type:
            - array
          description: >-
            The collection of Virtual Hard Disk (VHD) URIs. All the VHDs must be

            identical and must reside in an Azure Storage account within the
            same

            subscription and same region as the Batch account. For best
            performance, it

            is recommended that each VHD resides in a separate Azure Storage
            account.

            Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute
            nodes.

            You must supply enough VHD URIs to satisfy the 'targetDedicated'
            property of

            the pool. If you do not supply enough VHD URIs, the pool will
            partially

            allocate compute nodes, and a resize error will occur.
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type of caching to enable for the OS disk. none - The caching
            mode for

            the disk is not enabled. readOnly - The caching mode for the disk is
            read

            only. readWrite - The caching mode for the disk is read and write.
            The

            default value for caching is none. For information about the caching
            options

            see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of the Batch node agent to be provisioned on compute nodes
            in the

            pool. The Batch node agent is a program that runs on each node in
            the pool,

            and provides the command-and-control interface between the node and
            the

            Batch service. There are different implementations of the node
            agent, known

            as SKUs, for different operating systems. You must specify a node
            agent SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: >-
            The

            maximum number of tasks that can run concurrently on a single
            compute node

            in the pool. The default value is 1. The maximum value of this
            setting

            depends on the size of the compute nodes in the pool (the vmSize
            setting).
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed among compute nodes in the pool.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: >-
            How tasks should be distributed across compute nodes. Possible
            values

            include: 'spread', 'pack', 'unmapped'
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The

            timeout for allocation of compute nodes to the pool. This timeout
            applies

            only to manual scaling; it has no effect when enableAutoScale is set
            to

            true. The default value is 15 minutes. The minimum value is 5
            minutes. If

            you specify a value less than 5 minutes, the Batch service rejects
            the

            request with an error; if you are calling the REST API directly, the
            HTTP

            status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.targetDedicated
          type:
            - number
          description: >-
            The

            desired number of compute nodes in the pool. This property must not
            be

            specified if enableAutoScale is set to true. It is required if

            enableAutoScale is set to false.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should automatically adjust over time. If
            false, the

            targetDedicated element is required. If true, the autoScaleFormula
            element

            is required. The pool automatically resizes according to the
            formula. The

            default value is false.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool.
            This

            property must not be specified if enableAutoScale is set to false.
            It is

            required if enableAutoScale is set to true. The formula is checked
            for

            validity before the pool is created. If the formula is not valid,
            the Batch

            service rejects the request with detailed error information.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval at which to automatically adjust the pool size
            according

            to the autoscale formula. The default value is 15 minutes. The
            minimum and

            maximum value are 5 minutes and 168 hours respectively. If you
            specify a

            value less than 5 minutes or greater than 168 hours, the Batch
            service

            rejects the request with an invalid property value error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool permits direct communication between nodes.
            Enabling

            inter-node communication limits the maximum size of the pool due to

            deployment restrictions on the nodes of the pool. This may result in
            the

            pool not reaching its desired size. The default value is false.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The ARM resource identifier of the virtual network subnet which the
            compute

            nodes of the pool will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. This
            property

            can only be specified for pools created with a
            cloudServiceConfiguration.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: >-
            A task to

            run on each compute node as it joins the pool. The task runs when
            the node

            is added to the pool or when the node is restarted.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: >-
            The command line of the start task. The command line does not run
            under a

            shell, and therefore cannot take advantage of shell features such as

            environment variable expansion. If you want to take advantage of
            such

            features, you should invoke the shell in the command line, for
            example using

            "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service will download to the compute
            node

            before running the command line.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which the start task runs. If omitted, the
            task runs

            as a non-administrative user unique to the task.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity under which the task is run. The
            userName and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the task is run. The userName and autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user pool - specifies that the task runs as
            the

            common auto user account which is created on every node in a pool.
            task -

            specifies that the service should create a new user for the task.
            The

            default value is task. Possible values include: 'task', 'pool'
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation level of the auto user. nonAdmin - The auto user is a
            standard

            user without elevated access. admin - The auto user is a user with
            elevated

            access and operates with full Administrator permissions. The default
            value

            is nonAdmin. Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the start task to complete

            successfully (that is, to exit with exit code 0) before scheduling
            any tasks

            on the compute node. If true and the start task fails on a compute
            node, the

            Batch service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and scheduling error detail. If false, the Batch service will
            not wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: >-
            A list of certificates to be installed on each compute node in the
            pool. For

            Windows compute nodes, the Batch service installs the certificates
            to the

            specified certificate store and location. For Linux compute nodes,
            the

            certificates are stored in a directory inside the task working
            directory and

            an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            task to

            query for this location. For certificates with visibility of
            'remoteUser', a

            'certs' directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: >-
            jobUpdateParameter.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: >-
            The list of application packages to be installed on each compute
            node in the

            pool. This property is currently not supported on auto pools created
            with

            the virtualMachineConfiguration (IaaS) property.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: |-
            The
            list of user accounts to be created on each node in the pool.
          optional: true
        - id: jobUpdateParameter.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: >-
            A list of

            name-value pairs associated with the pool as metadata. The Batch
            service

            does not assign any meaning to metadata; it is solely for the use of
            user

            code.
          optional: true
        - id: jobUpdateParameter.metadata
          type:
            - array
          description: >-
            A list of name-value pairs

            associated with the job as metadata. If omitted, it takes the
            default value

            of an empty list; in effect, any existing metadata is deleted.
          optional: true
        - id: jobUpdateParameter.onAllTasksComplete
          type:
            - string
          description: >-
            The action the Batch

            service should take when all tasks in the job are in the completed
            state. If

            omitted, the completion behavior is set to noAction. If the current
            value is

            terminateJob, this is an error because a job's completion behavior
            may not

            be changed from terminateJob to noAction. Possible values include:

            'noAction', 'terminateJob'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobUpdateOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobUpdateOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.jobUpdateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobUpdateOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobUpdateOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobUpdateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.jobUpdateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobUpdateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobUpdateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function update(jobId, jobUpdateParameter, options, optionalCallback)'
  - uid: 'azure-batch.Job#disableWithHttpOperationResponse'
    id: 'azure-batch.Job#disableWithHttpOperationResponse'
    parent: azure-batch.Job
    name: 'disableWithHttpOperationResponse(jobId, disableTasks, options)'
    summary: >-
      Disables the specified job, preventing new tasks from running.


      The Batch Service immediately moves the job to the disabling state. Batch

      then uses the disableTasks parameter to determine what to do with the

      currently running tasks of the job. The job remains in the disabling state

      until the disable operation is completed and all tasks have been dealt
      with

      according to the disableTasks option; the job then moves to the disabled

      state. No new tasks are started under the job until it moves back to
      active

      state. If you try to disable a job that is in any state other than active,

      disabling, or disabled, the request fails with status code 409.
    fullName: >-
      azure-batch.Job.disableWithHttpOperationResponse(jobId, disableTasks,
      options)
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job to disable.
        - id: disableTasks
          type:
            - string
          description: >-
            What to do with active tasks associated with

            the job. requeue - Terminate running tasks and requeue them. The
            tasks will

            run again when the job is enabled. terminate - Terminate running
            tasks. The

            tasks will not run again. wait - Allow currently running tasks to
            complete.

            Possible values include: 'requeue', 'terminate', 'wait'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobDisableOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobDisableOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.jobDisableOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobDisableOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobDisableOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobDisableOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.jobDisableOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobDisableOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobDisableOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function disableWithHttpOperationResponse(jobId, disableTasks, options)'
  - uid: 'azure-batch.Job#disable'
    id: 'azure-batch.Job#disable'
    parent: azure-batch.Job
    name: 'disable(jobId, disableTasks, options, optionalCallback)'
    summary: >-
      Disables the specified job, preventing new tasks from running.


      The Batch Service immediately moves the job to the disabling state. Batch

      then uses the disableTasks parameter to determine what to do with the

      currently running tasks of the job. The job remains in the disabling state

      until the disable operation is completed and all tasks have been dealt
      with

      according to the disableTasks option; the job then moves to the disabled

      state. No new tasks are started under the job until it moves back to
      active

      state. If you try to disable a job that is in any state other than active,

      disabling, or disabled, the request fails with status code 409.
    fullName: 'azure-batch.Job.disable(jobId, disableTasks, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job to disable.
        - id: disableTasks
          type:
            - string
          description: >-
            What to do with active tasks associated with

            the job. requeue - Terminate running tasks and requeue them. The
            tasks will

            run again when the job is enabled. terminate - Terminate running
            tasks. The

            tasks will not run again. wait - Allow currently running tasks to
            complete.

            Possible values include: 'requeue', 'terminate', 'wait'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobDisableOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobDisableOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.jobDisableOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobDisableOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobDisableOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobDisableOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.jobDisableOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobDisableOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobDisableOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function disable(jobId, disableTasks, options, optionalCallback)'
  - uid: 'azure-batch.Job#enableWithHttpOperationResponse'
    id: 'azure-batch.Job#enableWithHttpOperationResponse'
    parent: azure-batch.Job
    name: 'enableWithHttpOperationResponse(jobId, options)'
    summary: >-
      Enables the specified job, allowing new tasks to run.


      When you call this API, the Batch service sets a disabled job to the

      enabling state. After the this operation is completed, the job moves to
      the

      active state, and scheduling of new tasks under the job resumes. The Batch

      service does not allow a task to remain in the active state for more than
      7

      days. Therefore, if you enable a job containing active tasks which were

      added more than 7 days ago, those tasks will not run.
    fullName: 'azure-batch.Job.enableWithHttpOperationResponse(jobId, options)'
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job to enable.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobEnableOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobEnableOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.jobEnableOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobEnableOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobEnableOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobEnableOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.jobEnableOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobEnableOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobEnableOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function enableWithHttpOperationResponse(jobId, options)'
  - uid: 'azure-batch.Job#enable'
    id: 'azure-batch.Job#enable'
    parent: azure-batch.Job
    name: 'enable(jobId, options, optionalCallback)'
    summary: >-
      Enables the specified job, allowing new tasks to run.


      When you call this API, the Batch service sets a disabled job to the

      enabling state. After the this operation is completed, the job moves to
      the

      active state, and scheduling of new tasks under the job resumes. The Batch

      service does not allow a task to remain in the active state for more than
      7

      days. Therefore, if you enable a job containing active tasks which were

      added more than 7 days ago, those tasks will not run.
    fullName: 'azure-batch.Job.enable(jobId, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job to enable.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobEnableOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobEnableOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.jobEnableOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobEnableOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobEnableOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobEnableOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.jobEnableOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobEnableOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobEnableOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function enable(jobId, options, optionalCallback)'
  - uid: 'azure-batch.Job#terminateWithHttpOperationResponse'
    id: 'azure-batch.Job#terminateWithHttpOperationResponse'
    parent: azure-batch.Job
    name: 'terminateWithHttpOperationResponse(jobId, options)'
    summary: >-
      Terminates the specified job, marking it as completed.


      When a Terminate Job request is received, the Batch service sets the job
      to

      the terminating state. The Batch service then terminates any active or

      running tasks associated with the job, and runs any required Job Release

      tasks. The job then moves into the completed state.
    fullName: 'azure-batch.Job.terminateWithHttpOperationResponse(jobId, options)'
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job to terminate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.terminateReason
          type:
            - string
          description: |-
            The text you want to appear as the
            job's TerminateReason. The default is 'UserTerminate'.
          optional: true
        - id: options.jobTerminateOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobTerminateOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.jobTerminateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobTerminateOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobTerminateOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobTerminateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobTerminateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobTerminateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobTerminateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function terminateWithHttpOperationResponse(jobId, options)'
  - uid: 'azure-batch.Job#terminate'
    id: 'azure-batch.Job#terminate'
    parent: azure-batch.Job
    name: 'terminate(jobId, options, optionalCallback)'
    summary: >-
      Terminates the specified job, marking it as completed.


      When a Terminate Job request is received, the Batch service sets the job
      to

      the terminating state. The Batch service then terminates any active or

      running tasks associated with the job, and runs any required Job Release

      tasks. The job then moves into the completed state.
    fullName: 'azure-batch.Job.terminate(jobId, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job to terminate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.terminateReason
          type:
            - string
          description: |-
            The text you want to appear as the
            job's TerminateReason. The default is 'UserTerminate'.
          optional: true
        - id: options.jobTerminateOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobTerminateOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.jobTerminateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobTerminateOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobTerminateOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.jobTerminateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.jobTerminateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.jobTerminateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.jobTerminateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function terminate(jobId, options, optionalCallback)'
  - uid: 'azure-batch.Job#addWithHttpOperationResponse'
    id: 'azure-batch.Job#addWithHttpOperationResponse'
    parent: azure-batch.Job
    name: 'addWithHttpOperationResponse(job, options)'
    summary: >-
      Adds a job to the specified account.


      The Batch service supports two ways to control the work done as part of a

      job. In the first approach, the user specifies a Job Manager task. The
      Batch

      service launches this task when it is ready to start the job. The Job

      Manager task controls all other tasks that run under this job, by using
      the

      Task APIs. In the second approach, the user directly controls the
      execution

      of tasks under an active job, by using the Task APIs. Also note: when
      naming

      jobs, avoid including sensitive information such as user names or secret

      project names. This information may appear in telemetry logs accessible to

      Microsoft Support engineers.
    fullName: 'azure-batch.Job.addWithHttpOperationResponse(job, options)'
    type: Method
    syntax:
      parameters:
        - id: job
          type:
            - object
          description: The job to be added.
        - id: job.id
          type:
            - string
          description: >-
            A string that uniquely identifies the job within the

            account. The ID can contain any combination of alphanumeric
            characters

            including hyphens and underscores, and cannot contain more than 64

            characters. It is common to use a GUID for the id.
        - id: job.displayName
          type:
            - string
          description: >-
            The display name for the job. The display

            name need not be unique and can contain any Unicode characters up to
            a

            maximum length of 1024.
          optional: true
        - id: job.priority
          type:
            - number
          description: >-
            The priority of the job. Priority values can

            range from -1000 to 1000, with -1000 being the lowest priority and
            1000

            being the highest priority. The default value is 0.
          optional: true
        - id: job.constraints
          type:
            - object
          description: The execution constraints for the job.
          optional: true
        - id: job.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum

            elapsed time that the job may run, measured from the time the job is

            created. If the job does not complete within the time limit, the
            Batch

            service terminates it and any tasks that are still running. In this
            case,

            the termination reason will be MaxWallClockTimeExpiry. If this
            property is

            not specified, there is no time limit on how long the job may run.
          optional: true
        - id: job.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of

            times each task may be retried. The Batch service retries a task if
            its exit

            code is nonzero. Note that this value specifically controls the
            number of

            retries. The Batch service will try each task once, and may then
            retry up to

            this limit. For example, if the maximum retry count is 3, Batch
            tries a task

            up to 4 times (one initial try and 3 retries). If the maximum retry
            count is

            0, the Batch service does not retry tasks. If the maximum retry
            count is -1,

            the Batch service retries tasks without limit. The default value is
            0 (no

            retries).
          optional: true
        - id: job.jobManagerTask
          type:
            - object
          description: >-
            Details of a Job Manager task to be

            launched when the job is started. If the job does not specify a Job
            Manager

            task, the user must explicitly add tasks to the job. If the job does
            specify

            a Job Manager task, the Batch service creates the Job Manager task
            when the

            job is created, and will try to schedule the Job Manager task before

            scheduling other tasks in the job. The Job Manager task's typical
            purpose is

            to control and/or monitor job execution, for example by deciding
            what

            additional tasks to run, determining when the work is complete, etc.

            (However, a Job Manager task is not restricted to these activities -
            it is a

            fully-fledged task in the system and perform whatever actions are
            required

            for the job.) For example, a Job Manager task might download a file

            specified as a parameter, analyze the contents of that file and
            submit

            additional tasks based on those contents.
          optional: true
        - id: job.jobManagerTask.id
          type:
            - string
          description: >-
            A string that uniquely identifies the

            Job Manager taskwithin the job. The id can contain any combination
            of

            alphanumeric characters including hyphens and underscores and cannot
            contain

            more than 64 characters.
        - id: job.jobManagerTask.displayName
          type:
            - string
          description: >-
            The display name of the Job

            Manager task. It need not be unique and can contain any Unicode
            characters

            up to a maximum length of 1024.
          optional: true
        - id: job.jobManagerTask.commandLine
          type:
            - string
          description: >-
            The command line of the Job

            Manager task. The command line does not run under a shell, and
            therefore

            cannot take advantage of shell features such as environment variable

            expansion. If you want to take advantage of such features, you
            should invoke

            the shell in the command line, for example using "cmd /c MyCommand"
            in

            Windows or "/bin/sh -c MyCommand" in Linux.
        - id: job.jobManagerTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the

            Batch service will download to the compute node before running the
            command

            line. Files listed under this element are located in the task's
            working

            directory.
          optional: true
        - id: job.jobManagerTask.environmentSettings
          type:
            - array
          description: |-
            A list of
            environment variable settings for the Job Manager task.
          optional: true
        - id: job.jobManagerTask.constraints
          type:
            - object
          description: |-
            Constraints that apply to
            the Job Manager task.
          optional: true
        - id: job.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: >-
            Whether completion

            of the Job Manager task signifies completion of the entire job. If
            true,

            when the Job Manager task completes, the Batch service marks the job
            as

            complete. If any tasks are still running at this time (other than
            Job

            Release), those tasks are terminated. If false, the completion of
            the Job

            Manager task does not affect the job status. In this case, you
            should either

            use the onAllTasksComplete attribute to terminate the job, or have a
            client

            or user terminate the job explicitly. An example of this is if the
            Job

            Manager creates a set of tasks but then takes no further role in
            their

            execution. The default value is true. If you are using the

            onAllTasksComplete and onTaskFailure attributes to control job
            lifetime, and

            using the Job Manager task only to create the tasks for the job (not
            to

            monitor progress), then it is important to set killJobOnCompletion
            to false.
          optional: true
        - id: job.jobManagerTask.userIdentity
          type:
            - object
          description: |-
            The user identity under
            which the Job Manager task runs. If omitted, the task runs as a
            non-administrative user unique to the task.
          optional: true
        - id: job.jobManagerTask.runExclusive
          type:
            - boolean
          description: >-
            Whether the Job Manager

            task requires exclusive use of the compute node where it runs. If
            true, no

            other tasks will run on the same compute node for as long as the Job
            Manager

            is running. If false, other tasks can run simultaneously with the
            Job

            Manager on a compute node. The Job Manager task counts normally
            against the

            node's concurrent task limit, so this is only relevant if the node
            allows

            multiple concurrent tasks. The default value is true.
          optional: true
        - id: job.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: >-
            A list of

            application packages that the Batch service will deploy to the
            compute node

            before running the command line. Application packages are downloaded
            and

            deployed to a shared directory, not the task directory. Therefore,
            if a

            referenced package is already on the compute node, and is up to
            date, then

            it is not re-downloaded; the existing copy on the compute node is
            used. If a

            referenced application package cannot be installed, for example
            because the

            package has been deleted or because download failed, the task fails
            with a

            scheduling error. This property is currently not supported on jobs
            running

            on pools created using the virtualMachineConfiguration (IaaS)
            property. If a

            task specifying applicationPackageReferences runs on such a pool, it
            fails

            with a scheduling error with code TaskSchedulingConstraintFailed.
          optional: true
        - id: job.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: >-
            The

            settings for an authentication token that the task can use to
            perform Batch

            service operations. If this property is set, the Batch service
            provides the

            task with an authentication token which can be used to authenticate
            Batch

            service operations without requiring an account access key. The
            token is

            provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable.
            The

            operations that the task can carry out using the token depend on the

            settings. For example, a task can request job permissions in order
            to add

            other tasks to the job, or check the status of the job or of other
            tasks

            under the job.
          optional: true
        - id: job.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: >-
            The

            Batch resources to which the token grants access. The authentication
            token

            grants access to a limited set of Batch service operations.
            Currently the

            only supported value for the access property is 'job', which grants
            access

            to all operations related to the job which contains the task.
          optional: true
        - id: job.jobPreparationTask
          type:
            - object
          description: >-
            The Job Preparation task. If a job

            has a Job Preparation task, the Batch service will run the Job
            Preparation

            task on a compute node before starting any tasks of that job on that
            compute

            node.
          optional: true
        - id: job.jobPreparationTask.id
          type:
            - string
          description: >-
            A string that uniquely

            identifies the Job Preparation task within the job. The ID can
            contain any

            combination of alphanumeric characters including hyphens and
            underscores and

            cannot contain more than 64 characters. If you do not specify this
            property,

            the Batch service assigns a default value of 'jobpreparation'. No
            other task

            in the job can have the same id as the Job Preparation task. If you
            try to

            submit a task with the same id, the Batch service rejects the
            request with

            error code TaskIdSameAsJobPreparationTask; if you are calling the
            REST API

            directly, the HTTP status code is 409 (Conflict).
          optional: true
        - id: job.jobPreparationTask.commandLine
          type:
            - string
          description: >-
            The command line of the

            Job Preparation task. The command line does not run under a shell,
            and

            therefore cannot take advantage of shell features such as
            environment

            variable expansion. If you want to take advantage of such features,
            you

            should invoke the shell in the command line, for example using "cmd
            /c

            MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: job.jobPreparationTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that

            the Batch service will download to the compute node before running
            the

            command line. Files listed under this element are located in the
            task's

            working directory.
          optional: true
        - id: job.jobPreparationTask.environmentSettings
          type:
            - array
          description: |-
            A list of
            environment variable settings for the Job Preparation task.
          optional: true
        - id: job.jobPreparationTask.constraints
          type:
            - object
          description: |-
            Constraints that apply
            to the Job Preparation task.
          optional: true
        - id: job.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed

            time that the task may run, measured from the time the task starts.
            If the

            task does not complete within the time limit, the Batch service
            terminates

            it. If this is not specified, there is no time limit on how long the
            task

            may run.
          optional: true
        - id: job.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time to retain the task directory on the compute node
            where it

            ran, from the time it completes execution. After this time, the
            Batch

            service may delete the task directory and all its contents. The
            default is

            infinite, i.e. the task directory will be retained until the compute
            node is

            removed or reimaged.
          optional: true
        - id: job.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The

            maximum number of times the task may be retried. The Batch service
            retries a

            task if its exit code is nonzero. Note that this value specifically
            controls

            the number of retries. The Batch service will try the task once, and
            may

            then retry up to this limit. For example, if the maximum retry count
            is 3,

            Batch tries the task up to 4 times (one initial try and 3 retries).
            If the

            maximum retry count is 0, the Batch service does not retry the task.
            If the

            maximum retry count is -1, the Batch service retries the task
            without limit.
          optional: true
        - id: job.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch

            service should wait for the Job Preparation task to complete
            successfully

            before scheduling any other tasks of the job on the compute node. If
            true

            and the Job Preparation task fails on a compute node, the Batch
            service

            retries the Job Preparation task up to its maximum retry count (as
            specified

            in the constraints element). If the task has still not completed

            successfully after all retries, then the Batch service will not
            schedule

            tasks of the job to the compute node. The compute node remains
            active and

            eligible to run tasks of other jobs. If false, the Batch service
            will not

            wait for the Job Preparation task to complete. In this case, other
            tasks of

            the job can start executing on the compute node while the Job
            Preparation

            task is still running; and even if the Job Preparation task fails,
            new tasks

            will continue to be scheduled on the node. The default value is
            true.
          optional: true
        - id: job.jobPreparationTask.userIdentity
          type:
            - object
          description: >-
            The user identity

            under which the Job Preparation task runs. If omitted, the task runs
            as a

            non-administrative user unique to the task.
          optional: true
        - id: job.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should rerun the Job Preparation task
            after a

            compute node reboots. The Job Preparation task is always rerun if a
            compute

            node is reimaged, or if the Job Preparation task did not complete
            (e.g.

            because the reboot occurred while the task was running). Therefore,
            you

            should always write a Job Preparation task to be idempotent and to
            behave

            correctly if run multiple times. The default value is true.
          optional: true
        - id: job.jobReleaseTask
          type:
            - object
          description: >-
            The Job Release task. A Job Release

            task cannot be specified without also specifying a Job Preparation
            task for

            the job. The Batch service runs the Job Release task on the compute
            nodes

            that have run the Job Preparation task. The primary purpose of the
            Job

            Release task is to undo changes to compute nodes made by the Job
            Preparation

            task. Example activities include deleting local files, or shutting
            down

            services that were started as part of job preparation.
          optional: true
        - id: job.jobReleaseTask.id
          type:
            - string
          description: >-
            A string that uniquely identifies

            the Job Release task within the job. The ID can contain any
            combination of

            alphanumeric characters including hyphens and underscores and cannot
            contain

            more than 64 characters. If you do not specify this property, the
            Batch

            service assigns a default value of 'jobrelease'. No other task in
            the job

            can have the same id as the Job Release task. If you try to submit a
            task

            with the same id, the Batch service rejects the request with error
            code

            TaskIdSameAsJobReleaseTask; if you are calling the REST API
            directly, the

            HTTP status code is 409 (Conflict).
          optional: true
        - id: job.jobReleaseTask.commandLine
          type:
            - string
          description: >-
            The command line of the Job

            Release task. The command line does not run under a shell, and
            therefore

            cannot take advantage of shell features such as environment variable

            expansion. If you want to take advantage of such features, you
            should invoke

            the shell in the command line, for example using "cmd /c MyCommand"
            in

            Windows or "/bin/sh -c MyCommand" in Linux.
        - id: job.jobReleaseTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the

            Batch service will download to the compute node before running the
            command

            line. Files listed under this element are located in the task's
            working

            directory.
          optional: true
        - id: job.jobReleaseTask.environmentSettings
          type:
            - array
          description: |-
            A list of
            environment variable settings for the Job Release task.
          optional: true
        - id: job.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum

            elapsed time that the Job Release task may run on a given compute
            node,

            measured from the time the task starts. If the task does not
            complete within

            the time limit, the Batch service terminates it. The default value
            is 15

            minutes. You may not specify a timeout longer than 15 minutes. If
            you do,

            the Batch service rejects it with an error; if you are calling the
            REST API

            directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: job.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time

            to retain the task directory for the Job Release task on the compute
            node.

            After this time, the Batch service may delete the task directory and
            all its

            contents. The default is infinite, i.e. the task directory will be
            retained

            until the compute node is removed or reimaged.
          optional: true
        - id: job.jobReleaseTask.userIdentity
          type:
            - object
          description: |-
            The user identity under
            which the Job Release task runs. If omitted, the task runs as a
            non-administrative user unique to the task.
          optional: true
        - id: job.commonEnvironmentSettings
          type:
            - array
          description: >-
            The list of common

            environment variable settings. These environment variables are set
            for all

            tasks in the job (including the Job Manager, Job Preparation and Job
            Release

            tasks).
          optional: true
        - id: job.poolInfo
          type:
            - object
          description: |-
            The pool on which the Batch service runs the
            job's tasks.
        - id: job.poolInfo.poolId
          type:
            - string
          description: >-
            The ID of an existing pool. All the

            tasks of the job will run on the specified pool. You must ensure
            that the

            pool referenced by this property exists. If the pool does not exist
            at the

            time the Batch service tries to schedule a job, no tasks for the job
            will

            run until you create a pool with that id. Note that the Batch
            service will

            not reject the job request; it will simply not run tasks until the
            pool

            exists. You must specify either the pool ID or the auto pool
            specification,

            but not both.
          optional: true
        - id: job.poolInfo.autoPoolSpecification
          type:
            - object
          description: >-
            Characteristics for a

            temporary 'auto pool'. The Batch service will create this auto pool
            when the

            job is submitted. If auto pool creation fails, the Batch service
            moves the

            job to a completed state, and the pool creation error is set in the
            job's

            scheduling error property. The Batch service manages the lifetime
            (both

            creation and, unless keepAlive is specified, deletion) of the auto
            pool. Any

            user actions that affect the lifetime of the auto pool while the job
            is

            active will result in unexpected behavior. You must specify either
            the pool

            ID or the auto pool specification, but not both.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: >-
            A

            prefix to be added to the unique identifier when a pool is
            automatically

            created. The Batch service assigns each auto pool a unique
            identifier on

            creation. To distinguish between pools created for different
            purposes, you

            can specify this element to add a prefix to the id that is assigned.
            The

            prefix can be up to 20 characters long.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: >-
            The

            minimum lifetime of created auto pools, and how multiple jobs on a
            schedule

            are assigned to pools. When the pool lifetime scope is jobSchedule
            level,

            the Batch service keeps track of the last autopool created for the
            job

            schedule, and deletes that pool when the job schedule completes.
            Batch will

            also delete this pool if the user updates the auto pool
            specification in a

            way that changes this lifetime. Possible values include:
            'jobSchedule',

            'job', 'unmapped'
        - id: job.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: >-
            Whether to

            keep an auto pool alive after its lifetime expires. If false, the
            Batch

            service deletes the pool once its lifetime (as determined by the

            poolLifetimeOption setting) expires; that is, when the job or job
            schedule

            completes. If true, the Batch service does not delete the pool

            automatically. It is up to the user to delete auto pools created
            with this

            option.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: |-
            The pool
            specification for the auto pool.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: >-
            The

            display name for the pool. The display name need not be unique and
            can

            contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: >-
            The size of

            the virtual machines in the pool. All virtual machines in a pool are
            the

            same size. For information about available sizes of virtual machines
            for

            Cloud Services pools (pools created with cloudServiceConfiguration),
            see

            Sizes for Cloud Services

            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall. For

            information about available VM sizes for pools using images from the
            Virtual

            Machines Marketplace (pools created with
            virtualMachineConfiguration) see

            Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: job.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The

            cloud service configuration for the pool. This property must be
            specified if

            the pool needs to be created with Azure PaaS VMs. This property and

            virtualMachineConfiguration are mutually exclusive and one of the
            properties

            must be specified. If neither is specified then the Batch service
            returns an

            error; if you are calling the REST API directly, the HTTP status
            code is 400

            (Bad Request). This property cannot be specified if the Batch
            account was

            created with its poolAllocationMode property set to
            'UserSubscription'.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the

            pool. Possible values are: 2 - OS Family 2, equivalent to Windows
            Server

            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 -
            OS

            Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5,
            equivalent

            to Windows Server 2016. For more information, see Azure Guest OS
            Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the

            pool. The default value is * which specifies the latest operating
            system

            version for the specified OS family.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS Version currently installed on the virtual
            machines in

            the pool. This may differ from targetOSVersion if the pool state is

            Upgrading. In this case some virtual machines may be on the
            targetOSVersion

            and some may be on the currentOSVersion during the upgrade process.
            Once all

            virtual machines have upgraded, currentOSVersion is updated to be
            the same

            as targetOSVersion.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The

            virtual machine configuration for the pool. This property must be
            specified

            if the pool needs to be created with Azure IaaS VMs. This property
            and

            cloudServiceConfiguration are mutually exclusive and one of the
            properties

            must be specified. If neither is specified then the Batch service
            returns an

            error; if you are calling the REST API directly, the HTTP status
            code is 400

            (Bad Request).
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference to the Azure Virtual Machines Marketplace image to use.
            This

            property and osDisk are mutually exclusive and one of the properties
            must be

            specified.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: >-
            The SKU of the Azure Virtual Machines Marketplace image. For
            example,

            14.04.0-LTS or 2012-R2-Datacenter.
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: >-
            A reference to the OS disk image to use. This property can be
            specified only

            if the Batch account was created with its poolAllocationMode
            property set to

            'UserSubscription'. This property and imageReference are mutually
            exclusive

            and one of the properties must be specified.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.imageUris
          type:
            - array
          description: >-
            The collection of Virtual Hard Disk (VHD) URIs. All the VHDs must be

            identical and must reside in an Azure Storage account within the
            same

            subscription and same region as the Batch account. For best
            performance, it

            is recommended that each VHD resides in a separate Azure Storage
            account.

            Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute
            nodes.

            You must supply enough VHD URIs to satisfy the 'targetDedicated'
            property of

            the pool. If you do not supply enough VHD URIs, the pool will
            partially

            allocate compute nodes, and a resize error will occur.
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type of caching to enable for the OS disk. none - The caching
            mode for

            the disk is not enabled. readOnly - The caching mode for the disk is
            read

            only. readWrite - The caching mode for the disk is read and write.
            The

            default value for caching is none. For information about the caching
            options

            see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of the Batch node agent to be provisioned on compute nodes
            in the

            pool. The Batch node agent is a program that runs on each node in
            the pool,

            and provides the command-and-control interface between the node and
            the

            Batch service. There are different implementations of the node
            agent, known

            as SKUs, for different operating systems. You must specify a node
            agent SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: >-
            The maximum number of tasks that can run concurrently on a single
            compute

            node in the pool. The default value is 1. The maximum value of this
            setting

            depends on the size of the compute nodes in the pool (the vmSize
            setting).
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: |-
            How tasks are
            distributed among compute nodes in the pool.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: >-
            How tasks should be distributed across compute nodes. Possible
            values

            include: 'spread', 'pack', 'unmapped'
        - id: job.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for

            allocation of compute nodes to the pool. This timeout applies only
            to manual

            scaling; it has no effect when enableAutoScale is set to true. The
            default

            value is 15 minutes. The minimum value is 5 minutes. If you specify
            a value

            less than 5 minutes, the Batch service rejects the request with an
            error; if

            you are calling the REST API directly, the HTTP status code is 400
            (Bad

            Request).
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.targetDedicated
          type:
            - number
          description: >-
            The desired number of compute nodes in the pool. This property must
            not be

            specified if enableAutoScale is set to true. It is required if

            enableAutoScale is set to false.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should automatically adjust over time. If
            false, the

            targetDedicated element is required. If true, the autoScaleFormula
            element

            is required. The pool automatically resizes according to the
            formula. The

            default value is false.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool.
            This

            property must not be specified if enableAutoScale is set to false.
            It is

            required if enableAutoScale is set to true. The formula is checked
            for

            validity before the pool is created. If the formula is not valid,
            the Batch

            service rejects the request with detailed error information.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The

            time interval at which to automatically adjust the pool size
            according to

            the autoscale formula. The default value is 15 minutes. The minimum
            and

            maximum value are 5 minutes and 168 hours respectively. If you
            specify a

            value less than 5 minutes or greater than 168 hours, the Batch
            service

            rejects the request with an invalid property value error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool permits direct communication between nodes.
            Enabling

            inter-node communication limits the maximum size of the pool due to

            deployment restrictions on the nodes of the pool. This may result in
            the

            pool not reaching its desired size. The default value is false.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: |-
            The network
            configuration for the pool.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The

            ARM resource identifier of the virtual network subnet which the
            compute

            nodes of the pool will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. This
            property

            can only be specified for pools created with a
            cloudServiceConfiguration.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: >-
            A task

            to run on each compute node as it joins the pool. The task runs when
            the

            node is added to the pool or when the node is restarted.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: >-
            The command

            line of the start task. The command line does not run under a shell,
            and

            therefore cannot take advantage of shell features such as
            environment

            variable expansion. If you want to take advantage of such features,
            you

            should invoke the shell in the command line, for example using "cmd
            /c

            MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: job.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of

            files that the Batch service will download to the compute node
            before

            running the command line.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: |-
            A
            list of environment variable settings for the start task.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user

            identity under which the start task runs. If omitted, the task runs
            as a

            non-administrative user unique to the task.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity under which the task is run. The
            userName and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the task is run. The userName and autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user pool - specifies that the task runs as
            the

            common auto user account which is created on every node in a pool.
            task -

            specifies that the service should create a new user for the task.
            The

            default value is task. Possible values include: 'task', 'pool'
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation level of the auto user. nonAdmin - The auto user is a
            standard

            user without elevated access. admin - The auto user is a user with
            elevated

            access and operates with full Administrator permissions. The default
            value

            is nonAdmin. Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The

            maximum number of times the task may be retried. The Batch service
            retries a

            task if its exit code is nonzero. Note that this value specifically
            controls

            the number of retries. The Batch service will try the task once, and
            may

            then retry up to this limit. For example, if the maximum retry count
            is 3,

            Batch tries the task up to 4 times (one initial try and 3 retries).
            If the

            maximum retry count is 0, the Batch service does not retry the task.
            If the

            maximum retry count is -1, the Batch service retries the task
            without limit.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether

            the Batch service should wait for the start task to complete
            successfully

            (that is, to exit with exit code 0) before scheduling any tasks on
            the

            compute node. If true and the start task fails on a compute node,
            the Batch

            service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and scheduling error detail. If false, the Batch service will
            not wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: >-
            A list of

            certificates to be installed on each compute node in the pool. For
            Windows

            compute nodes, the Batch service installs the certificates to the
            specified

            certificate store and location. For Linux compute nodes, the
            certificates

            are stored in a directory inside the task working directory and an

            environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            task to

            query for this location. For certificates with visibility of
            'remoteUser', a

            'certs' directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: >-
            The

            list of application packages to be installed on each compute node in
            the

            pool. This property is currently not supported on auto pools created
            with

            the virtualMachineConfiguration (IaaS) property.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: |-
            The
            list of user accounts to be created on each node in the pool.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: >-
            A list of

            name-value pairs associated with the pool as metadata. The Batch
            service

            does not assign any meaning to metadata; it is solely for the use of
            user

            code.
          optional: true
        - id: job.onAllTasksComplete
          type:
            - string
          description: >-
            The action the Batch service should

            take when all tasks in the job are in the completed state. Note that
            if a

            job contains no tasks, then all tasks are considered complete. This
            option

            is therefore most commonly used with a Job Manager task; if you want
            to use

            automatic job termination without a Job Manager, you should
            initially set

            onAllTasksComplete to noAction and update the job properties to set

            onAllTasksComplete to terminateJob once you have finished adding
            tasks.

            Permitted values are: noAction - do nothing. The job remains active
            unless

            terminated or disabled by some other means. terminateJob - terminate
            the

            job. The job's terminateReason is set to 'AllTasksComplete'. The
            default is

            noAction. Possible values include: 'noAction', 'terminateJob'
          optional: true
        - id: job.onTaskFailure
          type:
            - string
          description: >-
            The action the Batch service should take

            when any task in the job fails. A task is considered to have failed
            if it

            completes with a non-zero exit code and has exhausted its retry
            count, or if

            it had a scheduling error. noAction - do nothing.

            performExitOptionsJobAction - take the action associated with the
            task exit

            condition in the task's exitConditions collection. (This may still
            result in

            no action being taken, if that is what the task specifies.) The
            default is

            noAction. Possible values include: 'noAction',
            'performExitOptionsJobAction'
          optional: true
        - id: job.metadata
          type:
            - array
          description: >-
            A list of name-value pairs associated with the

            job as metadata. The Batch service does not assign any meaning to
            metadata;

            it is solely for the use of user code.
          optional: true
        - id: job.usesTaskDependencies
          type:
            - boolean
          description: |-
            The flag that determines if this
            job will use tasks with dependencies.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobAddOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobAddOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.jobAddOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobAddOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.jobAddOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function addWithHttpOperationResponse(job, options)'
  - uid: 'azure-batch.Job#add'
    id: 'azure-batch.Job#add'
    parent: azure-batch.Job
    name: 'add(job, options, optionalCallback)'
    summary: >-
      Adds a job to the specified account.


      The Batch service supports two ways to control the work done as part of a

      job. In the first approach, the user specifies a Job Manager task. The
      Batch

      service launches this task when it is ready to start the job. The Job

      Manager task controls all other tasks that run under this job, by using
      the

      Task APIs. In the second approach, the user directly controls the
      execution

      of tasks under an active job, by using the Task APIs. Also note: when
      naming

      jobs, avoid including sensitive information such as user names or secret

      project names. This information may appear in telemetry logs accessible to

      Microsoft Support engineers.
    fullName: 'azure-batch.Job.add(job, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: job
          type:
            - object
          description: The job to be added.
        - id: job.id
          type:
            - string
          description: >-
            A string that uniquely identifies the job within the

            account. The ID can contain any combination of alphanumeric
            characters

            including hyphens and underscores, and cannot contain more than 64

            characters. It is common to use a GUID for the id.
        - id: job.displayName
          type:
            - string
          description: >-
            The display name for the job. The display

            name need not be unique and can contain any Unicode characters up to
            a

            maximum length of 1024.
          optional: true
        - id: job.priority
          type:
            - number
          description: >-
            The priority of the job. Priority values can

            range from -1000 to 1000, with -1000 being the lowest priority and
            1000

            being the highest priority. The default value is 0.
          optional: true
        - id: job.constraints
          type:
            - object
          description: The execution constraints for the job.
          optional: true
        - id: job.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum

            elapsed time that the job may run, measured from the time the job is

            created. If the job does not complete within the time limit, the
            Batch

            service terminates it and any tasks that are still running. In this
            case,

            the termination reason will be MaxWallClockTimeExpiry. If this
            property is

            not specified, there is no time limit on how long the job may run.
          optional: true
        - id: job.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of

            times each task may be retried. The Batch service retries a task if
            its exit

            code is nonzero. Note that this value specifically controls the
            number of

            retries. The Batch service will try each task once, and may then
            retry up to

            this limit. For example, if the maximum retry count is 3, Batch
            tries a task

            up to 4 times (one initial try and 3 retries). If the maximum retry
            count is

            0, the Batch service does not retry tasks. If the maximum retry
            count is -1,

            the Batch service retries tasks without limit. The default value is
            0 (no

            retries).
          optional: true
        - id: job.jobManagerTask
          type:
            - object
          description: >-
            Details of a Job Manager task to be

            launched when the job is started. If the job does not specify a Job
            Manager

            task, the user must explicitly add tasks to the job. If the job does
            specify

            a Job Manager task, the Batch service creates the Job Manager task
            when the

            job is created, and will try to schedule the Job Manager task before

            scheduling other tasks in the job. The Job Manager task's typical
            purpose is

            to control and/or monitor job execution, for example by deciding
            what

            additional tasks to run, determining when the work is complete, etc.

            (However, a Job Manager task is not restricted to these activities -
            it is a

            fully-fledged task in the system and perform whatever actions are
            required

            for the job.) For example, a Job Manager task might download a file

            specified as a parameter, analyze the contents of that file and
            submit

            additional tasks based on those contents.
          optional: true
        - id: job.jobManagerTask.id
          type:
            - string
          description: >-
            A string that uniquely identifies the

            Job Manager taskwithin the job. The id can contain any combination
            of

            alphanumeric characters including hyphens and underscores and cannot
            contain

            more than 64 characters.
        - id: job.jobManagerTask.displayName
          type:
            - string
          description: >-
            The display name of the Job

            Manager task. It need not be unique and can contain any Unicode
            characters

            up to a maximum length of 1024.
          optional: true
        - id: job.jobManagerTask.commandLine
          type:
            - string
          description: >-
            The command line of the Job

            Manager task. The command line does not run under a shell, and
            therefore

            cannot take advantage of shell features such as environment variable

            expansion. If you want to take advantage of such features, you
            should invoke

            the shell in the command line, for example using "cmd /c MyCommand"
            in

            Windows or "/bin/sh -c MyCommand" in Linux.
        - id: job.jobManagerTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the

            Batch service will download to the compute node before running the
            command

            line. Files listed under this element are located in the task's
            working

            directory.
          optional: true
        - id: job.jobManagerTask.environmentSettings
          type:
            - array
          description: |-
            A list of
            environment variable settings for the Job Manager task.
          optional: true
        - id: job.jobManagerTask.constraints
          type:
            - object
          description: |-
            Constraints that apply to
            the Job Manager task.
          optional: true
        - id: job.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: >-
            Whether completion

            of the Job Manager task signifies completion of the entire job. If
            true,

            when the Job Manager task completes, the Batch service marks the job
            as

            complete. If any tasks are still running at this time (other than
            Job

            Release), those tasks are terminated. If false, the completion of
            the Job

            Manager task does not affect the job status. In this case, you
            should either

            use the onAllTasksComplete attribute to terminate the job, or have a
            client

            or user terminate the job explicitly. An example of this is if the
            Job

            Manager creates a set of tasks but then takes no further role in
            their

            execution. The default value is true. If you are using the

            onAllTasksComplete and onTaskFailure attributes to control job
            lifetime, and

            using the Job Manager task only to create the tasks for the job (not
            to

            monitor progress), then it is important to set killJobOnCompletion
            to false.
          optional: true
        - id: job.jobManagerTask.userIdentity
          type:
            - object
          description: |-
            The user identity under
            which the Job Manager task runs. If omitted, the task runs as a
            non-administrative user unique to the task.
          optional: true
        - id: job.jobManagerTask.runExclusive
          type:
            - boolean
          description: >-
            Whether the Job Manager

            task requires exclusive use of the compute node where it runs. If
            true, no

            other tasks will run on the same compute node for as long as the Job
            Manager

            is running. If false, other tasks can run simultaneously with the
            Job

            Manager on a compute node. The Job Manager task counts normally
            against the

            node's concurrent task limit, so this is only relevant if the node
            allows

            multiple concurrent tasks. The default value is true.
          optional: true
        - id: job.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: >-
            A list of

            application packages that the Batch service will deploy to the
            compute node

            before running the command line. Application packages are downloaded
            and

            deployed to a shared directory, not the task directory. Therefore,
            if a

            referenced package is already on the compute node, and is up to
            date, then

            it is not re-downloaded; the existing copy on the compute node is
            used. If a

            referenced application package cannot be installed, for example
            because the

            package has been deleted or because download failed, the task fails
            with a

            scheduling error. This property is currently not supported on jobs
            running

            on pools created using the virtualMachineConfiguration (IaaS)
            property. If a

            task specifying applicationPackageReferences runs on such a pool, it
            fails

            with a scheduling error with code TaskSchedulingConstraintFailed.
          optional: true
        - id: job.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: >-
            The

            settings for an authentication token that the task can use to
            perform Batch

            service operations. If this property is set, the Batch service
            provides the

            task with an authentication token which can be used to authenticate
            Batch

            service operations without requiring an account access key. The
            token is

            provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable.
            The

            operations that the task can carry out using the token depend on the

            settings. For example, a task can request job permissions in order
            to add

            other tasks to the job, or check the status of the job or of other
            tasks

            under the job.
          optional: true
        - id: job.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: >-
            The

            Batch resources to which the token grants access. The authentication
            token

            grants access to a limited set of Batch service operations.
            Currently the

            only supported value for the access property is 'job', which grants
            access

            to all operations related to the job which contains the task.
          optional: true
        - id: job.jobPreparationTask
          type:
            - object
          description: >-
            The Job Preparation task. If a job

            has a Job Preparation task, the Batch service will run the Job
            Preparation

            task on a compute node before starting any tasks of that job on that
            compute

            node.
          optional: true
        - id: job.jobPreparationTask.id
          type:
            - string
          description: >-
            A string that uniquely

            identifies the Job Preparation task within the job. The ID can
            contain any

            combination of alphanumeric characters including hyphens and
            underscores and

            cannot contain more than 64 characters. If you do not specify this
            property,

            the Batch service assigns a default value of 'jobpreparation'. No
            other task

            in the job can have the same id as the Job Preparation task. If you
            try to

            submit a task with the same id, the Batch service rejects the
            request with

            error code TaskIdSameAsJobPreparationTask; if you are calling the
            REST API

            directly, the HTTP status code is 409 (Conflict).
          optional: true
        - id: job.jobPreparationTask.commandLine
          type:
            - string
          description: >-
            The command line of the

            Job Preparation task. The command line does not run under a shell,
            and

            therefore cannot take advantage of shell features such as
            environment

            variable expansion. If you want to take advantage of such features,
            you

            should invoke the shell in the command line, for example using "cmd
            /c

            MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: job.jobPreparationTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that

            the Batch service will download to the compute node before running
            the

            command line. Files listed under this element are located in the
            task's

            working directory.
          optional: true
        - id: job.jobPreparationTask.environmentSettings
          type:
            - array
          description: |-
            A list of
            environment variable settings for the Job Preparation task.
          optional: true
        - id: job.jobPreparationTask.constraints
          type:
            - object
          description: |-
            Constraints that apply
            to the Job Preparation task.
          optional: true
        - id: job.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum elapsed

            time that the task may run, measured from the time the task starts.
            If the

            task does not complete within the time limit, the Batch service
            terminates

            it. If this is not specified, there is no time limit on how long the
            task

            may run.
          optional: true
        - id: job.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time to retain the task directory on the compute node
            where it

            ran, from the time it completes execution. After this time, the
            Batch

            service may delete the task directory and all its contents. The
            default is

            infinite, i.e. the task directory will be retained until the compute
            node is

            removed or reimaged.
          optional: true
        - id: job.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The

            maximum number of times the task may be retried. The Batch service
            retries a

            task if its exit code is nonzero. Note that this value specifically
            controls

            the number of retries. The Batch service will try the task once, and
            may

            then retry up to this limit. For example, if the maximum retry count
            is 3,

            Batch tries the task up to 4 times (one initial try and 3 retries).
            If the

            maximum retry count is 0, the Batch service does not retry the task.
            If the

            maximum retry count is -1, the Batch service retries the task
            without limit.
          optional: true
        - id: job.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch

            service should wait for the Job Preparation task to complete
            successfully

            before scheduling any other tasks of the job on the compute node. If
            true

            and the Job Preparation task fails on a compute node, the Batch
            service

            retries the Job Preparation task up to its maximum retry count (as
            specified

            in the constraints element). If the task has still not completed

            successfully after all retries, then the Batch service will not
            schedule

            tasks of the job to the compute node. The compute node remains
            active and

            eligible to run tasks of other jobs. If false, the Batch service
            will not

            wait for the Job Preparation task to complete. In this case, other
            tasks of

            the job can start executing on the compute node while the Job
            Preparation

            task is still running; and even if the Job Preparation task fails,
            new tasks

            will continue to be scheduled on the node. The default value is
            true.
          optional: true
        - id: job.jobPreparationTask.userIdentity
          type:
            - object
          description: >-
            The user identity

            under which the Job Preparation task runs. If omitted, the task runs
            as a

            non-administrative user unique to the task.
          optional: true
        - id: job.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should rerun the Job Preparation task
            after a

            compute node reboots. The Job Preparation task is always rerun if a
            compute

            node is reimaged, or if the Job Preparation task did not complete
            (e.g.

            because the reboot occurred while the task was running). Therefore,
            you

            should always write a Job Preparation task to be idempotent and to
            behave

            correctly if run multiple times. The default value is true.
          optional: true
        - id: job.jobReleaseTask
          type:
            - object
          description: >-
            The Job Release task. A Job Release

            task cannot be specified without also specifying a Job Preparation
            task for

            the job. The Batch service runs the Job Release task on the compute
            nodes

            that have run the Job Preparation task. The primary purpose of the
            Job

            Release task is to undo changes to compute nodes made by the Job
            Preparation

            task. Example activities include deleting local files, or shutting
            down

            services that were started as part of job preparation.
          optional: true
        - id: job.jobReleaseTask.id
          type:
            - string
          description: >-
            A string that uniquely identifies

            the Job Release task within the job. The ID can contain any
            combination of

            alphanumeric characters including hyphens and underscores and cannot
            contain

            more than 64 characters. If you do not specify this property, the
            Batch

            service assigns a default value of 'jobrelease'. No other task in
            the job

            can have the same id as the Job Release task. If you try to submit a
            task

            with the same id, the Batch service rejects the request with error
            code

            TaskIdSameAsJobReleaseTask; if you are calling the REST API
            directly, the

            HTTP status code is 409 (Conflict).
          optional: true
        - id: job.jobReleaseTask.commandLine
          type:
            - string
          description: >-
            The command line of the Job

            Release task. The command line does not run under a shell, and
            therefore

            cannot take advantage of shell features such as environment variable

            expansion. If you want to take advantage of such features, you
            should invoke

            the shell in the command line, for example using "cmd /c MyCommand"
            in

            Windows or "/bin/sh -c MyCommand" in Linux.
        - id: job.jobReleaseTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the

            Batch service will download to the compute node before running the
            command

            line. Files listed under this element are located in the task's
            working

            directory.
          optional: true
        - id: job.jobReleaseTask.environmentSettings
          type:
            - array
          description: |-
            A list of
            environment variable settings for the Job Release task.
          optional: true
        - id: job.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum

            elapsed time that the Job Release task may run on a given compute
            node,

            measured from the time the task starts. If the task does not
            complete within

            the time limit, the Batch service terminates it. The default value
            is 15

            minutes. You may not specify a timeout longer than 15 minutes. If
            you do,

            the Batch service rejects it with an error; if you are calling the
            REST API

            directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: job.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time

            to retain the task directory for the Job Release task on the compute
            node.

            After this time, the Batch service may delete the task directory and
            all its

            contents. The default is infinite, i.e. the task directory will be
            retained

            until the compute node is removed or reimaged.
          optional: true
        - id: job.jobReleaseTask.userIdentity
          type:
            - object
          description: |-
            The user identity under
            which the Job Release task runs. If omitted, the task runs as a
            non-administrative user unique to the task.
          optional: true
        - id: job.commonEnvironmentSettings
          type:
            - array
          description: >-
            The list of common

            environment variable settings. These environment variables are set
            for all

            tasks in the job (including the Job Manager, Job Preparation and Job
            Release

            tasks).
          optional: true
        - id: job.poolInfo
          type:
            - object
          description: |-
            The pool on which the Batch service runs the
            job's tasks.
        - id: job.poolInfo.poolId
          type:
            - string
          description: >-
            The ID of an existing pool. All the

            tasks of the job will run on the specified pool. You must ensure
            that the

            pool referenced by this property exists. If the pool does not exist
            at the

            time the Batch service tries to schedule a job, no tasks for the job
            will

            run until you create a pool with that id. Note that the Batch
            service will

            not reject the job request; it will simply not run tasks until the
            pool

            exists. You must specify either the pool ID or the auto pool
            specification,

            but not both.
          optional: true
        - id: job.poolInfo.autoPoolSpecification
          type:
            - object
          description: >-
            Characteristics for a

            temporary 'auto pool'. The Batch service will create this auto pool
            when the

            job is submitted. If auto pool creation fails, the Batch service
            moves the

            job to a completed state, and the pool creation error is set in the
            job's

            scheduling error property. The Batch service manages the lifetime
            (both

            creation and, unless keepAlive is specified, deletion) of the auto
            pool. Any

            user actions that affect the lifetime of the auto pool while the job
            is

            active will result in unexpected behavior. You must specify either
            the pool

            ID or the auto pool specification, but not both.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: >-
            A

            prefix to be added to the unique identifier when a pool is
            automatically

            created. The Batch service assigns each auto pool a unique
            identifier on

            creation. To distinguish between pools created for different
            purposes, you

            can specify this element to add a prefix to the id that is assigned.
            The

            prefix can be up to 20 characters long.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: >-
            The

            minimum lifetime of created auto pools, and how multiple jobs on a
            schedule

            are assigned to pools. When the pool lifetime scope is jobSchedule
            level,

            the Batch service keeps track of the last autopool created for the
            job

            schedule, and deletes that pool when the job schedule completes.
            Batch will

            also delete this pool if the user updates the auto pool
            specification in a

            way that changes this lifetime. Possible values include:
            'jobSchedule',

            'job', 'unmapped'
        - id: job.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: >-
            Whether to

            keep an auto pool alive after its lifetime expires. If false, the
            Batch

            service deletes the pool once its lifetime (as determined by the

            poolLifetimeOption setting) expires; that is, when the job or job
            schedule

            completes. If true, the Batch service does not delete the pool

            automatically. It is up to the user to delete auto pools created
            with this

            option.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: |-
            The pool
            specification for the auto pool.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: >-
            The

            display name for the pool. The display name need not be unique and
            can

            contain any Unicode characters up to a maximum length of 1024.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: >-
            The size of

            the virtual machines in the pool. All virtual machines in a pool are
            the

            same size. For information about available sizes of virtual machines
            for

            Cloud Services pools (pools created with cloudServiceConfiguration),
            see

            Sizes for Cloud Services

            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall. For

            information about available VM sizes for pools using images from the
            Virtual

            Machines Marketplace (pools created with
            virtualMachineConfiguration) see

            Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: job.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The

            cloud service configuration for the pool. This property must be
            specified if

            the pool needs to be created with Azure PaaS VMs. This property and

            virtualMachineConfiguration are mutually exclusive and one of the
            properties

            must be specified. If neither is specified then the Batch service
            returns an

            error; if you are calling the REST API directly, the HTTP status
            code is 400

            (Bad Request). This property cannot be specified if the Batch
            account was

            created with its poolAllocationMode property set to
            'UserSubscription'.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the

            pool. Possible values are: 2 - OS Family 2, equivalent to Windows
            Server

            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 -
            OS

            Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5,
            equivalent

            to Windows Server 2016. For more information, see Azure Guest OS
            Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the

            pool. The default value is * which specifies the latest operating
            system

            version for the specified OS family.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion
          type:
            - string
          description: >-
            The Azure Guest OS Version currently installed on the virtual
            machines in

            the pool. This may differ from targetOSVersion if the pool state is

            Upgrading. In this case some virtual machines may be on the
            targetOSVersion

            and some may be on the currentOSVersion during the upgrade process.
            Once all

            virtual machines have upgraded, currentOSVersion is updated to be
            the same

            as targetOSVersion.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The

            virtual machine configuration for the pool. This property must be
            specified

            if the pool needs to be created with Azure IaaS VMs. This property
            and

            cloudServiceConfiguration are mutually exclusive and one of the
            properties

            must be specified. If neither is specified then the Batch service
            returns an

            error; if you are calling the REST API directly, the HTTP status
            code is 400

            (Bad Request).
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference to the Azure Virtual Machines Marketplace image to use.
            This

            property and osDisk are mutually exclusive and one of the properties
            must be

            specified.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: >-
            The SKU of the Azure Virtual Machines Marketplace image. For
            example,

            14.04.0-LTS or 2012-R2-Datacenter.
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: >-
            A reference to the OS disk image to use. This property can be
            specified only

            if the Batch account was created with its poolAllocationMode
            property set to

            'UserSubscription'. This property and imageReference are mutually
            exclusive

            and one of the properties must be specified.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.imageUris
          type:
            - array
          description: >-
            The collection of Virtual Hard Disk (VHD) URIs. All the VHDs must be

            identical and must reside in an Azure Storage account within the
            same

            subscription and same region as the Batch account. For best
            performance, it

            is recommended that each VHD resides in a separate Azure Storage
            account.

            Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute
            nodes.

            You must supply enough VHD URIs to satisfy the 'targetDedicated'
            property of

            the pool. If you do not supply enough VHD URIs, the pool will
            partially

            allocate compute nodes, and a resize error will occur.
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type of caching to enable for the OS disk. none - The caching
            mode for

            the disk is not enabled. readOnly - The caching mode for the disk is
            read

            only. readWrite - The caching mode for the disk is read and write.
            The

            default value for caching is none. For information about the caching
            options

            see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of the Batch node agent to be provisioned on compute nodes
            in the

            pool. The Batch node agent is a program that runs on each node in
            the pool,

            and provides the command-and-control interface between the node and
            the

            Batch service. There are different implementations of the node
            agent, known

            as SKUs, for different operating systems. You must specify a node
            agent SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: >-
            The maximum number of tasks that can run concurrently on a single
            compute

            node in the pool. The default value is 1. The maximum value of this
            setting

            depends on the size of the compute nodes in the pool (the vmSize
            setting).
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: |-
            How tasks are
            distributed among compute nodes in the pool.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: >-
            How tasks should be distributed across compute nodes. Possible
            values

            include: 'spread', 'pack', 'unmapped'
        - id: job.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for

            allocation of compute nodes to the pool. This timeout applies only
            to manual

            scaling; it has no effect when enableAutoScale is set to true. The
            default

            value is 15 minutes. The minimum value is 5 minutes. If you specify
            a value

            less than 5 minutes, the Batch service rejects the request with an
            error; if

            you are calling the REST API directly, the HTTP status code is 400
            (Bad

            Request).
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.targetDedicated
          type:
            - number
          description: >-
            The desired number of compute nodes in the pool. This property must
            not be

            specified if enableAutoScale is set to true. It is required if

            enableAutoScale is set to false.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should automatically adjust over time. If
            false, the

            targetDedicated element is required. If true, the autoScaleFormula
            element

            is required. The pool automatically resizes according to the
            formula. The

            default value is false.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of compute nodes in the pool.
            This

            property must not be specified if enableAutoScale is set to false.
            It is

            required if enableAutoScale is set to true. The formula is checked
            for

            validity before the pool is created. If the formula is not valid,
            the Batch

            service rejects the request with detailed error information.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The

            time interval at which to automatically adjust the pool size
            according to

            the autoscale formula. The default value is 15 minutes. The minimum
            and

            maximum value are 5 minutes and 168 hours respectively. If you
            specify a

            value less than 5 minutes or greater than 168 hours, the Batch
            service

            rejects the request with an invalid property value error; if you are
            calling

            the REST API directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool permits direct communication between nodes.
            Enabling

            inter-node communication limits the maximum size of the pool due to

            deployment restrictions on the nodes of the pool. This may result in
            the

            pool not reaching its desired size. The default value is false.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: |-
            The network
            configuration for the pool.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The

            ARM resource identifier of the virtual network subnet which the
            compute

            nodes of the pool will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. This
            property

            can only be specified for pools created with a
            cloudServiceConfiguration.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: >-
            A task

            to run on each compute node as it joins the pool. The task runs when
            the

            node is added to the pool or when the node is restarted.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: >-
            The command

            line of the start task. The command line does not run under a shell,
            and

            therefore cannot take advantage of shell features such as
            environment

            variable expansion. If you want to take advantage of such features,
            you

            should invoke the shell in the command line, for example using "cmd
            /c

            MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        - id: job.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of

            files that the Batch service will download to the compute node
            before

            running the command line.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: |-
            A
            list of environment variable settings for the start task.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user

            identity under which the start task runs. If omitted, the task runs
            as a

            non-administrative user unique to the task.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity under which the task is run. The
            userName and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the task is run. The userName and autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user pool - specifies that the task runs as
            the

            common auto user account which is created on every node in a pool.
            task -

            specifies that the service should create a new user for the task.
            The

            default value is task. Possible values include: 'task', 'pool'
          optional: true
        - id: >-
            job.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation level of the auto user. nonAdmin - The auto user is a
            standard

            user without elevated access. admin - The auto user is a user with
            elevated

            access and operates with full Administrator permissions. The default
            value

            is nonAdmin. Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The

            maximum number of times the task may be retried. The Batch service
            retries a

            task if its exit code is nonzero. Note that this value specifically
            controls

            the number of retries. The Batch service will try the task once, and
            may

            then retry up to this limit. For example, if the maximum retry count
            is 3,

            Batch tries the task up to 4 times (one initial try and 3 retries).
            If the

            maximum retry count is 0, the Batch service does not retry the task.
            If the

            maximum retry count is -1, the Batch service retries the task
            without limit.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether

            the Batch service should wait for the start task to complete
            successfully

            (that is, to exit with exit code 0) before scheduling any tasks on
            the

            compute node. If true and the start task fails on a compute node,
            the Batch

            service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and scheduling error detail. If false, the Batch service will
            not wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: >-
            A list of

            certificates to be installed on each compute node in the pool. For
            Windows

            compute nodes, the Batch service installs the certificates to the
            specified

            certificate store and location. For Linux compute nodes, the
            certificates

            are stored in a directory inside the task working directory and an

            environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            task to

            query for this location. For certificates with visibility of
            'remoteUser', a

            'certs' directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: >-
            The

            list of application packages to be installed on each compute node in
            the

            pool. This property is currently not supported on auto pools created
            with

            the virtualMachineConfiguration (IaaS) property.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: |-
            The
            list of user accounts to be created on each node in the pool.
          optional: true
        - id: job.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: >-
            A list of

            name-value pairs associated with the pool as metadata. The Batch
            service

            does not assign any meaning to metadata; it is solely for the use of
            user

            code.
          optional: true
        - id: job.onAllTasksComplete
          type:
            - string
          description: >-
            The action the Batch service should

            take when all tasks in the job are in the completed state. Note that
            if a

            job contains no tasks, then all tasks are considered complete. This
            option

            is therefore most commonly used with a Job Manager task; if you want
            to use

            automatic job termination without a Job Manager, you should
            initially set

            onAllTasksComplete to noAction and update the job properties to set

            onAllTasksComplete to terminateJob once you have finished adding
            tasks.

            Permitted values are: noAction - do nothing. The job remains active
            unless

            terminated or disabled by some other means. terminateJob - terminate
            the

            job. The job's terminateReason is set to 'AllTasksComplete'. The
            default is

            noAction. Possible values include: 'noAction', 'terminateJob'
          optional: true
        - id: job.onTaskFailure
          type:
            - string
          description: >-
            The action the Batch service should take

            when any task in the job fails. A task is considered to have failed
            if it

            completes with a non-zero exit code and has exhausted its retry
            count, or if

            it had a scheduling error. noAction - do nothing.

            performExitOptionsJobAction - take the action associated with the
            task exit

            condition in the task's exitConditions collection. (This may still
            result in

            no action being taken, if that is what the task specifies.) The
            default is

            noAction. Possible values include: 'noAction',
            'performExitOptionsJobAction'
          optional: true
        - id: job.metadata
          type:
            - array
          description: >-
            A list of name-value pairs associated with the

            job as metadata. The Batch service does not assign any meaning to
            metadata;

            it is solely for the use of user code.
          optional: true
        - id: job.usesTaskDependencies
          type:
            - boolean
          description: |-
            The flag that determines if this
            job will use tasks with dependencies.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobAddOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobAddOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.jobAddOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobAddOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.jobAddOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function add(job, options, optionalCallback)'
  - uid: 'azure-batch.Job#listWithHttpOperationResponse'
    id: 'azure-batch.Job#listWithHttpOperationResponse'
    parent: azure-batch.Job
    name: listWithHttpOperationResponse(options)
    summary: Lists all of the jobs in the specified account.
    fullName: azure-batch.Job.listWithHttpOperationResponse(options)
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobListOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobListOptions.filter
          type:
            - string
          description: An OData $filter clause.
          optional: true
        - id: options.jobListOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.jobListOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.jobListOptions.maxResults
          type:
            - number
          description: >-
            The maximum number of

            items to return in the response. A maximum of 1000 jobs can be
            returned.
          optional: true
        - id: options.jobListOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.jobListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobListOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.jobListOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
  - uid: 'azure-batch.Job#list'
    id: 'azure-batch.Job#list'
    parent: azure-batch.Job
    name: 'list(options, optionalCallback)'
    summary: Lists all of the jobs in the specified account.
    fullName: 'azure-batch.Job.list(options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobListOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobListOptions.filter
          type:
            - string
          description: An OData $filter clause.
          optional: true
        - id: options.jobListOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.jobListOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.jobListOptions.maxResults
          type:
            - number
          description: >-
            The maximum number of

            items to return in the response. A maximum of 1000 jobs can be
            returned.
          optional: true
        - id: options.jobListOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.jobListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobListOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.jobListOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(options, optionalCallback)'
  - uid: 'azure-batch.Job#listFromJobScheduleWithHttpOperationResponse'
    id: 'azure-batch.Job#listFromJobScheduleWithHttpOperationResponse'
    parent: azure-batch.Job
    name: 'listFromJobScheduleWithHttpOperationResponse(jobScheduleId, options)'
    summary: |-
      Lists the jobs that have been created under the specified job
      schedule.
    fullName: >-
      azure-batch.Job.listFromJobScheduleWithHttpOperationResponse(jobScheduleId,
      options)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: |-
            The ID of the job schedule from which you want
            to get a list of jobs.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobListFromJobScheduleOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.jobListFromJobScheduleOptions.filter
          type:
            - string
          description: |-
            An OData
            $filter clause.
          optional: true
        - id: options.jobListFromJobScheduleOptions.select
          type:
            - string
          description: |-
            An OData
            $select clause.
          optional: true
        - id: options.jobListFromJobScheduleOptions.expand
          type:
            - string
          description: |-
            An OData
            $expand clause.
          optional: true
        - id: options.jobListFromJobScheduleOptions.maxResults
          type:
            - number
          description: >-
            The

            maximum number of items to return in the response. A maximum of 1000
            jobs

            can be returned.
          optional: true
        - id: options.jobListFromJobScheduleOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.jobListFromJobScheduleOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobListFromJobScheduleOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.jobListFromJobScheduleOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listFromJobScheduleWithHttpOperationResponse(jobScheduleId,
        options)
  - uid: 'azure-batch.Job#listFromJobSchedule'
    id: 'azure-batch.Job#listFromJobSchedule'
    parent: azure-batch.Job
    name: 'listFromJobSchedule(jobScheduleId, options, optionalCallback)'
    summary: |-
      Lists the jobs that have been created under the specified job
      schedule.
    fullName: >-
      azure-batch.Job.listFromJobSchedule(jobScheduleId, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: |-
            The ID of the job schedule from which you want
            to get a list of jobs.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobListFromJobScheduleOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.jobListFromJobScheduleOptions.filter
          type:
            - string
          description: |-
            An OData
            $filter clause.
          optional: true
        - id: options.jobListFromJobScheduleOptions.select
          type:
            - string
          description: |-
            An OData
            $select clause.
          optional: true
        - id: options.jobListFromJobScheduleOptions.expand
          type:
            - string
          description: |-
            An OData
            $expand clause.
          optional: true
        - id: options.jobListFromJobScheduleOptions.maxResults
          type:
            - number
          description: >-
            The

            maximum number of items to return in the response. A maximum of 1000
            jobs

            can be returned.
          optional: true
        - id: options.jobListFromJobScheduleOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.jobListFromJobScheduleOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobListFromJobScheduleOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.jobListFromJobScheduleOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listFromJobSchedule(jobScheduleId, options, optionalCallback)'
  - uid: >-
      azure-batch.Job#listPreparationAndReleaseTaskStatusWithHttpOperationResponse
    id: >-
      azure-batch.Job#listPreparationAndReleaseTaskStatusWithHttpOperationResponse
    parent: azure-batch.Job
    name: >-
      listPreparationAndReleaseTaskStatusWithHttpOperationResponse(jobId,
      options)
    summary: |-
      Lists the execution status of the Job Preparation and Job Release
      task for the specified job across the compute nodes where the job has run.

      This API returns the Job Preparation and Job Release task status on all
      compute nodes that have run the Job Preparation or Job Release task. This
      includes nodes which have since been removed from the pool.
    fullName: >-
      azure-batch.Job.listPreparationAndReleaseTaskStatusWithHttpOperationResponse(jobId,
      options)
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusOptions
          type:
            - object
          description: Additional parameters for the operation
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusOptions.filter
          type:
            - string
          description: |-
            An OData
            $filter clause.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusOptions.select
          type:
            - string
          description: |-
            An OData
            $select clause.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusOptions.maxResults
          type:
            - number
          description: >-
            The

            maximum number of items to return in the response. A maximum of 1000
            tasks

            can be returned.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: >-
            options.jobListPreparationAndReleaseTaskStatusOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: >-
            options.jobListPreparationAndReleaseTaskStatusOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listPreparationAndReleaseTaskStatusWithHttpOperationResponse(jobId,
        options)
  - uid: 'azure-batch.Job#listPreparationAndReleaseTaskStatus'
    id: 'azure-batch.Job#listPreparationAndReleaseTaskStatus'
    parent: azure-batch.Job
    name: 'listPreparationAndReleaseTaskStatus(jobId, options, optionalCallback)'
    summary: |-
      Lists the execution status of the Job Preparation and Job Release
      task for the specified job across the compute nodes where the job has run.

      This API returns the Job Preparation and Job Release task status on all
      compute nodes that have run the Job Preparation or Job Release task. This
      includes nodes which have since been removed from the pool.
    fullName: >-
      azure-batch.Job.listPreparationAndReleaseTaskStatus(jobId, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusOptions
          type:
            - object
          description: Additional parameters for the operation
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusOptions.filter
          type:
            - string
          description: |-
            An OData
            $filter clause.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusOptions.select
          type:
            - string
          description: |-
            An OData
            $select clause.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusOptions.maxResults
          type:
            - number
          description: >-
            The

            maximum number of items to return in the response. A maximum of 1000
            tasks

            can be returned.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: >-
            options.jobListPreparationAndReleaseTaskStatusOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: >-
            options.jobListPreparationAndReleaseTaskStatusOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listPreparationAndReleaseTaskStatus(jobId, options,
        optionalCallback)
  - uid: 'azure-batch.Job#listNextWithHttpOperationResponse'
    id: 'azure-batch.Job#listNextWithHttpOperationResponse'
    parent: azure-batch.Job
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Lists all of the jobs in the specified account.
    fullName: 'azure-batch.Job.listNextWithHttpOperationResponse(nextPageLink, options)'
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobListNextOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobListNextOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobListNextOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-batch.Job#listNext'
    id: 'azure-batch.Job#listNext'
    parent: azure-batch.Job
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Lists all of the jobs in the specified account.
    fullName: 'azure-batch.Job.listNext(nextPageLink, options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobListNextOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobListNextOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobListNextOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-batch.Job#listFromJobScheduleNextWithHttpOperationResponse'
    id: 'azure-batch.Job#listFromJobScheduleNextWithHttpOperationResponse'
    parent: azure-batch.Job
    name: 'listFromJobScheduleNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Lists the jobs that have been created under the specified job
      schedule.
    fullName: >-
      azure-batch.Job.listFromJobScheduleNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobListFromJobScheduleNextOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.jobListFromJobScheduleNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated request identity, in the form of a GUID with no

            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobListFromJobScheduleNextOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobListFromJobScheduleNextOptions.ocpDate
          type:
            - date
          description: >-
            The time

            the request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listFromJobScheduleNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-batch.Job#listFromJobScheduleNext'
    id: 'azure-batch.Job#listFromJobScheduleNext'
    parent: azure-batch.Job
    name: 'listFromJobScheduleNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Lists the jobs that have been created under the specified job
      schedule.
    fullName: >-
      azure-batch.Job.listFromJobScheduleNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobListFromJobScheduleNextOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.jobListFromJobScheduleNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated request identity, in the form of a GUID with no

            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.jobListFromJobScheduleNextOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.jobListFromJobScheduleNextOptions.ocpDate
          type:
            - date
          description: >-
            The time

            the request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listFromJobScheduleNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-batch.Job#listPreparationAndReleaseTaskStatusNextWithHttpOperationResponse
    id: >-
      azure-batch.Job#listPreparationAndReleaseTaskStatusNextWithHttpOperationResponse
    parent: azure-batch.Job
    name: >-
      listPreparationAndReleaseTaskStatusNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: |-
      Lists the execution status of the Job Preparation and Job Release
      task for the specified job across the compute nodes where the job has run.

      This API returns the Job Preparation and Job Release task status on all
      compute nodes that have run the Job Preparation or Job Release task. This
      includes nodes which have since been removed from the pool.
    fullName: >-
      azure-batch.Job.listPreparationAndReleaseTaskStatusNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusNextOptions
          type:
            - object
          description: Additional parameters for the operation
          optional: true
        - id: >-
            options.jobListPreparationAndReleaseTaskStatusNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated request identity, in the form of a GUID with no

            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: >-
            options.jobListPreparationAndReleaseTaskStatusNextOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusNextOptions.ocpDate
          type:
            - date
          description: >-
            The time

            the request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listPreparationAndReleaseTaskStatusNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-batch.Job#listPreparationAndReleaseTaskStatusNext'
    id: 'azure-batch.Job#listPreparationAndReleaseTaskStatusNext'
    parent: azure-batch.Job
    name: >-
      listPreparationAndReleaseTaskStatusNext(nextPageLink, options,
      optionalCallback)
    summary: |-
      Lists the execution status of the Job Preparation and Job Release
      task for the specified job across the compute nodes where the job has run.

      This API returns the Job Preparation and Job Release task status on all
      compute nodes that have run the Job Preparation or Job Release task. This
      includes nodes which have since been removed from the pool.
    fullName: >-
      azure-batch.Job.listPreparationAndReleaseTaskStatusNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusNextOptions
          type:
            - object
          description: Additional parameters for the operation
          optional: true
        - id: >-
            options.jobListPreparationAndReleaseTaskStatusNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated request identity, in the form of a GUID with no

            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: >-
            options.jobListPreparationAndReleaseTaskStatusNextOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobListPreparationAndReleaseTaskStatusNextOptions.ocpDate
          type:
            - date
          description: >-
            The time

            the request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listPreparationAndReleaseTaskStatusNext(nextPageLink, options,
        optionalCallback)
references:
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: azure-batch.uuid
    name: uuid
    fullName: azure-batch.uuid
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: date
    name: date
    fullName: date
    isExternal: true
  - uid: Promise
    name: Promise
    fullName: Promise
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: azure-batch.moment.duration
    name: moment.duration
    fullName: azure-batch.moment.duration
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true
