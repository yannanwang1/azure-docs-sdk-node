### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-sql.Databases
    id: azure-arm-sql.Databases
    name: Databases
    summary: ''
    fullName: azure-arm-sql.Databases
    type: Class
    children:
      - 'azure-arm-sql.Databases.#ctor'
      - 'azure-arm-sql.Databases#client'
      - 'azure-arm-sql.Databases#_importMethod'
      - 'azure-arm-sql.Databases#_createImportOperation'
      - 'azure-arm-sql.Databases#_exportMethod'
      - 'azure-arm-sql.Databases#_deleteReplicationLink'
      - 'azure-arm-sql.Databases#_getReplicationLink'
      - 'azure-arm-sql.Databases#_failoverReplicationLink'
      - 'azure-arm-sql.Databases#_failoverReplicationLinkAllowDataLoss'
      - 'azure-arm-sql.Databases#_listReplicationLinks'
      - 'azure-arm-sql.Databases#_pause'
      - 'azure-arm-sql.Databases#_resume'
      - 'azure-arm-sql.Databases#_listRestorePoints'
      - 'azure-arm-sql.Databases#_createOrUpdate'
      - 'azure-arm-sql.Databases#_deleteMethod'
      - 'azure-arm-sql.Databases#_get'
      - 'azure-arm-sql.Databases#_listByServer'
      - 'azure-arm-sql.Databases#_listUsages'
      - 'azure-arm-sql.Databases#_getServiceTierAdvisor'
      - 'azure-arm-sql.Databases#_listServiceTierAdvisors'
      - >-
        azure-arm-sql.Databases#_createOrUpdateTransparentDataEncryptionConfiguration
      - 'azure-arm-sql.Databases#_getTransparentDataEncryptionConfiguration'
      - 'azure-arm-sql.Databases#_listTransparentDataEncryptionActivity'
      - 'azure-arm-sql.Databases#_getThreatDetectionPolicy'
      - 'azure-arm-sql.Databases#_createOrUpdateThreatDetectionPolicy'
      - 'azure-arm-sql.Databases#_getBlobAuditingPolicy'
      - 'azure-arm-sql.Databases#_createOrUpdateBlobAuditingPolicy'
      - 'azure-arm-sql.Databases#_beginImportMethod'
      - 'azure-arm-sql.Databases#_beginCreateImportOperation'
      - 'azure-arm-sql.Databases#_beginExportMethod'
      - 'azure-arm-sql.Databases#_beginFailoverReplicationLink'
      - 'azure-arm-sql.Databases#_beginFailoverReplicationLinkAllowDataLoss'
      - 'azure-arm-sql.Databases#_beginPause'
      - 'azure-arm-sql.Databases#_beginResume'
      - 'azure-arm-sql.Databases#_beginCreateOrUpdate'
      - 'azure-arm-sql.Databases#importMethodWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#importMethod'
      - 'azure-arm-sql.Databases#createImportOperationWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#createImportOperation'
      - 'azure-arm-sql.Databases#exportMethodWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#exportMethod'
      - 'azure-arm-sql.Databases#deleteReplicationLinkWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#deleteReplicationLink'
      - 'azure-arm-sql.Databases#getReplicationLinkWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#getReplicationLink'
      - 'azure-arm-sql.Databases#failoverReplicationLinkWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#failoverReplicationLink'
      - >-
        azure-arm-sql.Databases#failoverReplicationLinkAllowDataLossWithHttpOperationResponse
      - 'azure-arm-sql.Databases#failoverReplicationLinkAllowDataLoss'
      - 'azure-arm-sql.Databases#listReplicationLinksWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#listReplicationLinks'
      - 'azure-arm-sql.Databases#pauseWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#pause'
      - 'azure-arm-sql.Databases#resumeWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#resume'
      - 'azure-arm-sql.Databases#listRestorePointsWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#listRestorePoints'
      - 'azure-arm-sql.Databases#createOrUpdateWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#createOrUpdate'
      - 'azure-arm-sql.Databases#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#deleteMethod'
      - 'azure-arm-sql.Databases#getWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#get'
      - 'azure-arm-sql.Databases#listByServerWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#listByServer'
      - 'azure-arm-sql.Databases#listUsagesWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#listUsages'
      - 'azure-arm-sql.Databases#getServiceTierAdvisorWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#getServiceTierAdvisor'
      - 'azure-arm-sql.Databases#listServiceTierAdvisorsWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#listServiceTierAdvisors'
      - >-
        azure-arm-sql.Databases#createOrUpdateTransparentDataEncryptionConfigurationWithHttpOperationResponse
      - >-
        azure-arm-sql.Databases#createOrUpdateTransparentDataEncryptionConfiguration
      - >-
        azure-arm-sql.Databases#getTransparentDataEncryptionConfigurationWithHttpOperationResponse
      - 'azure-arm-sql.Databases#getTransparentDataEncryptionConfiguration'
      - >-
        azure-arm-sql.Databases#listTransparentDataEncryptionActivityWithHttpOperationResponse
      - 'azure-arm-sql.Databases#listTransparentDataEncryptionActivity'
      - >-
        azure-arm-sql.Databases#getThreatDetectionPolicyWithHttpOperationResponse
      - 'azure-arm-sql.Databases#getThreatDetectionPolicy'
      - >-
        azure-arm-sql.Databases#createOrUpdateThreatDetectionPolicyWithHttpOperationResponse
      - 'azure-arm-sql.Databases#createOrUpdateThreatDetectionPolicy'
      - 'azure-arm-sql.Databases#getBlobAuditingPolicyWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#getBlobAuditingPolicy'
      - >-
        azure-arm-sql.Databases#createOrUpdateBlobAuditingPolicyWithHttpOperationResponse
      - 'azure-arm-sql.Databases#createOrUpdateBlobAuditingPolicy'
      - 'azure-arm-sql.Databases#beginImportMethodWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#beginImportMethod'
      - >-
        azure-arm-sql.Databases#beginCreateImportOperationWithHttpOperationResponse
      - 'azure-arm-sql.Databases#beginCreateImportOperation'
      - 'azure-arm-sql.Databases#beginExportMethodWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#beginExportMethod'
      - >-
        azure-arm-sql.Databases#beginFailoverReplicationLinkWithHttpOperationResponse
      - 'azure-arm-sql.Databases#beginFailoverReplicationLink'
      - >-
        azure-arm-sql.Databases#beginFailoverReplicationLinkAllowDataLossWithHttpOperationResponse
      - 'azure-arm-sql.Databases#beginFailoverReplicationLinkAllowDataLoss'
      - 'azure-arm-sql.Databases#beginPauseWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#beginPause'
      - 'azure-arm-sql.Databases#beginResumeWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#beginResume'
      - 'azure-arm-sql.Databases#beginCreateOrUpdateWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#beginCreateOrUpdate'
  - id: 'azure-arm-sql.Databases.#ctor'
    uid: 'azure-arm-sql.Databases.#ctor'
    parent: azure-arm-sql.Databases
    name: Databases()
    fullName: azure-arm-sql.Databases.Databases()
    summary: ''
    type: Constructor
    syntax:
      content: new Databases()
  - uid: 'azure-arm-sql.Databases#client'
    id: 'azure-arm-sql.Databases#client'
    parent: azure-arm-sql.Databases
    name: client
    summary: ''
    fullName: azure-arm-sql.Databases.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-sql.Databases#_importMethod'
    id: 'azure-arm-sql.Databases#_importMethod'
    parent: azure-arm-sql.Databases
    name: _importMethod
    summary: ''
    fullName: azure-arm-sql.Databases._importMethod
    type: Field
    syntax:
      content: _importMethod
  - uid: 'azure-arm-sql.Databases#_createImportOperation'
    id: 'azure-arm-sql.Databases#_createImportOperation'
    parent: azure-arm-sql.Databases
    name: _createImportOperation
    summary: ''
    fullName: azure-arm-sql.Databases._createImportOperation
    type: Field
    syntax:
      content: _createImportOperation
  - uid: 'azure-arm-sql.Databases#_exportMethod'
    id: 'azure-arm-sql.Databases#_exportMethod'
    parent: azure-arm-sql.Databases
    name: _exportMethod
    summary: ''
    fullName: azure-arm-sql.Databases._exportMethod
    type: Field
    syntax:
      content: _exportMethod
  - uid: 'azure-arm-sql.Databases#_deleteReplicationLink'
    id: 'azure-arm-sql.Databases#_deleteReplicationLink'
    parent: azure-arm-sql.Databases
    name: _deleteReplicationLink
    summary: ''
    fullName: azure-arm-sql.Databases._deleteReplicationLink
    type: Field
    syntax:
      content: _deleteReplicationLink
  - uid: 'azure-arm-sql.Databases#_getReplicationLink'
    id: 'azure-arm-sql.Databases#_getReplicationLink'
    parent: azure-arm-sql.Databases
    name: _getReplicationLink
    summary: ''
    fullName: azure-arm-sql.Databases._getReplicationLink
    type: Field
    syntax:
      content: _getReplicationLink
  - uid: 'azure-arm-sql.Databases#_failoverReplicationLink'
    id: 'azure-arm-sql.Databases#_failoverReplicationLink'
    parent: azure-arm-sql.Databases
    name: _failoverReplicationLink
    summary: ''
    fullName: azure-arm-sql.Databases._failoverReplicationLink
    type: Field
    syntax:
      content: _failoverReplicationLink
  - uid: 'azure-arm-sql.Databases#_failoverReplicationLinkAllowDataLoss'
    id: 'azure-arm-sql.Databases#_failoverReplicationLinkAllowDataLoss'
    parent: azure-arm-sql.Databases
    name: _failoverReplicationLinkAllowDataLoss
    summary: ''
    fullName: azure-arm-sql.Databases._failoverReplicationLinkAllowDataLoss
    type: Field
    syntax:
      content: _failoverReplicationLinkAllowDataLoss
  - uid: 'azure-arm-sql.Databases#_listReplicationLinks'
    id: 'azure-arm-sql.Databases#_listReplicationLinks'
    parent: azure-arm-sql.Databases
    name: _listReplicationLinks
    summary: ''
    fullName: azure-arm-sql.Databases._listReplicationLinks
    type: Field
    syntax:
      content: _listReplicationLinks
  - uid: 'azure-arm-sql.Databases#_pause'
    id: 'azure-arm-sql.Databases#_pause'
    parent: azure-arm-sql.Databases
    name: _pause
    summary: ''
    fullName: azure-arm-sql.Databases._pause
    type: Field
    syntax:
      content: _pause
  - uid: 'azure-arm-sql.Databases#_resume'
    id: 'azure-arm-sql.Databases#_resume'
    parent: azure-arm-sql.Databases
    name: _resume
    summary: ''
    fullName: azure-arm-sql.Databases._resume
    type: Field
    syntax:
      content: _resume
  - uid: 'azure-arm-sql.Databases#_listRestorePoints'
    id: 'azure-arm-sql.Databases#_listRestorePoints'
    parent: azure-arm-sql.Databases
    name: _listRestorePoints
    summary: ''
    fullName: azure-arm-sql.Databases._listRestorePoints
    type: Field
    syntax:
      content: _listRestorePoints
  - uid: 'azure-arm-sql.Databases#_createOrUpdate'
    id: 'azure-arm-sql.Databases#_createOrUpdate'
    parent: azure-arm-sql.Databases
    name: _createOrUpdate
    summary: ''
    fullName: azure-arm-sql.Databases._createOrUpdate
    type: Field
    syntax:
      content: _createOrUpdate
  - uid: 'azure-arm-sql.Databases#_deleteMethod'
    id: 'azure-arm-sql.Databases#_deleteMethod'
    parent: azure-arm-sql.Databases
    name: _deleteMethod
    summary: ''
    fullName: azure-arm-sql.Databases._deleteMethod
    type: Field
    syntax:
      content: _deleteMethod
  - uid: 'azure-arm-sql.Databases#_get'
    id: 'azure-arm-sql.Databases#_get'
    parent: azure-arm-sql.Databases
    name: _get
    summary: ''
    fullName: azure-arm-sql.Databases._get
    type: Field
    syntax:
      content: _get
  - uid: 'azure-arm-sql.Databases#_listByServer'
    id: 'azure-arm-sql.Databases#_listByServer'
    parent: azure-arm-sql.Databases
    name: _listByServer
    summary: ''
    fullName: azure-arm-sql.Databases._listByServer
    type: Field
    syntax:
      content: _listByServer
  - uid: 'azure-arm-sql.Databases#_listUsages'
    id: 'azure-arm-sql.Databases#_listUsages'
    parent: azure-arm-sql.Databases
    name: _listUsages
    summary: ''
    fullName: azure-arm-sql.Databases._listUsages
    type: Field
    syntax:
      content: _listUsages
  - uid: 'azure-arm-sql.Databases#_getServiceTierAdvisor'
    id: 'azure-arm-sql.Databases#_getServiceTierAdvisor'
    parent: azure-arm-sql.Databases
    name: _getServiceTierAdvisor
    summary: ''
    fullName: azure-arm-sql.Databases._getServiceTierAdvisor
    type: Field
    syntax:
      content: _getServiceTierAdvisor
  - uid: 'azure-arm-sql.Databases#_listServiceTierAdvisors'
    id: 'azure-arm-sql.Databases#_listServiceTierAdvisors'
    parent: azure-arm-sql.Databases
    name: _listServiceTierAdvisors
    summary: ''
    fullName: azure-arm-sql.Databases._listServiceTierAdvisors
    type: Field
    syntax:
      content: _listServiceTierAdvisors
  - uid: >-
      azure-arm-sql.Databases#_createOrUpdateTransparentDataEncryptionConfiguration
    id: >-
      azure-arm-sql.Databases#_createOrUpdateTransparentDataEncryptionConfiguration
    parent: azure-arm-sql.Databases
    name: _createOrUpdateTransparentDataEncryptionConfiguration
    summary: ''
    fullName: >-
      azure-arm-sql.Databases._createOrUpdateTransparentDataEncryptionConfiguration
    type: Field
    syntax:
      content: _createOrUpdateTransparentDataEncryptionConfiguration
  - uid: 'azure-arm-sql.Databases#_getTransparentDataEncryptionConfiguration'
    id: 'azure-arm-sql.Databases#_getTransparentDataEncryptionConfiguration'
    parent: azure-arm-sql.Databases
    name: _getTransparentDataEncryptionConfiguration
    summary: ''
    fullName: azure-arm-sql.Databases._getTransparentDataEncryptionConfiguration
    type: Field
    syntax:
      content: _getTransparentDataEncryptionConfiguration
  - uid: 'azure-arm-sql.Databases#_listTransparentDataEncryptionActivity'
    id: 'azure-arm-sql.Databases#_listTransparentDataEncryptionActivity'
    parent: azure-arm-sql.Databases
    name: _listTransparentDataEncryptionActivity
    summary: ''
    fullName: azure-arm-sql.Databases._listTransparentDataEncryptionActivity
    type: Field
    syntax:
      content: _listTransparentDataEncryptionActivity
  - uid: 'azure-arm-sql.Databases#_getThreatDetectionPolicy'
    id: 'azure-arm-sql.Databases#_getThreatDetectionPolicy'
    parent: azure-arm-sql.Databases
    name: _getThreatDetectionPolicy
    summary: ''
    fullName: azure-arm-sql.Databases._getThreatDetectionPolicy
    type: Field
    syntax:
      content: _getThreatDetectionPolicy
  - uid: 'azure-arm-sql.Databases#_createOrUpdateThreatDetectionPolicy'
    id: 'azure-arm-sql.Databases#_createOrUpdateThreatDetectionPolicy'
    parent: azure-arm-sql.Databases
    name: _createOrUpdateThreatDetectionPolicy
    summary: ''
    fullName: azure-arm-sql.Databases._createOrUpdateThreatDetectionPolicy
    type: Field
    syntax:
      content: _createOrUpdateThreatDetectionPolicy
  - uid: 'azure-arm-sql.Databases#_getBlobAuditingPolicy'
    id: 'azure-arm-sql.Databases#_getBlobAuditingPolicy'
    parent: azure-arm-sql.Databases
    name: _getBlobAuditingPolicy
    summary: ''
    fullName: azure-arm-sql.Databases._getBlobAuditingPolicy
    type: Field
    syntax:
      content: _getBlobAuditingPolicy
  - uid: 'azure-arm-sql.Databases#_createOrUpdateBlobAuditingPolicy'
    id: 'azure-arm-sql.Databases#_createOrUpdateBlobAuditingPolicy'
    parent: azure-arm-sql.Databases
    name: _createOrUpdateBlobAuditingPolicy
    summary: ''
    fullName: azure-arm-sql.Databases._createOrUpdateBlobAuditingPolicy
    type: Field
    syntax:
      content: _createOrUpdateBlobAuditingPolicy
  - uid: 'azure-arm-sql.Databases#_beginImportMethod'
    id: 'azure-arm-sql.Databases#_beginImportMethod'
    parent: azure-arm-sql.Databases
    name: _beginImportMethod
    summary: ''
    fullName: azure-arm-sql.Databases._beginImportMethod
    type: Field
    syntax:
      content: _beginImportMethod
  - uid: 'azure-arm-sql.Databases#_beginCreateImportOperation'
    id: 'azure-arm-sql.Databases#_beginCreateImportOperation'
    parent: azure-arm-sql.Databases
    name: _beginCreateImportOperation
    summary: ''
    fullName: azure-arm-sql.Databases._beginCreateImportOperation
    type: Field
    syntax:
      content: _beginCreateImportOperation
  - uid: 'azure-arm-sql.Databases#_beginExportMethod'
    id: 'azure-arm-sql.Databases#_beginExportMethod'
    parent: azure-arm-sql.Databases
    name: _beginExportMethod
    summary: ''
    fullName: azure-arm-sql.Databases._beginExportMethod
    type: Field
    syntax:
      content: _beginExportMethod
  - uid: 'azure-arm-sql.Databases#_beginFailoverReplicationLink'
    id: 'azure-arm-sql.Databases#_beginFailoverReplicationLink'
    parent: azure-arm-sql.Databases
    name: _beginFailoverReplicationLink
    summary: ''
    fullName: azure-arm-sql.Databases._beginFailoverReplicationLink
    type: Field
    syntax:
      content: _beginFailoverReplicationLink
  - uid: 'azure-arm-sql.Databases#_beginFailoverReplicationLinkAllowDataLoss'
    id: 'azure-arm-sql.Databases#_beginFailoverReplicationLinkAllowDataLoss'
    parent: azure-arm-sql.Databases
    name: _beginFailoverReplicationLinkAllowDataLoss
    summary: ''
    fullName: azure-arm-sql.Databases._beginFailoverReplicationLinkAllowDataLoss
    type: Field
    syntax:
      content: _beginFailoverReplicationLinkAllowDataLoss
  - uid: 'azure-arm-sql.Databases#_beginPause'
    id: 'azure-arm-sql.Databases#_beginPause'
    parent: azure-arm-sql.Databases
    name: _beginPause
    summary: ''
    fullName: azure-arm-sql.Databases._beginPause
    type: Field
    syntax:
      content: _beginPause
  - uid: 'azure-arm-sql.Databases#_beginResume'
    id: 'azure-arm-sql.Databases#_beginResume'
    parent: azure-arm-sql.Databases
    name: _beginResume
    summary: ''
    fullName: azure-arm-sql.Databases._beginResume
    type: Field
    syntax:
      content: _beginResume
  - uid: 'azure-arm-sql.Databases#_beginCreateOrUpdate'
    id: 'azure-arm-sql.Databases#_beginCreateOrUpdate'
    parent: azure-arm-sql.Databases
    name: _beginCreateOrUpdate
    summary: ''
    fullName: azure-arm-sql.Databases._beginCreateOrUpdate
    type: Field
    syntax:
      content: _beginCreateOrUpdate
  - uid: 'azure-arm-sql.Databases#importMethodWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#importMethodWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      importMethodWithHttpOperationResponse(resourceGroupName, serverName,
      parameters, options)
    summary: Imports a bacpac into a new database.
    fullName: >-
      azure-arm-sql.Databases.importMethodWithHttpOperationResponse(resourceGroupName,
      serverName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for importing a Bacpac
            into a database.
        - id: parameters.databaseName
          type:
            - string
          description: The name of the database to import.
        - id: parameters.edition
          type:
            - string
          description: >-
            The edition for the database being

            created. Possible values include: 'Web', 'Business', 'Basic',
            'Standard',

            'Premium', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2'
        - id: parameters.serviceObjectiveName
          type:
            - string
          description: >-
            The name of the service

            objective to assign to the database. Possible values include:
            'Basic', 'S0',

            'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15',
            'System',

            'System2', 'ElasticPool'
        - id: parameters.maxSizeBytes
          type:
            - string
          description: |-
            The maximum size for the newly
            imported database.
        - id: parameters.storageKeyType
          type:
            - string
          description: |-
            The type of the storage key to
            use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
        - id: parameters.storageKey
          type:
            - string
          description: |-
            The storage key to use.  If storage
            key type is SharedAccessKey, it must be preceded with a "?."
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: |-
            The name of the SQL
            administrator.
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: |-
            The password of the
            SQL administrator.
        - id: parameters.authenticationType
          type:
            - string
          description: |-
            The authentication type.
            Possible values include: 'SQL', 'ADPassword'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function importMethodWithHttpOperationResponse(resourceGroupName,
        serverName, parameters, options)
  - uid: 'azure-arm-sql.Databases#importMethod'
    id: 'azure-arm-sql.Databases#importMethod'
    parent: azure-arm-sql.Databases
    name: >-
      importMethod(resourceGroupName, serverName, parameters, options,
      optionalCallback)
    summary: Imports a bacpac into a new database.
    fullName: >-
      azure-arm-sql.Databases.importMethod(resourceGroupName, serverName,
      parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for importing a Bacpac
            into a database.
        - id: parameters.databaseName
          type:
            - string
          description: The name of the database to import.
        - id: parameters.edition
          type:
            - string
          description: >-
            The edition for the database being

            created. Possible values include: 'Web', 'Business', 'Basic',
            'Standard',

            'Premium', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2'
        - id: parameters.serviceObjectiveName
          type:
            - string
          description: >-
            The name of the service

            objective to assign to the database. Possible values include:
            'Basic', 'S0',

            'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15',
            'System',

            'System2', 'ElasticPool'
        - id: parameters.maxSizeBytes
          type:
            - string
          description: |-
            The maximum size for the newly
            imported database.
        - id: parameters.storageKeyType
          type:
            - string
          description: |-
            The type of the storage key to
            use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
        - id: parameters.storageKey
          type:
            - string
          description: |-
            The storage key to use.  If storage
            key type is SharedAccessKey, it must be preceded with a "?."
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: |-
            The name of the SQL
            administrator.
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: |-
            The password of the
            SQL administrator.
        - id: parameters.authenticationType
          type:
            - string
          description: |-
            The authentication type.
            Possible values include: 'SQL', 'ADPassword'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function importMethod(resourceGroupName, serverName, parameters,
        options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#createImportOperationWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#createImportOperationWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      createImportOperationWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    summary: >-
      Creates an import operation that imports a bacpac into an existing
      database.

      The existing database must be empty.
    fullName: >-
      azure-arm-sql.Databases.createImportOperationWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to import into
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for importing a Bacpac
            into a database.
        - id: parameters.name
          type:
            - string
          description: The name of the extension.
          optional: true
        - id: parameters.type
          type:
            - string
          description: The type of the extension.
          optional: true
        - id: parameters.storageKeyType
          type:
            - string
          description: |-
            The type of the storage key to
            use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
        - id: parameters.storageKey
          type:
            - string
          description: |-
            The storage key to use.  If storage
            key type is SharedAccessKey, it must be preceded with a "?."
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: |-
            The name of the SQL
            administrator.
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: |-
            The password of the
            SQL administrator.
        - id: parameters.authenticationType
          type:
            - string
          description: |-
            The authentication type.
            Possible values include: 'SQL', 'ADPassword'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createImportOperationWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
  - uid: 'azure-arm-sql.Databases#createImportOperation'
    id: 'azure-arm-sql.Databases#createImportOperation'
    parent: azure-arm-sql.Databases
    name: >-
      createImportOperation(resourceGroupName, serverName, databaseName,
      parameters, options, optionalCallback)
    summary: >-
      Creates an import operation that imports a bacpac into an existing
      database.

      The existing database must be empty.
    fullName: >-
      azure-arm-sql.Databases.createImportOperation(resourceGroupName,
      serverName, databaseName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to import into
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for importing a Bacpac
            into a database.
        - id: parameters.name
          type:
            - string
          description: The name of the extension.
          optional: true
        - id: parameters.type
          type:
            - string
          description: The type of the extension.
          optional: true
        - id: parameters.storageKeyType
          type:
            - string
          description: |-
            The type of the storage key to
            use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
        - id: parameters.storageKey
          type:
            - string
          description: |-
            The storage key to use.  If storage
            key type is SharedAccessKey, it must be preceded with a "?."
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: |-
            The name of the SQL
            administrator.
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: |-
            The password of the
            SQL administrator.
        - id: parameters.authenticationType
          type:
            - string
          description: |-
            The authentication type.
            Possible values include: 'SQL', 'ADPassword'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createImportOperation(resourceGroupName, serverName,
        databaseName, parameters, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#exportMethodWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#exportMethodWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      exportMethodWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, parameters, options)
    summary: Exports a database to a bacpac.
    fullName: >-
      azure-arm-sql.Databases.exportMethodWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be exported.
        - id: parameters
          type:
            - object
          description: The required parameters for exporting a database.
        - id: parameters.storageKeyType
          type:
            - string
          description: |-
            The type of the storage key to
            use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
        - id: parameters.storageKey
          type:
            - string
          description: |-
            The storage key to use.  If storage
            key type is SharedAccessKey, it must be preceded with a "?."
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: |-
            The name of the SQL
            administrator.
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: |-
            The password of the
            SQL administrator.
        - id: parameters.authenticationType
          type:
            - string
          description: |-
            The authentication type.
            Possible values include: 'SQL', 'ADPassword'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function exportMethodWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
  - uid: 'azure-arm-sql.Databases#exportMethod'
    id: 'azure-arm-sql.Databases#exportMethod'
    parent: azure-arm-sql.Databases
    name: >-
      exportMethod(resourceGroupName, serverName, databaseName, parameters,
      options, optionalCallback)
    summary: Exports a database to a bacpac.
    fullName: >-
      azure-arm-sql.Databases.exportMethod(resourceGroupName, serverName,
      databaseName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be exported.
        - id: parameters
          type:
            - object
          description: The required parameters for exporting a database.
        - id: parameters.storageKeyType
          type:
            - string
          description: |-
            The type of the storage key to
            use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
        - id: parameters.storageKey
          type:
            - string
          description: |-
            The storage key to use.  If storage
            key type is SharedAccessKey, it must be preceded with a "?."
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: |-
            The name of the SQL
            administrator.
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: |-
            The password of the
            SQL administrator.
        - id: parameters.authenticationType
          type:
            - string
          description: |-
            The authentication type.
            Possible values include: 'SQL', 'ADPassword'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function exportMethod(resourceGroupName, serverName, databaseName,
        parameters, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#deleteReplicationLinkWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#deleteReplicationLinkWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      deleteReplicationLinkWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, linkId, options)
    summary: Deletes a database replication link. Cannot be done during failover.
    fullName: >-
      azure-arm-sql.Databases.deleteReplicationLinkWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, linkId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database that has the
            replication link to be dropped.
        - id: linkId
          type:
            - string
          description: The ID of the replication link to be deleted.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteReplicationLinkWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, linkId, options)
  - uid: 'azure-arm-sql.Databases#deleteReplicationLink'
    id: 'azure-arm-sql.Databases#deleteReplicationLink'
    parent: azure-arm-sql.Databases
    name: >-
      deleteReplicationLink(resourceGroupName, serverName, databaseName, linkId,
      options, optionalCallback)
    summary: Deletes a database replication link. Cannot be done during failover.
    fullName: >-
      azure-arm-sql.Databases.deleteReplicationLink(resourceGroupName,
      serverName, databaseName, linkId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database that has the
            replication link to be dropped.
        - id: linkId
          type:
            - string
          description: The ID of the replication link to be deleted.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteReplicationLink(resourceGroupName, serverName,
        databaseName, linkId, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#getReplicationLinkWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#getReplicationLinkWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      getReplicationLinkWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, linkId, options)
    summary: Gets a database replication link.
    fullName: >-
      azure-arm-sql.Databases.getReplicationLinkWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, linkId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to get the link for.
        - id: linkId
          type:
            - string
          description: The replication link ID to be retrieved.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getReplicationLinkWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, linkId, options)
  - uid: 'azure-arm-sql.Databases#getReplicationLink'
    id: 'azure-arm-sql.Databases#getReplicationLink'
    parent: azure-arm-sql.Databases
    name: >-
      getReplicationLink(resourceGroupName, serverName, databaseName, linkId,
      options, optionalCallback)
    summary: Gets a database replication link.
    fullName: >-
      azure-arm-sql.Databases.getReplicationLink(resourceGroupName, serverName,
      databaseName, linkId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to get the link for.
        - id: linkId
          type:
            - string
          description: The replication link ID to be retrieved.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getReplicationLink(resourceGroupName, serverName, databaseName,
        linkId, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#failoverReplicationLinkWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#failoverReplicationLinkWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      failoverReplicationLinkWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, linkId, options)
    summary: Failover the database replication link.
    fullName: >-
      azure-arm-sql.Databases.failoverReplicationLinkWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, linkId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database that has the
            replication link to be failed over.
        - id: linkId
          type:
            - string
          description: The ID of the replication link to be failed over.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        failoverReplicationLinkWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, linkId, options)
  - uid: 'azure-arm-sql.Databases#failoverReplicationLink'
    id: 'azure-arm-sql.Databases#failoverReplicationLink'
    parent: azure-arm-sql.Databases
    name: >-
      failoverReplicationLink(resourceGroupName, serverName, databaseName,
      linkId, options, optionalCallback)
    summary: Failover the database replication link.
    fullName: >-
      azure-arm-sql.Databases.failoverReplicationLink(resourceGroupName,
      serverName, databaseName, linkId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database that has the
            replication link to be failed over.
        - id: linkId
          type:
            - string
          description: The ID of the replication link to be failed over.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function failoverReplicationLink(resourceGroupName, serverName,
        databaseName, linkId, options, optionalCallback)
  - uid: >-
      azure-arm-sql.Databases#failoverReplicationLinkAllowDataLossWithHttpOperationResponse
    id: >-
      azure-arm-sql.Databases#failoverReplicationLinkAllowDataLossWithHttpOperationResponse
    parent: azure-arm-sql.Databases
    name: >-
      failoverReplicationLinkAllowDataLossWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, linkId, options)
    summary: >-
      Force failover the database replication link, which may result in data
      loss.
    fullName: >-
      azure-arm-sql.Databases.failoverReplicationLinkAllowDataLossWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, linkId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database that has the
            replication link to be failed over.
        - id: linkId
          type:
            - string
          description: The ID of the replication link to be failed over.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        failoverReplicationLinkAllowDataLossWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, linkId, options)
  - uid: 'azure-arm-sql.Databases#failoverReplicationLinkAllowDataLoss'
    id: 'azure-arm-sql.Databases#failoverReplicationLinkAllowDataLoss'
    parent: azure-arm-sql.Databases
    name: >-
      failoverReplicationLinkAllowDataLoss(resourceGroupName, serverName,
      databaseName, linkId, options, optionalCallback)
    summary: >-
      Force failover the database replication link, which may result in data
      loss.
    fullName: >-
      azure-arm-sql.Databases.failoverReplicationLinkAllowDataLoss(resourceGroupName,
      serverName, databaseName, linkId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database that has the
            replication link to be failed over.
        - id: linkId
          type:
            - string
          description: The ID of the replication link to be failed over.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function failoverReplicationLinkAllowDataLoss(resourceGroupName,
        serverName, databaseName, linkId, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#listReplicationLinksWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#listReplicationLinksWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      listReplicationLinksWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    summary: Lists a database's replication links.
    fullName: >-
      azure-arm-sql.Databases.listReplicationLinksWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to retrieve links for.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listReplicationLinksWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
  - uid: 'azure-arm-sql.Databases#listReplicationLinks'
    id: 'azure-arm-sql.Databases#listReplicationLinks'
    parent: azure-arm-sql.Databases
    name: >-
      listReplicationLinks(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Lists a database's replication links.
    fullName: >-
      azure-arm-sql.Databases.listReplicationLinks(resourceGroupName,
      serverName, databaseName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to retrieve links for.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listReplicationLinks(resourceGroupName, serverName,
        databaseName, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#pauseWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#pauseWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      pauseWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, options)
    summary: Pauses a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.pauseWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to pause.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function pauseWithHttpOperationResponse(resourceGroupName, serverName,
        databaseName, options)
  - uid: 'azure-arm-sql.Databases#pause'
    id: 'azure-arm-sql.Databases#pause'
    parent: azure-arm-sql.Databases
    name: >-
      pause(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Pauses a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.pause(resourceGroupName, serverName, databaseName,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to pause.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function pause(resourceGroupName, serverName, databaseName, options,
        optionalCallback)
  - uid: 'azure-arm-sql.Databases#resumeWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#resumeWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      resumeWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, options)
    summary: Resumes a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.resumeWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to resume.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function resumeWithHttpOperationResponse(resourceGroupName, serverName,
        databaseName, options)
  - uid: 'azure-arm-sql.Databases#resume'
    id: 'azure-arm-sql.Databases#resume'
    parent: azure-arm-sql.Databases
    name: >-
      resume(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Resumes a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.resume(resourceGroupName, serverName,
      databaseName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to resume.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function resume(resourceGroupName, serverName, databaseName, options,
        optionalCallback)
  - uid: 'azure-arm-sql.Databases#listRestorePointsWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#listRestorePointsWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      listRestorePointsWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, options)
    summary: Returns a list of database restore points.
    fullName: >-
      azure-arm-sql.Databases.listRestorePointsWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database from which to retrieve
            available restore points.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listRestorePointsWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
  - uid: 'azure-arm-sql.Databases#listRestorePoints'
    id: 'azure-arm-sql.Databases#listRestorePoints'
    parent: azure-arm-sql.Databases
    name: >-
      listRestorePoints(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Returns a list of database restore points.
    fullName: >-
      azure-arm-sql.Databases.listRestorePoints(resourceGroupName, serverName,
      databaseName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database from which to retrieve
            available restore points.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listRestorePoints(resourceGroupName, serverName, databaseName,
        options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#createOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#createOrUpdateWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, parameters, options)
    summary: |-
      Creates a new database or updates an existing database. Location is a
      required property in the request body, and it must be the same as the
      location of the SQL server.
    fullName: >-
      azure-arm-sql.Databases.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database to be operated on
            (updated or created).
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for creating or updating
            a database.
        - id: parameters.collation
          type:
            - string
          description: |-
            The collation of the database. If
            createMode is not Default, this value is ignored.
          optional: true
        - id: parameters.createMode
          type:
            - string
          description: >-
            Specifies the mode of database

            creation.


            Default: regular database creation.


            Copy: creates a database as a copy of an existing database.
            sourceDatabaseId

            must be specified as the resource ID of the source database.


            OnlineSecondary/NonReadableSecondary: creates a database as a
            (readable or

            nonreadable) secondary replica of an existing database.
            sourceDatabaseId

            must be specified as the resource ID of the existing primary
            database.


            PointInTimeRestore: Creates a database by restoring a point in time
            backup

            of an existing database. sourceDatabaseId must be specified as the
            resource

            ID of the existing database, and restorePointInTime must be
            specified.


            Recovery: Creates a database by restoring a geo-replicated backup.

            sourceDatabaseId must be specified as the recoverable database
            resource ID

            to restore.


            Restore: Creates a database by restoring a backup of a deleted
            database.

            sourceDatabaseId must be specified. If sourceDatabaseId is the
            database's

            original resource ID, then sourceDatabaseDeletionDate must be
            specified.

            Otherwise sourceDatabaseId must be the restorable dropped database
            resource

            ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may
            also be

            specified to restore from an earlier point in time.


            RestoreLongTermRetentionBackup: Creates a database by restoring from
            a long

            term retention vault. recoveryServicesRecoveryPointResourceId must
            be

            specified as the recovery point resource ID.


            Copy, NonReadableSecondary, OnlineSecondary and

            RestoreLongTermRetentionBackup are not supported for DataWarehouse
            edition.

            Possible values include: 'Copy', 'Default', 'NonReadableSecondary',

            'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',

            'RestoreLongTermRetentionBackup'
          optional: true
        - id: parameters.sourceDatabaseId
          type:
            - string
          description: >-
            Conditional. If createMode is

            Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore,
            Recovery,

            or Restore, then this value is required. Specifies the resource ID
            of the

            source database. If createMode is NonReadableSecondary or
            OnlineSecondary,

            the name of the source database must be the same as the new database
            being

            created.
          optional: true
        - id: parameters.sourceDatabaseDeletionDate
          type:
            - date
          description: >-
            Conditional. If

            createMode is Restore and sourceDatabaseId is the deleted database's

            original resource id when it existed (as opposed to its current
            restorable

            dropped database id), then this value is required. Specifies the
            time that

            the database was deleted.
          optional: true
        - id: parameters.restorePointInTime
          type:
            - date
          description: >-
            Conditional. If createMode is

            PointInTimeRestore, this value is required. If createMode is
            Restore, this

            value is optional. Specifies the point in time (ISO8601 format) of
            the

            source database that will be restored to create the new database.
            Must be

            greater than or equal to the source database's earliestRestoreDate
            value.
          optional: true
        - id: parameters.recoveryServicesRecoveryPointResourceId
          type:
            - date
          description: >-
            Conditional. If createMode is RestoreLongTermRetentionBackup, then
            this

            value is required. Specifies the resource ID of the recovery point
            to

            restore from.
          optional: true
        - id: parameters.edition
          type:
            - string
          description: >-
            The edition of the database. The

            DatabaseEditions enumeration contains all the valid editions. If
            createMode

            is NonReadableSecondary or OnlineSecondary, this value is ignored.
            To see

            possible values, query the capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation.". Possible
            values

            include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',

            'Stretch', 'DataWarehouse', 'System', 'System2'
          optional: true
        - id: parameters.maxSizeBytes
          type:
            - string
          description: >-
            The max size of the database

            expressed in bytes. If createMode is not Default, this value is
            ignored. To

            see possible values, query the capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation."
          optional: true
        - id: parameters.requestedServiceObjectiveId
          type:
            - azure-arm-sql.uuid
          description: >-
            The configured

            service level objective ID of the database. This is the service
            level

            objective that is in the process of being applied to the database.
            Once

            successfully updated, it will match the value of
            currentServiceObjectiveId

            property. If requestedServiceObjectiveId and
            requestedServiceObjectiveName

            are both updated, the value of requestedServiceObjectiveId overrides
            the

            value of requestedServiceObjectiveName. To see possible values,
            query the

            capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation."
          optional: true
        - id: parameters.requestedServiceObjectiveName
          type:
            - string
          description: >-
            The name of the

            configured service level objective of the database. This is the
            service

            level objective that is in the process of being applied to the
            database.

            Once successfully updated, it will match the value of
            serviceLevelObjective

            property. To see possible values, query the capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation.". Possible
            values

            include: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4',
            'P6',

            'P11', 'P15', 'System', 'System2', 'ElasticPool'
          optional: true
        - id: parameters.elasticPoolName
          type:
            - string
          description: >-
            The name of the elastic pool

            the database is in. If elasticPoolName and
            requestedServiceObjectiveName are

            both updated, the value of requestedServiceObjectiveName is ignored.
            Not

            supported for DataWarehouse edition.
          optional: true
        - id: parameters.readScale
          type:
            - string
          description: >-
            Conditional. If the database is a

            geo-secondary, readScale indicates whether read-only connections are
            allowed

            to this database or not. Not supported for DataWarehouse edition.
            Possible

            values include: 'Enabled', 'Disabled'
          optional: true
        - id: parameters.sampleName
          type:
            - string
          description: >-
            Indicates the name of the sample

            schema to apply when creating this database. If createMode is not
            Default,

            this value is ignored. Not supported for DataWarehouse edition.
            Possible

            values include: 'AdventureWorksLT'
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
  - uid: 'azure-arm-sql.Databases#createOrUpdate'
    id: 'azure-arm-sql.Databases#createOrUpdate'
    parent: azure-arm-sql.Databases
    name: >-
      createOrUpdate(resourceGroupName, serverName, databaseName, parameters,
      options, optionalCallback)
    summary: |-
      Creates a new database or updates an existing database. Location is a
      required property in the request body, and it must be the same as the
      location of the SQL server.
    fullName: >-
      azure-arm-sql.Databases.createOrUpdate(resourceGroupName, serverName,
      databaseName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database to be operated on
            (updated or created).
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for creating or updating
            a database.
        - id: parameters.collation
          type:
            - string
          description: |-
            The collation of the database. If
            createMode is not Default, this value is ignored.
          optional: true
        - id: parameters.createMode
          type:
            - string
          description: >-
            Specifies the mode of database

            creation.


            Default: regular database creation.


            Copy: creates a database as a copy of an existing database.
            sourceDatabaseId

            must be specified as the resource ID of the source database.


            OnlineSecondary/NonReadableSecondary: creates a database as a
            (readable or

            nonreadable) secondary replica of an existing database.
            sourceDatabaseId

            must be specified as the resource ID of the existing primary
            database.


            PointInTimeRestore: Creates a database by restoring a point in time
            backup

            of an existing database. sourceDatabaseId must be specified as the
            resource

            ID of the existing database, and restorePointInTime must be
            specified.


            Recovery: Creates a database by restoring a geo-replicated backup.

            sourceDatabaseId must be specified as the recoverable database
            resource ID

            to restore.


            Restore: Creates a database by restoring a backup of a deleted
            database.

            sourceDatabaseId must be specified. If sourceDatabaseId is the
            database's

            original resource ID, then sourceDatabaseDeletionDate must be
            specified.

            Otherwise sourceDatabaseId must be the restorable dropped database
            resource

            ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may
            also be

            specified to restore from an earlier point in time.


            RestoreLongTermRetentionBackup: Creates a database by restoring from
            a long

            term retention vault. recoveryServicesRecoveryPointResourceId must
            be

            specified as the recovery point resource ID.


            Copy, NonReadableSecondary, OnlineSecondary and

            RestoreLongTermRetentionBackup are not supported for DataWarehouse
            edition.

            Possible values include: 'Copy', 'Default', 'NonReadableSecondary',

            'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',

            'RestoreLongTermRetentionBackup'
          optional: true
        - id: parameters.sourceDatabaseId
          type:
            - string
          description: >-
            Conditional. If createMode is

            Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore,
            Recovery,

            or Restore, then this value is required. Specifies the resource ID
            of the

            source database. If createMode is NonReadableSecondary or
            OnlineSecondary,

            the name of the source database must be the same as the new database
            being

            created.
          optional: true
        - id: parameters.sourceDatabaseDeletionDate
          type:
            - date
          description: >-
            Conditional. If

            createMode is Restore and sourceDatabaseId is the deleted database's

            original resource id when it existed (as opposed to its current
            restorable

            dropped database id), then this value is required. Specifies the
            time that

            the database was deleted.
          optional: true
        - id: parameters.restorePointInTime
          type:
            - date
          description: >-
            Conditional. If createMode is

            PointInTimeRestore, this value is required. If createMode is
            Restore, this

            value is optional. Specifies the point in time (ISO8601 format) of
            the

            source database that will be restored to create the new database.
            Must be

            greater than or equal to the source database's earliestRestoreDate
            value.
          optional: true
        - id: parameters.recoveryServicesRecoveryPointResourceId
          type:
            - date
          description: >-
            Conditional. If createMode is RestoreLongTermRetentionBackup, then
            this

            value is required. Specifies the resource ID of the recovery point
            to

            restore from.
          optional: true
        - id: parameters.edition
          type:
            - string
          description: >-
            The edition of the database. The

            DatabaseEditions enumeration contains all the valid editions. If
            createMode

            is NonReadableSecondary or OnlineSecondary, this value is ignored.
            To see

            possible values, query the capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation.". Possible
            values

            include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',

            'Stretch', 'DataWarehouse', 'System', 'System2'
          optional: true
        - id: parameters.maxSizeBytes
          type:
            - string
          description: >-
            The max size of the database

            expressed in bytes. If createMode is not Default, this value is
            ignored. To

            see possible values, query the capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation."
          optional: true
        - id: parameters.requestedServiceObjectiveId
          type:
            - azure-arm-sql.uuid
          description: >-
            The configured

            service level objective ID of the database. This is the service
            level

            objective that is in the process of being applied to the database.
            Once

            successfully updated, it will match the value of
            currentServiceObjectiveId

            property. If requestedServiceObjectiveId and
            requestedServiceObjectiveName

            are both updated, the value of requestedServiceObjectiveId overrides
            the

            value of requestedServiceObjectiveName. To see possible values,
            query the

            capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation."
          optional: true
        - id: parameters.requestedServiceObjectiveName
          type:
            - string
          description: >-
            The name of the

            configured service level objective of the database. This is the
            service

            level objective that is in the process of being applied to the
            database.

            Once successfully updated, it will match the value of
            serviceLevelObjective

            property. To see possible values, query the capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation.". Possible
            values

            include: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4',
            'P6',

            'P11', 'P15', 'System', 'System2', 'ElasticPool'
          optional: true
        - id: parameters.elasticPoolName
          type:
            - string
          description: >-
            The name of the elastic pool

            the database is in. If elasticPoolName and
            requestedServiceObjectiveName are

            both updated, the value of requestedServiceObjectiveName is ignored.
            Not

            supported for DataWarehouse edition.
          optional: true
        - id: parameters.readScale
          type:
            - string
          description: >-
            Conditional. If the database is a

            geo-secondary, readScale indicates whether read-only connections are
            allowed

            to this database or not. Not supported for DataWarehouse edition.
            Possible

            values include: 'Enabled', 'Disabled'
          optional: true
        - id: parameters.sampleName
          type:
            - string
          description: >-
            Indicates the name of the sample

            schema to apply when creating this database. If createMode is not
            Default,

            this value is ignored. Not supported for DataWarehouse edition.
            Possible

            values include: 'AdventureWorksLT'
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, serverName, databaseName,
        parameters, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, options)
    summary: Deletes a database.
    fullName: >-
      azure-arm-sql.Databases.deleteMethodWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be deleted.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
  - uid: 'azure-arm-sql.Databases#deleteMethod'
    id: 'azure-arm-sql.Databases#deleteMethod'
    parent: azure-arm-sql.Databases
    name: >-
      deleteMethod(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Deletes a database.
    fullName: >-
      azure-arm-sql.Databases.deleteMethod(resourceGroupName, serverName,
      databaseName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be deleted.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, serverName, databaseName,
        options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#getWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#getWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      getWithHttpOperationResponse(resourceGroupName, serverName, databaseName,
      options)
    summary: Gets a database.
    fullName: >-
      azure-arm-sql.Databases.getWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be retrieved.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expand
          type:
            - string
          description: |-
            A comma separated list of child objects to
            expand in the response. Possible properties: serviceTierAdvisors,
            transparentDataEncryption.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, serverName,
        databaseName, options)
  - uid: 'azure-arm-sql.Databases#get'
    id: 'azure-arm-sql.Databases#get'
    parent: azure-arm-sql.Databases
    name: >-
      get(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Gets a database.
    fullName: >-
      azure-arm-sql.Databases.get(resourceGroupName, serverName, databaseName,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be retrieved.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expand
          type:
            - string
          description: |-
            A comma separated list of child objects to
            expand in the response. Possible properties: serviceTierAdvisors,
            transparentDataEncryption.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, serverName, databaseName, options,
        optionalCallback)
  - uid: 'azure-arm-sql.Databases#listByServerWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#listByServerWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      listByServerWithHttpOperationResponse(resourceGroupName, serverName,
      options)
    summary: Returns a list of databases in a server.
    fullName: >-
      azure-arm-sql.Databases.listByServerWithHttpOperationResponse(resourceGroupName,
      serverName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expand
          type:
            - string
          description: |-
            A comma separated list of child objects to
            expand in the response. Possible properties: serviceTierAdvisors,
            transparentDataEncryption.
          optional: true
        - id: options.filter
          type:
            - string
          description: |-
            An OData filter expression that describes a
            subset of databases to return.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByServerWithHttpOperationResponse(resourceGroupName,
        serverName, options)
  - uid: 'azure-arm-sql.Databases#listByServer'
    id: 'azure-arm-sql.Databases#listByServer'
    parent: azure-arm-sql.Databases
    name: 'listByServer(resourceGroupName, serverName, options, optionalCallback)'
    summary: Returns a list of databases in a server.
    fullName: >-
      azure-arm-sql.Databases.listByServer(resourceGroupName, serverName,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expand
          type:
            - string
          description: |-
            A comma separated list of child objects to
            expand in the response. Possible properties: serviceTierAdvisors,
            transparentDataEncryption.
          optional: true
        - id: options.filter
          type:
            - string
          description: |-
            An OData filter expression that describes a
            subset of databases to return.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByServer(resourceGroupName, serverName, options,
        optionalCallback)
  - uid: 'azure-arm-sql.Databases#listUsagesWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#listUsagesWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      listUsagesWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, options)
    summary: Returns database usages.
    fullName: >-
      azure-arm-sql.Databases.listUsagesWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listUsagesWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
  - uid: 'azure-arm-sql.Databases#listUsages'
    id: 'azure-arm-sql.Databases#listUsages'
    parent: azure-arm-sql.Databases
    name: >-
      listUsages(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Returns database usages.
    fullName: >-
      azure-arm-sql.Databases.listUsages(resourceGroupName, serverName,
      databaseName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listUsages(resourceGroupName, serverName, databaseName,
        options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#getServiceTierAdvisorWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#getServiceTierAdvisorWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      getServiceTierAdvisorWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, serviceTierAdvisorName, options)
    summary: Gets a service tier advisor.
    fullName: >-
      azure-arm-sql.Databases.getServiceTierAdvisorWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, serviceTierAdvisorName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of database.
        - id: serviceTierAdvisorName
          type:
            - string
          description: The name of service tier advisor.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getServiceTierAdvisorWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, serviceTierAdvisorName, options)
  - uid: 'azure-arm-sql.Databases#getServiceTierAdvisor'
    id: 'azure-arm-sql.Databases#getServiceTierAdvisor'
    parent: azure-arm-sql.Databases
    name: >-
      getServiceTierAdvisor(resourceGroupName, serverName, databaseName,
      serviceTierAdvisorName, options, optionalCallback)
    summary: Gets a service tier advisor.
    fullName: >-
      azure-arm-sql.Databases.getServiceTierAdvisor(resourceGroupName,
      serverName, databaseName, serviceTierAdvisorName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of database.
        - id: serviceTierAdvisorName
          type:
            - string
          description: The name of service tier advisor.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getServiceTierAdvisor(resourceGroupName, serverName,
        databaseName, serviceTierAdvisorName, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#listServiceTierAdvisorsWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#listServiceTierAdvisorsWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      listServiceTierAdvisorsWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    summary: Returns service tier advisors for specified database.
    fullName: >-
      azure-arm-sql.Databases.listServiceTierAdvisorsWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of database.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listServiceTierAdvisorsWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
  - uid: 'azure-arm-sql.Databases#listServiceTierAdvisors'
    id: 'azure-arm-sql.Databases#listServiceTierAdvisors'
    parent: azure-arm-sql.Databases
    name: >-
      listServiceTierAdvisors(resourceGroupName, serverName, databaseName,
      options, optionalCallback)
    summary: Returns service tier advisors for specified database.
    fullName: >-
      azure-arm-sql.Databases.listServiceTierAdvisors(resourceGroupName,
      serverName, databaseName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of database.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listServiceTierAdvisors(resourceGroupName, serverName,
        databaseName, options, optionalCallback)
  - uid: >-
      azure-arm-sql.Databases#createOrUpdateTransparentDataEncryptionConfigurationWithHttpOperationResponse
    id: >-
      azure-arm-sql.Databases#createOrUpdateTransparentDataEncryptionConfigurationWithHttpOperationResponse
    parent: azure-arm-sql.Databases
    name: >-
      createOrUpdateTransparentDataEncryptionConfigurationWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    summary: Creates or updates a database's transparent data encryption configuration.
    fullName: >-
      azure-arm-sql.Databases.createOrUpdateTransparentDataEncryptionConfigurationWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which setting the
            transparent data encryption applies.
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for creating or updating
            transparent data encryption.
        - id: parameters.status
          type:
            - string
          description: |-
            The status of the database transparent
            data encryption. Possible values include: 'Enabled', 'Disabled'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateTransparentDataEncryptionConfigurationWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
  - uid: >-
      azure-arm-sql.Databases#createOrUpdateTransparentDataEncryptionConfiguration
    id: >-
      azure-arm-sql.Databases#createOrUpdateTransparentDataEncryptionConfiguration
    parent: azure-arm-sql.Databases
    name: >-
      createOrUpdateTransparentDataEncryptionConfiguration(resourceGroupName,
      serverName, databaseName, parameters, options, optionalCallback)
    summary: Creates or updates a database's transparent data encryption configuration.
    fullName: >-
      azure-arm-sql.Databases.createOrUpdateTransparentDataEncryptionConfiguration(resourceGroupName,
      serverName, databaseName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which setting the
            transparent data encryption applies.
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for creating or updating
            transparent data encryption.
        - id: parameters.status
          type:
            - string
          description: |-
            The status of the database transparent
            data encryption. Possible values include: 'Enabled', 'Disabled'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function
        createOrUpdateTransparentDataEncryptionConfiguration(resourceGroupName,
        serverName, databaseName, parameters, options, optionalCallback)
  - uid: >-
      azure-arm-sql.Databases#getTransparentDataEncryptionConfigurationWithHttpOperationResponse
    id: >-
      azure-arm-sql.Databases#getTransparentDataEncryptionConfigurationWithHttpOperationResponse
    parent: azure-arm-sql.Databases
    name: >-
      getTransparentDataEncryptionConfigurationWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    summary: Gets a database's transparent data encryption configuration.
    fullName: >-
      azure-arm-sql.Databases.getTransparentDataEncryptionConfigurationWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which the
            transparent data encryption applies.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getTransparentDataEncryptionConfigurationWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
  - uid: 'azure-arm-sql.Databases#getTransparentDataEncryptionConfiguration'
    id: 'azure-arm-sql.Databases#getTransparentDataEncryptionConfiguration'
    parent: azure-arm-sql.Databases
    name: >-
      getTransparentDataEncryptionConfiguration(resourceGroupName, serverName,
      databaseName, options, optionalCallback)
    summary: Gets a database's transparent data encryption configuration.
    fullName: >-
      azure-arm-sql.Databases.getTransparentDataEncryptionConfiguration(resourceGroupName,
      serverName, databaseName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which the
            transparent data encryption applies.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getTransparentDataEncryptionConfiguration(resourceGroupName,
        serverName, databaseName, options, optionalCallback)
  - uid: >-
      azure-arm-sql.Databases#listTransparentDataEncryptionActivityWithHttpOperationResponse
    id: >-
      azure-arm-sql.Databases#listTransparentDataEncryptionActivityWithHttpOperationResponse
    parent: azure-arm-sql.Databases
    name: >-
      listTransparentDataEncryptionActivityWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    summary: Returns a database's transparent data encryption operation result.
    fullName: >-
      azure-arm-sql.Databases.listTransparentDataEncryptionActivityWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which the
            transparent data encryption applies.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listTransparentDataEncryptionActivityWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
  - uid: 'azure-arm-sql.Databases#listTransparentDataEncryptionActivity'
    id: 'azure-arm-sql.Databases#listTransparentDataEncryptionActivity'
    parent: azure-arm-sql.Databases
    name: >-
      listTransparentDataEncryptionActivity(resourceGroupName, serverName,
      databaseName, options, optionalCallback)
    summary: Returns a database's transparent data encryption operation result.
    fullName: >-
      azure-arm-sql.Databases.listTransparentDataEncryptionActivity(resourceGroupName,
      serverName, databaseName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which the
            transparent data encryption applies.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listTransparentDataEncryptionActivity(resourceGroupName,
        serverName, databaseName, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#getThreatDetectionPolicyWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#getThreatDetectionPolicyWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      getThreatDetectionPolicyWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    summary: Gets a database's threat detection policy.
    fullName: >-
      azure-arm-sql.Databases.getThreatDetectionPolicyWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which database
            Threat Detection policy is defined.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getThreatDetectionPolicyWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
  - uid: 'azure-arm-sql.Databases#getThreatDetectionPolicy'
    id: 'azure-arm-sql.Databases#getThreatDetectionPolicy'
    parent: azure-arm-sql.Databases
    name: >-
      getThreatDetectionPolicy(resourceGroupName, serverName, databaseName,
      options, optionalCallback)
    summary: Gets a database's threat detection policy.
    fullName: >-
      azure-arm-sql.Databases.getThreatDetectionPolicy(resourceGroupName,
      serverName, databaseName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which database
            Threat Detection policy is defined.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getThreatDetectionPolicy(resourceGroupName, serverName,
        databaseName, options, optionalCallback)
  - uid: >-
      azure-arm-sql.Databases#createOrUpdateThreatDetectionPolicyWithHttpOperationResponse
    id: >-
      azure-arm-sql.Databases#createOrUpdateThreatDetectionPolicyWithHttpOperationResponse
    parent: azure-arm-sql.Databases
    name: >-
      createOrUpdateThreatDetectionPolicyWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    summary: Creates or updates a database's threat detection policy.
    fullName: >-
      azure-arm-sql.Databases.createOrUpdateThreatDetectionPolicyWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which database
            Threat Detection policy is defined.
        - id: parameters
          type:
            - object
          description: The database Threat Detection policy.
        - id: parameters.location
          type:
            - string
          description: |-
            The geo-location where the resource
            lives
          optional: true
        - id: parameters.state
          type:
            - string
          description: >-
            Specifies the state of the policy. If state

            is Enabled, storageEndpoint and storageAccountAccessKey are
            required.

            Possible values include: 'New', 'Enabled', 'Disabled'
        - id: parameters.disabledAlerts
          type:
            - string
          description: >-
            Specifies the

            semicolon-separated list of alerts that are disabled, or empty
            string to

            disable no alerts. Possible values: Sql_Injection;

            Sql_Injection_Vulnerability; Access_Anomaly; Usage_Anomaly.
          optional: true
        - id: parameters.emailAddresses
          type:
            - string
          description: >-
            Specifies the

            semicolon-separated list of e-mail addresses to which the alert is
            sent.
          optional: true
        - id: parameters.emailAccountAdmins
          type:
            - string
          description: >-
            Specifies that the alert is

            sent to the account administrators. Possible values include:
            'Enabled',

            'Disabled'
          optional: true
        - id: parameters.storageEndpoint
          type:
            - string
          description: >-
            Specifies the blob storage

            endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob
            storage

            will hold all Threat Detection audit logs. If state is Enabled,

            storageEndpoint is required.
          optional: true
        - id: parameters.storageAccountAccessKey
          type:
            - string
          description: >-
            Specifies the

            identifier key of the Threat Detection audit storage account. If
            state is

            Enabled, storageAccountAccessKey is required.
          optional: true
        - id: parameters.retentionDays
          type:
            - number
          description: |-
            Specifies the number of days to
            keep in the Threat Detection audit logs.
          optional: true
        - id: parameters.useServerDefault
          type:
            - string
          description: >-
            Specifies whether to use the

            default server policy. Possible values include: 'Enabled',
            'Disabled'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateThreatDetectionPolicyWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
  - uid: 'azure-arm-sql.Databases#createOrUpdateThreatDetectionPolicy'
    id: 'azure-arm-sql.Databases#createOrUpdateThreatDetectionPolicy'
    parent: azure-arm-sql.Databases
    name: >-
      createOrUpdateThreatDetectionPolicy(resourceGroupName, serverName,
      databaseName, parameters, options, optionalCallback)
    summary: Creates or updates a database's threat detection policy.
    fullName: >-
      azure-arm-sql.Databases.createOrUpdateThreatDetectionPolicy(resourceGroupName,
      serverName, databaseName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which database
            Threat Detection policy is defined.
        - id: parameters
          type:
            - object
          description: The database Threat Detection policy.
        - id: parameters.location
          type:
            - string
          description: |-
            The geo-location where the resource
            lives
          optional: true
        - id: parameters.state
          type:
            - string
          description: >-
            Specifies the state of the policy. If state

            is Enabled, storageEndpoint and storageAccountAccessKey are
            required.

            Possible values include: 'New', 'Enabled', 'Disabled'
        - id: parameters.disabledAlerts
          type:
            - string
          description: >-
            Specifies the

            semicolon-separated list of alerts that are disabled, or empty
            string to

            disable no alerts. Possible values: Sql_Injection;

            Sql_Injection_Vulnerability; Access_Anomaly; Usage_Anomaly.
          optional: true
        - id: parameters.emailAddresses
          type:
            - string
          description: >-
            Specifies the

            semicolon-separated list of e-mail addresses to which the alert is
            sent.
          optional: true
        - id: parameters.emailAccountAdmins
          type:
            - string
          description: >-
            Specifies that the alert is

            sent to the account administrators. Possible values include:
            'Enabled',

            'Disabled'
          optional: true
        - id: parameters.storageEndpoint
          type:
            - string
          description: >-
            Specifies the blob storage

            endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob
            storage

            will hold all Threat Detection audit logs. If state is Enabled,

            storageEndpoint is required.
          optional: true
        - id: parameters.storageAccountAccessKey
          type:
            - string
          description: >-
            Specifies the

            identifier key of the Threat Detection audit storage account. If
            state is

            Enabled, storageAccountAccessKey is required.
          optional: true
        - id: parameters.retentionDays
          type:
            - number
          description: |-
            Specifies the number of days to
            keep in the Threat Detection audit logs.
          optional: true
        - id: parameters.useServerDefault
          type:
            - string
          description: >-
            Specifies whether to use the

            default server policy. Possible values include: 'Enabled',
            'Disabled'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateThreatDetectionPolicy(resourceGroupName,
        serverName, databaseName, parameters, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#getBlobAuditingPolicyWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#getBlobAuditingPolicyWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      getBlobAuditingPolicyWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    summary: Gets a database's blob auditing policy.
    fullName: >-
      azure-arm-sql.Databases.getBlobAuditingPolicyWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which database
            blob audit policy is defined.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getBlobAuditingPolicyWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
  - uid: 'azure-arm-sql.Databases#getBlobAuditingPolicy'
    id: 'azure-arm-sql.Databases#getBlobAuditingPolicy'
    parent: azure-arm-sql.Databases
    name: >-
      getBlobAuditingPolicy(resourceGroupName, serverName, databaseName,
      options, optionalCallback)
    summary: Gets a database's blob auditing policy.
    fullName: >-
      azure-arm-sql.Databases.getBlobAuditingPolicy(resourceGroupName,
      serverName, databaseName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which database
            blob audit policy is defined.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getBlobAuditingPolicy(resourceGroupName, serverName,
        databaseName, options, optionalCallback)
  - uid: >-
      azure-arm-sql.Databases#createOrUpdateBlobAuditingPolicyWithHttpOperationResponse
    id: >-
      azure-arm-sql.Databases#createOrUpdateBlobAuditingPolicyWithHttpOperationResponse
    parent: azure-arm-sql.Databases
    name: >-
      createOrUpdateBlobAuditingPolicyWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    summary: Creates or updates a database's blob auditing policy.
    fullName: >-
      azure-arm-sql.Databases.createOrUpdateBlobAuditingPolicyWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which database
            blob audit policy will be defined.
        - id: parameters
          type:
            - object
          description: The database blob auditing policy.
        - id: parameters.location
          type:
            - string
          description: |-
            The geo-location where the resource
            lives
          optional: true
        - id: parameters.state
          type:
            - string
          description: >-
            Specifies the state of the policy. If state

            is Enabled, storageEndpoint and storageAccountAccessKey are
            required.

            Possible values include: 'Enabled', 'Disabled'
        - id: parameters.storageEndpoint
          type:
            - string
          description: |-
            Specifies the blob storage
            endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is
            Enabled, storageEndpoint is required.
          optional: true
        - id: parameters.storageAccountAccessKey
          type:
            - string
          description: |-
            Specifies the
            identifier key of the auditing storage account. If state is Enabled,
            storageAccountAccessKey is required.
          optional: true
        - id: parameters.retentionDays
          type:
            - number
          description: |-
            Specifies the number of days to
            keep in the audit logs.
          optional: true
        - id: parameters.auditActionsAndGroups
          type:
            - array
          description: |-
            Specifies the Actions and
            Actions-Groups to audit.
          optional: true
        - id: parameters.storageAccountSubscriptionId
          type:
            - string
          description: |-
            Specifies the blob
            storage subscription Id.
          optional: true
        - id: parameters.isStorageSecondaryKeyInUse
          type:
            - boolean
          description: |-
            Specifies whether
            storageAccountAccessKey value is the storage’s secondary key.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateBlobAuditingPolicyWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
  - uid: 'azure-arm-sql.Databases#createOrUpdateBlobAuditingPolicy'
    id: 'azure-arm-sql.Databases#createOrUpdateBlobAuditingPolicy'
    parent: azure-arm-sql.Databases
    name: >-
      createOrUpdateBlobAuditingPolicy(resourceGroupName, serverName,
      databaseName, parameters, options, optionalCallback)
    summary: Creates or updates a database's blob auditing policy.
    fullName: >-
      azure-arm-sql.Databases.createOrUpdateBlobAuditingPolicy(resourceGroupName,
      serverName, databaseName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database for which database
            blob audit policy will be defined.
        - id: parameters
          type:
            - object
          description: The database blob auditing policy.
        - id: parameters.location
          type:
            - string
          description: |-
            The geo-location where the resource
            lives
          optional: true
        - id: parameters.state
          type:
            - string
          description: >-
            Specifies the state of the policy. If state

            is Enabled, storageEndpoint and storageAccountAccessKey are
            required.

            Possible values include: 'Enabled', 'Disabled'
        - id: parameters.storageEndpoint
          type:
            - string
          description: |-
            Specifies the blob storage
            endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is
            Enabled, storageEndpoint is required.
          optional: true
        - id: parameters.storageAccountAccessKey
          type:
            - string
          description: |-
            Specifies the
            identifier key of the auditing storage account. If state is Enabled,
            storageAccountAccessKey is required.
          optional: true
        - id: parameters.retentionDays
          type:
            - number
          description: |-
            Specifies the number of days to
            keep in the audit logs.
          optional: true
        - id: parameters.auditActionsAndGroups
          type:
            - array
          description: |-
            Specifies the Actions and
            Actions-Groups to audit.
          optional: true
        - id: parameters.storageAccountSubscriptionId
          type:
            - string
          description: |-
            Specifies the blob
            storage subscription Id.
          optional: true
        - id: parameters.isStorageSecondaryKeyInUse
          type:
            - boolean
          description: |-
            Specifies whether
            storageAccountAccessKey value is the storage’s secondary key.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateBlobAuditingPolicy(resourceGroupName, serverName,
        databaseName, parameters, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#beginImportMethodWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#beginImportMethodWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      beginImportMethodWithHttpOperationResponse(resourceGroupName, serverName,
      parameters, options)
    summary: Imports a bacpac into a new database.
    fullName: >-
      azure-arm-sql.Databases.beginImportMethodWithHttpOperationResponse(resourceGroupName,
      serverName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for importing a Bacpac
            into a database.
        - id: parameters.databaseName
          type:
            - string
          description: The name of the database to import.
        - id: parameters.edition
          type:
            - string
          description: >-
            The edition for the database being

            created. Possible values include: 'Web', 'Business', 'Basic',
            'Standard',

            'Premium', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2'
        - id: parameters.serviceObjectiveName
          type:
            - string
          description: >-
            The name of the service

            objective to assign to the database. Possible values include:
            'Basic', 'S0',

            'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15',
            'System',

            'System2', 'ElasticPool'
        - id: parameters.maxSizeBytes
          type:
            - string
          description: |-
            The maximum size for the newly
            imported database.
        - id: parameters.storageKeyType
          type:
            - string
          description: |-
            The type of the storage key to
            use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
        - id: parameters.storageKey
          type:
            - string
          description: |-
            The storage key to use.  If storage
            key type is SharedAccessKey, it must be preceded with a "?."
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: |-
            The name of the SQL
            administrator.
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: |-
            The password of the
            SQL administrator.
        - id: parameters.authenticationType
          type:
            - string
          description: |-
            The authentication type.
            Possible values include: 'SQL', 'ADPassword'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginImportMethodWithHttpOperationResponse(resourceGroupName,
        serverName, parameters, options)
  - uid: 'azure-arm-sql.Databases#beginImportMethod'
    id: 'azure-arm-sql.Databases#beginImportMethod'
    parent: azure-arm-sql.Databases
    name: >-
      beginImportMethod(resourceGroupName, serverName, parameters, options,
      optionalCallback)
    summary: Imports a bacpac into a new database.
    fullName: >-
      azure-arm-sql.Databases.beginImportMethod(resourceGroupName, serverName,
      parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for importing a Bacpac
            into a database.
        - id: parameters.databaseName
          type:
            - string
          description: The name of the database to import.
        - id: parameters.edition
          type:
            - string
          description: >-
            The edition for the database being

            created. Possible values include: 'Web', 'Business', 'Basic',
            'Standard',

            'Premium', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2'
        - id: parameters.serviceObjectiveName
          type:
            - string
          description: >-
            The name of the service

            objective to assign to the database. Possible values include:
            'Basic', 'S0',

            'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15',
            'System',

            'System2', 'ElasticPool'
        - id: parameters.maxSizeBytes
          type:
            - string
          description: |-
            The maximum size for the newly
            imported database.
        - id: parameters.storageKeyType
          type:
            - string
          description: |-
            The type of the storage key to
            use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
        - id: parameters.storageKey
          type:
            - string
          description: |-
            The storage key to use.  If storage
            key type is SharedAccessKey, it must be preceded with a "?."
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: |-
            The name of the SQL
            administrator.
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: |-
            The password of the
            SQL administrator.
        - id: parameters.authenticationType
          type:
            - string
          description: |-
            The authentication type.
            Possible values include: 'SQL', 'ADPassword'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginImportMethod(resourceGroupName, serverName, parameters,
        options, optionalCallback)
  - uid: >-
      azure-arm-sql.Databases#beginCreateImportOperationWithHttpOperationResponse
    id: >-
      azure-arm-sql.Databases#beginCreateImportOperationWithHttpOperationResponse
    parent: azure-arm-sql.Databases
    name: >-
      beginCreateImportOperationWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    summary: >-
      Creates an import operation that imports a bacpac into an existing
      database.

      The existing database must be empty.
    fullName: >-
      azure-arm-sql.Databases.beginCreateImportOperationWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to import into
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for importing a Bacpac
            into a database.
        - id: parameters.name
          type:
            - string
          description: The name of the extension.
          optional: true
        - id: parameters.type
          type:
            - string
          description: The type of the extension.
          optional: true
        - id: parameters.storageKeyType
          type:
            - string
          description: |-
            The type of the storage key to
            use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
        - id: parameters.storageKey
          type:
            - string
          description: |-
            The storage key to use.  If storage
            key type is SharedAccessKey, it must be preceded with a "?."
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: |-
            The name of the SQL
            administrator.
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: |-
            The password of the
            SQL administrator.
        - id: parameters.authenticationType
          type:
            - string
          description: |-
            The authentication type.
            Possible values include: 'SQL', 'ADPassword'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginCreateImportOperationWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
  - uid: 'azure-arm-sql.Databases#beginCreateImportOperation'
    id: 'azure-arm-sql.Databases#beginCreateImportOperation'
    parent: azure-arm-sql.Databases
    name: >-
      beginCreateImportOperation(resourceGroupName, serverName, databaseName,
      parameters, options, optionalCallback)
    summary: >-
      Creates an import operation that imports a bacpac into an existing
      database.

      The existing database must be empty.
    fullName: >-
      azure-arm-sql.Databases.beginCreateImportOperation(resourceGroupName,
      serverName, databaseName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to import into
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for importing a Bacpac
            into a database.
        - id: parameters.name
          type:
            - string
          description: The name of the extension.
          optional: true
        - id: parameters.type
          type:
            - string
          description: The type of the extension.
          optional: true
        - id: parameters.storageKeyType
          type:
            - string
          description: |-
            The type of the storage key to
            use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
        - id: parameters.storageKey
          type:
            - string
          description: |-
            The storage key to use.  If storage
            key type is SharedAccessKey, it must be preceded with a "?."
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: |-
            The name of the SQL
            administrator.
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: |-
            The password of the
            SQL administrator.
        - id: parameters.authenticationType
          type:
            - string
          description: |-
            The authentication type.
            Possible values include: 'SQL', 'ADPassword'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreateImportOperation(resourceGroupName, serverName,
        databaseName, parameters, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#beginExportMethodWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#beginExportMethodWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      beginExportMethodWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, parameters, options)
    summary: Exports a database to a bacpac.
    fullName: >-
      azure-arm-sql.Databases.beginExportMethodWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be exported.
        - id: parameters
          type:
            - object
          description: The required parameters for exporting a database.
        - id: parameters.storageKeyType
          type:
            - string
          description: |-
            The type of the storage key to
            use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
        - id: parameters.storageKey
          type:
            - string
          description: |-
            The storage key to use.  If storage
            key type is SharedAccessKey, it must be preceded with a "?."
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: |-
            The name of the SQL
            administrator.
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: |-
            The password of the
            SQL administrator.
        - id: parameters.authenticationType
          type:
            - string
          description: |-
            The authentication type.
            Possible values include: 'SQL', 'ADPassword'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginExportMethodWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
  - uid: 'azure-arm-sql.Databases#beginExportMethod'
    id: 'azure-arm-sql.Databases#beginExportMethod'
    parent: azure-arm-sql.Databases
    name: >-
      beginExportMethod(resourceGroupName, serverName, databaseName, parameters,
      options, optionalCallback)
    summary: Exports a database to a bacpac.
    fullName: >-
      azure-arm-sql.Databases.beginExportMethod(resourceGroupName, serverName,
      databaseName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be exported.
        - id: parameters
          type:
            - object
          description: The required parameters for exporting a database.
        - id: parameters.storageKeyType
          type:
            - string
          description: |-
            The type of the storage key to
            use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
        - id: parameters.storageKey
          type:
            - string
          description: |-
            The storage key to use.  If storage
            key type is SharedAccessKey, it must be preceded with a "?."
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: |-
            The name of the SQL
            administrator.
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: |-
            The password of the
            SQL administrator.
        - id: parameters.authenticationType
          type:
            - string
          description: |-
            The authentication type.
            Possible values include: 'SQL', 'ADPassword'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginExportMethod(resourceGroupName, serverName, databaseName,
        parameters, options, optionalCallback)
  - uid: >-
      azure-arm-sql.Databases#beginFailoverReplicationLinkWithHttpOperationResponse
    id: >-
      azure-arm-sql.Databases#beginFailoverReplicationLinkWithHttpOperationResponse
    parent: azure-arm-sql.Databases
    name: >-
      beginFailoverReplicationLinkWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, linkId, options)
    summary: Failover the database replication link.
    fullName: >-
      azure-arm-sql.Databases.beginFailoverReplicationLinkWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, linkId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database that has the
            replication link to be failed over.
        - id: linkId
          type:
            - string
          description: The ID of the replication link to be failed over.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginFailoverReplicationLinkWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, linkId, options)
  - uid: 'azure-arm-sql.Databases#beginFailoverReplicationLink'
    id: 'azure-arm-sql.Databases#beginFailoverReplicationLink'
    parent: azure-arm-sql.Databases
    name: >-
      beginFailoverReplicationLink(resourceGroupName, serverName, databaseName,
      linkId, options, optionalCallback)
    summary: Failover the database replication link.
    fullName: >-
      azure-arm-sql.Databases.beginFailoverReplicationLink(resourceGroupName,
      serverName, databaseName, linkId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database that has the
            replication link to be failed over.
        - id: linkId
          type:
            - string
          description: The ID of the replication link to be failed over.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginFailoverReplicationLink(resourceGroupName, serverName,
        databaseName, linkId, options, optionalCallback)
  - uid: >-
      azure-arm-sql.Databases#beginFailoverReplicationLinkAllowDataLossWithHttpOperationResponse
    id: >-
      azure-arm-sql.Databases#beginFailoverReplicationLinkAllowDataLossWithHttpOperationResponse
    parent: azure-arm-sql.Databases
    name: >-
      beginFailoverReplicationLinkAllowDataLossWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, linkId, options)
    summary: >-
      Force failover the database replication link, which may result in data
      loss.
    fullName: >-
      azure-arm-sql.Databases.beginFailoverReplicationLinkAllowDataLossWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, linkId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database that has the
            replication link to be failed over.
        - id: linkId
          type:
            - string
          description: The ID of the replication link to be failed over.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginFailoverReplicationLinkAllowDataLossWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, linkId, options)
  - uid: 'azure-arm-sql.Databases#beginFailoverReplicationLinkAllowDataLoss'
    id: 'azure-arm-sql.Databases#beginFailoverReplicationLinkAllowDataLoss'
    parent: azure-arm-sql.Databases
    name: >-
      beginFailoverReplicationLinkAllowDataLoss(resourceGroupName, serverName,
      databaseName, linkId, options, optionalCallback)
    summary: >-
      Force failover the database replication link, which may result in data
      loss.
    fullName: >-
      azure-arm-sql.Databases.beginFailoverReplicationLinkAllowDataLoss(resourceGroupName,
      serverName, databaseName, linkId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database that has the
            replication link to be failed over.
        - id: linkId
          type:
            - string
          description: The ID of the replication link to be failed over.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginFailoverReplicationLinkAllowDataLoss(resourceGroupName,
        serverName, databaseName, linkId, options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#beginPauseWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#beginPauseWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      beginPauseWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, options)
    summary: Pauses a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.beginPauseWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to pause.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginPauseWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
  - uid: 'azure-arm-sql.Databases#beginPause'
    id: 'azure-arm-sql.Databases#beginPause'
    parent: azure-arm-sql.Databases
    name: >-
      beginPause(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Pauses a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.beginPause(resourceGroupName, serverName,
      databaseName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to pause.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginPause(resourceGroupName, serverName, databaseName,
        options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#beginResumeWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#beginResumeWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      beginResumeWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, options)
    summary: Resumes a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.beginResumeWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to resume.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginResumeWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
  - uid: 'azure-arm-sql.Databases#beginResume'
    id: 'azure-arm-sql.Databases#beginResume'
    parent: azure-arm-sql.Databases
    name: >-
      beginResume(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Resumes a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.beginResume(resourceGroupName, serverName,
      databaseName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to resume.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginResume(resourceGroupName, serverName, databaseName,
        options, optionalCallback)
  - uid: 'azure-arm-sql.Databases#beginCreateOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#beginCreateOrUpdateWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    summary: |-
      Creates a new database or updates an existing database. Location is a
      required property in the request body, and it must be the same as the
      location of the SQL server.
    fullName: >-
      azure-arm-sql.Databases.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database to be operated on
            (updated or created).
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for creating or updating
            a database.
        - id: parameters.collation
          type:
            - string
          description: |-
            The collation of the database. If
            createMode is not Default, this value is ignored.
          optional: true
        - id: parameters.createMode
          type:
            - string
          description: >-
            Specifies the mode of database

            creation.


            Default: regular database creation.


            Copy: creates a database as a copy of an existing database.
            sourceDatabaseId

            must be specified as the resource ID of the source database.


            OnlineSecondary/NonReadableSecondary: creates a database as a
            (readable or

            nonreadable) secondary replica of an existing database.
            sourceDatabaseId

            must be specified as the resource ID of the existing primary
            database.


            PointInTimeRestore: Creates a database by restoring a point in time
            backup

            of an existing database. sourceDatabaseId must be specified as the
            resource

            ID of the existing database, and restorePointInTime must be
            specified.


            Recovery: Creates a database by restoring a geo-replicated backup.

            sourceDatabaseId must be specified as the recoverable database
            resource ID

            to restore.


            Restore: Creates a database by restoring a backup of a deleted
            database.

            sourceDatabaseId must be specified. If sourceDatabaseId is the
            database's

            original resource ID, then sourceDatabaseDeletionDate must be
            specified.

            Otherwise sourceDatabaseId must be the restorable dropped database
            resource

            ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may
            also be

            specified to restore from an earlier point in time.


            RestoreLongTermRetentionBackup: Creates a database by restoring from
            a long

            term retention vault. recoveryServicesRecoveryPointResourceId must
            be

            specified as the recovery point resource ID.


            Copy, NonReadableSecondary, OnlineSecondary and

            RestoreLongTermRetentionBackup are not supported for DataWarehouse
            edition.

            Possible values include: 'Copy', 'Default', 'NonReadableSecondary',

            'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',

            'RestoreLongTermRetentionBackup'
          optional: true
        - id: parameters.sourceDatabaseId
          type:
            - string
          description: >-
            Conditional. If createMode is

            Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore,
            Recovery,

            or Restore, then this value is required. Specifies the resource ID
            of the

            source database. If createMode is NonReadableSecondary or
            OnlineSecondary,

            the name of the source database must be the same as the new database
            being

            created.
          optional: true
        - id: parameters.sourceDatabaseDeletionDate
          type:
            - date
          description: >-
            Conditional. If

            createMode is Restore and sourceDatabaseId is the deleted database's

            original resource id when it existed (as opposed to its current
            restorable

            dropped database id), then this value is required. Specifies the
            time that

            the database was deleted.
          optional: true
        - id: parameters.restorePointInTime
          type:
            - date
          description: >-
            Conditional. If createMode is

            PointInTimeRestore, this value is required. If createMode is
            Restore, this

            value is optional. Specifies the point in time (ISO8601 format) of
            the

            source database that will be restored to create the new database.
            Must be

            greater than or equal to the source database's earliestRestoreDate
            value.
          optional: true
        - id: parameters.recoveryServicesRecoveryPointResourceId
          type:
            - date
          description: >-
            Conditional. If createMode is RestoreLongTermRetentionBackup, then
            this

            value is required. Specifies the resource ID of the recovery point
            to

            restore from.
          optional: true
        - id: parameters.edition
          type:
            - string
          description: >-
            The edition of the database. The

            DatabaseEditions enumeration contains all the valid editions. If
            createMode

            is NonReadableSecondary or OnlineSecondary, this value is ignored.
            To see

            possible values, query the capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation.". Possible
            values

            include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',

            'Stretch', 'DataWarehouse', 'System', 'System2'
          optional: true
        - id: parameters.maxSizeBytes
          type:
            - string
          description: >-
            The max size of the database

            expressed in bytes. If createMode is not Default, this value is
            ignored. To

            see possible values, query the capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation."
          optional: true
        - id: parameters.requestedServiceObjectiveId
          type:
            - azure-arm-sql.uuid
          description: >-
            The configured

            service level objective ID of the database. This is the service
            level

            objective that is in the process of being applied to the database.
            Once

            successfully updated, it will match the value of
            currentServiceObjectiveId

            property. If requestedServiceObjectiveId and
            requestedServiceObjectiveName

            are both updated, the value of requestedServiceObjectiveId overrides
            the

            value of requestedServiceObjectiveName. To see possible values,
            query the

            capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation."
          optional: true
        - id: parameters.requestedServiceObjectiveName
          type:
            - string
          description: >-
            The name of the

            configured service level objective of the database. This is the
            service

            level objective that is in the process of being applied to the
            database.

            Once successfully updated, it will match the value of
            serviceLevelObjective

            property. To see possible values, query the capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation.". Possible
            values

            include: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4',
            'P6',

            'P11', 'P15', 'System', 'System2', 'ElasticPool'
          optional: true
        - id: parameters.elasticPoolName
          type:
            - string
          description: >-
            The name of the elastic pool

            the database is in. If elasticPoolName and
            requestedServiceObjectiveName are

            both updated, the value of requestedServiceObjectiveName is ignored.
            Not

            supported for DataWarehouse edition.
          optional: true
        - id: parameters.readScale
          type:
            - string
          description: >-
            Conditional. If the database is a

            geo-secondary, readScale indicates whether read-only connections are
            allowed

            to this database or not. Not supported for DataWarehouse edition.
            Possible

            values include: 'Enabled', 'Disabled'
          optional: true
        - id: parameters.sampleName
          type:
            - string
          description: >-
            Indicates the name of the sample

            schema to apply when creating this database. If createMode is not
            Default,

            this value is ignored. Not supported for DataWarehouse edition.
            Possible

            values include: 'AdventureWorksLT'
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
  - uid: 'azure-arm-sql.Databases#beginCreateOrUpdate'
    id: 'azure-arm-sql.Databases#beginCreateOrUpdate'
    parent: azure-arm-sql.Databases
    name: >-
      beginCreateOrUpdate(resourceGroupName, serverName, databaseName,
      parameters, options, optionalCallback)
    summary: |-
      Creates a new database or updates an existing database. Location is a
      required property in the request body, and it must be the same as the
      location of the SQL server.
    fullName: >-
      azure-arm-sql.Databases.beginCreateOrUpdate(resourceGroupName, serverName,
      databaseName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: |-
            The name of the database to be operated on
            (updated or created).
        - id: parameters
          type:
            - object
          description: |-
            The required parameters for creating or updating
            a database.
        - id: parameters.collation
          type:
            - string
          description: |-
            The collation of the database. If
            createMode is not Default, this value is ignored.
          optional: true
        - id: parameters.createMode
          type:
            - string
          description: >-
            Specifies the mode of database

            creation.


            Default: regular database creation.


            Copy: creates a database as a copy of an existing database.
            sourceDatabaseId

            must be specified as the resource ID of the source database.


            OnlineSecondary/NonReadableSecondary: creates a database as a
            (readable or

            nonreadable) secondary replica of an existing database.
            sourceDatabaseId

            must be specified as the resource ID of the existing primary
            database.


            PointInTimeRestore: Creates a database by restoring a point in time
            backup

            of an existing database. sourceDatabaseId must be specified as the
            resource

            ID of the existing database, and restorePointInTime must be
            specified.


            Recovery: Creates a database by restoring a geo-replicated backup.

            sourceDatabaseId must be specified as the recoverable database
            resource ID

            to restore.


            Restore: Creates a database by restoring a backup of a deleted
            database.

            sourceDatabaseId must be specified. If sourceDatabaseId is the
            database's

            original resource ID, then sourceDatabaseDeletionDate must be
            specified.

            Otherwise sourceDatabaseId must be the restorable dropped database
            resource

            ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may
            also be

            specified to restore from an earlier point in time.


            RestoreLongTermRetentionBackup: Creates a database by restoring from
            a long

            term retention vault. recoveryServicesRecoveryPointResourceId must
            be

            specified as the recovery point resource ID.


            Copy, NonReadableSecondary, OnlineSecondary and

            RestoreLongTermRetentionBackup are not supported for DataWarehouse
            edition.

            Possible values include: 'Copy', 'Default', 'NonReadableSecondary',

            'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',

            'RestoreLongTermRetentionBackup'
          optional: true
        - id: parameters.sourceDatabaseId
          type:
            - string
          description: >-
            Conditional. If createMode is

            Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore,
            Recovery,

            or Restore, then this value is required. Specifies the resource ID
            of the

            source database. If createMode is NonReadableSecondary or
            OnlineSecondary,

            the name of the source database must be the same as the new database
            being

            created.
          optional: true
        - id: parameters.sourceDatabaseDeletionDate
          type:
            - date
          description: >-
            Conditional. If

            createMode is Restore and sourceDatabaseId is the deleted database's

            original resource id when it existed (as opposed to its current
            restorable

            dropped database id), then this value is required. Specifies the
            time that

            the database was deleted.
          optional: true
        - id: parameters.restorePointInTime
          type:
            - date
          description: >-
            Conditional. If createMode is

            PointInTimeRestore, this value is required. If createMode is
            Restore, this

            value is optional. Specifies the point in time (ISO8601 format) of
            the

            source database that will be restored to create the new database.
            Must be

            greater than or equal to the source database's earliestRestoreDate
            value.
          optional: true
        - id: parameters.recoveryServicesRecoveryPointResourceId
          type:
            - date
          description: >-
            Conditional. If createMode is RestoreLongTermRetentionBackup, then
            this

            value is required. Specifies the resource ID of the recovery point
            to

            restore from.
          optional: true
        - id: parameters.edition
          type:
            - string
          description: >-
            The edition of the database. The

            DatabaseEditions enumeration contains all the valid editions. If
            createMode

            is NonReadableSecondary or OnlineSecondary, this value is ignored.
            To see

            possible values, query the capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation.". Possible
            values

            include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',

            'Stretch', 'DataWarehouse', 'System', 'System2'
          optional: true
        - id: parameters.maxSizeBytes
          type:
            - string
          description: >-
            The max size of the database

            expressed in bytes. If createMode is not Default, this value is
            ignored. To

            see possible values, query the capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation."
          optional: true
        - id: parameters.requestedServiceObjectiveId
          type:
            - azure-arm-sql.uuid
          description: >-
            The configured

            service level objective ID of the database. This is the service
            level

            objective that is in the process of being applied to the database.
            Once

            successfully updated, it will match the value of
            currentServiceObjectiveId

            property. If requestedServiceObjectiveId and
            requestedServiceObjectiveName

            are both updated, the value of requestedServiceObjectiveId overrides
            the

            value of requestedServiceObjectiveName. To see possible values,
            query the

            capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation."
          optional: true
        - id: parameters.requestedServiceObjectiveName
          type:
            - string
          description: >-
            The name of the

            configured service level objective of the database. This is the
            service

            level objective that is in the process of being applied to the
            database.

            Once successfully updated, it will match the value of
            serviceLevelObjective

            property. To see possible values, query the capabilities API

            (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)

            referred to by operationId: "Capabilities_ListByLocation.". Possible
            values

            include: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4',
            'P6',

            'P11', 'P15', 'System', 'System2', 'ElasticPool'
          optional: true
        - id: parameters.elasticPoolName
          type:
            - string
          description: >-
            The name of the elastic pool

            the database is in. If elasticPoolName and
            requestedServiceObjectiveName are

            both updated, the value of requestedServiceObjectiveName is ignored.
            Not

            supported for DataWarehouse edition.
          optional: true
        - id: parameters.readScale
          type:
            - string
          description: >-
            Conditional. If the database is a

            geo-secondary, readScale indicates whether read-only connections are
            allowed

            to this database or not. Not supported for DataWarehouse edition.
            Possible

            values include: 'Enabled', 'Disabled'
          optional: true
        - id: parameters.sampleName
          type:
            - string
          description: >-
            Indicates the name of the sample

            schema to apply when creating this database. If createMode is not
            Default,

            this value is ignored. Not supported for DataWarehouse edition.
            Possible

            values include: 'AdventureWorksLT'
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreateOrUpdate(resourceGroupName, serverName,
        databaseName, parameters, options, optionalCallback)
references:
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: Promise
    name: Promise
    fullName: Promise
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: date
    name: date
    fullName: date
    isExternal: true
  - uid: azure-arm-sql.uuid
    name: uuid
    fullName: azure-arm-sql.uuid
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
