### YamlMime:JavaScriptReference
items:
  - uid: azure-storage-legacy.TableService
    id: azure-storage-legacy.TableService
    name: TableService
    summary: >-
      The TableService object allows you to peform management operations with
      the Microsoft Azure Table Service.

      The Table Service stores data in rows of key-value pairs. A table is
      composed of multiple rows, and each row

      contains key-value pairs. There is no schema, so each row in a table may
      store a different set of keys.


      For more information on the Table Service, as well as task focused
      information on using it from a Node.js application, see

      [How to Use the Table Service from
      Node.js](https://www.windowsazure.com/en-us/develop/nodejs/how-to-guides/table-services/).
    fullName: azure-storage-legacy.TableService
    type: Class
    children:
      - 'azure-storage-legacy.TableService.#ctor'
      - azure-storage-legacy.TableService~storageServiceSettings
      - 'azure-storage-legacy.TableService#authenticationProvider'
      - azure-storage-legacy.TableService.incorrectPartitionErr
      - 'azure-storage-legacy.TableService#getServiceProperties'
      - 'azure-storage-legacy.TableService#setServiceProperties'
      - 'azure-storage-legacy.TableService#getTable'
      - 'azure-storage-legacy.TableService#createTable'
      - 'azure-storage-legacy.TableService#createTableIfNotExists'
      - 'azure-storage-legacy.TableService#deleteTable'
      - 'azure-storage-legacy.TableService#queryTables'
      - 'azure-storage-legacy.TableService#queryEntity'
      - 'azure-storage-legacy.TableService#queryEntities'
      - 'azure-storage-legacy.TableService#insertEntity'
      - 'azure-storage-legacy.TableService#insertOrReplaceEntity'
      - 'azure-storage-legacy.TableService#updateEntity'
      - 'azure-storage-legacy.TableService#mergeEntity'
      - 'azure-storage-legacy.TableService#insertOrMergeEntity'
      - 'azure-storage-legacy.TableService#deleteEntity'
      - 'azure-storage-legacy.TableService#_performRequestExtended'
  - id: 'azure-storage-legacy.TableService.#ctor'
    uid: 'azure-storage-legacy.TableService.#ctor'
    parent: azure-storage-legacy.TableService
    name: >-
      TableService(storageAccountOrConnectionString, storageAccessKey, host,
      authenticationProvider)
    fullName: >-
      azure-storage-legacy.TableService.TableService(storageAccountOrConnectionString,
      storageAccessKey, host, authenticationProvider)
    summary: >-
      Creates a new TableService object.

      If no storageaccount or storageaccesskey are provided, the
      AZURE_STORAGE_ACCOUNT and AZURE_STORAGE_ACCESS_KEY environment variables
      will be used.
    type: Constructor
    syntax:
      parameters:
        - id: storageAccountOrConnectionString
          type:
            - string
          description: The storage account or the connection string.
          optional: true
        - id: storageAccessKey
          type:
            - string
          description: The storage access key.
          optional: true
        - id: host
          type:
            - string
          description: The host address.
          optional: true
        - id: authenticationProvider
          type:
            - object
          description: The authentication provider.
          optional: true
      content: >-
        new TableService(storageAccountOrConnectionString, storageAccessKey,
        host, authenticationProvider)
  - uid: azure-storage-legacy.TableService~storageServiceSettings
    id: azure-storage-legacy.TableService~storageServiceSettings
    parent: azure-storage-legacy.TableService
    name: storageServiceSettings
    summary: ''
    fullName: azure-storage-legacy.TableService.storageServiceSettings
    type: Field
    syntax:
      content: storageServiceSettings
  - uid: 'azure-storage-legacy.TableService#authenticationProvider'
    id: 'azure-storage-legacy.TableService#authenticationProvider'
    parent: azure-storage-legacy.TableService
    name: authenticationProvider
    summary: ''
    fullName: azure-storage-legacy.TableService.authenticationProvider
    type: Field
    syntax:
      content: authenticationProvider
  - uid: azure-storage-legacy.TableService.incorrectPartitionErr
    id: azure-storage-legacy.TableService.incorrectPartitionErr
    parent: azure-storage-legacy.TableService
    name: incorrectPartitionErr
    summary: ''
    fullName: azure-storage-legacy.TableService.incorrectPartitionErr
    type: Field
    syntax:
      content: incorrectPartitionErr
  - uid: 'azure-storage-legacy.TableService#getServiceProperties'
    id: 'azure-storage-legacy.TableService#getServiceProperties'
    parent: azure-storage-legacy.TableService
    name: 'getServiceProperties(options, callback)'
    summary: >-
      Gets the properties of a storage account’s Table service, including
      Microsoft Azure Storage Analytics.
    fullName: 'azure-storage-legacy.TableService.getServiceProperties(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                         if an error occurs; otherwise `servicePropetiesResult` will contain
                                                                         the propeties.
                                                                         `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function getServiceProperties(options, callback)'
    children:
      - 'azure-storage-legacy.TableService#getServiceProperties~options'
      - 'azure-storage-legacy.TableService#getServiceProperties~webResource'
      - >-
        azure-storage-legacy.TableService#getServiceProperties~processResponseCallback
  - uid: 'azure-storage-legacy.TableService#setServiceProperties'
    id: 'azure-storage-legacy.TableService#setServiceProperties'
    parent: azure-storage-legacy.TableService
    name: 'setServiceProperties(serviceProperties, options, callback)'
    summary: >-
      Sets the properties of a storage account’s Table service, including
      Microsoft Azure Storage Analytics.

      You can also use this operation to set the default request version for all
      incoming requests that do not have a version specified.
    fullName: >-
      azure-storage-legacy.TableService.setServiceProperties(serviceProperties,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: serviceProperties
          type:
            - object
          description: The service properties.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                       if an error occurs; otherwise `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function setServiceProperties(serviceProperties, options, callback)'
    children:
      - 'azure-storage-legacy.TableService#setServiceProperties~options'
      - >-
        azure-storage-legacy.TableService#setServiceProperties~servicePropertiesXml
      - 'azure-storage-legacy.TableService#setServiceProperties~webResource'
      - >-
        azure-storage-legacy.TableService#setServiceProperties~processResponseCallback
  - uid: 'azure-storage-legacy.TableService#getTable'
    id: 'azure-storage-legacy.TableService#getTable'
    parent: azure-storage-legacy.TableService
    name: 'getTable(table, options, callback)'
    summary: Gets a table properties.
    fullName: 'azure-storage-legacy.TableService.getTable(table, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: options
          type:
            - object
          description: The get options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                       if an error occurs; otherwise `tableResult` will contain
                                                                       the table information.
                                                                       `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function getTable(table, options, callback)'
    children:
      - 'azure-storage-legacy.TableService#getTable~options'
      - 'azure-storage-legacy.TableService#getTable~webResource'
      - 'azure-storage-legacy.TableService#getTable~processResponseCallback'
  - uid: 'azure-storage-legacy.TableService#createTable'
    id: 'azure-storage-legacy.TableService#createTable'
    parent: azure-storage-legacy.TableService
    name: 'createTable(table, options, callback)'
    summary: Creates a new table within a storage account.
    fullName: 'azure-storage-legacy.TableService.createTable(table, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: options
          type:
            - object
          description: The create options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                       if an error occurs; otherwise tableResult` will contain
                                                                       the new table information.
                                                                       `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function createTable(table, options, callback)'
    children:
      - 'azure-storage-legacy.TableService#createTable~options'
      - 'azure-storage-legacy.TableService#createTable~xmlTableDescriptor'
      - 'azure-storage-legacy.TableService#createTable~webResource'
      - 'azure-storage-legacy.TableService#createTable~processResponseCallback'
  - uid: 'azure-storage-legacy.TableService#createTableIfNotExists'
    id: 'azure-storage-legacy.TableService#createTableIfNotExists'
    parent: azure-storage-legacy.TableService
    name: 'createTableIfNotExists(table, options, callback)'
    summary: Creates a new table within a storage account if it doesnt exists.
    fullName: >-
      azure-storage-legacy.TableService.createTableIfNotExists(table, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: options
          type:
            - object
          description: The create options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                       if an error occurs; otherwise `created` will contain
                                                                       the table information.
                                                                       `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function createTableIfNotExists(table, options, callback)'
    children:
      - 'azure-storage-legacy.TableService#createTableIfNotExists~options'
  - uid: 'azure-storage-legacy.TableService#deleteTable'
    id: 'azure-storage-legacy.TableService#deleteTable'
    parent: azure-storage-legacy.TableService
    name: 'deleteTable(table, options, callback)'
    summary: Deletes a table from a storage account.
    fullName: 'azure-storage-legacy.TableService.deleteTable(table, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: options
          type:
            - object
          description: The delete options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                       if an error occurs; otherwise `successful` will be `true` if the operation was successful.
                                                                       `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function deleteTable(table, options, callback)'
    children:
      - 'azure-storage-legacy.TableService#deleteTable~options'
      - 'azure-storage-legacy.TableService#deleteTable~webResource'
      - 'azure-storage-legacy.TableService#deleteTable~processResponseCallback'
  - uid: 'azure-storage-legacy.TableService#queryTables'
    id: 'azure-storage-legacy.TableService#queryTables'
    parent: azure-storage-legacy.TableService
    name: 'queryTables(options, callback)'
    summary: Enumerates the tables in a storage account.
    fullName: 'azure-storage-legacy.TableService.queryTables(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: The create options or callback function.
          optional: true
        - id: options.prefix
          type:
            - string
          description: Prefix of tables to query
          optional: true
        - id: options.nextTableName
          type:
            - string
          description: The next table name marker.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                                                   if an error occurs; otherwise `queryTablesResult` will contain
                                                                                                   the list of tables. If more tables exist, and could not be returned,
                                                                                                   `resultContinuation` will contain a continuation token that can be used
                                                                                                   to retrieve the next set of results.
                                                                                                   `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function queryTables(options, callback)'
    children:
      - 'azure-storage-legacy.TableService#queryTables~options'
      - 'azure-storage-legacy.TableService#queryTables~webResource'
      - 'azure-storage-legacy.TableService#queryTables~query'
      - 'azure-storage-legacy.TableService#queryTables~self'
      - 'azure-storage-legacy.TableService#queryTables~processResponseCallback'
  - uid: 'azure-storage-legacy.TableService#queryEntity'
    id: 'azure-storage-legacy.TableService#queryEntity'
    parent: azure-storage-legacy.TableService
    name: 'queryEntity(table, partitionKey, rowKey, options, callback)'
    summary: Queries an entity in a table.
    fullName: >-
      azure-storage-legacy.TableService.queryEntity(table, partitionKey, rowKey,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: partitionKey
          type:
            - string
          description: The partition key.
        - id: rowKey
          type:
            - string
          description: The row key.
        - id: options
          type:
            - object
          description: The options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                       if an error occurs; otherwise `entity` will be the matching entity.
                                                                       `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function queryEntity(table, partitionKey, rowKey, options, callback)'
    children:
      - 'azure-storage-legacy.TableService#queryEntity~options'
      - 'azure-storage-legacy.TableService#queryEntity~tableQuery'
  - uid: 'azure-storage-legacy.TableService#queryEntities'
    id: 'azure-storage-legacy.TableService#queryEntities'
    parent: azure-storage-legacy.TableService
    name: 'queryEntities(tableQuery, options, callback)'
    summary: Queries data in a table.
    fullName: >-
      azure-storage-legacy.TableService.queryEntities(tableQuery, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: tableQuery
          type:
            - azure-storage-legacy.TableQuery
          description: The query to perform.
        - id: options
          type:
            - object
          description: The create options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                                                   if an error occurs; otherwise `entities` will contain
                                                                                                   the entities returned by the query. If more matching entities exist, and could not be returned,
                                                                                                   `queryResultContinuation` will contain a continuation token that can be used
                                                                                                   to retrieve the next set of results.
                                                                                                   `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function queryEntities(tableQuery, options, callback)'
    children:
      - 'azure-storage-legacy.TableService#queryEntities~options'
      - 'azure-storage-legacy.TableService#queryEntities~path'
      - 'azure-storage-legacy.TableService#queryEntities~queryString'
      - 'azure-storage-legacy.TableService#queryEntities~path'
      - 'azure-storage-legacy.TableService#queryEntities~queryString'
      - 'azure-storage-legacy.TableService#queryEntities~path'
      - 'azure-storage-legacy.TableService#queryEntities~webResource'
      - 'azure-storage-legacy.TableService#queryEntities~self'
      - 'azure-storage-legacy.TableService#queryEntities~processResponseCallback'
  - uid: 'azure-storage-legacy.TableService#insertEntity'
    id: 'azure-storage-legacy.TableService#insertEntity'
    parent: azure-storage-legacy.TableService
    name: 'insertEntity(table, entityDescriptor, options, callback)'
    summary: Inserts a new entity into a table.
    fullName: >-
      azure-storage-legacy.TableService.insertEntity(table, entityDescriptor,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: entityDescriptor
          type:
            - object
          description: The entity descriptor.
        - id: options
          type:
            - object
          description: The options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                       if an error occurs; otherwise `entity` will contain
                                                                       the new entity information.
                                                                       `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function insertEntity(table, entityDescriptor, options, callback)'
    children:
      - 'azure-storage-legacy.TableService#insertEntity~options'
      - 'azure-storage-legacy.TableService#insertEntity~self'
      - 'azure-storage-legacy.TableService#insertEntity~entityXmlDescriptor'
      - 'azure-storage-legacy.TableService#insertEntity~webResource'
      - 'azure-storage-legacy.TableService#insertEntity~processResponseCallback'
  - uid: 'azure-storage-legacy.TableService#insertOrReplaceEntity'
    id: 'azure-storage-legacy.TableService#insertOrReplaceEntity'
    parent: azure-storage-legacy.TableService
    name: 'insertOrReplaceEntity(table, entityDescriptor, options, callback)'
    summary: Inserts or updates a new entity into a table.
    fullName: >-
      azure-storage-legacy.TableService.insertOrReplaceEntity(table,
      entityDescriptor, options, callback)
    type: Method
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: entityDescriptor
          type:
            - object
          description: The entity descriptor.
        - id: options
          type:
            - object
          description: The options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                       if an error occurs; otherwise `entity` will contain
                                                                       the entity information.
                                                                       `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: >-
        function insertOrReplaceEntity(table, entityDescriptor, options,
        callback)
    children:
      - 'azure-storage-legacy.TableService#insertOrReplaceEntity~options'
      - 'azure-storage-legacy.TableService#insertOrReplaceEntity~self'
      - >-
        azure-storage-legacy.TableService#insertOrReplaceEntity~entityXmlDescriptor
      - 'azure-storage-legacy.TableService#insertOrReplaceEntity~path'
      - 'azure-storage-legacy.TableService#insertOrReplaceEntity~webResource'
      - >-
        azure-storage-legacy.TableService#insertOrReplaceEntity~processResponseCallback
  - uid: 'azure-storage-legacy.TableService#updateEntity'
    id: 'azure-storage-legacy.TableService#updateEntity'
    parent: azure-storage-legacy.TableService
    name: 'updateEntity(table, entityDescriptor, options, callback)'
    summary: Updates an existing entity within a table by replacing it.
    fullName: >-
      azure-storage-legacy.TableService.updateEntity(table, entityDescriptor,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: entityDescriptor
          type:
            - object
          description: The entity descriptor.
        - id: options
          type:
            - object
          description: The options.
          optional: true
        - id: options.checkEtag
          type:
            - boolean
          description: Boolean value indicating weather the etag should be matched or not.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                       if an error occurs; otherwise `entity` will contain
                                                                       the entity information.
                                                                       `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function updateEntity(table, entityDescriptor, options, callback)'
    children:
      - 'azure-storage-legacy.TableService#updateEntity~options'
      - 'azure-storage-legacy.TableService#updateEntity~self'
      - 'azure-storage-legacy.TableService#updateEntity~path'
      - 'azure-storage-legacy.TableService#updateEntity~entityXmlDescriptor'
      - 'azure-storage-legacy.TableService#updateEntity~webResource'
      - 'azure-storage-legacy.TableService#updateEntity~processResponseCallback'
  - uid: 'azure-storage-legacy.TableService#mergeEntity'
    id: 'azure-storage-legacy.TableService#mergeEntity'
    parent: azure-storage-legacy.TableService
    name: 'mergeEntity(table, entityDescriptor, options, callback)'
    summary: >-
      Updates an existing entity within a table by merging new property values
      into the entity.
    fullName: >-
      azure-storage-legacy.TableService.mergeEntity(table, entityDescriptor,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: entityDescriptor
          type:
            - object
          description: The entity descriptor.
        - id: options
          type:
            - object
          description: The options.
          optional: true
        - id: options.checkEtag
          type:
            - boolean
          description: Boolean value indicating weather the etag should be matched or not.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                       if an error occurs; otherwise `entity` will contain
                                                                       the entity information.
                                                                       `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function mergeEntity(table, entityDescriptor, options, callback)'
    children:
      - 'azure-storage-legacy.TableService#mergeEntity~options'
      - 'azure-storage-legacy.TableService#mergeEntity~self'
      - 'azure-storage-legacy.TableService#mergeEntity~path'
      - 'azure-storage-legacy.TableService#mergeEntity~entityXmlDescriptor'
      - 'azure-storage-legacy.TableService#mergeEntity~webResource'
      - 'azure-storage-legacy.TableService#mergeEntity~processResponseCallback'
  - uid: 'azure-storage-legacy.TableService#insertOrMergeEntity'
    id: 'azure-storage-legacy.TableService#insertOrMergeEntity'
    parent: azure-storage-legacy.TableService
    name: 'insertOrMergeEntity(table, entityDescriptor, options, callback)'
    summary: >-
      Inserts or updates an existing entity within a table by merging new
      property values into the entity.
    fullName: >-
      azure-storage-legacy.TableService.insertOrMergeEntity(table,
      entityDescriptor, options, callback)
    type: Method
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: entityDescriptor
          type:
            - object
          description: The entity descriptor.
        - id: options
          type:
            - object
          description: The create options or callback function.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                       if an error occurs; otherwise `entity` will contain
                                                                       the entity information.
                                                                       `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function insertOrMergeEntity(table, entityDescriptor, options, callback)'
    children:
      - 'azure-storage-legacy.TableService#insertOrMergeEntity~options'
      - 'azure-storage-legacy.TableService#insertOrMergeEntity~self'
      - 'azure-storage-legacy.TableService#insertOrMergeEntity~path'
      - >-
        azure-storage-legacy.TableService#insertOrMergeEntity~entityXmlDescriptor
      - 'azure-storage-legacy.TableService#insertOrMergeEntity~webResource'
      - >-
        azure-storage-legacy.TableService#insertOrMergeEntity~processResponseCallback
  - uid: 'azure-storage-legacy.TableService#deleteEntity'
    id: 'azure-storage-legacy.TableService#deleteEntity'
    parent: azure-storage-legacy.TableService
    name: 'deleteEntity(table, entityDescriptor, options, callback)'
    summary: Deletes an entity within a table.
    fullName: >-
      azure-storage-legacy.TableService.deleteEntity(table, entityDescriptor,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: entityDescriptor
          type:
            - object
          description: The entity descriptor.
        - id: options
          type:
            - object
          description: The options.
          optional: true
        - id: options.checkEtag
          type:
            - boolean
          description: Boolean value indicating weather the etag should be matched or not.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                       if an error occurs; otherwise `successful` will be 
                                                                       `true` if the operation was successful.
                                                                       `response` will contain information related to this operation.
      return:
        type:
          - undefined
        description: ''
      content: 'function deleteEntity(table, entityDescriptor, options, callback)'
    children:
      - 'azure-storage-legacy.TableService#deleteEntity~options'
      - 'azure-storage-legacy.TableService#deleteEntity~self'
      - 'azure-storage-legacy.TableService#deleteEntity~path'
      - 'azure-storage-legacy.TableService#deleteEntity~webResource'
      - 'azure-storage-legacy.TableService#deleteEntity~processResponseCallback'
  - uid: 'azure-storage-legacy.TableService#_performRequestExtended'
    id: 'azure-storage-legacy.TableService#_performRequestExtended'
    parent: azure-storage-legacy.TableService
    name: _performRequestExtended()
    summary: ''
    fullName: azure-storage-legacy.TableService._performRequestExtended()
    type: Method
    syntax:
      content: function _performRequestExtended()
references:
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: azure-storage-legacy.int
    name: int
    fullName: azure-storage-legacy.int
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: undefined
    name: undefined
    fullName: undefined
    isExternal: true
  - uid: azure-storage-legacy.TableQuery
    name: TableQuery
    fullName: azure-storage-legacy.TableQuery
    isExternal: false
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
