### YamlMime:JavaScriptReference
items:
  - uid: azure-storage-legacy.QueueService
    id: azure-storage-legacy.QueueService
    name: QueueService
    summary: >-
      The QueueService class is used to perform operations on the Microsoft
      Azure Queue Service.


      For more information on using the Queue Service, as well as task focused
      information on using it from a Node.js application, see

      [How to Use the Queue Service from
      Node.js](https://www.windowsazure.com/en-us/develop/nodejs/how-to-guides/queue-service/).
    fullName: azure-storage-legacy.QueueService
    type: Class
    children:
      - 'azure-storage-legacy.QueueService.#ctor'
      - azure-storage-legacy.QueueService~storageServiceSettings
      - 'azure-storage-legacy.QueueService#authenticationProvider'
      - 'azure-storage-legacy.QueueService#getServiceProperties'
      - 'azure-storage-legacy.QueueService#setServiceProperties'
      - 'azure-storage-legacy.QueueService#listQueues'
      - 'azure-storage-legacy.QueueService#createQueue'
      - 'azure-storage-legacy.QueueService#createQueueIfNotExists'
      - 'azure-storage-legacy.QueueService#deleteQueue'
      - 'azure-storage-legacy.QueueService#getQueueMetadata'
      - 'azure-storage-legacy.QueueService#setQueueMetadata'
      - 'azure-storage-legacy.QueueService#createMessage'
      - 'azure-storage-legacy.QueueService#getMessages'
      - 'azure-storage-legacy.QueueService#peekMessages'
      - 'azure-storage-legacy.QueueService#deleteMessage'
      - 'azure-storage-legacy.QueueService#clearMessages'
      - 'azure-storage-legacy.QueueService#updateMessage'
  - id: 'azure-storage-legacy.QueueService.#ctor'
    uid: 'azure-storage-legacy.QueueService.#ctor'
    parent: azure-storage-legacy.QueueService
    name: >-
      QueueService(storageAccountOrConnectionString, storageAccessKey, host,
      authenticationProvider)
    fullName: >-
      azure-storage-legacy.QueueService.QueueService(storageAccountOrConnectionString,
      storageAccessKey, host, authenticationProvider)
    summary: >-
      Creates a new QueueService object.

      If no storageAccount or storageAccessKey are provided, the
      AZURE_STORAGE_ACCOUNT and AZURE_STORAGE_ACCESS_KEY

      environment variables will be used.
    type: Constructor
    syntax:
      parameters:
        - id: storageAccountOrConnectionString
          type:
            - string
          description: The storage account or the connection string.
          optional: true
        - id: storageAccessKey
          type:
            - string
          description: The storage access key.
          optional: true
        - id: host
          type:
            - string
          description: The host address.
          optional: true
        - id: authenticationProvider
          type:
            - object
          description: The authentication provider.
          optional: true
      content: >-
        new QueueService(storageAccountOrConnectionString, storageAccessKey,
        host, authenticationProvider)
  - uid: azure-storage-legacy.QueueService~storageServiceSettings
    id: azure-storage-legacy.QueueService~storageServiceSettings
    parent: azure-storage-legacy.QueueService
    name: storageServiceSettings
    summary: ''
    fullName: azure-storage-legacy.QueueService.storageServiceSettings
    type: Field
    syntax:
      content: storageServiceSettings
  - uid: 'azure-storage-legacy.QueueService#authenticationProvider'
    id: 'azure-storage-legacy.QueueService#authenticationProvider'
    parent: azure-storage-legacy.QueueService
    name: authenticationProvider
    summary: ''
    fullName: azure-storage-legacy.QueueService.authenticationProvider
    type: Field
    syntax:
      content: authenticationProvider
  - uid: 'azure-storage-legacy.QueueService#getServiceProperties'
    id: 'azure-storage-legacy.QueueService#getServiceProperties'
    parent: azure-storage-legacy.QueueService
    name: 'getServiceProperties(options, callback)'
    summary: >-
      Gets the properties of a storage account’s Queue service, including
      Microsoft Azure Storage Analytics.
    fullName: 'azure-storage-legacy.QueueService.getServiceProperties(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                                 if an error occurs; otherwise, `serviceProperties`
                                                                                 will contain the properties and `response`
                                                                                 will contain information related to this operation.
      content: 'function getServiceProperties(options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#getServiceProperties~options'
      - 'azure-storage-legacy.QueueService#getServiceProperties~webResource'
      - >-
        azure-storage-legacy.QueueService#getServiceProperties~processResponseCallback
  - uid: 'azure-storage-legacy.QueueService#setServiceProperties'
    id: 'azure-storage-legacy.QueueService#setServiceProperties'
    parent: azure-storage-legacy.QueueService
    name: 'setServiceProperties(serviceProperties, options, callback)'
    summary: >-
      Sets the properties of a storage account’s Queue service, including
      Microsoft Azure Storage Analytics.

      You can also use this operation to set the default request version for all
      incoming requests that do not have a version specified.
    fullName: >-
      azure-storage-legacy.QueueService.setServiceProperties(serviceProperties,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: serviceProperties
          type:
            - object
          description: The service properties.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                                 if an error occurs; otherwise, `response`
                                                                                 will contain information related to this operation.
      content: 'function setServiceProperties(serviceProperties, options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#setServiceProperties~options'
      - >-
        azure-storage-legacy.QueueService#setServiceProperties~servicePropertiesXml
      - 'azure-storage-legacy.QueueService#setServiceProperties~webResource'
      - >-
        azure-storage-legacy.QueueService#setServiceProperties~processResponseCallback
  - uid: 'azure-storage-legacy.QueueService#listQueues'
    id: 'azure-storage-legacy.QueueService#listQueues'
    parent: azure-storage-legacy.QueueService
    name: 'listQueues(options, callback)'
    summary: Lists all queues under the given account.
    fullName: 'azure-storage-legacy.QueueService.listQueues(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: The listing and request options.
          optional: true
        - id: options.prefix
          type:
            - string
          description: >-
            Filters the results to return only queues whose name begins with the
            specified prefix.
          optional: true
        - id: options.marker
          type:
            - string
          description: >-
            String value that identifies the portion of the list to be returned
            with the next list operation.
          optional: true
        - id: options.maxresults
          type:
            - azure-storage-legacy.int
          description: >-
            Specifies the maximum number of queues to return per call to Azure
            storage. This does NOT affect list size returned by this function.
            (maximum: 5000)
          optional: true
        - id: options.include
          type:
            - string
          description: >-
            Include this parameter to specify that the queue's metadata be
            returned as part of the response body. (allowed values: '',
            'metadata')
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                                    if an error occurs; otherwise `queueResults` will contain a list of
                                                                                    queue objects,
                                                                                    and `response` will contain information related to this operation.
                                                                                    If not all queue information could be retrieved,
                                                                                    `nextMarker` will contain a value that can be used
                                                                                    to retrieve the next section of the queue list.
      content: 'function listQueues(options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#listQueues~options'
      - 'azure-storage-legacy.QueueService#listQueues~webResource'
      - 'azure-storage-legacy.QueueService#listQueues~self'
      - 'azure-storage-legacy.QueueService#listQueues~processResponseCallback'
  - uid: 'azure-storage-legacy.QueueService#createQueue'
    id: 'azure-storage-legacy.QueueService#createQueue'
    parent: azure-storage-legacy.QueueService
    name: 'createQueue(queue, options, callback)'
    summary: Creates a new queue under the given account.
    fullName: 'azure-storage-legacy.QueueService.createQueue(queue, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: queue
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: The create and request options.
          optional: true
        - id: options.metadata
          type:
            - object
          description: The metadata key/value pairs.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                          if an error occurs; otherwise `queueResult` will contain
                                                                          the queue information.
                                                                          `response` will contain information related to this operation.
      content: 'function createQueue(queue, options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#createQueue~options'
      - 'azure-storage-legacy.QueueService#createQueue~webResource'
      - 'azure-storage-legacy.QueueService#createQueue~processResponseCallback'
  - uid: 'azure-storage-legacy.QueueService#createQueueIfNotExists'
    id: 'azure-storage-legacy.QueueService#createQueueIfNotExists'
    parent: azure-storage-legacy.QueueService
    name: 'createQueueIfNotExists(queue, options, callback)'
    summary: Creates a new queue under the given account if it doesn't exist.
    fullName: >-
      azure-storage-legacy.QueueService.createQueueIfNotExists(queue, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: queue
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: The create and request options.
          optional: true
        - id: options.metadata
          type:
            - object
          description: The metadata key/value pairs.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                          if an error occurs; otherwise `queueCreated` will contain
                                                                          the queue information.
                                                                          `response` will contain information related to this operation.
      content: 'function createQueueIfNotExists(queue, options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#createQueueIfNotExists~options'
      - 'azure-storage-legacy.QueueService#createQueueIfNotExists~webResource'
      - >-
        azure-storage-legacy.QueueService#createQueueIfNotExists~processResponseCallback
  - uid: 'azure-storage-legacy.QueueService#deleteQueue'
    id: 'azure-storage-legacy.QueueService#deleteQueue'
    parent: azure-storage-legacy.QueueService
    name: 'deleteQueue(queue, options, callback)'
    summary: Permanently deletes the specified queue.
    fullName: 'azure-storage-legacy.QueueService.deleteQueue(queue, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: queue
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: The delete and request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                          if an error occurs; otherwise `deleted` will contain
                                                                          `true` if the operation was successful.
                                                                          `response` will contain information related to this operation.
      content: 'function deleteQueue(queue, options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#deleteQueue~options'
      - 'azure-storage-legacy.QueueService#deleteQueue~webResource'
      - 'azure-storage-legacy.QueueService#deleteQueue~processResponseCallback'
  - uid: 'azure-storage-legacy.QueueService#getQueueMetadata'
    id: 'azure-storage-legacy.QueueService#getQueueMetadata'
    parent: azure-storage-legacy.QueueService
    name: 'getQueueMetadata(queue, options, callback)'
    summary: 'Returns queue properties, including user-defined metadata.'
    fullName: >-
      azure-storage-legacy.QueueService.getQueueMetadata(queue, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: queue
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: The get and request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                          if an error occurs; otherwise `queueResult` will contain
                                                                          the queue information.
                                                                          `response` will contain information related to this operation.
      content: 'function getQueueMetadata(queue, options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#getQueueMetadata~options'
      - 'azure-storage-legacy.QueueService#getQueueMetadata~webResource'
      - 'azure-storage-legacy.QueueService#getQueueMetadata~self'
      - >-
        azure-storage-legacy.QueueService#getQueueMetadata~processResponseCallback
  - uid: 'azure-storage-legacy.QueueService#setQueueMetadata'
    id: 'azure-storage-legacy.QueueService#setQueueMetadata'
    parent: azure-storage-legacy.QueueService
    name: 'setQueueMetadata(queue, metadata, options, callback)'
    summary: >-
      Sets user-defined metadata on the specified queue. Metadata is associated
      with the queue as name-value pairs.
    fullName: >-
      azure-storage-legacy.QueueService.setQueueMetadata(queue, metadata,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: queue
          type:
            - string
          description: The queue name.
        - id: metadata
          type:
            - object
          description: The metadata key/value pairs.
        - id: options
          type:
            - object
          description: The set and request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                          if an error occurs; otherwise `queueResult` will contain
                                                                          the queue information.
                                                                          `response` will contain information related to this operation.
      content: 'function setQueueMetadata(queue, metadata, options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#setQueueMetadata~options'
      - 'azure-storage-legacy.QueueService#setQueueMetadata~webResource'
      - >-
        azure-storage-legacy.QueueService#setQueueMetadata~processResponseCallback
  - uid: 'azure-storage-legacy.QueueService#createMessage'
    id: 'azure-storage-legacy.QueueService#createMessage'
    parent: azure-storage-legacy.QueueService
    name: 'createMessage(queue, messageText, options, callback)'
    summary: >-
      Adds a new message to the back of the message queue. A visibility timeout
      can also be specified to make the message

      invisible until the visibility timeout expires. A message must be in a
      format that can be included in an XML request

      with UTF-8 encoding. The encoded message can be up to 64KB in size for
      versions 2011-08-18 and newer, or 8KB in size

      for previous versions.
    fullName: >-
      azure-storage-legacy.QueueService.createMessage(queue, messageText,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: queue
          type:
            - string
          description: The queue name.
        - id: messageText
          type:
            - object
          description: The message text.
        - id: options
          type:
            - object
          description: The put and request options.
          optional: true
        - id: options.messagettl
          type:
            - azure-storage-legacy.int
          description: >-
            The time-to-live interval for the message, in seconds. The maximum
            time-to-live allowed is 7 days. If this parameter is omitted, the
            default time-to-live is 7 days
          optional: true
        - id: options.visibilitytimeout
          type:
            - azure-storage-legacy.int
          description: >-
            Specifies the new visibility timeout value, in seconds, relative to
            server time. The new value must be larger than or equal to 0, and
            cannot be larger than 7 days. The visibility timeout of a message
            cannot be set to a value later than the expiry time.
            visibilitytimeout should be set to a value smaller than the
            time-to-live value.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                                    if an error occurs; otherwise `queueMessageResult` will contain
                                                                                    the result.
                                                                                    `response` will contain information related to this operation.
      content: 'function createMessage(queue, messageText, options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#createMessage~options'
      - 'azure-storage-legacy.QueueService#createMessage~xmlMessageDescriptor'
      - 'azure-storage-legacy.QueueService#createMessage~webResource'
      - 'azure-storage-legacy.QueueService#createMessage~processResponseCallback'
  - uid: 'azure-storage-legacy.QueueService#getMessages'
    id: 'azure-storage-legacy.QueueService#getMessages'
    parent: azure-storage-legacy.QueueService
    name: 'getMessages(queue, options, callback)'
    summary: >-
      Retrieves a message from the queue and makes it invisible to other
      consumers.
    fullName: 'azure-storage-legacy.QueueService.getMessages(queue, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: queue
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: The get and request options.
          optional: true
        - id: options.numofmessages
          type:
            - azure-storage-legacy.int
          description: >-
            A nonzero integer value that specifies the number of messages to
            retrieve from the queue, up to a maximum of 32. By default, a single
            message is retrieved from the queue with this operation.
          optional: true
        - id: options.peekonly
          type:
            - azure-storage-legacy.bool
          description: >-
            Boolean value indicating wether the visibility of the message should
            be changed or not.
          optional: true
        - id: options.visibilitytimeout
          type:
            - azure-storage-legacy.int
          description: >-
            Required if not peek only. Specifies the new visibility timeout
            value, in seconds, relative to server time. The new value must be
            larger than or equal to 0, and cannot be larger than 7 days. The
            visibility timeout of a message can be set to a value later than the
            expiry time.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                                    if an error occurs; otherwise `queueMessageResults` will contain
                                                                                    the message.
                                                                                    `response` will contain information related to this operation.
      content: 'function getMessages(queue, options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#getMessages~options'
      - 'azure-storage-legacy.QueueService#getMessages~webResource'
      - 'azure-storage-legacy.QueueService#getMessages~processResponseCallback'
  - uid: 'azure-storage-legacy.QueueService#peekMessages'
    id: 'azure-storage-legacy.QueueService#peekMessages'
    parent: azure-storage-legacy.QueueService
    name: 'peekMessages(queue, options, callback)'
    summary: >-
      Retrieves a message from the front of the queue, without changing the
      message visibility.
    fullName: 'azure-storage-legacy.QueueService.peekMessages(queue, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: queue
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: The peek and request options.
          optional: true
        - id: options.numofmessages
          type:
            - azure-storage-legacy.int
          description: >-
            A nonzero integer value that specifies the number of messages to
            retrieve from the queue, up to a maximum of 32. By default, a single
            message is retrieved from the queue with this operation.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                                    if an error occurs; otherwise `queueMessageResults` will contain
                                                                                    the message.
                                                                                    `response` will contain information related to this operation.
      content: 'function peekMessages(queue, options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#peekMessages~options'
      - 'azure-storage-legacy.QueueService#peekMessages~options'
  - uid: 'azure-storage-legacy.QueueService#deleteMessage'
    id: 'azure-storage-legacy.QueueService#deleteMessage'
    parent: azure-storage-legacy.QueueService
    name: 'deleteMessage(queue, messageid, popreceipt, options, callback)'
    summary: Deletes a specified message from the queue.
    fullName: >-
      azure-storage-legacy.QueueService.deleteMessage(queue, messageid,
      popreceipt, options, callback)
    type: Method
    syntax:
      parameters:
        - id: queue
          type:
            - string
          description: The queue name.
        - id: messageid
          type:
            - string
          description: The message identifier of the message to delete.
        - id: popreceipt
          type:
            - string
          description: >-
            A valid pop receipt value returned from an earlier call to the Get
            Messages or Update Message operation
        - id: options
          type:
            - object
          description: The delete and request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                          if an error occurs; otherwise `successful` will contain
                                                                          `true` if the operation was successful.
                                                                          `response` will contain information related to this operation.
      content: 'function deleteMessage(queue, messageid, popreceipt, options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#deleteMessage~options'
      - 'azure-storage-legacy.QueueService#deleteMessage~webResource'
      - 'azure-storage-legacy.QueueService#deleteMessage~processResponseCallback'
  - uid: 'azure-storage-legacy.QueueService#clearMessages'
    id: 'azure-storage-legacy.QueueService#clearMessages'
    parent: azure-storage-legacy.QueueService
    name: 'clearMessages(queue, options, callback)'
    summary: Clears all messages from the queue.
    fullName: 'azure-storage-legacy.QueueService.clearMessages(queue, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: queue
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: The delete and request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                          if an error occurs; otherwise 
                                                                          `response` will contain information related to this operation.
      content: 'function clearMessages(queue, options, callback)'
    children:
      - 'azure-storage-legacy.QueueService#clearMessages~options'
      - 'azure-storage-legacy.QueueService#clearMessages~webResource'
      - 'azure-storage-legacy.QueueService#clearMessages~processResponseCallback'
  - uid: 'azure-storage-legacy.QueueService#updateMessage'
    id: 'azure-storage-legacy.QueueService#updateMessage'
    parent: azure-storage-legacy.QueueService
    name: >-
      updateMessage(queue, messageid, popreceipt, visibilitytimeout, options,
      callback)
    summary: >-
      Updates the visibility timeout of a message. You can also use this
      operation to update the contents of a message.

      A message must be in a format that can be included in an XML request with
      UTF-8 encoding, and the encoded message can be up to 64KB in size.
    fullName: >-
      azure-storage-legacy.QueueService.updateMessage(queue, messageid,
      popreceipt, visibilitytimeout, options, callback)
    type: Method
    syntax:
      parameters:
        - id: queue
          type:
            - string
          description: The queue name.
        - id: messageid
          type:
            - string
          description: The message identifier of the message to update.
        - id: popreceipt
          type:
            - string
          description: >-
            A valid pop receipt value returned from an earlier call to the Get
            Messages or Update Message operation
        - id: visibilitytimeout
          type:
            - azure-storage-legacy.int
          description: >-
            Specifies the new visibility timeout value, in seconds, relative to
            server time. The new value must be larger than or equal to 0, and
            cannot be larger than 7 days. The visibility timeout of a message
            can be set to a value later than the expiry time.
        - id: options
          type:
            - object
          description: The delete and request options.
          optional: true
        - id: options.messagetext
          type:
            - object
          description: The new message text.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage-legacy.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: |-
            `error` will contain information
                                                                                    if an error occurs; otherwise `queueMessageResult` will contain
                                                                                    the message result information.
                                                                                    `response` will contain information related to this operation.
      content: >-
        function updateMessage(queue, messageid, popreceipt, visibilitytimeout,
        options, callback)
    children:
      - 'azure-storage-legacy.QueueService#updateMessage~options'
      - 'azure-storage-legacy.QueueService#updateMessage~content'
      - 'azure-storage-legacy.QueueService#updateMessage~content'
      - 'azure-storage-legacy.QueueService#updateMessage~contentLength'
      - 'azure-storage-legacy.QueueService#updateMessage~webResource'
      - 'azure-storage-legacy.QueueService#updateMessage~processResponseCallback'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: azure-storage-legacy.int
    name: int
    fullName: azure-storage-legacy.int
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: azure-storage-legacy.bool
    name: bool
    fullName: azure-storage-legacy.bool
    isExternal: true
