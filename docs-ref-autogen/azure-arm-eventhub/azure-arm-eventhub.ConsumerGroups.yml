### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-eventhub.ConsumerGroups
    id: azure-arm-eventhub.ConsumerGroups
    name: ConsumerGroups
    summary: ''
    fullName: azure-arm-eventhub.ConsumerGroups
    type: Class
    children:
      - 'azure-arm-eventhub.ConsumerGroups.#ctor'
      - 'azure-arm-eventhub.ConsumerGroups#client'
      - 'azure-arm-eventhub.ConsumerGroups#_createOrUpdate'
      - 'azure-arm-eventhub.ConsumerGroups#_deleteMethod'
      - 'azure-arm-eventhub.ConsumerGroups#_get'
      - 'azure-arm-eventhub.ConsumerGroups#_listByEventHub'
      - 'azure-arm-eventhub.ConsumerGroups#_listByEventHubNext'
      - >-
        azure-arm-eventhub.ConsumerGroups#createOrUpdateWithHttpOperationResponse
      - 'azure-arm-eventhub.ConsumerGroups#createOrUpdate'
      - 'azure-arm-eventhub.ConsumerGroups#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-eventhub.ConsumerGroups#deleteMethod'
      - 'azure-arm-eventhub.ConsumerGroups#getWithHttpOperationResponse'
      - 'azure-arm-eventhub.ConsumerGroups#get'
      - >-
        azure-arm-eventhub.ConsumerGroups#listByEventHubWithHttpOperationResponse
      - 'azure-arm-eventhub.ConsumerGroups#listByEventHub'
      - >-
        azure-arm-eventhub.ConsumerGroups#listByEventHubNextWithHttpOperationResponse
      - 'azure-arm-eventhub.ConsumerGroups#listByEventHubNext'
  - id: 'azure-arm-eventhub.ConsumerGroups.#ctor'
    uid: 'azure-arm-eventhub.ConsumerGroups.#ctor'
    parent: azure-arm-eventhub.ConsumerGroups
    name: ConsumerGroups()
    fullName: azure-arm-eventhub.ConsumerGroups.ConsumerGroups()
    summary: ''
    type: Constructor
    syntax:
      content: new ConsumerGroups()
  - uid: 'azure-arm-eventhub.ConsumerGroups#client'
    id: 'azure-arm-eventhub.ConsumerGroups#client'
    parent: azure-arm-eventhub.ConsumerGroups
    name: client
    summary: ''
    fullName: azure-arm-eventhub.ConsumerGroups.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-eventhub.ConsumerGroups#_createOrUpdate'
    id: 'azure-arm-eventhub.ConsumerGroups#_createOrUpdate'
    parent: azure-arm-eventhub.ConsumerGroups
    name: _createOrUpdate
    summary: ''
    fullName: azure-arm-eventhub.ConsumerGroups._createOrUpdate
    type: Field
    syntax:
      content: _createOrUpdate
  - uid: 'azure-arm-eventhub.ConsumerGroups#_deleteMethod'
    id: 'azure-arm-eventhub.ConsumerGroups#_deleteMethod'
    parent: azure-arm-eventhub.ConsumerGroups
    name: _deleteMethod
    summary: ''
    fullName: azure-arm-eventhub.ConsumerGroups._deleteMethod
    type: Field
    syntax:
      content: _deleteMethod
  - uid: 'azure-arm-eventhub.ConsumerGroups#_get'
    id: 'azure-arm-eventhub.ConsumerGroups#_get'
    parent: azure-arm-eventhub.ConsumerGroups
    name: _get
    summary: ''
    fullName: azure-arm-eventhub.ConsumerGroups._get
    type: Field
    syntax:
      content: _get
  - uid: 'azure-arm-eventhub.ConsumerGroups#_listByEventHub'
    id: 'azure-arm-eventhub.ConsumerGroups#_listByEventHub'
    parent: azure-arm-eventhub.ConsumerGroups
    name: _listByEventHub
    summary: ''
    fullName: azure-arm-eventhub.ConsumerGroups._listByEventHub
    type: Field
    syntax:
      content: _listByEventHub
  - uid: 'azure-arm-eventhub.ConsumerGroups#_listByEventHubNext'
    id: 'azure-arm-eventhub.ConsumerGroups#_listByEventHubNext'
    parent: azure-arm-eventhub.ConsumerGroups
    name: _listByEventHubNext
    summary: ''
    fullName: azure-arm-eventhub.ConsumerGroups._listByEventHubNext
    type: Field
    syntax:
      content: _listByEventHubNext
  - uid: 'azure-arm-eventhub.ConsumerGroups#createOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-eventhub.ConsumerGroups#createOrUpdateWithHttpOperationResponse'
    parent: azure-arm-eventhub.ConsumerGroups
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, namespaceName,
      eventHubName, consumerGroupName, parameters, options)
    summary: >-
      Creates or updates an Event Hubs consumer group as a nested resource
      within

      a namespace.
    fullName: >-
      azure-arm-eventhub.ConsumerGroups.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      namespaceName, eventHubName, consumerGroupName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: eventHubName
          type:
            - string
          description: The eventhub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to create a consumer group
            resource.
        - id: parameters.userMetadata
          type:
            - string
          description: >-
            Usermetadata is a placeholder to

            store user-defined string data with maximum length 1024. e.g. it can
            be used

            to store descriptive data, such as list of teams and their contact

            information also user-defined configuration settings can be stored.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        namespaceName, eventHubName, consumerGroupName, parameters, options)
  - uid: 'azure-arm-eventhub.ConsumerGroups#createOrUpdate'
    id: 'azure-arm-eventhub.ConsumerGroups#createOrUpdate'
    parent: azure-arm-eventhub.ConsumerGroups
    name: >-
      createOrUpdate(resourceGroupName, namespaceName, eventHubName,
      consumerGroupName, parameters, options, optionalCallback)
    summary: >-
      Creates or updates an Event Hubs consumer group as a nested resource
      within

      a namespace.
    fullName: >-
      azure-arm-eventhub.ConsumerGroups.createOrUpdate(resourceGroupName,
      namespaceName, eventHubName, consumerGroupName, parameters, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: eventHubName
          type:
            - string
          description: The eventhub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to create a consumer group
            resource.
        - id: parameters.userMetadata
          type:
            - string
          description: >-
            Usermetadata is a placeholder to

            store user-defined string data with maximum length 1024. e.g. it can
            be used

            to store descriptive data, such as list of teams and their contact

            information also user-defined configuration settings can be stored.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, namespaceName, eventHubName,
        consumerGroupName, parameters, options, optionalCallback)
  - uid: 'azure-arm-eventhub.ConsumerGroups#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-eventhub.ConsumerGroups#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-eventhub.ConsumerGroups
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, namespaceName,
      eventHubName, consumerGroupName, options)
    summary: Deletes a consumer group from the specified Event Hub and resource group.
    fullName: >-
      azure-arm-eventhub.ConsumerGroups.deleteMethodWithHttpOperationResponse(resourceGroupName,
      namespaceName, eventHubName, consumerGroupName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: eventHubName
          type:
            - string
          description: The eventhub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        namespaceName, eventHubName, consumerGroupName, options)
  - uid: 'azure-arm-eventhub.ConsumerGroups#deleteMethod'
    id: 'azure-arm-eventhub.ConsumerGroups#deleteMethod'
    parent: azure-arm-eventhub.ConsumerGroups
    name: >-
      deleteMethod(resourceGroupName, namespaceName, eventHubName,
      consumerGroupName, options, optionalCallback)
    summary: Deletes a consumer group from the specified Event Hub and resource group.
    fullName: >-
      azure-arm-eventhub.ConsumerGroups.deleteMethod(resourceGroupName,
      namespaceName, eventHubName, consumerGroupName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: eventHubName
          type:
            - string
          description: The eventhub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, namespaceName, eventHubName,
        consumerGroupName, options, optionalCallback)
  - uid: 'azure-arm-eventhub.ConsumerGroups#getWithHttpOperationResponse'
    id: 'azure-arm-eventhub.ConsumerGroups#getWithHttpOperationResponse'
    parent: azure-arm-eventhub.ConsumerGroups
    name: >-
      getWithHttpOperationResponse(resourceGroupName, namespaceName,
      eventHubName, consumerGroupName, options)
    summary: Gets a description for the specified consumer group.
    fullName: >-
      azure-arm-eventhub.ConsumerGroups.getWithHttpOperationResponse(resourceGroupName,
      namespaceName, eventHubName, consumerGroupName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: eventHubName
          type:
            - string
          description: The eventhub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, namespaceName,
        eventHubName, consumerGroupName, options)
  - uid: 'azure-arm-eventhub.ConsumerGroups#get'
    id: 'azure-arm-eventhub.ConsumerGroups#get'
    parent: azure-arm-eventhub.ConsumerGroups
    name: >-
      get(resourceGroupName, namespaceName, eventHubName, consumerGroupName,
      options, optionalCallback)
    summary: Gets a description for the specified consumer group.
    fullName: >-
      azure-arm-eventhub.ConsumerGroups.get(resourceGroupName, namespaceName,
      eventHubName, consumerGroupName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: eventHubName
          type:
            - string
          description: The eventhub name
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, namespaceName, eventHubName,
        consumerGroupName, options, optionalCallback)
  - uid: 'azure-arm-eventhub.ConsumerGroups#listByEventHubWithHttpOperationResponse'
    id: 'azure-arm-eventhub.ConsumerGroups#listByEventHubWithHttpOperationResponse'
    parent: azure-arm-eventhub.ConsumerGroups
    name: >-
      listByEventHubWithHttpOperationResponse(resourceGroupName, namespaceName,
      eventHubName, options)
    summary: >-
      Gets all the consumer groups in a eventhub. An empty feed is returned if
      no

      consumer group exists in the eventhub.
    fullName: >-
      azure-arm-eventhub.ConsumerGroups.listByEventHubWithHttpOperationResponse(resourceGroupName,
      namespaceName, eventHubName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: eventHubName
          type:
            - string
          description: The eventhub name
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByEventHubWithHttpOperationResponse(resourceGroupName,
        namespaceName, eventHubName, options)
  - uid: 'azure-arm-eventhub.ConsumerGroups#listByEventHub'
    id: 'azure-arm-eventhub.ConsumerGroups#listByEventHub'
    parent: azure-arm-eventhub.ConsumerGroups
    name: >-
      listByEventHub(resourceGroupName, namespaceName, eventHubName, options,
      optionalCallback)
    summary: >-
      Gets all the consumer groups in a eventhub. An empty feed is returned if
      no

      consumer group exists in the eventhub.
    fullName: >-
      azure-arm-eventhub.ConsumerGroups.listByEventHub(resourceGroupName,
      namespaceName, eventHubName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: eventHubName
          type:
            - string
          description: The eventhub name
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByEventHub(resourceGroupName, namespaceName, eventHubName,
        options, optionalCallback)
  - uid: >-
      azure-arm-eventhub.ConsumerGroups#listByEventHubNextWithHttpOperationResponse
    id: >-
      azure-arm-eventhub.ConsumerGroups#listByEventHubNextWithHttpOperationResponse
    parent: azure-arm-eventhub.ConsumerGroups
    name: 'listByEventHubNextWithHttpOperationResponse(nextPageLink, options)'
    summary: >-
      Gets all the consumer groups in a eventhub. An empty feed is returned if
      no

      consumer group exists in the eventhub.
    fullName: >-
      azure-arm-eventhub.ConsumerGroups.listByEventHubNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByEventHubNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-eventhub.ConsumerGroups#listByEventHubNext'
    id: 'azure-arm-eventhub.ConsumerGroups#listByEventHubNext'
    parent: azure-arm-eventhub.ConsumerGroups
    name: 'listByEventHubNext(nextPageLink, options, optionalCallback)'
    summary: >-
      Gets all the consumer groups in a eventhub. An empty feed is returned if
      no

      consumer group exists in the eventhub.
    fullName: >-
      azure-arm-eventhub.ConsumerGroups.listByEventHubNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listByEventHubNext(nextPageLink, options, optionalCallback)'
references:
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: Promise
    name: Promise
    fullName: Promise
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
