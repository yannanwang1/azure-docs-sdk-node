### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-network.NetworkWatchers
    id: azure-arm-network.NetworkWatchers
    name: NetworkWatchers
    summary: ''
    fullName: azure-arm-network.NetworkWatchers
    type: Class
    children:
      - 'azure-arm-network.NetworkWatchers.#ctor'
      - 'azure-arm-network.NetworkWatchers#client'
      - 'azure-arm-network.NetworkWatchers#_createOrUpdate'
      - 'azure-arm-network.NetworkWatchers#_get'
      - 'azure-arm-network.NetworkWatchers#_deleteMethod'
      - 'azure-arm-network.NetworkWatchers#_list'
      - 'azure-arm-network.NetworkWatchers#_listAll'
      - 'azure-arm-network.NetworkWatchers#_getTopology'
      - 'azure-arm-network.NetworkWatchers#_verifyIPFlow'
      - 'azure-arm-network.NetworkWatchers#_getNextHop'
      - 'azure-arm-network.NetworkWatchers#_getVMSecurityRules'
      - 'azure-arm-network.NetworkWatchers#_getTroubleshooting'
      - 'azure-arm-network.NetworkWatchers#_getTroubleshootingResult'
      - 'azure-arm-network.NetworkWatchers#_setFlowLogConfiguration'
      - 'azure-arm-network.NetworkWatchers#_getFlowLogStatus'
      - 'azure-arm-network.NetworkWatchers#_beginDeleteMethod'
      - 'azure-arm-network.NetworkWatchers#_beginVerifyIPFlow'
      - 'azure-arm-network.NetworkWatchers#_beginGetNextHop'
      - 'azure-arm-network.NetworkWatchers#_beginGetVMSecurityRules'
      - 'azure-arm-network.NetworkWatchers#_beginGetTroubleshooting'
      - 'azure-arm-network.NetworkWatchers#_beginGetTroubleshootingResult'
      - 'azure-arm-network.NetworkWatchers#_beginSetFlowLogConfiguration'
      - 'azure-arm-network.NetworkWatchers#_beginGetFlowLogStatus'
      - >-
        azure-arm-network.NetworkWatchers#createOrUpdateWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#createOrUpdate'
      - 'azure-arm-network.NetworkWatchers#getWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#get'
      - 'azure-arm-network.NetworkWatchers#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#deleteMethod'
      - 'azure-arm-network.NetworkWatchers#listWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#list'
      - 'azure-arm-network.NetworkWatchers#listAllWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#listAll'
      - 'azure-arm-network.NetworkWatchers#getTopologyWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#getTopology'
      - 'azure-arm-network.NetworkWatchers#verifyIPFlowWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#verifyIPFlow'
      - 'azure-arm-network.NetworkWatchers#getNextHopWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#getNextHop'
      - >-
        azure-arm-network.NetworkWatchers#getVMSecurityRulesWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#getVMSecurityRules'
      - >-
        azure-arm-network.NetworkWatchers#getTroubleshootingWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#getTroubleshooting'
      - >-
        azure-arm-network.NetworkWatchers#getTroubleshootingResultWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#getTroubleshootingResult'
      - >-
        azure-arm-network.NetworkWatchers#setFlowLogConfigurationWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#setFlowLogConfiguration'
      - >-
        azure-arm-network.NetworkWatchers#getFlowLogStatusWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#getFlowLogStatus'
      - >-
        azure-arm-network.NetworkWatchers#beginDeleteMethodWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginDeleteMethod'
      - >-
        azure-arm-network.NetworkWatchers#beginVerifyIPFlowWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginVerifyIPFlow'
      - >-
        azure-arm-network.NetworkWatchers#beginGetNextHopWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginGetNextHop'
      - >-
        azure-arm-network.NetworkWatchers#beginGetVMSecurityRulesWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginGetVMSecurityRules'
      - >-
        azure-arm-network.NetworkWatchers#beginGetTroubleshootingWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginGetTroubleshooting'
      - >-
        azure-arm-network.NetworkWatchers#beginGetTroubleshootingResultWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginGetTroubleshootingResult'
      - >-
        azure-arm-network.NetworkWatchers#beginSetFlowLogConfigurationWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginSetFlowLogConfiguration'
      - >-
        azure-arm-network.NetworkWatchers#beginGetFlowLogStatusWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginGetFlowLogStatus'
  - id: 'azure-arm-network.NetworkWatchers.#ctor'
    uid: 'azure-arm-network.NetworkWatchers.#ctor'
    parent: azure-arm-network.NetworkWatchers
    name: NetworkWatchers()
    fullName: azure-arm-network.NetworkWatchers.NetworkWatchers()
    summary: ''
    type: Constructor
    syntax:
      content: new NetworkWatchers()
  - uid: 'azure-arm-network.NetworkWatchers#client'
    id: 'azure-arm-network.NetworkWatchers#client'
    parent: azure-arm-network.NetworkWatchers
    name: client
    summary: ''
    fullName: azure-arm-network.NetworkWatchers.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-network.NetworkWatchers#_createOrUpdate'
    id: 'azure-arm-network.NetworkWatchers#_createOrUpdate'
    parent: azure-arm-network.NetworkWatchers
    name: _createOrUpdate
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._createOrUpdate
    type: Field
    syntax:
      content: _createOrUpdate
  - uid: 'azure-arm-network.NetworkWatchers#_get'
    id: 'azure-arm-network.NetworkWatchers#_get'
    parent: azure-arm-network.NetworkWatchers
    name: _get
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._get
    type: Field
    syntax:
      content: _get
  - uid: 'azure-arm-network.NetworkWatchers#_deleteMethod'
    id: 'azure-arm-network.NetworkWatchers#_deleteMethod'
    parent: azure-arm-network.NetworkWatchers
    name: _deleteMethod
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._deleteMethod
    type: Field
    syntax:
      content: _deleteMethod
  - uid: 'azure-arm-network.NetworkWatchers#_list'
    id: 'azure-arm-network.NetworkWatchers#_list'
    parent: azure-arm-network.NetworkWatchers
    name: _list
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._list
    type: Field
    syntax:
      content: _list
  - uid: 'azure-arm-network.NetworkWatchers#_listAll'
    id: 'azure-arm-network.NetworkWatchers#_listAll'
    parent: azure-arm-network.NetworkWatchers
    name: _listAll
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._listAll
    type: Field
    syntax:
      content: _listAll
  - uid: 'azure-arm-network.NetworkWatchers#_getTopology'
    id: 'azure-arm-network.NetworkWatchers#_getTopology'
    parent: azure-arm-network.NetworkWatchers
    name: _getTopology
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._getTopology
    type: Field
    syntax:
      content: _getTopology
  - uid: 'azure-arm-network.NetworkWatchers#_verifyIPFlow'
    id: 'azure-arm-network.NetworkWatchers#_verifyIPFlow'
    parent: azure-arm-network.NetworkWatchers
    name: _verifyIPFlow
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._verifyIPFlow
    type: Field
    syntax:
      content: _verifyIPFlow
  - uid: 'azure-arm-network.NetworkWatchers#_getNextHop'
    id: 'azure-arm-network.NetworkWatchers#_getNextHop'
    parent: azure-arm-network.NetworkWatchers
    name: _getNextHop
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._getNextHop
    type: Field
    syntax:
      content: _getNextHop
  - uid: 'azure-arm-network.NetworkWatchers#_getVMSecurityRules'
    id: 'azure-arm-network.NetworkWatchers#_getVMSecurityRules'
    parent: azure-arm-network.NetworkWatchers
    name: _getVMSecurityRules
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._getVMSecurityRules
    type: Field
    syntax:
      content: _getVMSecurityRules
  - uid: 'azure-arm-network.NetworkWatchers#_getTroubleshooting'
    id: 'azure-arm-network.NetworkWatchers#_getTroubleshooting'
    parent: azure-arm-network.NetworkWatchers
    name: _getTroubleshooting
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._getTroubleshooting
    type: Field
    syntax:
      content: _getTroubleshooting
  - uid: 'azure-arm-network.NetworkWatchers#_getTroubleshootingResult'
    id: 'azure-arm-network.NetworkWatchers#_getTroubleshootingResult'
    parent: azure-arm-network.NetworkWatchers
    name: _getTroubleshootingResult
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._getTroubleshootingResult
    type: Field
    syntax:
      content: _getTroubleshootingResult
  - uid: 'azure-arm-network.NetworkWatchers#_setFlowLogConfiguration'
    id: 'azure-arm-network.NetworkWatchers#_setFlowLogConfiguration'
    parent: azure-arm-network.NetworkWatchers
    name: _setFlowLogConfiguration
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._setFlowLogConfiguration
    type: Field
    syntax:
      content: _setFlowLogConfiguration
  - uid: 'azure-arm-network.NetworkWatchers#_getFlowLogStatus'
    id: 'azure-arm-network.NetworkWatchers#_getFlowLogStatus'
    parent: azure-arm-network.NetworkWatchers
    name: _getFlowLogStatus
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._getFlowLogStatus
    type: Field
    syntax:
      content: _getFlowLogStatus
  - uid: 'azure-arm-network.NetworkWatchers#_beginDeleteMethod'
    id: 'azure-arm-network.NetworkWatchers#_beginDeleteMethod'
    parent: azure-arm-network.NetworkWatchers
    name: _beginDeleteMethod
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._beginDeleteMethod
    type: Field
    syntax:
      content: _beginDeleteMethod
  - uid: 'azure-arm-network.NetworkWatchers#_beginVerifyIPFlow'
    id: 'azure-arm-network.NetworkWatchers#_beginVerifyIPFlow'
    parent: azure-arm-network.NetworkWatchers
    name: _beginVerifyIPFlow
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._beginVerifyIPFlow
    type: Field
    syntax:
      content: _beginVerifyIPFlow
  - uid: 'azure-arm-network.NetworkWatchers#_beginGetNextHop'
    id: 'azure-arm-network.NetworkWatchers#_beginGetNextHop'
    parent: azure-arm-network.NetworkWatchers
    name: _beginGetNextHop
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._beginGetNextHop
    type: Field
    syntax:
      content: _beginGetNextHop
  - uid: 'azure-arm-network.NetworkWatchers#_beginGetVMSecurityRules'
    id: 'azure-arm-network.NetworkWatchers#_beginGetVMSecurityRules'
    parent: azure-arm-network.NetworkWatchers
    name: _beginGetVMSecurityRules
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._beginGetVMSecurityRules
    type: Field
    syntax:
      content: _beginGetVMSecurityRules
  - uid: 'azure-arm-network.NetworkWatchers#_beginGetTroubleshooting'
    id: 'azure-arm-network.NetworkWatchers#_beginGetTroubleshooting'
    parent: azure-arm-network.NetworkWatchers
    name: _beginGetTroubleshooting
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._beginGetTroubleshooting
    type: Field
    syntax:
      content: _beginGetTroubleshooting
  - uid: 'azure-arm-network.NetworkWatchers#_beginGetTroubleshootingResult'
    id: 'azure-arm-network.NetworkWatchers#_beginGetTroubleshootingResult'
    parent: azure-arm-network.NetworkWatchers
    name: _beginGetTroubleshootingResult
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._beginGetTroubleshootingResult
    type: Field
    syntax:
      content: _beginGetTroubleshootingResult
  - uid: 'azure-arm-network.NetworkWatchers#_beginSetFlowLogConfiguration'
    id: 'azure-arm-network.NetworkWatchers#_beginSetFlowLogConfiguration'
    parent: azure-arm-network.NetworkWatchers
    name: _beginSetFlowLogConfiguration
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._beginSetFlowLogConfiguration
    type: Field
    syntax:
      content: _beginSetFlowLogConfiguration
  - uid: 'azure-arm-network.NetworkWatchers#_beginGetFlowLogStatus'
    id: 'azure-arm-network.NetworkWatchers#_beginGetFlowLogStatus'
    parent: azure-arm-network.NetworkWatchers
    name: _beginGetFlowLogStatus
    summary: ''
    fullName: azure-arm-network.NetworkWatchers._beginGetFlowLogStatus
    type: Field
    syntax:
      content: _beginGetFlowLogStatus
  - uid: 'azure-arm-network.NetworkWatchers#createOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#createOrUpdateWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Creates or updates a network watcher in the specified resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the network watcher
            resource.
        - id: parameters.etag
          type:
            - string
          description: |-
            A unique read-only string that changes
            whenever the resource is updated.
          optional: true
        - id: parameters.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location.
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#createOrUpdate'
    id: 'azure-arm-network.NetworkWatchers#createOrUpdate'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      createOrUpdate(resourceGroupName, networkWatcherName, parameters, options,
      optionalCallback)
    summary: Creates or updates a network watcher in the specified resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.createOrUpdate(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the network watcher
            resource.
        - id: parameters.etag
          type:
            - string
          description: |-
            A unique read-only string that changes
            whenever the resource is updated.
          optional: true
        - id: parameters.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location.
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
  - uid: 'azure-arm-network.NetworkWatchers#getWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#getWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getWithHttpOperationResponse(resourceGroupName, networkWatcherName,
      options)
    summary: Gets the specified network watcher by resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.getWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, options)
  - uid: 'azure-arm-network.NetworkWatchers#get'
    id: 'azure-arm-network.NetworkWatchers#get'
    parent: azure-arm-network.NetworkWatchers
    name: 'get(resourceGroupName, networkWatcherName, options, optionalCallback)'
    summary: Gets the specified network watcher by resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.get(resourceGroupName,
      networkWatcherName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, networkWatcherName, options,
        optionalCallback)
  - uid: 'azure-arm-network.NetworkWatchers#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, options)
    summary: Deletes the specified network watcher resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.deleteMethodWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, options)
  - uid: 'azure-arm-network.NetworkWatchers#deleteMethod'
    id: 'azure-arm-network.NetworkWatchers#deleteMethod'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      deleteMethod(resourceGroupName, networkWatcherName, options,
      optionalCallback)
    summary: Deletes the specified network watcher resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.deleteMethod(resourceGroupName,
      networkWatcherName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, networkWatcherName, options,
        optionalCallback)
  - uid: 'azure-arm-network.NetworkWatchers#listWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#listWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: 'listWithHttpOperationResponse(resourceGroupName, options)'
    summary: Gets all network watchers by resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.listWithHttpOperationResponse(resourceGroupName,
      options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listWithHttpOperationResponse(resourceGroupName, options)'
  - uid: 'azure-arm-network.NetworkWatchers#list'
    id: 'azure-arm-network.NetworkWatchers#list'
    parent: azure-arm-network.NetworkWatchers
    name: 'list(resourceGroupName, options, optionalCallback)'
    summary: Gets all network watchers by resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.list(resourceGroupName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(resourceGroupName, options, optionalCallback)'
  - uid: 'azure-arm-network.NetworkWatchers#listAllWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#listAllWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: listAllWithHttpOperationResponse(options)
    summary: Gets all network watchers by subscription.
    fullName: >-
      azure-arm-network.NetworkWatchers.listAllWithHttpOperationResponse(options)
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listAllWithHttpOperationResponse(options)
  - uid: 'azure-arm-network.NetworkWatchers#listAll'
    id: 'azure-arm-network.NetworkWatchers#listAll'
    parent: azure-arm-network.NetworkWatchers
    name: 'listAll(options, optionalCallback)'
    summary: Gets all network watchers by subscription.
    fullName: 'azure-arm-network.NetworkWatchers.listAll(options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listAll(options, optionalCallback)'
  - uid: 'azure-arm-network.NetworkWatchers#getTopologyWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#getTopologyWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getTopologyWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Gets the current network topology by resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.getTopologyWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the representation of
            topology.
        - id: parameters.targetResourceGroupName
          type:
            - string
          description: |-
            The name of the target
            resource group to perform topology on.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getTopologyWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#getTopology'
    id: 'azure-arm-network.NetworkWatchers#getTopology'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getTopology(resourceGroupName, networkWatcherName, parameters, options,
      optionalCallback)
    summary: Gets the current network topology by resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.getTopology(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the representation of
            topology.
        - id: parameters.targetResourceGroupName
          type:
            - string
          description: |-
            The name of the target
            resource group to perform topology on.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getTopology(resourceGroupName, networkWatcherName, parameters,
        options, optionalCallback)
  - uid: 'azure-arm-network.NetworkWatchers#verifyIPFlowWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#verifyIPFlowWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      verifyIPFlowWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: |-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    fullName: >-
      azure-arm-network.NetworkWatchers.verifyIPFlowWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the IP flow to be
            verified.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The ID of the target resource to
            perform next-hop on.
        - id: parameters.direction
          type:
            - string
          description: |-
            The direction of the packet represented
            as a 5-tuple. Possible values include: 'Inbound', 'Outbound'
        - id: parameters.protocol
          type:
            - string
          description: |-
            Protocol to be verified on. Possible
            values include: 'TCP', 'UDP'
        - id: parameters.localPort
          type:
            - string
          description: >-
            The local port. Acceptable values are a

            single integer in the range (0-65535). Support for * for the source
            port,

            which depends on the direction.
        - id: parameters.remotePort
          type:
            - string
          description: >-
            The remote port. Acceptable values are

            a single integer in the range (0-65535). Support for * for the
            source port,

            which depends on the direction.
        - id: parameters.localIPAddress
          type:
            - string
          description: |-
            The local IP address. Acceptable
            values are valid IPv4 addresses.
        - id: parameters.remoteIPAddress
          type:
            - string
          description: |-
            The remote IP address. Acceptable
            values are valid IPv4 addresses.
        - id: parameters.targetNicResourceId
          type:
            - string
          description: |-
            The NIC ID. (If VM has
            multiple NICs and IP forwarding is enabled on any of them, then this
            parameter must be specified. Otherwise optional).
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function verifyIPFlowWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#verifyIPFlow'
    id: 'azure-arm-network.NetworkWatchers#verifyIPFlow'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      verifyIPFlow(resourceGroupName, networkWatcherName, parameters, options,
      optionalCallback)
    summary: |-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    fullName: >-
      azure-arm-network.NetworkWatchers.verifyIPFlow(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the IP flow to be
            verified.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The ID of the target resource to
            perform next-hop on.
        - id: parameters.direction
          type:
            - string
          description: |-
            The direction of the packet represented
            as a 5-tuple. Possible values include: 'Inbound', 'Outbound'
        - id: parameters.protocol
          type:
            - string
          description: |-
            Protocol to be verified on. Possible
            values include: 'TCP', 'UDP'
        - id: parameters.localPort
          type:
            - string
          description: >-
            The local port. Acceptable values are a

            single integer in the range (0-65535). Support for * for the source
            port,

            which depends on the direction.
        - id: parameters.remotePort
          type:
            - string
          description: >-
            The remote port. Acceptable values are

            a single integer in the range (0-65535). Support for * for the
            source port,

            which depends on the direction.
        - id: parameters.localIPAddress
          type:
            - string
          description: |-
            The local IP address. Acceptable
            values are valid IPv4 addresses.
        - id: parameters.remoteIPAddress
          type:
            - string
          description: |-
            The remote IP address. Acceptable
            values are valid IPv4 addresses.
        - id: parameters.targetNicResourceId
          type:
            - string
          description: |-
            The NIC ID. (If VM has
            multiple NICs and IP forwarding is enabled on any of them, then this
            parameter must be specified. Otherwise optional).
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function verifyIPFlow(resourceGroupName, networkWatcherName, parameters,
        options, optionalCallback)
  - uid: 'azure-arm-network.NetworkWatchers#getNextHopWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#getNextHopWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getNextHopWithHttpOperationResponse(resourceGroupName, networkWatcherName,
      parameters, options)
    summary: Gets the next hop from the specified VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.getNextHopWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the source and destination
            endpoint.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The resource identifier of the
            target resource against which the action is to be performed.
        - id: parameters.sourceIPAddress
          type:
            - string
          description: The source IP address.
        - id: parameters.destinationIPAddress
          type:
            - string
          description: The destination IP address.
        - id: parameters.targetNicResourceId
          type:
            - string
          description: >-
            The NIC ID. (If VM has

            multiple NICs and IP forwarding is enabled on any of the nics, then
            this

            parameter must be specified. Otherwise optional).
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getNextHopWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#getNextHop'
    id: 'azure-arm-network.NetworkWatchers#getNextHop'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getNextHop(resourceGroupName, networkWatcherName, parameters, options,
      optionalCallback)
    summary: Gets the next hop from the specified VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.getNextHop(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the source and destination
            endpoint.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The resource identifier of the
            target resource against which the action is to be performed.
        - id: parameters.sourceIPAddress
          type:
            - string
          description: The source IP address.
        - id: parameters.destinationIPAddress
          type:
            - string
          description: The destination IP address.
        - id: parameters.targetNicResourceId
          type:
            - string
          description: >-
            The NIC ID. (If VM has

            multiple NICs and IP forwarding is enabled on any of the nics, then
            this

            parameter must be specified. Otherwise optional).
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getNextHop(resourceGroupName, networkWatcherName, parameters,
        options, optionalCallback)
  - uid: >-
      azure-arm-network.NetworkWatchers#getVMSecurityRulesWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#getVMSecurityRulesWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getVMSecurityRulesWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.getVMSecurityRulesWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the VM to check security
            groups for.
        - id: parameters.targetResourceId
          type:
            - string
          description: ID of the target VM.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getVMSecurityRulesWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#getVMSecurityRules'
    id: 'azure-arm-network.NetworkWatchers#getVMSecurityRules'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getVMSecurityRules(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.getVMSecurityRules(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the VM to check security
            groups for.
        - id: parameters.targetResourceId
          type:
            - string
          description: ID of the target VM.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getVMSecurityRules(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
  - uid: >-
      azure-arm-network.NetworkWatchers#getTroubleshootingWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#getTroubleshootingWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getTroubleshootingWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Initiate troubleshooting on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.getTroubleshootingWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the resource to
            troubleshoot.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The target resource to
            troubleshoot.
        - id: parameters.storageId
          type:
            - string
          description: |-
            The ID for the storage account to save
            the troubleshoot result.
        - id: parameters.storagePath
          type:
            - string
          description: |-
            The path to the blob to save the
            troubleshoot result in.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getTroubleshootingWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#getTroubleshooting'
    id: 'azure-arm-network.NetworkWatchers#getTroubleshooting'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getTroubleshooting(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: Initiate troubleshooting on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.getTroubleshooting(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the resource to
            troubleshoot.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The target resource to
            troubleshoot.
        - id: parameters.storageId
          type:
            - string
          description: |-
            The ID for the storage account to save
            the troubleshoot result.
        - id: parameters.storagePath
          type:
            - string
          description: |-
            The path to the blob to save the
            troubleshoot result in.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getTroubleshooting(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
  - uid: >-
      azure-arm-network.NetworkWatchers#getTroubleshootingResultWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#getTroubleshootingResultWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getTroubleshootingResultWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Get the last completed troubleshooting result on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.getTroubleshootingResultWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the resource to query the
            troubleshooting result.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The target resource ID to query
            the troubleshooting result.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getTroubleshootingResultWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#getTroubleshootingResult'
    id: 'azure-arm-network.NetworkWatchers#getTroubleshootingResult'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getTroubleshootingResult(resourceGroupName, networkWatcherName,
      parameters, options, optionalCallback)
    summary: Get the last completed troubleshooting result on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.getTroubleshootingResult(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the resource to query the
            troubleshooting result.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The target resource ID to query
            the troubleshooting result.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getTroubleshootingResult(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
  - uid: >-
      azure-arm-network.NetworkWatchers#setFlowLogConfigurationWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#setFlowLogConfigurationWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      setFlowLogConfigurationWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Configures flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.setFlowLogConfigurationWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the configuration of flow
            log.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The ID of the resource to
            configure for flow logging.
        - id: parameters.storageId
          type:
            - string
          description: |-
            ID of the storage account which is used
            to store the flow log.
        - id: parameters.enabled
          type:
            - boolean
          description: Flag to enable/disable flow logging.
        - id: parameters.retentionPolicy
          type:
            - object
          description: ''
          optional: true
        - id: parameters.retentionPolicy.days
          type:
            - number
          description: |-
            Number of days to retain
            flow log records.
          optional: true
        - id: parameters.retentionPolicy.enabled
          type:
            - boolean
          description: |-
            Flag to enable/disable
            retention.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        setFlowLogConfigurationWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#setFlowLogConfiguration'
    id: 'azure-arm-network.NetworkWatchers#setFlowLogConfiguration'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      setFlowLogConfiguration(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: Configures flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.setFlowLogConfiguration(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the configuration of flow
            log.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The ID of the resource to
            configure for flow logging.
        - id: parameters.storageId
          type:
            - string
          description: |-
            ID of the storage account which is used
            to store the flow log.
        - id: parameters.enabled
          type:
            - boolean
          description: Flag to enable/disable flow logging.
        - id: parameters.retentionPolicy
          type:
            - object
          description: ''
          optional: true
        - id: parameters.retentionPolicy.days
          type:
            - number
          description: |-
            Number of days to retain
            flow log records.
          optional: true
        - id: parameters.retentionPolicy.enabled
          type:
            - boolean
          description: |-
            Flag to enable/disable
            retention.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function setFlowLogConfiguration(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
  - uid: >-
      azure-arm-network.NetworkWatchers#getFlowLogStatusWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#getFlowLogStatusWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getFlowLogStatusWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Queries status of flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.getFlowLogStatusWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define a resource to query flow
            log status.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The target resource where
            getting the flow logging status.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getFlowLogStatusWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#getFlowLogStatus'
    id: 'azure-arm-network.NetworkWatchers#getFlowLogStatus'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getFlowLogStatus(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: Queries status of flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.getFlowLogStatus(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define a resource to query flow
            log status.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The target resource where
            getting the flow logging status.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getFlowLogStatus(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
  - uid: >-
      azure-arm-network.NetworkWatchers#beginDeleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginDeleteMethodWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, options)
    summary: Deletes the specified network watcher resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, options)
  - uid: 'azure-arm-network.NetworkWatchers#beginDeleteMethod'
    id: 'azure-arm-network.NetworkWatchers#beginDeleteMethod'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginDeleteMethod(resourceGroupName, networkWatcherName, options,
      optionalCallback)
    summary: Deletes the specified network watcher resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginDeleteMethod(resourceGroupName,
      networkWatcherName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeleteMethod(resourceGroupName, networkWatcherName,
        options, optionalCallback)
  - uid: >-
      azure-arm-network.NetworkWatchers#beginVerifyIPFlowWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginVerifyIPFlowWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginVerifyIPFlowWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: |-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginVerifyIPFlowWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the IP flow to be
            verified.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The ID of the target resource to
            perform next-hop on.
        - id: parameters.direction
          type:
            - string
          description: |-
            The direction of the packet represented
            as a 5-tuple. Possible values include: 'Inbound', 'Outbound'
        - id: parameters.protocol
          type:
            - string
          description: |-
            Protocol to be verified on. Possible
            values include: 'TCP', 'UDP'
        - id: parameters.localPort
          type:
            - string
          description: >-
            The local port. Acceptable values are a

            single integer in the range (0-65535). Support for * for the source
            port,

            which depends on the direction.
        - id: parameters.remotePort
          type:
            - string
          description: >-
            The remote port. Acceptable values are

            a single integer in the range (0-65535). Support for * for the
            source port,

            which depends on the direction.
        - id: parameters.localIPAddress
          type:
            - string
          description: |-
            The local IP address. Acceptable
            values are valid IPv4 addresses.
        - id: parameters.remoteIPAddress
          type:
            - string
          description: |-
            The remote IP address. Acceptable
            values are valid IPv4 addresses.
        - id: parameters.targetNicResourceId
          type:
            - string
          description: |-
            The NIC ID. (If VM has
            multiple NICs and IP forwarding is enabled on any of them, then this
            parameter must be specified. Otherwise optional).
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginVerifyIPFlowWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#beginVerifyIPFlow'
    id: 'azure-arm-network.NetworkWatchers#beginVerifyIPFlow'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginVerifyIPFlow(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: |-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginVerifyIPFlow(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the IP flow to be
            verified.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The ID of the target resource to
            perform next-hop on.
        - id: parameters.direction
          type:
            - string
          description: |-
            The direction of the packet represented
            as a 5-tuple. Possible values include: 'Inbound', 'Outbound'
        - id: parameters.protocol
          type:
            - string
          description: |-
            Protocol to be verified on. Possible
            values include: 'TCP', 'UDP'
        - id: parameters.localPort
          type:
            - string
          description: >-
            The local port. Acceptable values are a

            single integer in the range (0-65535). Support for * for the source
            port,

            which depends on the direction.
        - id: parameters.remotePort
          type:
            - string
          description: >-
            The remote port. Acceptable values are

            a single integer in the range (0-65535). Support for * for the
            source port,

            which depends on the direction.
        - id: parameters.localIPAddress
          type:
            - string
          description: |-
            The local IP address. Acceptable
            values are valid IPv4 addresses.
        - id: parameters.remoteIPAddress
          type:
            - string
          description: |-
            The remote IP address. Acceptable
            values are valid IPv4 addresses.
        - id: parameters.targetNicResourceId
          type:
            - string
          description: |-
            The NIC ID. (If VM has
            multiple NICs and IP forwarding is enabled on any of them, then this
            parameter must be specified. Otherwise optional).
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginVerifyIPFlow(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
  - uid: 'azure-arm-network.NetworkWatchers#beginGetNextHopWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#beginGetNextHopWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetNextHopWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Gets the next hop from the specified VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetNextHopWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the source and destination
            endpoint.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The resource identifier of the
            target resource against which the action is to be performed.
        - id: parameters.sourceIPAddress
          type:
            - string
          description: The source IP address.
        - id: parameters.destinationIPAddress
          type:
            - string
          description: The destination IP address.
        - id: parameters.targetNicResourceId
          type:
            - string
          description: >-
            The NIC ID. (If VM has

            multiple NICs and IP forwarding is enabled on any of the nics, then
            this

            parameter must be specified. Otherwise optional).
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginGetNextHopWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#beginGetNextHop'
    id: 'azure-arm-network.NetworkWatchers#beginGetNextHop'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetNextHop(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: Gets the next hop from the specified VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetNextHop(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the source and destination
            endpoint.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The resource identifier of the
            target resource against which the action is to be performed.
        - id: parameters.sourceIPAddress
          type:
            - string
          description: The source IP address.
        - id: parameters.destinationIPAddress
          type:
            - string
          description: The destination IP address.
        - id: parameters.targetNicResourceId
          type:
            - string
          description: >-
            The NIC ID. (If VM has

            multiple NICs and IP forwarding is enabled on any of the nics, then
            this

            parameter must be specified. Otherwise optional).
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginGetNextHop(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
  - uid: >-
      azure-arm-network.NetworkWatchers#beginGetVMSecurityRulesWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginGetVMSecurityRulesWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetVMSecurityRulesWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetVMSecurityRulesWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the VM to check security
            groups for.
        - id: parameters.targetResourceId
          type:
            - string
          description: ID of the target VM.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginGetVMSecurityRulesWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#beginGetVMSecurityRules'
    id: 'azure-arm-network.NetworkWatchers#beginGetVMSecurityRules'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetVMSecurityRules(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetVMSecurityRules(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the VM to check security
            groups for.
        - id: parameters.targetResourceId
          type:
            - string
          description: ID of the target VM.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginGetVMSecurityRules(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
  - uid: >-
      azure-arm-network.NetworkWatchers#beginGetTroubleshootingWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginGetTroubleshootingWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetTroubleshootingWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Initiate troubleshooting on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetTroubleshootingWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the resource to
            troubleshoot.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The target resource to
            troubleshoot.
        - id: parameters.storageId
          type:
            - string
          description: |-
            The ID for the storage account to save
            the troubleshoot result.
        - id: parameters.storagePath
          type:
            - string
          description: |-
            The path to the blob to save the
            troubleshoot result in.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginGetTroubleshootingWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#beginGetTroubleshooting'
    id: 'azure-arm-network.NetworkWatchers#beginGetTroubleshooting'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetTroubleshooting(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: Initiate troubleshooting on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetTroubleshooting(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the resource to
            troubleshoot.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The target resource to
            troubleshoot.
        - id: parameters.storageId
          type:
            - string
          description: |-
            The ID for the storage account to save
            the troubleshoot result.
        - id: parameters.storagePath
          type:
            - string
          description: |-
            The path to the blob to save the
            troubleshoot result in.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginGetTroubleshooting(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
  - uid: >-
      azure-arm-network.NetworkWatchers#beginGetTroubleshootingResultWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginGetTroubleshootingResultWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetTroubleshootingResultWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Get the last completed troubleshooting result on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetTroubleshootingResultWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the resource to query the
            troubleshooting result.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The target resource ID to query
            the troubleshooting result.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginGetTroubleshootingResultWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#beginGetTroubleshootingResult'
    id: 'azure-arm-network.NetworkWatchers#beginGetTroubleshootingResult'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetTroubleshootingResult(resourceGroupName, networkWatcherName,
      parameters, options, optionalCallback)
    summary: Get the last completed troubleshooting result on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetTroubleshootingResult(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the resource to query the
            troubleshooting result.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The target resource ID to query
            the troubleshooting result.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginGetTroubleshootingResult(resourceGroupName,
        networkWatcherName, parameters, options, optionalCallback)
  - uid: >-
      azure-arm-network.NetworkWatchers#beginSetFlowLogConfigurationWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginSetFlowLogConfigurationWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginSetFlowLogConfigurationWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Configures flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginSetFlowLogConfigurationWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the configuration of flow
            log.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The ID of the resource to
            configure for flow logging.
        - id: parameters.storageId
          type:
            - string
          description: |-
            ID of the storage account which is used
            to store the flow log.
        - id: parameters.enabled
          type:
            - boolean
          description: Flag to enable/disable flow logging.
        - id: parameters.retentionPolicy
          type:
            - object
          description: ''
          optional: true
        - id: parameters.retentionPolicy.days
          type:
            - number
          description: |-
            Number of days to retain
            flow log records.
          optional: true
        - id: parameters.retentionPolicy.enabled
          type:
            - boolean
          description: |-
            Flag to enable/disable
            retention.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginSetFlowLogConfigurationWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#beginSetFlowLogConfiguration'
    id: 'azure-arm-network.NetworkWatchers#beginSetFlowLogConfiguration'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginSetFlowLogConfiguration(resourceGroupName, networkWatcherName,
      parameters, options, optionalCallback)
    summary: Configures flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginSetFlowLogConfiguration(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define the configuration of flow
            log.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The ID of the resource to
            configure for flow logging.
        - id: parameters.storageId
          type:
            - string
          description: |-
            ID of the storage account which is used
            to store the flow log.
        - id: parameters.enabled
          type:
            - boolean
          description: Flag to enable/disable flow logging.
        - id: parameters.retentionPolicy
          type:
            - object
          description: ''
          optional: true
        - id: parameters.retentionPolicy.days
          type:
            - number
          description: |-
            Number of days to retain
            flow log records.
          optional: true
        - id: parameters.retentionPolicy.enabled
          type:
            - boolean
          description: |-
            Flag to enable/disable
            retention.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginSetFlowLogConfiguration(resourceGroupName,
        networkWatcherName, parameters, options, optionalCallback)
  - uid: >-
      azure-arm-network.NetworkWatchers#beginGetFlowLogStatusWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginGetFlowLogStatusWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetFlowLogStatusWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Queries status of flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetFlowLogStatusWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define a resource to query flow
            log status.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The target resource where
            getting the flow logging status.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginGetFlowLogStatusWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
  - uid: 'azure-arm-network.NetworkWatchers#beginGetFlowLogStatus'
    id: 'azure-arm-network.NetworkWatchers#beginGetFlowLogStatus'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetFlowLogStatus(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: Queries status of flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetFlowLogStatus(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: |-
            Parameters that define a resource to query flow
            log status.
        - id: parameters.targetResourceId
          type:
            - string
          description: |-
            The target resource where
            getting the flow logging status.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginGetFlowLogStatus(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
references:
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: Promise
    name: Promise
    fullName: Promise
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
