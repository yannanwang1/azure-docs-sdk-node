### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-website.WebApps
    id: azure-arm-website.WebApps
    name: WebApps
    summary: ''
    fullName: azure-arm-website.WebApps
    type: Class
    children:
      - 'azure-arm-website.WebApps.#ctor'
      - 'azure-arm-website.WebApps#client'
      - 'azure-arm-website.WebApps#_list'
      - 'azure-arm-website.WebApps#_listByResourceGroup'
      - 'azure-arm-website.WebApps#_get'
      - 'azure-arm-website.WebApps#_createOrUpdate'
      - 'azure-arm-website.WebApps#_deleteMethod'
      - 'azure-arm-website.WebApps#_analyzeCustomHostname'
      - 'azure-arm-website.WebApps#_applySlotConfigToProduction'
      - 'azure-arm-website.WebApps#_backup'
      - 'azure-arm-website.WebApps#_listBackups'
      - 'azure-arm-website.WebApps#_discoverRestore'
      - 'azure-arm-website.WebApps#_getBackupStatus'
      - 'azure-arm-website.WebApps#_deleteBackup'
      - 'azure-arm-website.WebApps#_listBackupStatusSecrets'
      - 'azure-arm-website.WebApps#_restore'
      - 'azure-arm-website.WebApps#_updateApplicationSettings'
      - 'azure-arm-website.WebApps#_listApplicationSettings'
      - 'azure-arm-website.WebApps#_updateAuthSettings'
      - 'azure-arm-website.WebApps#_getAuthSettings'
      - 'azure-arm-website.WebApps#_updateBackupConfiguration'
      - 'azure-arm-website.WebApps#_deleteBackupConfiguration'
      - 'azure-arm-website.WebApps#_getBackupConfiguration'
      - 'azure-arm-website.WebApps#_updateConnectionStrings'
      - 'azure-arm-website.WebApps#_listConnectionStrings'
      - 'azure-arm-website.WebApps#_getDiagnosticLogsConfiguration'
      - 'azure-arm-website.WebApps#_updateDiagnosticLogsConfig'
      - 'azure-arm-website.WebApps#_updateMetadata'
      - 'azure-arm-website.WebApps#_listMetadata'
      - 'azure-arm-website.WebApps#_listPublishingCredentials'
      - 'azure-arm-website.WebApps#_updateSitePushSettings'
      - 'azure-arm-website.WebApps#_listSitePushSettings'
      - 'azure-arm-website.WebApps#_listSlotConfigurationNames'
      - 'azure-arm-website.WebApps#_updateSlotConfigurationNames'
      - 'azure-arm-website.WebApps#_getConfiguration'
      - 'azure-arm-website.WebApps#_createOrUpdateConfiguration'
      - 'azure-arm-website.WebApps#_updateConfiguration'
      - 'azure-arm-website.WebApps#_listConfigurationSnapshotInfo'
      - 'azure-arm-website.WebApps#_getConfigurationSnapshot'
      - 'azure-arm-website.WebApps#_recoverSiteConfigurationSnapshot'
      - 'azure-arm-website.WebApps#_listDeployments'
      - 'azure-arm-website.WebApps#_getDeployment'
      - 'azure-arm-website.WebApps#_createDeployment'
      - 'azure-arm-website.WebApps#_deleteDeployment'
      - 'azure-arm-website.WebApps#_listDomainOwnershipIdentifiers'
      - 'azure-arm-website.WebApps#_getDomainOwnershipIdentifier'
      - 'azure-arm-website.WebApps#_createOrUpdateDomainOwnershipIdentifier'
      - 'azure-arm-website.WebApps#_deleteDomainOwnershipIdentifier'
      - 'azure-arm-website.WebApps#_updateDomainOwnershipIdentifier'
      - 'azure-arm-website.WebApps#_listHostNameBindings'
      - 'azure-arm-website.WebApps#_getHostNameBinding'
      - 'azure-arm-website.WebApps#_createOrUpdateHostNameBinding'
      - 'azure-arm-website.WebApps#_deleteHostNameBinding'
      - 'azure-arm-website.WebApps#_getHybridConnection'
      - 'azure-arm-website.WebApps#_createOrUpdateHybridConnection'
      - 'azure-arm-website.WebApps#_deleteHybridConnection'
      - 'azure-arm-website.WebApps#_updateHybridConnection'
      - 'azure-arm-website.WebApps#_listHybridConnectionKeys'
      - 'azure-arm-website.WebApps#_listHybridConnections'
      - 'azure-arm-website.WebApps#_listRelayServiceConnections'
      - 'azure-arm-website.WebApps#_getRelayServiceConnection'
      - 'azure-arm-website.WebApps#_createOrUpdateRelayServiceConnection'
      - 'azure-arm-website.WebApps#_deleteRelayServiceConnection'
      - 'azure-arm-website.WebApps#_updateRelayServiceConnection'
      - 'azure-arm-website.WebApps#_listInstanceIdentifiers'
      - 'azure-arm-website.WebApps#_listInstanceDeployments'
      - 'azure-arm-website.WebApps#_getInstanceDeployment'
      - 'azure-arm-website.WebApps#_createInstanceDeployment'
      - 'azure-arm-website.WebApps#_deleteInstanceDeployment'
      - 'azure-arm-website.WebApps#_isCloneable'
      - 'azure-arm-website.WebApps#_listMetricDefinitions'
      - 'azure-arm-website.WebApps#_listMetrics'
      - 'azure-arm-website.WebApps#_migrateStorage'
      - 'azure-arm-website.WebApps#_migrateMySql'
      - 'azure-arm-website.WebApps#_getMigrateMySqlStatus'
      - 'azure-arm-website.WebApps#_listNetworkFeatures'
      - 'azure-arm-website.WebApps#_startWebSiteNetworkTrace'
      - 'azure-arm-website.WebApps#_stopWebSiteNetworkTrace'
      - 'azure-arm-website.WebApps#_generateNewSitePublishingPassword'
      - 'azure-arm-website.WebApps#_listPerfMonCounters'
      - 'azure-arm-website.WebApps#_getSitePhpErrorLogFlag'
      - 'azure-arm-website.WebApps#_listPremierAddOns'
      - 'azure-arm-website.WebApps#_getPremierAddOn'
      - 'azure-arm-website.WebApps#_addPremierAddOn'
      - 'azure-arm-website.WebApps#_deletePremierAddOn'
      - 'azure-arm-website.WebApps#_listPublishingProfileXmlWithSecrets'
      - 'azure-arm-website.WebApps#_recover'
      - 'azure-arm-website.WebApps#_resetProductionSlotConfig'
      - 'azure-arm-website.WebApps#_restart'
      - 'azure-arm-website.WebApps#_listSlots'
      - 'azure-arm-website.WebApps#_getSlot'
      - 'azure-arm-website.WebApps#_createOrUpdateSlot'
      - 'azure-arm-website.WebApps#_deleteSlot'
      - 'azure-arm-website.WebApps#_analyzeCustomHostnameSlot'
      - 'azure-arm-website.WebApps#_applySlotConfigurationSlot'
      - 'azure-arm-website.WebApps#_backupSlot'
      - 'azure-arm-website.WebApps#_listBackupsSlot'
      - 'azure-arm-website.WebApps#_discoverRestoreSlot'
      - 'azure-arm-website.WebApps#_getBackupStatusSlot'
      - 'azure-arm-website.WebApps#_deleteBackupSlot'
      - 'azure-arm-website.WebApps#_listBackupStatusSecretsSlot'
      - 'azure-arm-website.WebApps#_restoreSlot'
      - 'azure-arm-website.WebApps#_updateApplicationSettingsSlot'
      - 'azure-arm-website.WebApps#_listApplicationSettingsSlot'
      - 'azure-arm-website.WebApps#_updateAuthSettingsSlot'
      - 'azure-arm-website.WebApps#_getAuthSettingsSlot'
      - 'azure-arm-website.WebApps#_updateBackupConfigurationSlot'
      - 'azure-arm-website.WebApps#_deleteBackupConfigurationSlot'
      - 'azure-arm-website.WebApps#_getBackupConfigurationSlot'
      - 'azure-arm-website.WebApps#_updateConnectionStringsSlot'
      - 'azure-arm-website.WebApps#_listConnectionStringsSlot'
      - 'azure-arm-website.WebApps#_getDiagnosticLogsConfigurationSlot'
      - 'azure-arm-website.WebApps#_updateDiagnosticLogsConfigSlot'
      - 'azure-arm-website.WebApps#_updateMetadataSlot'
      - 'azure-arm-website.WebApps#_listMetadataSlot'
      - 'azure-arm-website.WebApps#_listPublishingCredentialsSlot'
      - 'azure-arm-website.WebApps#_updateSitePushSettingsSlot'
      - 'azure-arm-website.WebApps#_listSitePushSettingsSlot'
      - 'azure-arm-website.WebApps#_getConfigurationSlot'
      - 'azure-arm-website.WebApps#_createOrUpdateConfigurationSlot'
      - 'azure-arm-website.WebApps#_updateConfigurationSlot'
      - 'azure-arm-website.WebApps#_listConfigurationSnapshotInfoSlot'
      - 'azure-arm-website.WebApps#_getConfigurationSnapshotSlot'
      - 'azure-arm-website.WebApps#_recoverSiteConfigurationSnapshotSlot'
      - 'azure-arm-website.WebApps#_listDeploymentsSlot'
      - 'azure-arm-website.WebApps#_getDeploymentSlot'
      - 'azure-arm-website.WebApps#_createDeploymentSlot'
      - 'azure-arm-website.WebApps#_deleteDeploymentSlot'
      - 'azure-arm-website.WebApps#_listDomainOwnershipIdentifiersSlot'
      - 'azure-arm-website.WebApps#_getDomainOwnershipIdentifierSlot'
      - 'azure-arm-website.WebApps#_createOrUpdateDomainOwnershipIdentifierSlot'
      - 'azure-arm-website.WebApps#_deleteDomainOwnershipIdentifierSlot'
      - 'azure-arm-website.WebApps#_updateDomainOwnershipIdentifierSlot'
      - 'azure-arm-website.WebApps#_listHostNameBindingsSlot'
      - 'azure-arm-website.WebApps#_getHostNameBindingSlot'
      - 'azure-arm-website.WebApps#_createOrUpdateHostNameBindingSlot'
      - 'azure-arm-website.WebApps#_deleteHostNameBindingSlot'
      - 'azure-arm-website.WebApps#_getHybridConnectionSlot'
      - 'azure-arm-website.WebApps#_createOrUpdateHybridConnectionSlot'
      - 'azure-arm-website.WebApps#_deleteHybridConnectionSlot'
      - 'azure-arm-website.WebApps#_updateHybridConnectionSlot'
      - 'azure-arm-website.WebApps#_listHybridConnectionKeysSlot'
      - 'azure-arm-website.WebApps#_listHybridConnectionsSlot'
      - 'azure-arm-website.WebApps#_listRelayServiceConnectionsSlot'
      - 'azure-arm-website.WebApps#_getRelayServiceConnectionSlot'
      - 'azure-arm-website.WebApps#_createOrUpdateRelayServiceConnectionSlot'
      - 'azure-arm-website.WebApps#_deleteRelayServiceConnectionSlot'
      - 'azure-arm-website.WebApps#_updateRelayServiceConnectionSlot'
      - 'azure-arm-website.WebApps#_listInstanceIdentifiersSlot'
      - 'azure-arm-website.WebApps#_listInstanceDeploymentsSlot'
      - 'azure-arm-website.WebApps#_getInstanceDeploymentSlot'
      - 'azure-arm-website.WebApps#_createInstanceDeploymentSlot'
      - 'azure-arm-website.WebApps#_deleteInstanceDeploymentSlot'
      - 'azure-arm-website.WebApps#_isCloneableSlot'
      - 'azure-arm-website.WebApps#_listMetricDefinitionsSlot'
      - 'azure-arm-website.WebApps#_listMetricsSlot'
      - 'azure-arm-website.WebApps#_getMigrateMySqlStatusSlot'
      - 'azure-arm-website.WebApps#_listNetworkFeaturesSlot'
      - 'azure-arm-website.WebApps#_startWebSiteNetworkTraceSlot'
      - 'azure-arm-website.WebApps#_stopWebSiteNetworkTraceSlot'
      - 'azure-arm-website.WebApps#_generateNewSitePublishingPasswordSlot'
      - 'azure-arm-website.WebApps#_listPerfMonCountersSlot'
      - 'azure-arm-website.WebApps#_getSitePhpErrorLogFlagSlot'
      - 'azure-arm-website.WebApps#_listPremierAddOnsSlot'
      - 'azure-arm-website.WebApps#_getPremierAddOnSlot'
      - 'azure-arm-website.WebApps#_addPremierAddOnSlot'
      - 'azure-arm-website.WebApps#_deletePremierAddOnSlot'
      - 'azure-arm-website.WebApps#_listPublishingProfileXmlWithSecretsSlot'
      - 'azure-arm-website.WebApps#_recoverSlot'
      - 'azure-arm-website.WebApps#_resetSlotConfigurationSlot'
      - 'azure-arm-website.WebApps#_restartSlot'
      - 'azure-arm-website.WebApps#_listSlotDifferencesSlot'
      - 'azure-arm-website.WebApps#_swapSlotSlot'
      - 'azure-arm-website.WebApps#_listSnapshotsSlot'
      - 'azure-arm-website.WebApps#_getSourceControlSlot'
      - 'azure-arm-website.WebApps#_createOrUpdateSourceControlSlot'
      - 'azure-arm-website.WebApps#_deleteSourceControlSlot'
      - 'azure-arm-website.WebApps#_startSlot'
      - 'azure-arm-website.WebApps#_stopSlot'
      - 'azure-arm-website.WebApps#_syncRepositorySlot'
      - 'azure-arm-website.WebApps#_listUsagesSlot'
      - 'azure-arm-website.WebApps#_listVnetConnectionsSlot'
      - 'azure-arm-website.WebApps#_getVnetConnectionSlot'
      - 'azure-arm-website.WebApps#_createOrUpdateVnetConnectionSlot'
      - 'azure-arm-website.WebApps#_deleteVnetConnectionSlot'
      - 'azure-arm-website.WebApps#_updateVnetConnectionSlot'
      - 'azure-arm-website.WebApps#_getVnetConnectionGatewaySlot'
      - 'azure-arm-website.WebApps#_createOrUpdateVnetConnectionGatewaySlot'
      - 'azure-arm-website.WebApps#_updateVnetConnectionGatewaySlot'
      - 'azure-arm-website.WebApps#_listSlotDifferencesFromProduction'
      - 'azure-arm-website.WebApps#_swapSlotWithProduction'
      - 'azure-arm-website.WebApps#_listSnapshots'
      - 'azure-arm-website.WebApps#_getSourceControl'
      - 'azure-arm-website.WebApps#_createOrUpdateSourceControl'
      - 'azure-arm-website.WebApps#_deleteSourceControl'
      - 'azure-arm-website.WebApps#_start'
      - 'azure-arm-website.WebApps#_stop'
      - 'azure-arm-website.WebApps#_syncRepository'
      - 'azure-arm-website.WebApps#_listUsages'
      - 'azure-arm-website.WebApps#_listVnetConnections'
      - 'azure-arm-website.WebApps#_getVnetConnection'
      - 'azure-arm-website.WebApps#_createOrUpdateVnetConnection'
      - 'azure-arm-website.WebApps#_deleteVnetConnection'
      - 'azure-arm-website.WebApps#_updateVnetConnection'
      - 'azure-arm-website.WebApps#_getVnetConnectionGateway'
      - 'azure-arm-website.WebApps#_createOrUpdateVnetConnectionGateway'
      - 'azure-arm-website.WebApps#_updateVnetConnectionGateway'
      - 'azure-arm-website.WebApps#_beginCreateOrUpdate'
      - 'azure-arm-website.WebApps#_beginRestore'
      - 'azure-arm-website.WebApps#_beginListPublishingCredentials'
      - 'azure-arm-website.WebApps#_beginMigrateStorage'
      - 'azure-arm-website.WebApps#_beginMigrateMySql'
      - 'azure-arm-website.WebApps#_beginRecover'
      - 'azure-arm-website.WebApps#_beginCreateOrUpdateSlot'
      - 'azure-arm-website.WebApps#_beginRestoreSlot'
      - 'azure-arm-website.WebApps#_beginListPublishingCredentialsSlot'
      - 'azure-arm-website.WebApps#_beginRecoverSlot'
      - 'azure-arm-website.WebApps#_beginSwapSlotSlot'
      - 'azure-arm-website.WebApps#_beginCreateOrUpdateSourceControlSlot'
      - 'azure-arm-website.WebApps#_beginSwapSlotWithProduction'
      - 'azure-arm-website.WebApps#_beginCreateOrUpdateSourceControl'
      - 'azure-arm-website.WebApps#_listNext'
      - 'azure-arm-website.WebApps#_listByResourceGroupNext'
      - 'azure-arm-website.WebApps#_listBackupsNext'
      - 'azure-arm-website.WebApps#_listDeploymentsNext'
      - 'azure-arm-website.WebApps#_listDomainOwnershipIdentifiersNext'
      - 'azure-arm-website.WebApps#_listHostNameBindingsNext'
      - 'azure-arm-website.WebApps#_listInstanceIdentifiersNext'
      - 'azure-arm-website.WebApps#_listInstanceDeploymentsNext'
      - 'azure-arm-website.WebApps#_listMetricDefinitionsNext'
      - 'azure-arm-website.WebApps#_listMetricsNext'
      - 'azure-arm-website.WebApps#_listPerfMonCountersNext'
      - 'azure-arm-website.WebApps#_listSlotsNext'
      - 'azure-arm-website.WebApps#_listBackupsSlotNext'
      - 'azure-arm-website.WebApps#_listDeploymentsSlotNext'
      - 'azure-arm-website.WebApps#_listDomainOwnershipIdentifiersSlotNext'
      - 'azure-arm-website.WebApps#_listHostNameBindingsSlotNext'
      - 'azure-arm-website.WebApps#_listInstanceIdentifiersSlotNext'
      - 'azure-arm-website.WebApps#_listInstanceDeploymentsSlotNext'
      - 'azure-arm-website.WebApps#_listMetricDefinitionsSlotNext'
      - 'azure-arm-website.WebApps#_listMetricsSlotNext'
      - 'azure-arm-website.WebApps#_listPerfMonCountersSlotNext'
      - 'azure-arm-website.WebApps#_listSlotDifferencesSlotNext'
      - 'azure-arm-website.WebApps#_listSnapshotsSlotNext'
      - 'azure-arm-website.WebApps#_listUsagesSlotNext'
      - 'azure-arm-website.WebApps#_listSlotDifferencesFromProductionNext'
      - 'azure-arm-website.WebApps#_listSnapshotsNext'
      - 'azure-arm-website.WebApps#_listUsagesNext'
      - 'azure-arm-website.WebApps#listWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#list'
      - 'azure-arm-website.WebApps#listByResourceGroupWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listByResourceGroup'
      - 'azure-arm-website.WebApps#getWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#get'
      - 'azure-arm-website.WebApps#createOrUpdateWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#createOrUpdate'
      - 'azure-arm-website.WebApps#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#deleteMethod'
      - 'azure-arm-website.WebApps#analyzeCustomHostnameWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#analyzeCustomHostname'
      - >-
        azure-arm-website.WebApps#applySlotConfigToProductionWithHttpOperationResponse
      - 'azure-arm-website.WebApps#applySlotConfigToProduction'
      - 'azure-arm-website.WebApps#backupWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#backup'
      - 'azure-arm-website.WebApps#listBackupsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listBackups'
      - 'azure-arm-website.WebApps#discoverRestoreWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#discoverRestore'
      - 'azure-arm-website.WebApps#getBackupStatusWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getBackupStatus'
      - 'azure-arm-website.WebApps#deleteBackupWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#deleteBackup'
      - >-
        azure-arm-website.WebApps#listBackupStatusSecretsWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listBackupStatusSecrets'
      - 'azure-arm-website.WebApps#restoreWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#restore'
      - >-
        azure-arm-website.WebApps#updateApplicationSettingsWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateApplicationSettings'
      - >-
        azure-arm-website.WebApps#listApplicationSettingsWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listApplicationSettings'
      - 'azure-arm-website.WebApps#updateAuthSettingsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#updateAuthSettings'
      - 'azure-arm-website.WebApps#getAuthSettingsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getAuthSettings'
      - >-
        azure-arm-website.WebApps#updateBackupConfigurationWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateBackupConfiguration'
      - >-
        azure-arm-website.WebApps#deleteBackupConfigurationWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteBackupConfiguration'
      - >-
        azure-arm-website.WebApps#getBackupConfigurationWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getBackupConfiguration'
      - >-
        azure-arm-website.WebApps#updateConnectionStringsWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateConnectionStrings'
      - 'azure-arm-website.WebApps#listConnectionStringsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listConnectionStrings'
      - >-
        azure-arm-website.WebApps#getDiagnosticLogsConfigurationWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getDiagnosticLogsConfiguration'
      - >-
        azure-arm-website.WebApps#updateDiagnosticLogsConfigWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateDiagnosticLogsConfig'
      - 'azure-arm-website.WebApps#updateMetadataWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#updateMetadata'
      - 'azure-arm-website.WebApps#listMetadataWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listMetadata'
      - >-
        azure-arm-website.WebApps#listPublishingCredentialsWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listPublishingCredentials'
      - >-
        azure-arm-website.WebApps#updateSitePushSettingsWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateSitePushSettings'
      - 'azure-arm-website.WebApps#listSitePushSettingsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listSitePushSettings'
      - >-
        azure-arm-website.WebApps#listSlotConfigurationNamesWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listSlotConfigurationNames'
      - >-
        azure-arm-website.WebApps#updateSlotConfigurationNamesWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateSlotConfigurationNames'
      - 'azure-arm-website.WebApps#getConfigurationWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getConfiguration'
      - >-
        azure-arm-website.WebApps#createOrUpdateConfigurationWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateConfiguration'
      - 'azure-arm-website.WebApps#updateConfigurationWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#updateConfiguration'
      - >-
        azure-arm-website.WebApps#listConfigurationSnapshotInfoWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listConfigurationSnapshotInfo'
      - >-
        azure-arm-website.WebApps#getConfigurationSnapshotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getConfigurationSnapshot'
      - >-
        azure-arm-website.WebApps#recoverSiteConfigurationSnapshotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#recoverSiteConfigurationSnapshot'
      - 'azure-arm-website.WebApps#listDeploymentsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listDeployments'
      - 'azure-arm-website.WebApps#getDeploymentWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getDeployment'
      - 'azure-arm-website.WebApps#createDeploymentWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#createDeployment'
      - 'azure-arm-website.WebApps#deleteDeploymentWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#deleteDeployment'
      - >-
        azure-arm-website.WebApps#listDomainOwnershipIdentifiersWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listDomainOwnershipIdentifiers'
      - >-
        azure-arm-website.WebApps#getDomainOwnershipIdentifierWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getDomainOwnershipIdentifier'
      - >-
        azure-arm-website.WebApps#createOrUpdateDomainOwnershipIdentifierWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateDomainOwnershipIdentifier'
      - >-
        azure-arm-website.WebApps#deleteDomainOwnershipIdentifierWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteDomainOwnershipIdentifier'
      - >-
        azure-arm-website.WebApps#updateDomainOwnershipIdentifierWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateDomainOwnershipIdentifier'
      - 'azure-arm-website.WebApps#listHostNameBindingsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listHostNameBindings'
      - 'azure-arm-website.WebApps#getHostNameBindingWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getHostNameBinding'
      - >-
        azure-arm-website.WebApps#createOrUpdateHostNameBindingWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateHostNameBinding'
      - 'azure-arm-website.WebApps#deleteHostNameBindingWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#deleteHostNameBinding'
      - 'azure-arm-website.WebApps#getHybridConnectionWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getHybridConnection'
      - >-
        azure-arm-website.WebApps#createOrUpdateHybridConnectionWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateHybridConnection'
      - >-
        azure-arm-website.WebApps#deleteHybridConnectionWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteHybridConnection'
      - >-
        azure-arm-website.WebApps#updateHybridConnectionWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateHybridConnection'
      - >-
        azure-arm-website.WebApps#listHybridConnectionKeysWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listHybridConnectionKeys'
      - 'azure-arm-website.WebApps#listHybridConnectionsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listHybridConnections'
      - >-
        azure-arm-website.WebApps#listRelayServiceConnectionsWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listRelayServiceConnections'
      - >-
        azure-arm-website.WebApps#getRelayServiceConnectionWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getRelayServiceConnection'
      - >-
        azure-arm-website.WebApps#createOrUpdateRelayServiceConnectionWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateRelayServiceConnection'
      - >-
        azure-arm-website.WebApps#deleteRelayServiceConnectionWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteRelayServiceConnection'
      - >-
        azure-arm-website.WebApps#updateRelayServiceConnectionWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateRelayServiceConnection'
      - >-
        azure-arm-website.WebApps#listInstanceIdentifiersWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listInstanceIdentifiers'
      - >-
        azure-arm-website.WebApps#listInstanceDeploymentsWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listInstanceDeployments'
      - 'azure-arm-website.WebApps#getInstanceDeploymentWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getInstanceDeployment'
      - >-
        azure-arm-website.WebApps#createInstanceDeploymentWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createInstanceDeployment'
      - >-
        azure-arm-website.WebApps#deleteInstanceDeploymentWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteInstanceDeployment'
      - 'azure-arm-website.WebApps#isCloneableWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#isCloneable'
      - 'azure-arm-website.WebApps#listMetricDefinitionsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listMetricDefinitions'
      - 'azure-arm-website.WebApps#listMetricsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listMetrics'
      - 'azure-arm-website.WebApps#migrateStorageWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#migrateStorage'
      - 'azure-arm-website.WebApps#migrateMySqlWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#migrateMySql'
      - 'azure-arm-website.WebApps#getMigrateMySqlStatusWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getMigrateMySqlStatus'
      - 'azure-arm-website.WebApps#listNetworkFeaturesWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listNetworkFeatures'
      - >-
        azure-arm-website.WebApps#startWebSiteNetworkTraceWithHttpOperationResponse
      - 'azure-arm-website.WebApps#startWebSiteNetworkTrace'
      - >-
        azure-arm-website.WebApps#stopWebSiteNetworkTraceWithHttpOperationResponse
      - 'azure-arm-website.WebApps#stopWebSiteNetworkTrace'
      - >-
        azure-arm-website.WebApps#generateNewSitePublishingPasswordWithHttpOperationResponse
      - 'azure-arm-website.WebApps#generateNewSitePublishingPassword'
      - 'azure-arm-website.WebApps#listPerfMonCountersWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listPerfMonCounters'
      - >-
        azure-arm-website.WebApps#getSitePhpErrorLogFlagWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getSitePhpErrorLogFlag'
      - 'azure-arm-website.WebApps#listPremierAddOnsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listPremierAddOns'
      - 'azure-arm-website.WebApps#getPremierAddOnWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getPremierAddOn'
      - 'azure-arm-website.WebApps#addPremierAddOnWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#addPremierAddOn'
      - 'azure-arm-website.WebApps#deletePremierAddOnWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#deletePremierAddOn'
      - >-
        azure-arm-website.WebApps#listPublishingProfileXmlWithSecretsWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listPublishingProfileXmlWithSecrets'
      - 'azure-arm-website.WebApps#recoverWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#recover'
      - >-
        azure-arm-website.WebApps#resetProductionSlotConfigWithHttpOperationResponse
      - 'azure-arm-website.WebApps#resetProductionSlotConfig'
      - 'azure-arm-website.WebApps#restartWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#restart'
      - 'azure-arm-website.WebApps#listSlotsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listSlots'
      - 'azure-arm-website.WebApps#getSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getSlot'
      - 'azure-arm-website.WebApps#createOrUpdateSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#createOrUpdateSlot'
      - 'azure-arm-website.WebApps#deleteSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#deleteSlot'
      - >-
        azure-arm-website.WebApps#analyzeCustomHostnameSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#analyzeCustomHostnameSlot'
      - >-
        azure-arm-website.WebApps#applySlotConfigurationSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#applySlotConfigurationSlot'
      - 'azure-arm-website.WebApps#backupSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#backupSlot'
      - 'azure-arm-website.WebApps#listBackupsSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listBackupsSlot'
      - 'azure-arm-website.WebApps#discoverRestoreSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#discoverRestoreSlot'
      - 'azure-arm-website.WebApps#getBackupStatusSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getBackupStatusSlot'
      - 'azure-arm-website.WebApps#deleteBackupSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#deleteBackupSlot'
      - >-
        azure-arm-website.WebApps#listBackupStatusSecretsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listBackupStatusSecretsSlot'
      - 'azure-arm-website.WebApps#restoreSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#restoreSlot'
      - >-
        azure-arm-website.WebApps#updateApplicationSettingsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateApplicationSettingsSlot'
      - >-
        azure-arm-website.WebApps#listApplicationSettingsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listApplicationSettingsSlot'
      - >-
        azure-arm-website.WebApps#updateAuthSettingsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateAuthSettingsSlot'
      - 'azure-arm-website.WebApps#getAuthSettingsSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getAuthSettingsSlot'
      - >-
        azure-arm-website.WebApps#updateBackupConfigurationSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateBackupConfigurationSlot'
      - >-
        azure-arm-website.WebApps#deleteBackupConfigurationSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteBackupConfigurationSlot'
      - >-
        azure-arm-website.WebApps#getBackupConfigurationSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getBackupConfigurationSlot'
      - >-
        azure-arm-website.WebApps#updateConnectionStringsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateConnectionStringsSlot'
      - >-
        azure-arm-website.WebApps#listConnectionStringsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listConnectionStringsSlot'
      - >-
        azure-arm-website.WebApps#getDiagnosticLogsConfigurationSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getDiagnosticLogsConfigurationSlot'
      - >-
        azure-arm-website.WebApps#updateDiagnosticLogsConfigSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateDiagnosticLogsConfigSlot'
      - 'azure-arm-website.WebApps#updateMetadataSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#updateMetadataSlot'
      - 'azure-arm-website.WebApps#listMetadataSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listMetadataSlot'
      - >-
        azure-arm-website.WebApps#listPublishingCredentialsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listPublishingCredentialsSlot'
      - >-
        azure-arm-website.WebApps#updateSitePushSettingsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateSitePushSettingsSlot'
      - >-
        azure-arm-website.WebApps#listSitePushSettingsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listSitePushSettingsSlot'
      - 'azure-arm-website.WebApps#getConfigurationSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getConfigurationSlot'
      - >-
        azure-arm-website.WebApps#createOrUpdateConfigurationSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateConfigurationSlot'
      - >-
        azure-arm-website.WebApps#updateConfigurationSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateConfigurationSlot'
      - >-
        azure-arm-website.WebApps#listConfigurationSnapshotInfoSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listConfigurationSnapshotInfoSlot'
      - >-
        azure-arm-website.WebApps#getConfigurationSnapshotSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getConfigurationSnapshotSlot'
      - >-
        azure-arm-website.WebApps#recoverSiteConfigurationSnapshotSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#recoverSiteConfigurationSnapshotSlot'
      - 'azure-arm-website.WebApps#listDeploymentsSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listDeploymentsSlot'
      - 'azure-arm-website.WebApps#getDeploymentSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getDeploymentSlot'
      - 'azure-arm-website.WebApps#createDeploymentSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#createDeploymentSlot'
      - 'azure-arm-website.WebApps#deleteDeploymentSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#deleteDeploymentSlot'
      - >-
        azure-arm-website.WebApps#listDomainOwnershipIdentifiersSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listDomainOwnershipIdentifiersSlot'
      - >-
        azure-arm-website.WebApps#getDomainOwnershipIdentifierSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getDomainOwnershipIdentifierSlot'
      - >-
        azure-arm-website.WebApps#createOrUpdateDomainOwnershipIdentifierSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateDomainOwnershipIdentifierSlot'
      - >-
        azure-arm-website.WebApps#deleteDomainOwnershipIdentifierSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteDomainOwnershipIdentifierSlot'
      - >-
        azure-arm-website.WebApps#updateDomainOwnershipIdentifierSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateDomainOwnershipIdentifierSlot'
      - >-
        azure-arm-website.WebApps#listHostNameBindingsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listHostNameBindingsSlot'
      - >-
        azure-arm-website.WebApps#getHostNameBindingSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getHostNameBindingSlot'
      - >-
        azure-arm-website.WebApps#createOrUpdateHostNameBindingSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateHostNameBindingSlot'
      - >-
        azure-arm-website.WebApps#deleteHostNameBindingSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteHostNameBindingSlot'
      - >-
        azure-arm-website.WebApps#getHybridConnectionSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getHybridConnectionSlot'
      - >-
        azure-arm-website.WebApps#createOrUpdateHybridConnectionSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateHybridConnectionSlot'
      - >-
        azure-arm-website.WebApps#deleteHybridConnectionSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteHybridConnectionSlot'
      - >-
        azure-arm-website.WebApps#updateHybridConnectionSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateHybridConnectionSlot'
      - >-
        azure-arm-website.WebApps#listHybridConnectionKeysSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listHybridConnectionKeysSlot'
      - >-
        azure-arm-website.WebApps#listHybridConnectionsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listHybridConnectionsSlot'
      - >-
        azure-arm-website.WebApps#listRelayServiceConnectionsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listRelayServiceConnectionsSlot'
      - >-
        azure-arm-website.WebApps#getRelayServiceConnectionSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getRelayServiceConnectionSlot'
      - >-
        azure-arm-website.WebApps#createOrUpdateRelayServiceConnectionSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateRelayServiceConnectionSlot'
      - >-
        azure-arm-website.WebApps#deleteRelayServiceConnectionSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteRelayServiceConnectionSlot'
      - >-
        azure-arm-website.WebApps#updateRelayServiceConnectionSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateRelayServiceConnectionSlot'
      - >-
        azure-arm-website.WebApps#listInstanceIdentifiersSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listInstanceIdentifiersSlot'
      - >-
        azure-arm-website.WebApps#listInstanceDeploymentsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listInstanceDeploymentsSlot'
      - >-
        azure-arm-website.WebApps#getInstanceDeploymentSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getInstanceDeploymentSlot'
      - >-
        azure-arm-website.WebApps#createInstanceDeploymentSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createInstanceDeploymentSlot'
      - >-
        azure-arm-website.WebApps#deleteInstanceDeploymentSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteInstanceDeploymentSlot'
      - 'azure-arm-website.WebApps#isCloneableSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#isCloneableSlot'
      - >-
        azure-arm-website.WebApps#listMetricDefinitionsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listMetricDefinitionsSlot'
      - 'azure-arm-website.WebApps#listMetricsSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listMetricsSlot'
      - >-
        azure-arm-website.WebApps#getMigrateMySqlStatusSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getMigrateMySqlStatusSlot'
      - >-
        azure-arm-website.WebApps#listNetworkFeaturesSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listNetworkFeaturesSlot'
      - >-
        azure-arm-website.WebApps#startWebSiteNetworkTraceSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#startWebSiteNetworkTraceSlot'
      - >-
        azure-arm-website.WebApps#stopWebSiteNetworkTraceSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#stopWebSiteNetworkTraceSlot'
      - >-
        azure-arm-website.WebApps#generateNewSitePublishingPasswordSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#generateNewSitePublishingPasswordSlot'
      - >-
        azure-arm-website.WebApps#listPerfMonCountersSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listPerfMonCountersSlot'
      - >-
        azure-arm-website.WebApps#getSitePhpErrorLogFlagSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getSitePhpErrorLogFlagSlot'
      - 'azure-arm-website.WebApps#listPremierAddOnsSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listPremierAddOnsSlot'
      - 'azure-arm-website.WebApps#getPremierAddOnSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getPremierAddOnSlot'
      - 'azure-arm-website.WebApps#addPremierAddOnSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#addPremierAddOnSlot'
      - >-
        azure-arm-website.WebApps#deletePremierAddOnSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deletePremierAddOnSlot'
      - >-
        azure-arm-website.WebApps#listPublishingProfileXmlWithSecretsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listPublishingProfileXmlWithSecretsSlot'
      - 'azure-arm-website.WebApps#recoverSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#recoverSlot'
      - >-
        azure-arm-website.WebApps#resetSlotConfigurationSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#resetSlotConfigurationSlot'
      - 'azure-arm-website.WebApps#restartSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#restartSlot'
      - >-
        azure-arm-website.WebApps#listSlotDifferencesSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listSlotDifferencesSlot'
      - 'azure-arm-website.WebApps#swapSlotSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#swapSlotSlot'
      - 'azure-arm-website.WebApps#listSnapshotsSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listSnapshotsSlot'
      - 'azure-arm-website.WebApps#getSourceControlSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getSourceControlSlot'
      - >-
        azure-arm-website.WebApps#createOrUpdateSourceControlSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateSourceControlSlot'
      - >-
        azure-arm-website.WebApps#deleteSourceControlSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteSourceControlSlot'
      - 'azure-arm-website.WebApps#startSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#startSlot'
      - 'azure-arm-website.WebApps#stopSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#stopSlot'
      - 'azure-arm-website.WebApps#syncRepositorySlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#syncRepositorySlot'
      - 'azure-arm-website.WebApps#listUsagesSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listUsagesSlot'
      - >-
        azure-arm-website.WebApps#listVnetConnectionsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listVnetConnectionsSlot'
      - 'azure-arm-website.WebApps#getVnetConnectionSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getVnetConnectionSlot'
      - >-
        azure-arm-website.WebApps#createOrUpdateVnetConnectionSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateVnetConnectionSlot'
      - >-
        azure-arm-website.WebApps#deleteVnetConnectionSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#deleteVnetConnectionSlot'
      - >-
        azure-arm-website.WebApps#updateVnetConnectionSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateVnetConnectionSlot'
      - >-
        azure-arm-website.WebApps#getVnetConnectionGatewaySlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getVnetConnectionGatewaySlot'
      - >-
        azure-arm-website.WebApps#createOrUpdateVnetConnectionGatewaySlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateVnetConnectionGatewaySlot'
      - >-
        azure-arm-website.WebApps#updateVnetConnectionGatewaySlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateVnetConnectionGatewaySlot'
      - >-
        azure-arm-website.WebApps#listSlotDifferencesFromProductionWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listSlotDifferencesFromProduction'
      - >-
        azure-arm-website.WebApps#swapSlotWithProductionWithHttpOperationResponse
      - 'azure-arm-website.WebApps#swapSlotWithProduction'
      - 'azure-arm-website.WebApps#listSnapshotsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listSnapshots'
      - 'azure-arm-website.WebApps#getSourceControlWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getSourceControl'
      - >-
        azure-arm-website.WebApps#createOrUpdateSourceControlWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateSourceControl'
      - 'azure-arm-website.WebApps#deleteSourceControlWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#deleteSourceControl'
      - 'azure-arm-website.WebApps#startWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#start'
      - 'azure-arm-website.WebApps#stopWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#stop'
      - 'azure-arm-website.WebApps#syncRepositoryWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#syncRepository'
      - 'azure-arm-website.WebApps#listUsagesWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listUsages'
      - 'azure-arm-website.WebApps#listVnetConnectionsWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listVnetConnections'
      - 'azure-arm-website.WebApps#getVnetConnectionWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#getVnetConnection'
      - >-
        azure-arm-website.WebApps#createOrUpdateVnetConnectionWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateVnetConnection'
      - 'azure-arm-website.WebApps#deleteVnetConnectionWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#deleteVnetConnection'
      - 'azure-arm-website.WebApps#updateVnetConnectionWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#updateVnetConnection'
      - >-
        azure-arm-website.WebApps#getVnetConnectionGatewayWithHttpOperationResponse
      - 'azure-arm-website.WebApps#getVnetConnectionGateway'
      - >-
        azure-arm-website.WebApps#createOrUpdateVnetConnectionGatewayWithHttpOperationResponse
      - 'azure-arm-website.WebApps#createOrUpdateVnetConnectionGateway'
      - >-
        azure-arm-website.WebApps#updateVnetConnectionGatewayWithHttpOperationResponse
      - 'azure-arm-website.WebApps#updateVnetConnectionGateway'
      - 'azure-arm-website.WebApps#beginCreateOrUpdateWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#beginCreateOrUpdate'
      - 'azure-arm-website.WebApps#beginRestoreWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#beginRestore'
      - >-
        azure-arm-website.WebApps#beginListPublishingCredentialsWithHttpOperationResponse
      - 'azure-arm-website.WebApps#beginListPublishingCredentials'
      - 'azure-arm-website.WebApps#beginMigrateStorageWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#beginMigrateStorage'
      - 'azure-arm-website.WebApps#beginMigrateMySqlWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#beginMigrateMySql'
      - 'azure-arm-website.WebApps#beginRecoverWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#beginRecover'
      - >-
        azure-arm-website.WebApps#beginCreateOrUpdateSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#beginCreateOrUpdateSlot'
      - 'azure-arm-website.WebApps#beginRestoreSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#beginRestoreSlot'
      - >-
        azure-arm-website.WebApps#beginListPublishingCredentialsSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#beginListPublishingCredentialsSlot'
      - 'azure-arm-website.WebApps#beginRecoverSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#beginRecoverSlot'
      - 'azure-arm-website.WebApps#beginSwapSlotSlotWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#beginSwapSlotSlot'
      - >-
        azure-arm-website.WebApps#beginCreateOrUpdateSourceControlSlotWithHttpOperationResponse
      - 'azure-arm-website.WebApps#beginCreateOrUpdateSourceControlSlot'
      - >-
        azure-arm-website.WebApps#beginSwapSlotWithProductionWithHttpOperationResponse
      - 'azure-arm-website.WebApps#beginSwapSlotWithProduction'
      - >-
        azure-arm-website.WebApps#beginCreateOrUpdateSourceControlWithHttpOperationResponse
      - 'azure-arm-website.WebApps#beginCreateOrUpdateSourceControl'
      - 'azure-arm-website.WebApps#listNextWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listNext'
      - >-
        azure-arm-website.WebApps#listByResourceGroupNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listByResourceGroupNext'
      - 'azure-arm-website.WebApps#listBackupsNextWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listBackupsNext'
      - 'azure-arm-website.WebApps#listDeploymentsNextWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listDeploymentsNext'
      - >-
        azure-arm-website.WebApps#listDomainOwnershipIdentifiersNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listDomainOwnershipIdentifiersNext'
      - >-
        azure-arm-website.WebApps#listHostNameBindingsNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listHostNameBindingsNext'
      - >-
        azure-arm-website.WebApps#listInstanceIdentifiersNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listInstanceIdentifiersNext'
      - >-
        azure-arm-website.WebApps#listInstanceDeploymentsNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listInstanceDeploymentsNext'
      - >-
        azure-arm-website.WebApps#listMetricDefinitionsNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listMetricDefinitionsNext'
      - 'azure-arm-website.WebApps#listMetricsNextWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listMetricsNext'
      - >-
        azure-arm-website.WebApps#listPerfMonCountersNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listPerfMonCountersNext'
      - 'azure-arm-website.WebApps#listSlotsNextWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listSlotsNext'
      - 'azure-arm-website.WebApps#listBackupsSlotNextWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listBackupsSlotNext'
      - >-
        azure-arm-website.WebApps#listDeploymentsSlotNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listDeploymentsSlotNext'
      - >-
        azure-arm-website.WebApps#listDomainOwnershipIdentifiersSlotNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listDomainOwnershipIdentifiersSlotNext'
      - >-
        azure-arm-website.WebApps#listHostNameBindingsSlotNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listHostNameBindingsSlotNext'
      - >-
        azure-arm-website.WebApps#listInstanceIdentifiersSlotNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listInstanceIdentifiersSlotNext'
      - >-
        azure-arm-website.WebApps#listInstanceDeploymentsSlotNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listInstanceDeploymentsSlotNext'
      - >-
        azure-arm-website.WebApps#listMetricDefinitionsSlotNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listMetricDefinitionsSlotNext'
      - 'azure-arm-website.WebApps#listMetricsSlotNextWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listMetricsSlotNext'
      - >-
        azure-arm-website.WebApps#listPerfMonCountersSlotNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listPerfMonCountersSlotNext'
      - >-
        azure-arm-website.WebApps#listSlotDifferencesSlotNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listSlotDifferencesSlotNext'
      - 'azure-arm-website.WebApps#listSnapshotsSlotNextWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listSnapshotsSlotNext'
      - 'azure-arm-website.WebApps#listUsagesSlotNextWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listUsagesSlotNext'
      - >-
        azure-arm-website.WebApps#listSlotDifferencesFromProductionNextWithHttpOperationResponse
      - 'azure-arm-website.WebApps#listSlotDifferencesFromProductionNext'
      - 'azure-arm-website.WebApps#listSnapshotsNextWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listSnapshotsNext'
      - 'azure-arm-website.WebApps#listUsagesNextWithHttpOperationResponse'
      - 'azure-arm-website.WebApps#listUsagesNext'
  - id: 'azure-arm-website.WebApps.#ctor'
    uid: 'azure-arm-website.WebApps.#ctor'
    parent: azure-arm-website.WebApps
    name: WebApps()
    fullName: azure-arm-website.WebApps.WebApps()
    summary: ''
    type: Constructor
    syntax:
      content: new WebApps()
  - uid: 'azure-arm-website.WebApps#client'
    id: 'azure-arm-website.WebApps#client'
    parent: azure-arm-website.WebApps
    name: client
    summary: ''
    fullName: azure-arm-website.WebApps.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-website.WebApps#_list'
    id: 'azure-arm-website.WebApps#_list'
    parent: azure-arm-website.WebApps
    name: _list
    summary: ''
    fullName: azure-arm-website.WebApps._list
    type: Field
    syntax:
      content: _list
  - uid: 'azure-arm-website.WebApps#_listByResourceGroup'
    id: 'azure-arm-website.WebApps#_listByResourceGroup'
    parent: azure-arm-website.WebApps
    name: _listByResourceGroup
    summary: ''
    fullName: azure-arm-website.WebApps._listByResourceGroup
    type: Field
    syntax:
      content: _listByResourceGroup
  - uid: 'azure-arm-website.WebApps#_get'
    id: 'azure-arm-website.WebApps#_get'
    parent: azure-arm-website.WebApps
    name: _get
    summary: ''
    fullName: azure-arm-website.WebApps._get
    type: Field
    syntax:
      content: _get
  - uid: 'azure-arm-website.WebApps#_createOrUpdate'
    id: 'azure-arm-website.WebApps#_createOrUpdate'
    parent: azure-arm-website.WebApps
    name: _createOrUpdate
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdate
    type: Field
    syntax:
      content: _createOrUpdate
  - uid: 'azure-arm-website.WebApps#_deleteMethod'
    id: 'azure-arm-website.WebApps#_deleteMethod'
    parent: azure-arm-website.WebApps
    name: _deleteMethod
    summary: ''
    fullName: azure-arm-website.WebApps._deleteMethod
    type: Field
    syntax:
      content: _deleteMethod
  - uid: 'azure-arm-website.WebApps#_analyzeCustomHostname'
    id: 'azure-arm-website.WebApps#_analyzeCustomHostname'
    parent: azure-arm-website.WebApps
    name: _analyzeCustomHostname
    summary: ''
    fullName: azure-arm-website.WebApps._analyzeCustomHostname
    type: Field
    syntax:
      content: _analyzeCustomHostname
  - uid: 'azure-arm-website.WebApps#_applySlotConfigToProduction'
    id: 'azure-arm-website.WebApps#_applySlotConfigToProduction'
    parent: azure-arm-website.WebApps
    name: _applySlotConfigToProduction
    summary: ''
    fullName: azure-arm-website.WebApps._applySlotConfigToProduction
    type: Field
    syntax:
      content: _applySlotConfigToProduction
  - uid: 'azure-arm-website.WebApps#_backup'
    id: 'azure-arm-website.WebApps#_backup'
    parent: azure-arm-website.WebApps
    name: _backup
    summary: ''
    fullName: azure-arm-website.WebApps._backup
    type: Field
    syntax:
      content: _backup
  - uid: 'azure-arm-website.WebApps#_listBackups'
    id: 'azure-arm-website.WebApps#_listBackups'
    parent: azure-arm-website.WebApps
    name: _listBackups
    summary: ''
    fullName: azure-arm-website.WebApps._listBackups
    type: Field
    syntax:
      content: _listBackups
  - uid: 'azure-arm-website.WebApps#_discoverRestore'
    id: 'azure-arm-website.WebApps#_discoverRestore'
    parent: azure-arm-website.WebApps
    name: _discoverRestore
    summary: ''
    fullName: azure-arm-website.WebApps._discoverRestore
    type: Field
    syntax:
      content: _discoverRestore
  - uid: 'azure-arm-website.WebApps#_getBackupStatus'
    id: 'azure-arm-website.WebApps#_getBackupStatus'
    parent: azure-arm-website.WebApps
    name: _getBackupStatus
    summary: ''
    fullName: azure-arm-website.WebApps._getBackupStatus
    type: Field
    syntax:
      content: _getBackupStatus
  - uid: 'azure-arm-website.WebApps#_deleteBackup'
    id: 'azure-arm-website.WebApps#_deleteBackup'
    parent: azure-arm-website.WebApps
    name: _deleteBackup
    summary: ''
    fullName: azure-arm-website.WebApps._deleteBackup
    type: Field
    syntax:
      content: _deleteBackup
  - uid: 'azure-arm-website.WebApps#_listBackupStatusSecrets'
    id: 'azure-arm-website.WebApps#_listBackupStatusSecrets'
    parent: azure-arm-website.WebApps
    name: _listBackupStatusSecrets
    summary: ''
    fullName: azure-arm-website.WebApps._listBackupStatusSecrets
    type: Field
    syntax:
      content: _listBackupStatusSecrets
  - uid: 'azure-arm-website.WebApps#_restore'
    id: 'azure-arm-website.WebApps#_restore'
    parent: azure-arm-website.WebApps
    name: _restore
    summary: ''
    fullName: azure-arm-website.WebApps._restore
    type: Field
    syntax:
      content: _restore
  - uid: 'azure-arm-website.WebApps#_updateApplicationSettings'
    id: 'azure-arm-website.WebApps#_updateApplicationSettings'
    parent: azure-arm-website.WebApps
    name: _updateApplicationSettings
    summary: ''
    fullName: azure-arm-website.WebApps._updateApplicationSettings
    type: Field
    syntax:
      content: _updateApplicationSettings
  - uid: 'azure-arm-website.WebApps#_listApplicationSettings'
    id: 'azure-arm-website.WebApps#_listApplicationSettings'
    parent: azure-arm-website.WebApps
    name: _listApplicationSettings
    summary: ''
    fullName: azure-arm-website.WebApps._listApplicationSettings
    type: Field
    syntax:
      content: _listApplicationSettings
  - uid: 'azure-arm-website.WebApps#_updateAuthSettings'
    id: 'azure-arm-website.WebApps#_updateAuthSettings'
    parent: azure-arm-website.WebApps
    name: _updateAuthSettings
    summary: ''
    fullName: azure-arm-website.WebApps._updateAuthSettings
    type: Field
    syntax:
      content: _updateAuthSettings
  - uid: 'azure-arm-website.WebApps#_getAuthSettings'
    id: 'azure-arm-website.WebApps#_getAuthSettings'
    parent: azure-arm-website.WebApps
    name: _getAuthSettings
    summary: ''
    fullName: azure-arm-website.WebApps._getAuthSettings
    type: Field
    syntax:
      content: _getAuthSettings
  - uid: 'azure-arm-website.WebApps#_updateBackupConfiguration'
    id: 'azure-arm-website.WebApps#_updateBackupConfiguration'
    parent: azure-arm-website.WebApps
    name: _updateBackupConfiguration
    summary: ''
    fullName: azure-arm-website.WebApps._updateBackupConfiguration
    type: Field
    syntax:
      content: _updateBackupConfiguration
  - uid: 'azure-arm-website.WebApps#_deleteBackupConfiguration'
    id: 'azure-arm-website.WebApps#_deleteBackupConfiguration'
    parent: azure-arm-website.WebApps
    name: _deleteBackupConfiguration
    summary: ''
    fullName: azure-arm-website.WebApps._deleteBackupConfiguration
    type: Field
    syntax:
      content: _deleteBackupConfiguration
  - uid: 'azure-arm-website.WebApps#_getBackupConfiguration'
    id: 'azure-arm-website.WebApps#_getBackupConfiguration'
    parent: azure-arm-website.WebApps
    name: _getBackupConfiguration
    summary: ''
    fullName: azure-arm-website.WebApps._getBackupConfiguration
    type: Field
    syntax:
      content: _getBackupConfiguration
  - uid: 'azure-arm-website.WebApps#_updateConnectionStrings'
    id: 'azure-arm-website.WebApps#_updateConnectionStrings'
    parent: azure-arm-website.WebApps
    name: _updateConnectionStrings
    summary: ''
    fullName: azure-arm-website.WebApps._updateConnectionStrings
    type: Field
    syntax:
      content: _updateConnectionStrings
  - uid: 'azure-arm-website.WebApps#_listConnectionStrings'
    id: 'azure-arm-website.WebApps#_listConnectionStrings'
    parent: azure-arm-website.WebApps
    name: _listConnectionStrings
    summary: ''
    fullName: azure-arm-website.WebApps._listConnectionStrings
    type: Field
    syntax:
      content: _listConnectionStrings
  - uid: 'azure-arm-website.WebApps#_getDiagnosticLogsConfiguration'
    id: 'azure-arm-website.WebApps#_getDiagnosticLogsConfiguration'
    parent: azure-arm-website.WebApps
    name: _getDiagnosticLogsConfiguration
    summary: ''
    fullName: azure-arm-website.WebApps._getDiagnosticLogsConfiguration
    type: Field
    syntax:
      content: _getDiagnosticLogsConfiguration
  - uid: 'azure-arm-website.WebApps#_updateDiagnosticLogsConfig'
    id: 'azure-arm-website.WebApps#_updateDiagnosticLogsConfig'
    parent: azure-arm-website.WebApps
    name: _updateDiagnosticLogsConfig
    summary: ''
    fullName: azure-arm-website.WebApps._updateDiagnosticLogsConfig
    type: Field
    syntax:
      content: _updateDiagnosticLogsConfig
  - uid: 'azure-arm-website.WebApps#_updateMetadata'
    id: 'azure-arm-website.WebApps#_updateMetadata'
    parent: azure-arm-website.WebApps
    name: _updateMetadata
    summary: ''
    fullName: azure-arm-website.WebApps._updateMetadata
    type: Field
    syntax:
      content: _updateMetadata
  - uid: 'azure-arm-website.WebApps#_listMetadata'
    id: 'azure-arm-website.WebApps#_listMetadata'
    parent: azure-arm-website.WebApps
    name: _listMetadata
    summary: ''
    fullName: azure-arm-website.WebApps._listMetadata
    type: Field
    syntax:
      content: _listMetadata
  - uid: 'azure-arm-website.WebApps#_listPublishingCredentials'
    id: 'azure-arm-website.WebApps#_listPublishingCredentials'
    parent: azure-arm-website.WebApps
    name: _listPublishingCredentials
    summary: ''
    fullName: azure-arm-website.WebApps._listPublishingCredentials
    type: Field
    syntax:
      content: _listPublishingCredentials
  - uid: 'azure-arm-website.WebApps#_updateSitePushSettings'
    id: 'azure-arm-website.WebApps#_updateSitePushSettings'
    parent: azure-arm-website.WebApps
    name: _updateSitePushSettings
    summary: ''
    fullName: azure-arm-website.WebApps._updateSitePushSettings
    type: Field
    syntax:
      content: _updateSitePushSettings
  - uid: 'azure-arm-website.WebApps#_listSitePushSettings'
    id: 'azure-arm-website.WebApps#_listSitePushSettings'
    parent: azure-arm-website.WebApps
    name: _listSitePushSettings
    summary: ''
    fullName: azure-arm-website.WebApps._listSitePushSettings
    type: Field
    syntax:
      content: _listSitePushSettings
  - uid: 'azure-arm-website.WebApps#_listSlotConfigurationNames'
    id: 'azure-arm-website.WebApps#_listSlotConfigurationNames'
    parent: azure-arm-website.WebApps
    name: _listSlotConfigurationNames
    summary: ''
    fullName: azure-arm-website.WebApps._listSlotConfigurationNames
    type: Field
    syntax:
      content: _listSlotConfigurationNames
  - uid: 'azure-arm-website.WebApps#_updateSlotConfigurationNames'
    id: 'azure-arm-website.WebApps#_updateSlotConfigurationNames'
    parent: azure-arm-website.WebApps
    name: _updateSlotConfigurationNames
    summary: ''
    fullName: azure-arm-website.WebApps._updateSlotConfigurationNames
    type: Field
    syntax:
      content: _updateSlotConfigurationNames
  - uid: 'azure-arm-website.WebApps#_getConfiguration'
    id: 'azure-arm-website.WebApps#_getConfiguration'
    parent: azure-arm-website.WebApps
    name: _getConfiguration
    summary: ''
    fullName: azure-arm-website.WebApps._getConfiguration
    type: Field
    syntax:
      content: _getConfiguration
  - uid: 'azure-arm-website.WebApps#_createOrUpdateConfiguration'
    id: 'azure-arm-website.WebApps#_createOrUpdateConfiguration'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateConfiguration
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateConfiguration
    type: Field
    syntax:
      content: _createOrUpdateConfiguration
  - uid: 'azure-arm-website.WebApps#_updateConfiguration'
    id: 'azure-arm-website.WebApps#_updateConfiguration'
    parent: azure-arm-website.WebApps
    name: _updateConfiguration
    summary: ''
    fullName: azure-arm-website.WebApps._updateConfiguration
    type: Field
    syntax:
      content: _updateConfiguration
  - uid: 'azure-arm-website.WebApps#_listConfigurationSnapshotInfo'
    id: 'azure-arm-website.WebApps#_listConfigurationSnapshotInfo'
    parent: azure-arm-website.WebApps
    name: _listConfigurationSnapshotInfo
    summary: ''
    fullName: azure-arm-website.WebApps._listConfigurationSnapshotInfo
    type: Field
    syntax:
      content: _listConfigurationSnapshotInfo
  - uid: 'azure-arm-website.WebApps#_getConfigurationSnapshot'
    id: 'azure-arm-website.WebApps#_getConfigurationSnapshot'
    parent: azure-arm-website.WebApps
    name: _getConfigurationSnapshot
    summary: ''
    fullName: azure-arm-website.WebApps._getConfigurationSnapshot
    type: Field
    syntax:
      content: _getConfigurationSnapshot
  - uid: 'azure-arm-website.WebApps#_recoverSiteConfigurationSnapshot'
    id: 'azure-arm-website.WebApps#_recoverSiteConfigurationSnapshot'
    parent: azure-arm-website.WebApps
    name: _recoverSiteConfigurationSnapshot
    summary: ''
    fullName: azure-arm-website.WebApps._recoverSiteConfigurationSnapshot
    type: Field
    syntax:
      content: _recoverSiteConfigurationSnapshot
  - uid: 'azure-arm-website.WebApps#_listDeployments'
    id: 'azure-arm-website.WebApps#_listDeployments'
    parent: azure-arm-website.WebApps
    name: _listDeployments
    summary: ''
    fullName: azure-arm-website.WebApps._listDeployments
    type: Field
    syntax:
      content: _listDeployments
  - uid: 'azure-arm-website.WebApps#_getDeployment'
    id: 'azure-arm-website.WebApps#_getDeployment'
    parent: azure-arm-website.WebApps
    name: _getDeployment
    summary: ''
    fullName: azure-arm-website.WebApps._getDeployment
    type: Field
    syntax:
      content: _getDeployment
  - uid: 'azure-arm-website.WebApps#_createDeployment'
    id: 'azure-arm-website.WebApps#_createDeployment'
    parent: azure-arm-website.WebApps
    name: _createDeployment
    summary: ''
    fullName: azure-arm-website.WebApps._createDeployment
    type: Field
    syntax:
      content: _createDeployment
  - uid: 'azure-arm-website.WebApps#_deleteDeployment'
    id: 'azure-arm-website.WebApps#_deleteDeployment'
    parent: azure-arm-website.WebApps
    name: _deleteDeployment
    summary: ''
    fullName: azure-arm-website.WebApps._deleteDeployment
    type: Field
    syntax:
      content: _deleteDeployment
  - uid: 'azure-arm-website.WebApps#_listDomainOwnershipIdentifiers'
    id: 'azure-arm-website.WebApps#_listDomainOwnershipIdentifiers'
    parent: azure-arm-website.WebApps
    name: _listDomainOwnershipIdentifiers
    summary: ''
    fullName: azure-arm-website.WebApps._listDomainOwnershipIdentifiers
    type: Field
    syntax:
      content: _listDomainOwnershipIdentifiers
  - uid: 'azure-arm-website.WebApps#_getDomainOwnershipIdentifier'
    id: 'azure-arm-website.WebApps#_getDomainOwnershipIdentifier'
    parent: azure-arm-website.WebApps
    name: _getDomainOwnershipIdentifier
    summary: ''
    fullName: azure-arm-website.WebApps._getDomainOwnershipIdentifier
    type: Field
    syntax:
      content: _getDomainOwnershipIdentifier
  - uid: 'azure-arm-website.WebApps#_createOrUpdateDomainOwnershipIdentifier'
    id: 'azure-arm-website.WebApps#_createOrUpdateDomainOwnershipIdentifier'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateDomainOwnershipIdentifier
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateDomainOwnershipIdentifier
    type: Field
    syntax:
      content: _createOrUpdateDomainOwnershipIdentifier
  - uid: 'azure-arm-website.WebApps#_deleteDomainOwnershipIdentifier'
    id: 'azure-arm-website.WebApps#_deleteDomainOwnershipIdentifier'
    parent: azure-arm-website.WebApps
    name: _deleteDomainOwnershipIdentifier
    summary: ''
    fullName: azure-arm-website.WebApps._deleteDomainOwnershipIdentifier
    type: Field
    syntax:
      content: _deleteDomainOwnershipIdentifier
  - uid: 'azure-arm-website.WebApps#_updateDomainOwnershipIdentifier'
    id: 'azure-arm-website.WebApps#_updateDomainOwnershipIdentifier'
    parent: azure-arm-website.WebApps
    name: _updateDomainOwnershipIdentifier
    summary: ''
    fullName: azure-arm-website.WebApps._updateDomainOwnershipIdentifier
    type: Field
    syntax:
      content: _updateDomainOwnershipIdentifier
  - uid: 'azure-arm-website.WebApps#_listHostNameBindings'
    id: 'azure-arm-website.WebApps#_listHostNameBindings'
    parent: azure-arm-website.WebApps
    name: _listHostNameBindings
    summary: ''
    fullName: azure-arm-website.WebApps._listHostNameBindings
    type: Field
    syntax:
      content: _listHostNameBindings
  - uid: 'azure-arm-website.WebApps#_getHostNameBinding'
    id: 'azure-arm-website.WebApps#_getHostNameBinding'
    parent: azure-arm-website.WebApps
    name: _getHostNameBinding
    summary: ''
    fullName: azure-arm-website.WebApps._getHostNameBinding
    type: Field
    syntax:
      content: _getHostNameBinding
  - uid: 'azure-arm-website.WebApps#_createOrUpdateHostNameBinding'
    id: 'azure-arm-website.WebApps#_createOrUpdateHostNameBinding'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateHostNameBinding
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateHostNameBinding
    type: Field
    syntax:
      content: _createOrUpdateHostNameBinding
  - uid: 'azure-arm-website.WebApps#_deleteHostNameBinding'
    id: 'azure-arm-website.WebApps#_deleteHostNameBinding'
    parent: azure-arm-website.WebApps
    name: _deleteHostNameBinding
    summary: ''
    fullName: azure-arm-website.WebApps._deleteHostNameBinding
    type: Field
    syntax:
      content: _deleteHostNameBinding
  - uid: 'azure-arm-website.WebApps#_getHybridConnection'
    id: 'azure-arm-website.WebApps#_getHybridConnection'
    parent: azure-arm-website.WebApps
    name: _getHybridConnection
    summary: ''
    fullName: azure-arm-website.WebApps._getHybridConnection
    type: Field
    syntax:
      content: _getHybridConnection
  - uid: 'azure-arm-website.WebApps#_createOrUpdateHybridConnection'
    id: 'azure-arm-website.WebApps#_createOrUpdateHybridConnection'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateHybridConnection
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateHybridConnection
    type: Field
    syntax:
      content: _createOrUpdateHybridConnection
  - uid: 'azure-arm-website.WebApps#_deleteHybridConnection'
    id: 'azure-arm-website.WebApps#_deleteHybridConnection'
    parent: azure-arm-website.WebApps
    name: _deleteHybridConnection
    summary: ''
    fullName: azure-arm-website.WebApps._deleteHybridConnection
    type: Field
    syntax:
      content: _deleteHybridConnection
  - uid: 'azure-arm-website.WebApps#_updateHybridConnection'
    id: 'azure-arm-website.WebApps#_updateHybridConnection'
    parent: azure-arm-website.WebApps
    name: _updateHybridConnection
    summary: ''
    fullName: azure-arm-website.WebApps._updateHybridConnection
    type: Field
    syntax:
      content: _updateHybridConnection
  - uid: 'azure-arm-website.WebApps#_listHybridConnectionKeys'
    id: 'azure-arm-website.WebApps#_listHybridConnectionKeys'
    parent: azure-arm-website.WebApps
    name: _listHybridConnectionKeys
    summary: ''
    fullName: azure-arm-website.WebApps._listHybridConnectionKeys
    type: Field
    syntax:
      content: _listHybridConnectionKeys
  - uid: 'azure-arm-website.WebApps#_listHybridConnections'
    id: 'azure-arm-website.WebApps#_listHybridConnections'
    parent: azure-arm-website.WebApps
    name: _listHybridConnections
    summary: ''
    fullName: azure-arm-website.WebApps._listHybridConnections
    type: Field
    syntax:
      content: _listHybridConnections
  - uid: 'azure-arm-website.WebApps#_listRelayServiceConnections'
    id: 'azure-arm-website.WebApps#_listRelayServiceConnections'
    parent: azure-arm-website.WebApps
    name: _listRelayServiceConnections
    summary: ''
    fullName: azure-arm-website.WebApps._listRelayServiceConnections
    type: Field
    syntax:
      content: _listRelayServiceConnections
  - uid: 'azure-arm-website.WebApps#_getRelayServiceConnection'
    id: 'azure-arm-website.WebApps#_getRelayServiceConnection'
    parent: azure-arm-website.WebApps
    name: _getRelayServiceConnection
    summary: ''
    fullName: azure-arm-website.WebApps._getRelayServiceConnection
    type: Field
    syntax:
      content: _getRelayServiceConnection
  - uid: 'azure-arm-website.WebApps#_createOrUpdateRelayServiceConnection'
    id: 'azure-arm-website.WebApps#_createOrUpdateRelayServiceConnection'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateRelayServiceConnection
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateRelayServiceConnection
    type: Field
    syntax:
      content: _createOrUpdateRelayServiceConnection
  - uid: 'azure-arm-website.WebApps#_deleteRelayServiceConnection'
    id: 'azure-arm-website.WebApps#_deleteRelayServiceConnection'
    parent: azure-arm-website.WebApps
    name: _deleteRelayServiceConnection
    summary: ''
    fullName: azure-arm-website.WebApps._deleteRelayServiceConnection
    type: Field
    syntax:
      content: _deleteRelayServiceConnection
  - uid: 'azure-arm-website.WebApps#_updateRelayServiceConnection'
    id: 'azure-arm-website.WebApps#_updateRelayServiceConnection'
    parent: azure-arm-website.WebApps
    name: _updateRelayServiceConnection
    summary: ''
    fullName: azure-arm-website.WebApps._updateRelayServiceConnection
    type: Field
    syntax:
      content: _updateRelayServiceConnection
  - uid: 'azure-arm-website.WebApps#_listInstanceIdentifiers'
    id: 'azure-arm-website.WebApps#_listInstanceIdentifiers'
    parent: azure-arm-website.WebApps
    name: _listInstanceIdentifiers
    summary: ''
    fullName: azure-arm-website.WebApps._listInstanceIdentifiers
    type: Field
    syntax:
      content: _listInstanceIdentifiers
  - uid: 'azure-arm-website.WebApps#_listInstanceDeployments'
    id: 'azure-arm-website.WebApps#_listInstanceDeployments'
    parent: azure-arm-website.WebApps
    name: _listInstanceDeployments
    summary: ''
    fullName: azure-arm-website.WebApps._listInstanceDeployments
    type: Field
    syntax:
      content: _listInstanceDeployments
  - uid: 'azure-arm-website.WebApps#_getInstanceDeployment'
    id: 'azure-arm-website.WebApps#_getInstanceDeployment'
    parent: azure-arm-website.WebApps
    name: _getInstanceDeployment
    summary: ''
    fullName: azure-arm-website.WebApps._getInstanceDeployment
    type: Field
    syntax:
      content: _getInstanceDeployment
  - uid: 'azure-arm-website.WebApps#_createInstanceDeployment'
    id: 'azure-arm-website.WebApps#_createInstanceDeployment'
    parent: azure-arm-website.WebApps
    name: _createInstanceDeployment
    summary: ''
    fullName: azure-arm-website.WebApps._createInstanceDeployment
    type: Field
    syntax:
      content: _createInstanceDeployment
  - uid: 'azure-arm-website.WebApps#_deleteInstanceDeployment'
    id: 'azure-arm-website.WebApps#_deleteInstanceDeployment'
    parent: azure-arm-website.WebApps
    name: _deleteInstanceDeployment
    summary: ''
    fullName: azure-arm-website.WebApps._deleteInstanceDeployment
    type: Field
    syntax:
      content: _deleteInstanceDeployment
  - uid: 'azure-arm-website.WebApps#_isCloneable'
    id: 'azure-arm-website.WebApps#_isCloneable'
    parent: azure-arm-website.WebApps
    name: _isCloneable
    summary: ''
    fullName: azure-arm-website.WebApps._isCloneable
    type: Field
    syntax:
      content: _isCloneable
  - uid: 'azure-arm-website.WebApps#_listMetricDefinitions'
    id: 'azure-arm-website.WebApps#_listMetricDefinitions'
    parent: azure-arm-website.WebApps
    name: _listMetricDefinitions
    summary: ''
    fullName: azure-arm-website.WebApps._listMetricDefinitions
    type: Field
    syntax:
      content: _listMetricDefinitions
  - uid: 'azure-arm-website.WebApps#_listMetrics'
    id: 'azure-arm-website.WebApps#_listMetrics'
    parent: azure-arm-website.WebApps
    name: _listMetrics
    summary: ''
    fullName: azure-arm-website.WebApps._listMetrics
    type: Field
    syntax:
      content: _listMetrics
  - uid: 'azure-arm-website.WebApps#_migrateStorage'
    id: 'azure-arm-website.WebApps#_migrateStorage'
    parent: azure-arm-website.WebApps
    name: _migrateStorage
    summary: ''
    fullName: azure-arm-website.WebApps._migrateStorage
    type: Field
    syntax:
      content: _migrateStorage
  - uid: 'azure-arm-website.WebApps#_migrateMySql'
    id: 'azure-arm-website.WebApps#_migrateMySql'
    parent: azure-arm-website.WebApps
    name: _migrateMySql
    summary: ''
    fullName: azure-arm-website.WebApps._migrateMySql
    type: Field
    syntax:
      content: _migrateMySql
  - uid: 'azure-arm-website.WebApps#_getMigrateMySqlStatus'
    id: 'azure-arm-website.WebApps#_getMigrateMySqlStatus'
    parent: azure-arm-website.WebApps
    name: _getMigrateMySqlStatus
    summary: ''
    fullName: azure-arm-website.WebApps._getMigrateMySqlStatus
    type: Field
    syntax:
      content: _getMigrateMySqlStatus
  - uid: 'azure-arm-website.WebApps#_listNetworkFeatures'
    id: 'azure-arm-website.WebApps#_listNetworkFeatures'
    parent: azure-arm-website.WebApps
    name: _listNetworkFeatures
    summary: ''
    fullName: azure-arm-website.WebApps._listNetworkFeatures
    type: Field
    syntax:
      content: _listNetworkFeatures
  - uid: 'azure-arm-website.WebApps#_startWebSiteNetworkTrace'
    id: 'azure-arm-website.WebApps#_startWebSiteNetworkTrace'
    parent: azure-arm-website.WebApps
    name: _startWebSiteNetworkTrace
    summary: ''
    fullName: azure-arm-website.WebApps._startWebSiteNetworkTrace
    type: Field
    syntax:
      content: _startWebSiteNetworkTrace
  - uid: 'azure-arm-website.WebApps#_stopWebSiteNetworkTrace'
    id: 'azure-arm-website.WebApps#_stopWebSiteNetworkTrace'
    parent: azure-arm-website.WebApps
    name: _stopWebSiteNetworkTrace
    summary: ''
    fullName: azure-arm-website.WebApps._stopWebSiteNetworkTrace
    type: Field
    syntax:
      content: _stopWebSiteNetworkTrace
  - uid: 'azure-arm-website.WebApps#_generateNewSitePublishingPassword'
    id: 'azure-arm-website.WebApps#_generateNewSitePublishingPassword'
    parent: azure-arm-website.WebApps
    name: _generateNewSitePublishingPassword
    summary: ''
    fullName: azure-arm-website.WebApps._generateNewSitePublishingPassword
    type: Field
    syntax:
      content: _generateNewSitePublishingPassword
  - uid: 'azure-arm-website.WebApps#_listPerfMonCounters'
    id: 'azure-arm-website.WebApps#_listPerfMonCounters'
    parent: azure-arm-website.WebApps
    name: _listPerfMonCounters
    summary: ''
    fullName: azure-arm-website.WebApps._listPerfMonCounters
    type: Field
    syntax:
      content: _listPerfMonCounters
  - uid: 'azure-arm-website.WebApps#_getSitePhpErrorLogFlag'
    id: 'azure-arm-website.WebApps#_getSitePhpErrorLogFlag'
    parent: azure-arm-website.WebApps
    name: _getSitePhpErrorLogFlag
    summary: ''
    fullName: azure-arm-website.WebApps._getSitePhpErrorLogFlag
    type: Field
    syntax:
      content: _getSitePhpErrorLogFlag
  - uid: 'azure-arm-website.WebApps#_listPremierAddOns'
    id: 'azure-arm-website.WebApps#_listPremierAddOns'
    parent: azure-arm-website.WebApps
    name: _listPremierAddOns
    summary: ''
    fullName: azure-arm-website.WebApps._listPremierAddOns
    type: Field
    syntax:
      content: _listPremierAddOns
  - uid: 'azure-arm-website.WebApps#_getPremierAddOn'
    id: 'azure-arm-website.WebApps#_getPremierAddOn'
    parent: azure-arm-website.WebApps
    name: _getPremierAddOn
    summary: ''
    fullName: azure-arm-website.WebApps._getPremierAddOn
    type: Field
    syntax:
      content: _getPremierAddOn
  - uid: 'azure-arm-website.WebApps#_addPremierAddOn'
    id: 'azure-arm-website.WebApps#_addPremierAddOn'
    parent: azure-arm-website.WebApps
    name: _addPremierAddOn
    summary: ''
    fullName: azure-arm-website.WebApps._addPremierAddOn
    type: Field
    syntax:
      content: _addPremierAddOn
  - uid: 'azure-arm-website.WebApps#_deletePremierAddOn'
    id: 'azure-arm-website.WebApps#_deletePremierAddOn'
    parent: azure-arm-website.WebApps
    name: _deletePremierAddOn
    summary: ''
    fullName: azure-arm-website.WebApps._deletePremierAddOn
    type: Field
    syntax:
      content: _deletePremierAddOn
  - uid: 'azure-arm-website.WebApps#_listPublishingProfileXmlWithSecrets'
    id: 'azure-arm-website.WebApps#_listPublishingProfileXmlWithSecrets'
    parent: azure-arm-website.WebApps
    name: _listPublishingProfileXmlWithSecrets
    summary: ''
    fullName: azure-arm-website.WebApps._listPublishingProfileXmlWithSecrets
    type: Field
    syntax:
      content: _listPublishingProfileXmlWithSecrets
  - uid: 'azure-arm-website.WebApps#_recover'
    id: 'azure-arm-website.WebApps#_recover'
    parent: azure-arm-website.WebApps
    name: _recover
    summary: ''
    fullName: azure-arm-website.WebApps._recover
    type: Field
    syntax:
      content: _recover
  - uid: 'azure-arm-website.WebApps#_resetProductionSlotConfig'
    id: 'azure-arm-website.WebApps#_resetProductionSlotConfig'
    parent: azure-arm-website.WebApps
    name: _resetProductionSlotConfig
    summary: ''
    fullName: azure-arm-website.WebApps._resetProductionSlotConfig
    type: Field
    syntax:
      content: _resetProductionSlotConfig
  - uid: 'azure-arm-website.WebApps#_restart'
    id: 'azure-arm-website.WebApps#_restart'
    parent: azure-arm-website.WebApps
    name: _restart
    summary: ''
    fullName: azure-arm-website.WebApps._restart
    type: Field
    syntax:
      content: _restart
  - uid: 'azure-arm-website.WebApps#_listSlots'
    id: 'azure-arm-website.WebApps#_listSlots'
    parent: azure-arm-website.WebApps
    name: _listSlots
    summary: ''
    fullName: azure-arm-website.WebApps._listSlots
    type: Field
    syntax:
      content: _listSlots
  - uid: 'azure-arm-website.WebApps#_getSlot'
    id: 'azure-arm-website.WebApps#_getSlot'
    parent: azure-arm-website.WebApps
    name: _getSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getSlot
    type: Field
    syntax:
      content: _getSlot
  - uid: 'azure-arm-website.WebApps#_createOrUpdateSlot'
    id: 'azure-arm-website.WebApps#_createOrUpdateSlot'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateSlot
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateSlot
    type: Field
    syntax:
      content: _createOrUpdateSlot
  - uid: 'azure-arm-website.WebApps#_deleteSlot'
    id: 'azure-arm-website.WebApps#_deleteSlot'
    parent: azure-arm-website.WebApps
    name: _deleteSlot
    summary: ''
    fullName: azure-arm-website.WebApps._deleteSlot
    type: Field
    syntax:
      content: _deleteSlot
  - uid: 'azure-arm-website.WebApps#_analyzeCustomHostnameSlot'
    id: 'azure-arm-website.WebApps#_analyzeCustomHostnameSlot'
    parent: azure-arm-website.WebApps
    name: _analyzeCustomHostnameSlot
    summary: ''
    fullName: azure-arm-website.WebApps._analyzeCustomHostnameSlot
    type: Field
    syntax:
      content: _analyzeCustomHostnameSlot
  - uid: 'azure-arm-website.WebApps#_applySlotConfigurationSlot'
    id: 'azure-arm-website.WebApps#_applySlotConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: _applySlotConfigurationSlot
    summary: ''
    fullName: azure-arm-website.WebApps._applySlotConfigurationSlot
    type: Field
    syntax:
      content: _applySlotConfigurationSlot
  - uid: 'azure-arm-website.WebApps#_backupSlot'
    id: 'azure-arm-website.WebApps#_backupSlot'
    parent: azure-arm-website.WebApps
    name: _backupSlot
    summary: ''
    fullName: azure-arm-website.WebApps._backupSlot
    type: Field
    syntax:
      content: _backupSlot
  - uid: 'azure-arm-website.WebApps#_listBackupsSlot'
    id: 'azure-arm-website.WebApps#_listBackupsSlot'
    parent: azure-arm-website.WebApps
    name: _listBackupsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listBackupsSlot
    type: Field
    syntax:
      content: _listBackupsSlot
  - uid: 'azure-arm-website.WebApps#_discoverRestoreSlot'
    id: 'azure-arm-website.WebApps#_discoverRestoreSlot'
    parent: azure-arm-website.WebApps
    name: _discoverRestoreSlot
    summary: ''
    fullName: azure-arm-website.WebApps._discoverRestoreSlot
    type: Field
    syntax:
      content: _discoverRestoreSlot
  - uid: 'azure-arm-website.WebApps#_getBackupStatusSlot'
    id: 'azure-arm-website.WebApps#_getBackupStatusSlot'
    parent: azure-arm-website.WebApps
    name: _getBackupStatusSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getBackupStatusSlot
    type: Field
    syntax:
      content: _getBackupStatusSlot
  - uid: 'azure-arm-website.WebApps#_deleteBackupSlot'
    id: 'azure-arm-website.WebApps#_deleteBackupSlot'
    parent: azure-arm-website.WebApps
    name: _deleteBackupSlot
    summary: ''
    fullName: azure-arm-website.WebApps._deleteBackupSlot
    type: Field
    syntax:
      content: _deleteBackupSlot
  - uid: 'azure-arm-website.WebApps#_listBackupStatusSecretsSlot'
    id: 'azure-arm-website.WebApps#_listBackupStatusSecretsSlot'
    parent: azure-arm-website.WebApps
    name: _listBackupStatusSecretsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listBackupStatusSecretsSlot
    type: Field
    syntax:
      content: _listBackupStatusSecretsSlot
  - uid: 'azure-arm-website.WebApps#_restoreSlot'
    id: 'azure-arm-website.WebApps#_restoreSlot'
    parent: azure-arm-website.WebApps
    name: _restoreSlot
    summary: ''
    fullName: azure-arm-website.WebApps._restoreSlot
    type: Field
    syntax:
      content: _restoreSlot
  - uid: 'azure-arm-website.WebApps#_updateApplicationSettingsSlot'
    id: 'azure-arm-website.WebApps#_updateApplicationSettingsSlot'
    parent: azure-arm-website.WebApps
    name: _updateApplicationSettingsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateApplicationSettingsSlot
    type: Field
    syntax:
      content: _updateApplicationSettingsSlot
  - uid: 'azure-arm-website.WebApps#_listApplicationSettingsSlot'
    id: 'azure-arm-website.WebApps#_listApplicationSettingsSlot'
    parent: azure-arm-website.WebApps
    name: _listApplicationSettingsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listApplicationSettingsSlot
    type: Field
    syntax:
      content: _listApplicationSettingsSlot
  - uid: 'azure-arm-website.WebApps#_updateAuthSettingsSlot'
    id: 'azure-arm-website.WebApps#_updateAuthSettingsSlot'
    parent: azure-arm-website.WebApps
    name: _updateAuthSettingsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateAuthSettingsSlot
    type: Field
    syntax:
      content: _updateAuthSettingsSlot
  - uid: 'azure-arm-website.WebApps#_getAuthSettingsSlot'
    id: 'azure-arm-website.WebApps#_getAuthSettingsSlot'
    parent: azure-arm-website.WebApps
    name: _getAuthSettingsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getAuthSettingsSlot
    type: Field
    syntax:
      content: _getAuthSettingsSlot
  - uid: 'azure-arm-website.WebApps#_updateBackupConfigurationSlot'
    id: 'azure-arm-website.WebApps#_updateBackupConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: _updateBackupConfigurationSlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateBackupConfigurationSlot
    type: Field
    syntax:
      content: _updateBackupConfigurationSlot
  - uid: 'azure-arm-website.WebApps#_deleteBackupConfigurationSlot'
    id: 'azure-arm-website.WebApps#_deleteBackupConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: _deleteBackupConfigurationSlot
    summary: ''
    fullName: azure-arm-website.WebApps._deleteBackupConfigurationSlot
    type: Field
    syntax:
      content: _deleteBackupConfigurationSlot
  - uid: 'azure-arm-website.WebApps#_getBackupConfigurationSlot'
    id: 'azure-arm-website.WebApps#_getBackupConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: _getBackupConfigurationSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getBackupConfigurationSlot
    type: Field
    syntax:
      content: _getBackupConfigurationSlot
  - uid: 'azure-arm-website.WebApps#_updateConnectionStringsSlot'
    id: 'azure-arm-website.WebApps#_updateConnectionStringsSlot'
    parent: azure-arm-website.WebApps
    name: _updateConnectionStringsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateConnectionStringsSlot
    type: Field
    syntax:
      content: _updateConnectionStringsSlot
  - uid: 'azure-arm-website.WebApps#_listConnectionStringsSlot'
    id: 'azure-arm-website.WebApps#_listConnectionStringsSlot'
    parent: azure-arm-website.WebApps
    name: _listConnectionStringsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listConnectionStringsSlot
    type: Field
    syntax:
      content: _listConnectionStringsSlot
  - uid: 'azure-arm-website.WebApps#_getDiagnosticLogsConfigurationSlot'
    id: 'azure-arm-website.WebApps#_getDiagnosticLogsConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: _getDiagnosticLogsConfigurationSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getDiagnosticLogsConfigurationSlot
    type: Field
    syntax:
      content: _getDiagnosticLogsConfigurationSlot
  - uid: 'azure-arm-website.WebApps#_updateDiagnosticLogsConfigSlot'
    id: 'azure-arm-website.WebApps#_updateDiagnosticLogsConfigSlot'
    parent: azure-arm-website.WebApps
    name: _updateDiagnosticLogsConfigSlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateDiagnosticLogsConfigSlot
    type: Field
    syntax:
      content: _updateDiagnosticLogsConfigSlot
  - uid: 'azure-arm-website.WebApps#_updateMetadataSlot'
    id: 'azure-arm-website.WebApps#_updateMetadataSlot'
    parent: azure-arm-website.WebApps
    name: _updateMetadataSlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateMetadataSlot
    type: Field
    syntax:
      content: _updateMetadataSlot
  - uid: 'azure-arm-website.WebApps#_listMetadataSlot'
    id: 'azure-arm-website.WebApps#_listMetadataSlot'
    parent: azure-arm-website.WebApps
    name: _listMetadataSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listMetadataSlot
    type: Field
    syntax:
      content: _listMetadataSlot
  - uid: 'azure-arm-website.WebApps#_listPublishingCredentialsSlot'
    id: 'azure-arm-website.WebApps#_listPublishingCredentialsSlot'
    parent: azure-arm-website.WebApps
    name: _listPublishingCredentialsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listPublishingCredentialsSlot
    type: Field
    syntax:
      content: _listPublishingCredentialsSlot
  - uid: 'azure-arm-website.WebApps#_updateSitePushSettingsSlot'
    id: 'azure-arm-website.WebApps#_updateSitePushSettingsSlot'
    parent: azure-arm-website.WebApps
    name: _updateSitePushSettingsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateSitePushSettingsSlot
    type: Field
    syntax:
      content: _updateSitePushSettingsSlot
  - uid: 'azure-arm-website.WebApps#_listSitePushSettingsSlot'
    id: 'azure-arm-website.WebApps#_listSitePushSettingsSlot'
    parent: azure-arm-website.WebApps
    name: _listSitePushSettingsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listSitePushSettingsSlot
    type: Field
    syntax:
      content: _listSitePushSettingsSlot
  - uid: 'azure-arm-website.WebApps#_getConfigurationSlot'
    id: 'azure-arm-website.WebApps#_getConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: _getConfigurationSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getConfigurationSlot
    type: Field
    syntax:
      content: _getConfigurationSlot
  - uid: 'azure-arm-website.WebApps#_createOrUpdateConfigurationSlot'
    id: 'azure-arm-website.WebApps#_createOrUpdateConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateConfigurationSlot
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateConfigurationSlot
    type: Field
    syntax:
      content: _createOrUpdateConfigurationSlot
  - uid: 'azure-arm-website.WebApps#_updateConfigurationSlot'
    id: 'azure-arm-website.WebApps#_updateConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: _updateConfigurationSlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateConfigurationSlot
    type: Field
    syntax:
      content: _updateConfigurationSlot
  - uid: 'azure-arm-website.WebApps#_listConfigurationSnapshotInfoSlot'
    id: 'azure-arm-website.WebApps#_listConfigurationSnapshotInfoSlot'
    parent: azure-arm-website.WebApps
    name: _listConfigurationSnapshotInfoSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listConfigurationSnapshotInfoSlot
    type: Field
    syntax:
      content: _listConfigurationSnapshotInfoSlot
  - uid: 'azure-arm-website.WebApps#_getConfigurationSnapshotSlot'
    id: 'azure-arm-website.WebApps#_getConfigurationSnapshotSlot'
    parent: azure-arm-website.WebApps
    name: _getConfigurationSnapshotSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getConfigurationSnapshotSlot
    type: Field
    syntax:
      content: _getConfigurationSnapshotSlot
  - uid: 'azure-arm-website.WebApps#_recoverSiteConfigurationSnapshotSlot'
    id: 'azure-arm-website.WebApps#_recoverSiteConfigurationSnapshotSlot'
    parent: azure-arm-website.WebApps
    name: _recoverSiteConfigurationSnapshotSlot
    summary: ''
    fullName: azure-arm-website.WebApps._recoverSiteConfigurationSnapshotSlot
    type: Field
    syntax:
      content: _recoverSiteConfigurationSnapshotSlot
  - uid: 'azure-arm-website.WebApps#_listDeploymentsSlot'
    id: 'azure-arm-website.WebApps#_listDeploymentsSlot'
    parent: azure-arm-website.WebApps
    name: _listDeploymentsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listDeploymentsSlot
    type: Field
    syntax:
      content: _listDeploymentsSlot
  - uid: 'azure-arm-website.WebApps#_getDeploymentSlot'
    id: 'azure-arm-website.WebApps#_getDeploymentSlot'
    parent: azure-arm-website.WebApps
    name: _getDeploymentSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getDeploymentSlot
    type: Field
    syntax:
      content: _getDeploymentSlot
  - uid: 'azure-arm-website.WebApps#_createDeploymentSlot'
    id: 'azure-arm-website.WebApps#_createDeploymentSlot'
    parent: azure-arm-website.WebApps
    name: _createDeploymentSlot
    summary: ''
    fullName: azure-arm-website.WebApps._createDeploymentSlot
    type: Field
    syntax:
      content: _createDeploymentSlot
  - uid: 'azure-arm-website.WebApps#_deleteDeploymentSlot'
    id: 'azure-arm-website.WebApps#_deleteDeploymentSlot'
    parent: azure-arm-website.WebApps
    name: _deleteDeploymentSlot
    summary: ''
    fullName: azure-arm-website.WebApps._deleteDeploymentSlot
    type: Field
    syntax:
      content: _deleteDeploymentSlot
  - uid: 'azure-arm-website.WebApps#_listDomainOwnershipIdentifiersSlot'
    id: 'azure-arm-website.WebApps#_listDomainOwnershipIdentifiersSlot'
    parent: azure-arm-website.WebApps
    name: _listDomainOwnershipIdentifiersSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listDomainOwnershipIdentifiersSlot
    type: Field
    syntax:
      content: _listDomainOwnershipIdentifiersSlot
  - uid: 'azure-arm-website.WebApps#_getDomainOwnershipIdentifierSlot'
    id: 'azure-arm-website.WebApps#_getDomainOwnershipIdentifierSlot'
    parent: azure-arm-website.WebApps
    name: _getDomainOwnershipIdentifierSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getDomainOwnershipIdentifierSlot
    type: Field
    syntax:
      content: _getDomainOwnershipIdentifierSlot
  - uid: 'azure-arm-website.WebApps#_createOrUpdateDomainOwnershipIdentifierSlot'
    id: 'azure-arm-website.WebApps#_createOrUpdateDomainOwnershipIdentifierSlot'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateDomainOwnershipIdentifierSlot
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateDomainOwnershipIdentifierSlot
    type: Field
    syntax:
      content: _createOrUpdateDomainOwnershipIdentifierSlot
  - uid: 'azure-arm-website.WebApps#_deleteDomainOwnershipIdentifierSlot'
    id: 'azure-arm-website.WebApps#_deleteDomainOwnershipIdentifierSlot'
    parent: azure-arm-website.WebApps
    name: _deleteDomainOwnershipIdentifierSlot
    summary: ''
    fullName: azure-arm-website.WebApps._deleteDomainOwnershipIdentifierSlot
    type: Field
    syntax:
      content: _deleteDomainOwnershipIdentifierSlot
  - uid: 'azure-arm-website.WebApps#_updateDomainOwnershipIdentifierSlot'
    id: 'azure-arm-website.WebApps#_updateDomainOwnershipIdentifierSlot'
    parent: azure-arm-website.WebApps
    name: _updateDomainOwnershipIdentifierSlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateDomainOwnershipIdentifierSlot
    type: Field
    syntax:
      content: _updateDomainOwnershipIdentifierSlot
  - uid: 'azure-arm-website.WebApps#_listHostNameBindingsSlot'
    id: 'azure-arm-website.WebApps#_listHostNameBindingsSlot'
    parent: azure-arm-website.WebApps
    name: _listHostNameBindingsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listHostNameBindingsSlot
    type: Field
    syntax:
      content: _listHostNameBindingsSlot
  - uid: 'azure-arm-website.WebApps#_getHostNameBindingSlot'
    id: 'azure-arm-website.WebApps#_getHostNameBindingSlot'
    parent: azure-arm-website.WebApps
    name: _getHostNameBindingSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getHostNameBindingSlot
    type: Field
    syntax:
      content: _getHostNameBindingSlot
  - uid: 'azure-arm-website.WebApps#_createOrUpdateHostNameBindingSlot'
    id: 'azure-arm-website.WebApps#_createOrUpdateHostNameBindingSlot'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateHostNameBindingSlot
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateHostNameBindingSlot
    type: Field
    syntax:
      content: _createOrUpdateHostNameBindingSlot
  - uid: 'azure-arm-website.WebApps#_deleteHostNameBindingSlot'
    id: 'azure-arm-website.WebApps#_deleteHostNameBindingSlot'
    parent: azure-arm-website.WebApps
    name: _deleteHostNameBindingSlot
    summary: ''
    fullName: azure-arm-website.WebApps._deleteHostNameBindingSlot
    type: Field
    syntax:
      content: _deleteHostNameBindingSlot
  - uid: 'azure-arm-website.WebApps#_getHybridConnectionSlot'
    id: 'azure-arm-website.WebApps#_getHybridConnectionSlot'
    parent: azure-arm-website.WebApps
    name: _getHybridConnectionSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getHybridConnectionSlot
    type: Field
    syntax:
      content: _getHybridConnectionSlot
  - uid: 'azure-arm-website.WebApps#_createOrUpdateHybridConnectionSlot'
    id: 'azure-arm-website.WebApps#_createOrUpdateHybridConnectionSlot'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateHybridConnectionSlot
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateHybridConnectionSlot
    type: Field
    syntax:
      content: _createOrUpdateHybridConnectionSlot
  - uid: 'azure-arm-website.WebApps#_deleteHybridConnectionSlot'
    id: 'azure-arm-website.WebApps#_deleteHybridConnectionSlot'
    parent: azure-arm-website.WebApps
    name: _deleteHybridConnectionSlot
    summary: ''
    fullName: azure-arm-website.WebApps._deleteHybridConnectionSlot
    type: Field
    syntax:
      content: _deleteHybridConnectionSlot
  - uid: 'azure-arm-website.WebApps#_updateHybridConnectionSlot'
    id: 'azure-arm-website.WebApps#_updateHybridConnectionSlot'
    parent: azure-arm-website.WebApps
    name: _updateHybridConnectionSlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateHybridConnectionSlot
    type: Field
    syntax:
      content: _updateHybridConnectionSlot
  - uid: 'azure-arm-website.WebApps#_listHybridConnectionKeysSlot'
    id: 'azure-arm-website.WebApps#_listHybridConnectionKeysSlot'
    parent: azure-arm-website.WebApps
    name: _listHybridConnectionKeysSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listHybridConnectionKeysSlot
    type: Field
    syntax:
      content: _listHybridConnectionKeysSlot
  - uid: 'azure-arm-website.WebApps#_listHybridConnectionsSlot'
    id: 'azure-arm-website.WebApps#_listHybridConnectionsSlot'
    parent: azure-arm-website.WebApps
    name: _listHybridConnectionsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listHybridConnectionsSlot
    type: Field
    syntax:
      content: _listHybridConnectionsSlot
  - uid: 'azure-arm-website.WebApps#_listRelayServiceConnectionsSlot'
    id: 'azure-arm-website.WebApps#_listRelayServiceConnectionsSlot'
    parent: azure-arm-website.WebApps
    name: _listRelayServiceConnectionsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listRelayServiceConnectionsSlot
    type: Field
    syntax:
      content: _listRelayServiceConnectionsSlot
  - uid: 'azure-arm-website.WebApps#_getRelayServiceConnectionSlot'
    id: 'azure-arm-website.WebApps#_getRelayServiceConnectionSlot'
    parent: azure-arm-website.WebApps
    name: _getRelayServiceConnectionSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getRelayServiceConnectionSlot
    type: Field
    syntax:
      content: _getRelayServiceConnectionSlot
  - uid: 'azure-arm-website.WebApps#_createOrUpdateRelayServiceConnectionSlot'
    id: 'azure-arm-website.WebApps#_createOrUpdateRelayServiceConnectionSlot'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateRelayServiceConnectionSlot
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateRelayServiceConnectionSlot
    type: Field
    syntax:
      content: _createOrUpdateRelayServiceConnectionSlot
  - uid: 'azure-arm-website.WebApps#_deleteRelayServiceConnectionSlot'
    id: 'azure-arm-website.WebApps#_deleteRelayServiceConnectionSlot'
    parent: azure-arm-website.WebApps
    name: _deleteRelayServiceConnectionSlot
    summary: ''
    fullName: azure-arm-website.WebApps._deleteRelayServiceConnectionSlot
    type: Field
    syntax:
      content: _deleteRelayServiceConnectionSlot
  - uid: 'azure-arm-website.WebApps#_updateRelayServiceConnectionSlot'
    id: 'azure-arm-website.WebApps#_updateRelayServiceConnectionSlot'
    parent: azure-arm-website.WebApps
    name: _updateRelayServiceConnectionSlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateRelayServiceConnectionSlot
    type: Field
    syntax:
      content: _updateRelayServiceConnectionSlot
  - uid: 'azure-arm-website.WebApps#_listInstanceIdentifiersSlot'
    id: 'azure-arm-website.WebApps#_listInstanceIdentifiersSlot'
    parent: azure-arm-website.WebApps
    name: _listInstanceIdentifiersSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listInstanceIdentifiersSlot
    type: Field
    syntax:
      content: _listInstanceIdentifiersSlot
  - uid: 'azure-arm-website.WebApps#_listInstanceDeploymentsSlot'
    id: 'azure-arm-website.WebApps#_listInstanceDeploymentsSlot'
    parent: azure-arm-website.WebApps
    name: _listInstanceDeploymentsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listInstanceDeploymentsSlot
    type: Field
    syntax:
      content: _listInstanceDeploymentsSlot
  - uid: 'azure-arm-website.WebApps#_getInstanceDeploymentSlot'
    id: 'azure-arm-website.WebApps#_getInstanceDeploymentSlot'
    parent: azure-arm-website.WebApps
    name: _getInstanceDeploymentSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getInstanceDeploymentSlot
    type: Field
    syntax:
      content: _getInstanceDeploymentSlot
  - uid: 'azure-arm-website.WebApps#_createInstanceDeploymentSlot'
    id: 'azure-arm-website.WebApps#_createInstanceDeploymentSlot'
    parent: azure-arm-website.WebApps
    name: _createInstanceDeploymentSlot
    summary: ''
    fullName: azure-arm-website.WebApps._createInstanceDeploymentSlot
    type: Field
    syntax:
      content: _createInstanceDeploymentSlot
  - uid: 'azure-arm-website.WebApps#_deleteInstanceDeploymentSlot'
    id: 'azure-arm-website.WebApps#_deleteInstanceDeploymentSlot'
    parent: azure-arm-website.WebApps
    name: _deleteInstanceDeploymentSlot
    summary: ''
    fullName: azure-arm-website.WebApps._deleteInstanceDeploymentSlot
    type: Field
    syntax:
      content: _deleteInstanceDeploymentSlot
  - uid: 'azure-arm-website.WebApps#_isCloneableSlot'
    id: 'azure-arm-website.WebApps#_isCloneableSlot'
    parent: azure-arm-website.WebApps
    name: _isCloneableSlot
    summary: ''
    fullName: azure-arm-website.WebApps._isCloneableSlot
    type: Field
    syntax:
      content: _isCloneableSlot
  - uid: 'azure-arm-website.WebApps#_listMetricDefinitionsSlot'
    id: 'azure-arm-website.WebApps#_listMetricDefinitionsSlot'
    parent: azure-arm-website.WebApps
    name: _listMetricDefinitionsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listMetricDefinitionsSlot
    type: Field
    syntax:
      content: _listMetricDefinitionsSlot
  - uid: 'azure-arm-website.WebApps#_listMetricsSlot'
    id: 'azure-arm-website.WebApps#_listMetricsSlot'
    parent: azure-arm-website.WebApps
    name: _listMetricsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listMetricsSlot
    type: Field
    syntax:
      content: _listMetricsSlot
  - uid: 'azure-arm-website.WebApps#_getMigrateMySqlStatusSlot'
    id: 'azure-arm-website.WebApps#_getMigrateMySqlStatusSlot'
    parent: azure-arm-website.WebApps
    name: _getMigrateMySqlStatusSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getMigrateMySqlStatusSlot
    type: Field
    syntax:
      content: _getMigrateMySqlStatusSlot
  - uid: 'azure-arm-website.WebApps#_listNetworkFeaturesSlot'
    id: 'azure-arm-website.WebApps#_listNetworkFeaturesSlot'
    parent: azure-arm-website.WebApps
    name: _listNetworkFeaturesSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listNetworkFeaturesSlot
    type: Field
    syntax:
      content: _listNetworkFeaturesSlot
  - uid: 'azure-arm-website.WebApps#_startWebSiteNetworkTraceSlot'
    id: 'azure-arm-website.WebApps#_startWebSiteNetworkTraceSlot'
    parent: azure-arm-website.WebApps
    name: _startWebSiteNetworkTraceSlot
    summary: ''
    fullName: azure-arm-website.WebApps._startWebSiteNetworkTraceSlot
    type: Field
    syntax:
      content: _startWebSiteNetworkTraceSlot
  - uid: 'azure-arm-website.WebApps#_stopWebSiteNetworkTraceSlot'
    id: 'azure-arm-website.WebApps#_stopWebSiteNetworkTraceSlot'
    parent: azure-arm-website.WebApps
    name: _stopWebSiteNetworkTraceSlot
    summary: ''
    fullName: azure-arm-website.WebApps._stopWebSiteNetworkTraceSlot
    type: Field
    syntax:
      content: _stopWebSiteNetworkTraceSlot
  - uid: 'azure-arm-website.WebApps#_generateNewSitePublishingPasswordSlot'
    id: 'azure-arm-website.WebApps#_generateNewSitePublishingPasswordSlot'
    parent: azure-arm-website.WebApps
    name: _generateNewSitePublishingPasswordSlot
    summary: ''
    fullName: azure-arm-website.WebApps._generateNewSitePublishingPasswordSlot
    type: Field
    syntax:
      content: _generateNewSitePublishingPasswordSlot
  - uid: 'azure-arm-website.WebApps#_listPerfMonCountersSlot'
    id: 'azure-arm-website.WebApps#_listPerfMonCountersSlot'
    parent: azure-arm-website.WebApps
    name: _listPerfMonCountersSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listPerfMonCountersSlot
    type: Field
    syntax:
      content: _listPerfMonCountersSlot
  - uid: 'azure-arm-website.WebApps#_getSitePhpErrorLogFlagSlot'
    id: 'azure-arm-website.WebApps#_getSitePhpErrorLogFlagSlot'
    parent: azure-arm-website.WebApps
    name: _getSitePhpErrorLogFlagSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getSitePhpErrorLogFlagSlot
    type: Field
    syntax:
      content: _getSitePhpErrorLogFlagSlot
  - uid: 'azure-arm-website.WebApps#_listPremierAddOnsSlot'
    id: 'azure-arm-website.WebApps#_listPremierAddOnsSlot'
    parent: azure-arm-website.WebApps
    name: _listPremierAddOnsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listPremierAddOnsSlot
    type: Field
    syntax:
      content: _listPremierAddOnsSlot
  - uid: 'azure-arm-website.WebApps#_getPremierAddOnSlot'
    id: 'azure-arm-website.WebApps#_getPremierAddOnSlot'
    parent: azure-arm-website.WebApps
    name: _getPremierAddOnSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getPremierAddOnSlot
    type: Field
    syntax:
      content: _getPremierAddOnSlot
  - uid: 'azure-arm-website.WebApps#_addPremierAddOnSlot'
    id: 'azure-arm-website.WebApps#_addPremierAddOnSlot'
    parent: azure-arm-website.WebApps
    name: _addPremierAddOnSlot
    summary: ''
    fullName: azure-arm-website.WebApps._addPremierAddOnSlot
    type: Field
    syntax:
      content: _addPremierAddOnSlot
  - uid: 'azure-arm-website.WebApps#_deletePremierAddOnSlot'
    id: 'azure-arm-website.WebApps#_deletePremierAddOnSlot'
    parent: azure-arm-website.WebApps
    name: _deletePremierAddOnSlot
    summary: ''
    fullName: azure-arm-website.WebApps._deletePremierAddOnSlot
    type: Field
    syntax:
      content: _deletePremierAddOnSlot
  - uid: 'azure-arm-website.WebApps#_listPublishingProfileXmlWithSecretsSlot'
    id: 'azure-arm-website.WebApps#_listPublishingProfileXmlWithSecretsSlot'
    parent: azure-arm-website.WebApps
    name: _listPublishingProfileXmlWithSecretsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listPublishingProfileXmlWithSecretsSlot
    type: Field
    syntax:
      content: _listPublishingProfileXmlWithSecretsSlot
  - uid: 'azure-arm-website.WebApps#_recoverSlot'
    id: 'azure-arm-website.WebApps#_recoverSlot'
    parent: azure-arm-website.WebApps
    name: _recoverSlot
    summary: ''
    fullName: azure-arm-website.WebApps._recoverSlot
    type: Field
    syntax:
      content: _recoverSlot
  - uid: 'azure-arm-website.WebApps#_resetSlotConfigurationSlot'
    id: 'azure-arm-website.WebApps#_resetSlotConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: _resetSlotConfigurationSlot
    summary: ''
    fullName: azure-arm-website.WebApps._resetSlotConfigurationSlot
    type: Field
    syntax:
      content: _resetSlotConfigurationSlot
  - uid: 'azure-arm-website.WebApps#_restartSlot'
    id: 'azure-arm-website.WebApps#_restartSlot'
    parent: azure-arm-website.WebApps
    name: _restartSlot
    summary: ''
    fullName: azure-arm-website.WebApps._restartSlot
    type: Field
    syntax:
      content: _restartSlot
  - uid: 'azure-arm-website.WebApps#_listSlotDifferencesSlot'
    id: 'azure-arm-website.WebApps#_listSlotDifferencesSlot'
    parent: azure-arm-website.WebApps
    name: _listSlotDifferencesSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listSlotDifferencesSlot
    type: Field
    syntax:
      content: _listSlotDifferencesSlot
  - uid: 'azure-arm-website.WebApps#_swapSlotSlot'
    id: 'azure-arm-website.WebApps#_swapSlotSlot'
    parent: azure-arm-website.WebApps
    name: _swapSlotSlot
    summary: ''
    fullName: azure-arm-website.WebApps._swapSlotSlot
    type: Field
    syntax:
      content: _swapSlotSlot
  - uid: 'azure-arm-website.WebApps#_listSnapshotsSlot'
    id: 'azure-arm-website.WebApps#_listSnapshotsSlot'
    parent: azure-arm-website.WebApps
    name: _listSnapshotsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listSnapshotsSlot
    type: Field
    syntax:
      content: _listSnapshotsSlot
  - uid: 'azure-arm-website.WebApps#_getSourceControlSlot'
    id: 'azure-arm-website.WebApps#_getSourceControlSlot'
    parent: azure-arm-website.WebApps
    name: _getSourceControlSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getSourceControlSlot
    type: Field
    syntax:
      content: _getSourceControlSlot
  - uid: 'azure-arm-website.WebApps#_createOrUpdateSourceControlSlot'
    id: 'azure-arm-website.WebApps#_createOrUpdateSourceControlSlot'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateSourceControlSlot
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateSourceControlSlot
    type: Field
    syntax:
      content: _createOrUpdateSourceControlSlot
  - uid: 'azure-arm-website.WebApps#_deleteSourceControlSlot'
    id: 'azure-arm-website.WebApps#_deleteSourceControlSlot'
    parent: azure-arm-website.WebApps
    name: _deleteSourceControlSlot
    summary: ''
    fullName: azure-arm-website.WebApps._deleteSourceControlSlot
    type: Field
    syntax:
      content: _deleteSourceControlSlot
  - uid: 'azure-arm-website.WebApps#_startSlot'
    id: 'azure-arm-website.WebApps#_startSlot'
    parent: azure-arm-website.WebApps
    name: _startSlot
    summary: ''
    fullName: azure-arm-website.WebApps._startSlot
    type: Field
    syntax:
      content: _startSlot
  - uid: 'azure-arm-website.WebApps#_stopSlot'
    id: 'azure-arm-website.WebApps#_stopSlot'
    parent: azure-arm-website.WebApps
    name: _stopSlot
    summary: ''
    fullName: azure-arm-website.WebApps._stopSlot
    type: Field
    syntax:
      content: _stopSlot
  - uid: 'azure-arm-website.WebApps#_syncRepositorySlot'
    id: 'azure-arm-website.WebApps#_syncRepositorySlot'
    parent: azure-arm-website.WebApps
    name: _syncRepositorySlot
    summary: ''
    fullName: azure-arm-website.WebApps._syncRepositorySlot
    type: Field
    syntax:
      content: _syncRepositorySlot
  - uid: 'azure-arm-website.WebApps#_listUsagesSlot'
    id: 'azure-arm-website.WebApps#_listUsagesSlot'
    parent: azure-arm-website.WebApps
    name: _listUsagesSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listUsagesSlot
    type: Field
    syntax:
      content: _listUsagesSlot
  - uid: 'azure-arm-website.WebApps#_listVnetConnectionsSlot'
    id: 'azure-arm-website.WebApps#_listVnetConnectionsSlot'
    parent: azure-arm-website.WebApps
    name: _listVnetConnectionsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._listVnetConnectionsSlot
    type: Field
    syntax:
      content: _listVnetConnectionsSlot
  - uid: 'azure-arm-website.WebApps#_getVnetConnectionSlot'
    id: 'azure-arm-website.WebApps#_getVnetConnectionSlot'
    parent: azure-arm-website.WebApps
    name: _getVnetConnectionSlot
    summary: ''
    fullName: azure-arm-website.WebApps._getVnetConnectionSlot
    type: Field
    syntax:
      content: _getVnetConnectionSlot
  - uid: 'azure-arm-website.WebApps#_createOrUpdateVnetConnectionSlot'
    id: 'azure-arm-website.WebApps#_createOrUpdateVnetConnectionSlot'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateVnetConnectionSlot
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateVnetConnectionSlot
    type: Field
    syntax:
      content: _createOrUpdateVnetConnectionSlot
  - uid: 'azure-arm-website.WebApps#_deleteVnetConnectionSlot'
    id: 'azure-arm-website.WebApps#_deleteVnetConnectionSlot'
    parent: azure-arm-website.WebApps
    name: _deleteVnetConnectionSlot
    summary: ''
    fullName: azure-arm-website.WebApps._deleteVnetConnectionSlot
    type: Field
    syntax:
      content: _deleteVnetConnectionSlot
  - uid: 'azure-arm-website.WebApps#_updateVnetConnectionSlot'
    id: 'azure-arm-website.WebApps#_updateVnetConnectionSlot'
    parent: azure-arm-website.WebApps
    name: _updateVnetConnectionSlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateVnetConnectionSlot
    type: Field
    syntax:
      content: _updateVnetConnectionSlot
  - uid: 'azure-arm-website.WebApps#_getVnetConnectionGatewaySlot'
    id: 'azure-arm-website.WebApps#_getVnetConnectionGatewaySlot'
    parent: azure-arm-website.WebApps
    name: _getVnetConnectionGatewaySlot
    summary: ''
    fullName: azure-arm-website.WebApps._getVnetConnectionGatewaySlot
    type: Field
    syntax:
      content: _getVnetConnectionGatewaySlot
  - uid: 'azure-arm-website.WebApps#_createOrUpdateVnetConnectionGatewaySlot'
    id: 'azure-arm-website.WebApps#_createOrUpdateVnetConnectionGatewaySlot'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateVnetConnectionGatewaySlot
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateVnetConnectionGatewaySlot
    type: Field
    syntax:
      content: _createOrUpdateVnetConnectionGatewaySlot
  - uid: 'azure-arm-website.WebApps#_updateVnetConnectionGatewaySlot'
    id: 'azure-arm-website.WebApps#_updateVnetConnectionGatewaySlot'
    parent: azure-arm-website.WebApps
    name: _updateVnetConnectionGatewaySlot
    summary: ''
    fullName: azure-arm-website.WebApps._updateVnetConnectionGatewaySlot
    type: Field
    syntax:
      content: _updateVnetConnectionGatewaySlot
  - uid: 'azure-arm-website.WebApps#_listSlotDifferencesFromProduction'
    id: 'azure-arm-website.WebApps#_listSlotDifferencesFromProduction'
    parent: azure-arm-website.WebApps
    name: _listSlotDifferencesFromProduction
    summary: ''
    fullName: azure-arm-website.WebApps._listSlotDifferencesFromProduction
    type: Field
    syntax:
      content: _listSlotDifferencesFromProduction
  - uid: 'azure-arm-website.WebApps#_swapSlotWithProduction'
    id: 'azure-arm-website.WebApps#_swapSlotWithProduction'
    parent: azure-arm-website.WebApps
    name: _swapSlotWithProduction
    summary: ''
    fullName: azure-arm-website.WebApps._swapSlotWithProduction
    type: Field
    syntax:
      content: _swapSlotWithProduction
  - uid: 'azure-arm-website.WebApps#_listSnapshots'
    id: 'azure-arm-website.WebApps#_listSnapshots'
    parent: azure-arm-website.WebApps
    name: _listSnapshots
    summary: ''
    fullName: azure-arm-website.WebApps._listSnapshots
    type: Field
    syntax:
      content: _listSnapshots
  - uid: 'azure-arm-website.WebApps#_getSourceControl'
    id: 'azure-arm-website.WebApps#_getSourceControl'
    parent: azure-arm-website.WebApps
    name: _getSourceControl
    summary: ''
    fullName: azure-arm-website.WebApps._getSourceControl
    type: Field
    syntax:
      content: _getSourceControl
  - uid: 'azure-arm-website.WebApps#_createOrUpdateSourceControl'
    id: 'azure-arm-website.WebApps#_createOrUpdateSourceControl'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateSourceControl
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateSourceControl
    type: Field
    syntax:
      content: _createOrUpdateSourceControl
  - uid: 'azure-arm-website.WebApps#_deleteSourceControl'
    id: 'azure-arm-website.WebApps#_deleteSourceControl'
    parent: azure-arm-website.WebApps
    name: _deleteSourceControl
    summary: ''
    fullName: azure-arm-website.WebApps._deleteSourceControl
    type: Field
    syntax:
      content: _deleteSourceControl
  - uid: 'azure-arm-website.WebApps#_start'
    id: 'azure-arm-website.WebApps#_start'
    parent: azure-arm-website.WebApps
    name: _start
    summary: ''
    fullName: azure-arm-website.WebApps._start
    type: Field
    syntax:
      content: _start
  - uid: 'azure-arm-website.WebApps#_stop'
    id: 'azure-arm-website.WebApps#_stop'
    parent: azure-arm-website.WebApps
    name: _stop
    summary: ''
    fullName: azure-arm-website.WebApps._stop
    type: Field
    syntax:
      content: _stop
  - uid: 'azure-arm-website.WebApps#_syncRepository'
    id: 'azure-arm-website.WebApps#_syncRepository'
    parent: azure-arm-website.WebApps
    name: _syncRepository
    summary: ''
    fullName: azure-arm-website.WebApps._syncRepository
    type: Field
    syntax:
      content: _syncRepository
  - uid: 'azure-arm-website.WebApps#_listUsages'
    id: 'azure-arm-website.WebApps#_listUsages'
    parent: azure-arm-website.WebApps
    name: _listUsages
    summary: ''
    fullName: azure-arm-website.WebApps._listUsages
    type: Field
    syntax:
      content: _listUsages
  - uid: 'azure-arm-website.WebApps#_listVnetConnections'
    id: 'azure-arm-website.WebApps#_listVnetConnections'
    parent: azure-arm-website.WebApps
    name: _listVnetConnections
    summary: ''
    fullName: azure-arm-website.WebApps._listVnetConnections
    type: Field
    syntax:
      content: _listVnetConnections
  - uid: 'azure-arm-website.WebApps#_getVnetConnection'
    id: 'azure-arm-website.WebApps#_getVnetConnection'
    parent: azure-arm-website.WebApps
    name: _getVnetConnection
    summary: ''
    fullName: azure-arm-website.WebApps._getVnetConnection
    type: Field
    syntax:
      content: _getVnetConnection
  - uid: 'azure-arm-website.WebApps#_createOrUpdateVnetConnection'
    id: 'azure-arm-website.WebApps#_createOrUpdateVnetConnection'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateVnetConnection
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateVnetConnection
    type: Field
    syntax:
      content: _createOrUpdateVnetConnection
  - uid: 'azure-arm-website.WebApps#_deleteVnetConnection'
    id: 'azure-arm-website.WebApps#_deleteVnetConnection'
    parent: azure-arm-website.WebApps
    name: _deleteVnetConnection
    summary: ''
    fullName: azure-arm-website.WebApps._deleteVnetConnection
    type: Field
    syntax:
      content: _deleteVnetConnection
  - uid: 'azure-arm-website.WebApps#_updateVnetConnection'
    id: 'azure-arm-website.WebApps#_updateVnetConnection'
    parent: azure-arm-website.WebApps
    name: _updateVnetConnection
    summary: ''
    fullName: azure-arm-website.WebApps._updateVnetConnection
    type: Field
    syntax:
      content: _updateVnetConnection
  - uid: 'azure-arm-website.WebApps#_getVnetConnectionGateway'
    id: 'azure-arm-website.WebApps#_getVnetConnectionGateway'
    parent: azure-arm-website.WebApps
    name: _getVnetConnectionGateway
    summary: ''
    fullName: azure-arm-website.WebApps._getVnetConnectionGateway
    type: Field
    syntax:
      content: _getVnetConnectionGateway
  - uid: 'azure-arm-website.WebApps#_createOrUpdateVnetConnectionGateway'
    id: 'azure-arm-website.WebApps#_createOrUpdateVnetConnectionGateway'
    parent: azure-arm-website.WebApps
    name: _createOrUpdateVnetConnectionGateway
    summary: ''
    fullName: azure-arm-website.WebApps._createOrUpdateVnetConnectionGateway
    type: Field
    syntax:
      content: _createOrUpdateVnetConnectionGateway
  - uid: 'azure-arm-website.WebApps#_updateVnetConnectionGateway'
    id: 'azure-arm-website.WebApps#_updateVnetConnectionGateway'
    parent: azure-arm-website.WebApps
    name: _updateVnetConnectionGateway
    summary: ''
    fullName: azure-arm-website.WebApps._updateVnetConnectionGateway
    type: Field
    syntax:
      content: _updateVnetConnectionGateway
  - uid: 'azure-arm-website.WebApps#_beginCreateOrUpdate'
    id: 'azure-arm-website.WebApps#_beginCreateOrUpdate'
    parent: azure-arm-website.WebApps
    name: _beginCreateOrUpdate
    summary: ''
    fullName: azure-arm-website.WebApps._beginCreateOrUpdate
    type: Field
    syntax:
      content: _beginCreateOrUpdate
  - uid: 'azure-arm-website.WebApps#_beginRestore'
    id: 'azure-arm-website.WebApps#_beginRestore'
    parent: azure-arm-website.WebApps
    name: _beginRestore
    summary: ''
    fullName: azure-arm-website.WebApps._beginRestore
    type: Field
    syntax:
      content: _beginRestore
  - uid: 'azure-arm-website.WebApps#_beginListPublishingCredentials'
    id: 'azure-arm-website.WebApps#_beginListPublishingCredentials'
    parent: azure-arm-website.WebApps
    name: _beginListPublishingCredentials
    summary: ''
    fullName: azure-arm-website.WebApps._beginListPublishingCredentials
    type: Field
    syntax:
      content: _beginListPublishingCredentials
  - uid: 'azure-arm-website.WebApps#_beginMigrateStorage'
    id: 'azure-arm-website.WebApps#_beginMigrateStorage'
    parent: azure-arm-website.WebApps
    name: _beginMigrateStorage
    summary: ''
    fullName: azure-arm-website.WebApps._beginMigrateStorage
    type: Field
    syntax:
      content: _beginMigrateStorage
  - uid: 'azure-arm-website.WebApps#_beginMigrateMySql'
    id: 'azure-arm-website.WebApps#_beginMigrateMySql'
    parent: azure-arm-website.WebApps
    name: _beginMigrateMySql
    summary: ''
    fullName: azure-arm-website.WebApps._beginMigrateMySql
    type: Field
    syntax:
      content: _beginMigrateMySql
  - uid: 'azure-arm-website.WebApps#_beginRecover'
    id: 'azure-arm-website.WebApps#_beginRecover'
    parent: azure-arm-website.WebApps
    name: _beginRecover
    summary: ''
    fullName: azure-arm-website.WebApps._beginRecover
    type: Field
    syntax:
      content: _beginRecover
  - uid: 'azure-arm-website.WebApps#_beginCreateOrUpdateSlot'
    id: 'azure-arm-website.WebApps#_beginCreateOrUpdateSlot'
    parent: azure-arm-website.WebApps
    name: _beginCreateOrUpdateSlot
    summary: ''
    fullName: azure-arm-website.WebApps._beginCreateOrUpdateSlot
    type: Field
    syntax:
      content: _beginCreateOrUpdateSlot
  - uid: 'azure-arm-website.WebApps#_beginRestoreSlot'
    id: 'azure-arm-website.WebApps#_beginRestoreSlot'
    parent: azure-arm-website.WebApps
    name: _beginRestoreSlot
    summary: ''
    fullName: azure-arm-website.WebApps._beginRestoreSlot
    type: Field
    syntax:
      content: _beginRestoreSlot
  - uid: 'azure-arm-website.WebApps#_beginListPublishingCredentialsSlot'
    id: 'azure-arm-website.WebApps#_beginListPublishingCredentialsSlot'
    parent: azure-arm-website.WebApps
    name: _beginListPublishingCredentialsSlot
    summary: ''
    fullName: azure-arm-website.WebApps._beginListPublishingCredentialsSlot
    type: Field
    syntax:
      content: _beginListPublishingCredentialsSlot
  - uid: 'azure-arm-website.WebApps#_beginRecoverSlot'
    id: 'azure-arm-website.WebApps#_beginRecoverSlot'
    parent: azure-arm-website.WebApps
    name: _beginRecoverSlot
    summary: ''
    fullName: azure-arm-website.WebApps._beginRecoverSlot
    type: Field
    syntax:
      content: _beginRecoverSlot
  - uid: 'azure-arm-website.WebApps#_beginSwapSlotSlot'
    id: 'azure-arm-website.WebApps#_beginSwapSlotSlot'
    parent: azure-arm-website.WebApps
    name: _beginSwapSlotSlot
    summary: ''
    fullName: azure-arm-website.WebApps._beginSwapSlotSlot
    type: Field
    syntax:
      content: _beginSwapSlotSlot
  - uid: 'azure-arm-website.WebApps#_beginCreateOrUpdateSourceControlSlot'
    id: 'azure-arm-website.WebApps#_beginCreateOrUpdateSourceControlSlot'
    parent: azure-arm-website.WebApps
    name: _beginCreateOrUpdateSourceControlSlot
    summary: ''
    fullName: azure-arm-website.WebApps._beginCreateOrUpdateSourceControlSlot
    type: Field
    syntax:
      content: _beginCreateOrUpdateSourceControlSlot
  - uid: 'azure-arm-website.WebApps#_beginSwapSlotWithProduction'
    id: 'azure-arm-website.WebApps#_beginSwapSlotWithProduction'
    parent: azure-arm-website.WebApps
    name: _beginSwapSlotWithProduction
    summary: ''
    fullName: azure-arm-website.WebApps._beginSwapSlotWithProduction
    type: Field
    syntax:
      content: _beginSwapSlotWithProduction
  - uid: 'azure-arm-website.WebApps#_beginCreateOrUpdateSourceControl'
    id: 'azure-arm-website.WebApps#_beginCreateOrUpdateSourceControl'
    parent: azure-arm-website.WebApps
    name: _beginCreateOrUpdateSourceControl
    summary: ''
    fullName: azure-arm-website.WebApps._beginCreateOrUpdateSourceControl
    type: Field
    syntax:
      content: _beginCreateOrUpdateSourceControl
  - uid: 'azure-arm-website.WebApps#_listNext'
    id: 'azure-arm-website.WebApps#_listNext'
    parent: azure-arm-website.WebApps
    name: _listNext
    summary: ''
    fullName: azure-arm-website.WebApps._listNext
    type: Field
    syntax:
      content: _listNext
  - uid: 'azure-arm-website.WebApps#_listByResourceGroupNext'
    id: 'azure-arm-website.WebApps#_listByResourceGroupNext'
    parent: azure-arm-website.WebApps
    name: _listByResourceGroupNext
    summary: ''
    fullName: azure-arm-website.WebApps._listByResourceGroupNext
    type: Field
    syntax:
      content: _listByResourceGroupNext
  - uid: 'azure-arm-website.WebApps#_listBackupsNext'
    id: 'azure-arm-website.WebApps#_listBackupsNext'
    parent: azure-arm-website.WebApps
    name: _listBackupsNext
    summary: ''
    fullName: azure-arm-website.WebApps._listBackupsNext
    type: Field
    syntax:
      content: _listBackupsNext
  - uid: 'azure-arm-website.WebApps#_listDeploymentsNext'
    id: 'azure-arm-website.WebApps#_listDeploymentsNext'
    parent: azure-arm-website.WebApps
    name: _listDeploymentsNext
    summary: ''
    fullName: azure-arm-website.WebApps._listDeploymentsNext
    type: Field
    syntax:
      content: _listDeploymentsNext
  - uid: 'azure-arm-website.WebApps#_listDomainOwnershipIdentifiersNext'
    id: 'azure-arm-website.WebApps#_listDomainOwnershipIdentifiersNext'
    parent: azure-arm-website.WebApps
    name: _listDomainOwnershipIdentifiersNext
    summary: ''
    fullName: azure-arm-website.WebApps._listDomainOwnershipIdentifiersNext
    type: Field
    syntax:
      content: _listDomainOwnershipIdentifiersNext
  - uid: 'azure-arm-website.WebApps#_listHostNameBindingsNext'
    id: 'azure-arm-website.WebApps#_listHostNameBindingsNext'
    parent: azure-arm-website.WebApps
    name: _listHostNameBindingsNext
    summary: ''
    fullName: azure-arm-website.WebApps._listHostNameBindingsNext
    type: Field
    syntax:
      content: _listHostNameBindingsNext
  - uid: 'azure-arm-website.WebApps#_listInstanceIdentifiersNext'
    id: 'azure-arm-website.WebApps#_listInstanceIdentifiersNext'
    parent: azure-arm-website.WebApps
    name: _listInstanceIdentifiersNext
    summary: ''
    fullName: azure-arm-website.WebApps._listInstanceIdentifiersNext
    type: Field
    syntax:
      content: _listInstanceIdentifiersNext
  - uid: 'azure-arm-website.WebApps#_listInstanceDeploymentsNext'
    id: 'azure-arm-website.WebApps#_listInstanceDeploymentsNext'
    parent: azure-arm-website.WebApps
    name: _listInstanceDeploymentsNext
    summary: ''
    fullName: azure-arm-website.WebApps._listInstanceDeploymentsNext
    type: Field
    syntax:
      content: _listInstanceDeploymentsNext
  - uid: 'azure-arm-website.WebApps#_listMetricDefinitionsNext'
    id: 'azure-arm-website.WebApps#_listMetricDefinitionsNext'
    parent: azure-arm-website.WebApps
    name: _listMetricDefinitionsNext
    summary: ''
    fullName: azure-arm-website.WebApps._listMetricDefinitionsNext
    type: Field
    syntax:
      content: _listMetricDefinitionsNext
  - uid: 'azure-arm-website.WebApps#_listMetricsNext'
    id: 'azure-arm-website.WebApps#_listMetricsNext'
    parent: azure-arm-website.WebApps
    name: _listMetricsNext
    summary: ''
    fullName: azure-arm-website.WebApps._listMetricsNext
    type: Field
    syntax:
      content: _listMetricsNext
  - uid: 'azure-arm-website.WebApps#_listPerfMonCountersNext'
    id: 'azure-arm-website.WebApps#_listPerfMonCountersNext'
    parent: azure-arm-website.WebApps
    name: _listPerfMonCountersNext
    summary: ''
    fullName: azure-arm-website.WebApps._listPerfMonCountersNext
    type: Field
    syntax:
      content: _listPerfMonCountersNext
  - uid: 'azure-arm-website.WebApps#_listSlotsNext'
    id: 'azure-arm-website.WebApps#_listSlotsNext'
    parent: azure-arm-website.WebApps
    name: _listSlotsNext
    summary: ''
    fullName: azure-arm-website.WebApps._listSlotsNext
    type: Field
    syntax:
      content: _listSlotsNext
  - uid: 'azure-arm-website.WebApps#_listBackupsSlotNext'
    id: 'azure-arm-website.WebApps#_listBackupsSlotNext'
    parent: azure-arm-website.WebApps
    name: _listBackupsSlotNext
    summary: ''
    fullName: azure-arm-website.WebApps._listBackupsSlotNext
    type: Field
    syntax:
      content: _listBackupsSlotNext
  - uid: 'azure-arm-website.WebApps#_listDeploymentsSlotNext'
    id: 'azure-arm-website.WebApps#_listDeploymentsSlotNext'
    parent: azure-arm-website.WebApps
    name: _listDeploymentsSlotNext
    summary: ''
    fullName: azure-arm-website.WebApps._listDeploymentsSlotNext
    type: Field
    syntax:
      content: _listDeploymentsSlotNext
  - uid: 'azure-arm-website.WebApps#_listDomainOwnershipIdentifiersSlotNext'
    id: 'azure-arm-website.WebApps#_listDomainOwnershipIdentifiersSlotNext'
    parent: azure-arm-website.WebApps
    name: _listDomainOwnershipIdentifiersSlotNext
    summary: ''
    fullName: azure-arm-website.WebApps._listDomainOwnershipIdentifiersSlotNext
    type: Field
    syntax:
      content: _listDomainOwnershipIdentifiersSlotNext
  - uid: 'azure-arm-website.WebApps#_listHostNameBindingsSlotNext'
    id: 'azure-arm-website.WebApps#_listHostNameBindingsSlotNext'
    parent: azure-arm-website.WebApps
    name: _listHostNameBindingsSlotNext
    summary: ''
    fullName: azure-arm-website.WebApps._listHostNameBindingsSlotNext
    type: Field
    syntax:
      content: _listHostNameBindingsSlotNext
  - uid: 'azure-arm-website.WebApps#_listInstanceIdentifiersSlotNext'
    id: 'azure-arm-website.WebApps#_listInstanceIdentifiersSlotNext'
    parent: azure-arm-website.WebApps
    name: _listInstanceIdentifiersSlotNext
    summary: ''
    fullName: azure-arm-website.WebApps._listInstanceIdentifiersSlotNext
    type: Field
    syntax:
      content: _listInstanceIdentifiersSlotNext
  - uid: 'azure-arm-website.WebApps#_listInstanceDeploymentsSlotNext'
    id: 'azure-arm-website.WebApps#_listInstanceDeploymentsSlotNext'
    parent: azure-arm-website.WebApps
    name: _listInstanceDeploymentsSlotNext
    summary: ''
    fullName: azure-arm-website.WebApps._listInstanceDeploymentsSlotNext
    type: Field
    syntax:
      content: _listInstanceDeploymentsSlotNext
  - uid: 'azure-arm-website.WebApps#_listMetricDefinitionsSlotNext'
    id: 'azure-arm-website.WebApps#_listMetricDefinitionsSlotNext'
    parent: azure-arm-website.WebApps
    name: _listMetricDefinitionsSlotNext
    summary: ''
    fullName: azure-arm-website.WebApps._listMetricDefinitionsSlotNext
    type: Field
    syntax:
      content: _listMetricDefinitionsSlotNext
  - uid: 'azure-arm-website.WebApps#_listMetricsSlotNext'
    id: 'azure-arm-website.WebApps#_listMetricsSlotNext'
    parent: azure-arm-website.WebApps
    name: _listMetricsSlotNext
    summary: ''
    fullName: azure-arm-website.WebApps._listMetricsSlotNext
    type: Field
    syntax:
      content: _listMetricsSlotNext
  - uid: 'azure-arm-website.WebApps#_listPerfMonCountersSlotNext'
    id: 'azure-arm-website.WebApps#_listPerfMonCountersSlotNext'
    parent: azure-arm-website.WebApps
    name: _listPerfMonCountersSlotNext
    summary: ''
    fullName: azure-arm-website.WebApps._listPerfMonCountersSlotNext
    type: Field
    syntax:
      content: _listPerfMonCountersSlotNext
  - uid: 'azure-arm-website.WebApps#_listSlotDifferencesSlotNext'
    id: 'azure-arm-website.WebApps#_listSlotDifferencesSlotNext'
    parent: azure-arm-website.WebApps
    name: _listSlotDifferencesSlotNext
    summary: ''
    fullName: azure-arm-website.WebApps._listSlotDifferencesSlotNext
    type: Field
    syntax:
      content: _listSlotDifferencesSlotNext
  - uid: 'azure-arm-website.WebApps#_listSnapshotsSlotNext'
    id: 'azure-arm-website.WebApps#_listSnapshotsSlotNext'
    parent: azure-arm-website.WebApps
    name: _listSnapshotsSlotNext
    summary: ''
    fullName: azure-arm-website.WebApps._listSnapshotsSlotNext
    type: Field
    syntax:
      content: _listSnapshotsSlotNext
  - uid: 'azure-arm-website.WebApps#_listUsagesSlotNext'
    id: 'azure-arm-website.WebApps#_listUsagesSlotNext'
    parent: azure-arm-website.WebApps
    name: _listUsagesSlotNext
    summary: ''
    fullName: azure-arm-website.WebApps._listUsagesSlotNext
    type: Field
    syntax:
      content: _listUsagesSlotNext
  - uid: 'azure-arm-website.WebApps#_listSlotDifferencesFromProductionNext'
    id: 'azure-arm-website.WebApps#_listSlotDifferencesFromProductionNext'
    parent: azure-arm-website.WebApps
    name: _listSlotDifferencesFromProductionNext
    summary: ''
    fullName: azure-arm-website.WebApps._listSlotDifferencesFromProductionNext
    type: Field
    syntax:
      content: _listSlotDifferencesFromProductionNext
  - uid: 'azure-arm-website.WebApps#_listSnapshotsNext'
    id: 'azure-arm-website.WebApps#_listSnapshotsNext'
    parent: azure-arm-website.WebApps
    name: _listSnapshotsNext
    summary: ''
    fullName: azure-arm-website.WebApps._listSnapshotsNext
    type: Field
    syntax:
      content: _listSnapshotsNext
  - uid: 'azure-arm-website.WebApps#_listUsagesNext'
    id: 'azure-arm-website.WebApps#_listUsagesNext'
    parent: azure-arm-website.WebApps
    name: _listUsagesNext
    summary: ''
    fullName: azure-arm-website.WebApps._listUsagesNext
    type: Field
    syntax:
      content: _listUsagesNext
  - uid: 'azure-arm-website.WebApps#listWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: listWithHttpOperationResponse(options)
    summary: |-
      Get all apps for a subscription.

      Get all apps for a subscription.
    fullName: azure-arm-website.WebApps.listWithHttpOperationResponse(options)
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
  - uid: 'azure-arm-website.WebApps#list'
    id: 'azure-arm-website.WebApps#list'
    parent: azure-arm-website.WebApps
    name: 'list(options, optionalCallback)'
    summary: |-
      Get all apps for a subscription.

      Get all apps for a subscription.
    fullName: 'azure-arm-website.WebApps.list(options, optionalCallback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#listByResourceGroupWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listByResourceGroupWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: |-
      Gets all web, mobile, and API apps in the specified resource group.

      Gets all web, mobile, and API apps in the specified resource group.
    fullName: >-
      azure-arm-website.WebApps.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.includeSlots
          type:
            - boolean
          description: >-
            Specify <strong>true</strong> to

            include deployment slots in results. The default is false, which
            only gives

            you the production slot of all apps.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
  - uid: 'azure-arm-website.WebApps#listByResourceGroup'
    id: 'azure-arm-website.WebApps#listByResourceGroup'
    parent: azure-arm-website.WebApps
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: |-
      Gets all web, mobile, and API apps in the specified resource group.

      Gets all web, mobile, and API apps in the specified resource group.
    fullName: >-
      azure-arm-website.WebApps.listByResourceGroup(resourceGroupName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.includeSlots
          type:
            - boolean
          description: >-
            Specify <strong>true</strong> to

            include deployment slots in results. The default is false, which
            only gives

            you the production slot of all apps.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'getWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Gets the details of a web, mobile, or API app.

      Gets the details of a web, mobile, or API app.
    fullName: >-
      azure-arm-website.WebApps.getWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getWithHttpOperationResponse(resourceGroupName, name, options)'
  - uid: 'azure-arm-website.WebApps#get'
    id: 'azure-arm-website.WebApps#get'
    parent: azure-arm-website.WebApps
    name: 'get(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets the details of a web, mobile, or API app.

      Gets the details of a web, mobile, or API app.
    fullName: >-
      azure-arm-website.WebApps.get(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function get(resourceGroupName, name, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#createOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#createOrUpdateWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, name,
      siteEnvelope, options)
    summary: |-
      Creates a new web, mobile, or API app in an existing resource
      group, or updates an existing app.

      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      name, siteEnvelope, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: |-
            Unique name of the app to create or update. To create
            or update a deployment slot, use the {slot} parameter.
        - id: siteEnvelope
          type:
            - object
          description: |-
            A JSON representation of the app properties.
            See example.
        - id: siteEnvelope.enabled
          type:
            - boolean
          description: >-
            <code>true</code> if the app is

            enabled; otherwise, <code>false</code>. Setting this value to false
            disables

            the app (takes the app offline).
          optional: true
        - id: siteEnvelope.hostNameSslStates
          type:
            - array
          description: |-
            Hostname SSL states are used
            to manage the SSL bindings for app's hostnames.
          optional: true
        - id: siteEnvelope.serverFarmId
          type:
            - string
          description: >-
            Resource ID of the associated

            App Service plan, formatted as:

            "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
          optional: true
        - id: siteEnvelope.reserved
          type:
            - boolean
          description: |-
            <code>true</code> if reserved;
            otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig
          type:
            - object
          description: Configuration of the app.
          optional: true
        - id: siteEnvelope.siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteEnvelope.siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteEnvelope.siteConfig.netFrameworkVersion
          type:
            - string
          description: |-
            .NET Framework
            version.
          optional: true
        - id: siteEnvelope.siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteEnvelope.siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteEnvelope.siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteEnvelope.siteConfig.linuxFxVersion
          type:
            - string
          description: |-
            Linux App Framework
            and version
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if request tracing is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request
            tracing expiration time.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if remote debugging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote
            debugging version.
          optional: true
        - id: siteEnvelope.siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if HTTP logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs
            directory size limit.
          optional: true
        - id: siteEnvelope.siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if detailed error logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.publishingUsername
          type:
            - string
          description: |-
            Publishing user
            name.
          optional: true
        - id: siteEnvelope.siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteEnvelope.siteConfig.connectionStrings
          type:
            - array
          description: |-
            Connection
            strings.
          optional: true
        - id: siteEnvelope.siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteEnvelope.siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteEnvelope.siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values

            include: 'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub',
            'CodePlexGit',

            'CodePlexHg', 'BitbucketGit', 'BitbucketHg', 'ExternalGit',
            'ExternalHg',

            'OneDrive', 'VSO'
          optional: true
        - id: siteEnvelope.siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use 32-bit worker process; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.webSocketsEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if WebSocket is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if
            Always On is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainerVersion
          type:
            - string
          description: |-
            Java
            container version.
          optional: true
        - id: siteEnvelope.siteConfig.appCommandLine
          type:
            - string
          description: |-
            App command line to
            launch.
          optional: true
        - id: siteEnvelope.siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed
            pipeline mode. Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteEnvelope.siteConfig.virtualApplications
          type:
            - array
          description: |-
            Virtual
            applications.
          optional: true
        - id: siteEnvelope.siteConfig.loadBalancing
          type:
            - string
          description: |-
            Site load balancing.
            Possible values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteEnvelope.siteConfig.experiments
          type:
            - object
          description: |-
            This is work around
            for polymophic types.
          optional: true
        - id: siteEnvelope.siteConfig.experiments.rampUpRules
          type:
            - array
          description: |-
            List of
            ramp-up rules.
          optional: true
        - id: siteEnvelope.siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum
            allowed CPU usage percentage.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum
            allowed memory usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum
            allowed disk size usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if Auto Heal is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions
            that describe when to execute the auto-heal actions.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A
            rule based on total requests.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: |-
            Time
            interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: A rule based on status codes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule based
            on request execution time.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: |-
            Time
            taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to
            be executed when a rule is triggered.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined action to be taken. Possible values include: 'Recycle',
            'LogEvent', 'CustomAction'
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: Custom action to be taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: |-
            Executable
            to be run.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteEnvelope.siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteEnvelope.siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteEnvelope.siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing
            (CORS) settings.
          optional: true
        - id: siteEnvelope.siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets
            the list of origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteEnvelope.siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteEnvelope.siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a
            flag indicating whether the Push endpoint is enabled.
        - id: siteEnvelope.siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of tags that are whitelisted for use
            by the

            push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: |-
            Gets or
            sets a JSON string containing a list of tags that require user
            authentication to be used in the push registration endpoint.
            Tags can consist of alphanumeric characters and the following:
            '_', '@', '#', '.', ':', '-'.
            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteEnvelope.siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of dynamic tags that will be
            evaluated from

            user claims in the push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about
            the formal API definition for the app.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the
            API definition.
          optional: true
        - id: siteEnvelope.siteConfig.autoSwapSlotName
          type:
            - string
          description: |-
            Auto-swap slot
            name.
          optional: true
        - id: siteEnvelope.siteConfig.localMySqlEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to enable local MySQL; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.ipSecurityRestrictions
          type:
            - array
          description: |-
            IP security
            restrictions.
          optional: true
        - id: siteEnvelope.scmSiteAlsoStopped
          type:
            - boolean
          description: >-
            <code>true</code> to stop

            SCM (KUDU) site when the app is stopped; otherwise,
            <code>false</code>. The

            default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile
          type:
            - object
          description: |-
            App Service
            Environment to use for the app.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile.id
          type:
            - string
          description: |-
            Resource ID of
            the App Service Environment.
          optional: true
        - id: siteEnvelope.microService
          type:
            - string
          description: |-
            Micro services like apps, logic
            apps.
          optional: true
        - id: siteEnvelope.gatewaySiteName
          type:
            - string
          description: |-
            Name of gateway app
            associated with the app.
          optional: true
        - id: siteEnvelope.clientAffinityEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client affinity; <code>false</code> to stop sending session
            affinity

            cookies, which route client requests in the same session to the same

            instance. Default is <code>true</code>.
          optional: true
        - id: siteEnvelope.clientCertEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client certificate authentication (TLS mutual
            authentication);

            otherwise, <code>false</code>. Default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostNamesDisabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            disable the public hostnames of the app; otherwise,
            <code>false</code>.

            If <code>true</code>, the app is only accessible via API management
            process.
          optional: true
        - id: siteEnvelope.containerSize
          type:
            - number
          description: Size of the function container.
          optional: true
        - id: siteEnvelope.dailyMemoryTimeQuota
          type:
            - number
          description: |-
            Maximum allowed daily
            memory-time quota (applicable on dynamic apps only).
          optional: true
        - id: siteEnvelope.cloningInfo
          type:
            - object
          description: |-
            If specified during app creation,
            the app is cloned from a source app.
          optional: true
        - id: siteEnvelope.cloningInfo.correlationId
          type:
            - string
          description: |-
            Correlation ID of
            cloning operation. This ID ties multiple cloning operations
            together to use the same snapshot.
          optional: true
        - id: siteEnvelope.cloningInfo.overwrite
          type:
            - boolean
          description: |-
            <code>true</code> to
            overwrite destination app; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneCustomHostNames
          type:
            - boolean
          description: >-
            <code>true</code> to clone custom hostnames from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneSourceControl
          type:
            - boolean
          description: >-
            <code>true</code> to clone source control from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.sourceWebAppId
          type:
            - string
          description: >-
            ARM resource ID of

            the source app. App resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}

            for production slots and

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}

            for other slots.
        - id: siteEnvelope.cloningInfo.hostingEnvironment
          type:
            - string
          description: |-
            App Service
            Environment.
          optional: true
        - id: siteEnvelope.cloningInfo.appSettingsOverrides
          type:
            - object
          description: >-
            Application

            setting overrides for cloned app. If specified, these settings
            override the

            settings cloned

            from source app. Otherwise, application settings from source app are

            retained.
          optional: true
        - id: siteEnvelope.cloningInfo.configureLoadBalancing
          type:
            - boolean
          description: >-
            <code>true</code> to configure load balancing for source and
            destination

            app.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileId
          type:
            - string
          description: >-
            ARM

            resource ID of the Traffic Manager profile to use, if it exists.
            Traffic

            Manager resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileName
          type:
            - string
          description: >-
            Name of

            Traffic Manager profile to create. This is only needed if Traffic
            Manager

            profile does not already exist.
          optional: true
        - id: siteEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: siteEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.skipDnsRegistration
          type:
            - boolean
          description: |-
            If true web app hostname is
            not registered with DNS on creation. This parameter is
            only used for app creation
          optional: true
        - id: options.skipCustomDomainVerification
          type:
            - boolean
          description: >-
            If true, custom (non

            *.azurewebsites.net) domains associated with web app are not
            verified.
          optional: true
        - id: options.forceDnsRegistration
          type:
            - boolean
          description: |-
            If true, web app hostname is
            force registered with DNS
          optional: true
        - id: options.ttlInSeconds
          type:
            - string
          description: |-
            Time to live in seconds for web app's
            default domain name
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        name, siteEnvelope, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdate'
    id: 'azure-arm-website.WebApps#createOrUpdate'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdate(resourceGroupName, name, siteEnvelope, options,
      optionalCallback)
    summary: |-
      Creates a new web, mobile, or API app in an existing resource
      group, or updates an existing app.

      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdate(resourceGroupName, name,
      siteEnvelope, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: |-
            Unique name of the app to create or update. To create
            or update a deployment slot, use the {slot} parameter.
        - id: siteEnvelope
          type:
            - object
          description: |-
            A JSON representation of the app properties.
            See example.
        - id: siteEnvelope.enabled
          type:
            - boolean
          description: >-
            <code>true</code> if the app is

            enabled; otherwise, <code>false</code>. Setting this value to false
            disables

            the app (takes the app offline).
          optional: true
        - id: siteEnvelope.hostNameSslStates
          type:
            - array
          description: |-
            Hostname SSL states are used
            to manage the SSL bindings for app's hostnames.
          optional: true
        - id: siteEnvelope.serverFarmId
          type:
            - string
          description: >-
            Resource ID of the associated

            App Service plan, formatted as:

            "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
          optional: true
        - id: siteEnvelope.reserved
          type:
            - boolean
          description: |-
            <code>true</code> if reserved;
            otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig
          type:
            - object
          description: Configuration of the app.
          optional: true
        - id: siteEnvelope.siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteEnvelope.siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteEnvelope.siteConfig.netFrameworkVersion
          type:
            - string
          description: |-
            .NET Framework
            version.
          optional: true
        - id: siteEnvelope.siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteEnvelope.siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteEnvelope.siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteEnvelope.siteConfig.linuxFxVersion
          type:
            - string
          description: |-
            Linux App Framework
            and version
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if request tracing is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request
            tracing expiration time.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if remote debugging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote
            debugging version.
          optional: true
        - id: siteEnvelope.siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if HTTP logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs
            directory size limit.
          optional: true
        - id: siteEnvelope.siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if detailed error logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.publishingUsername
          type:
            - string
          description: |-
            Publishing user
            name.
          optional: true
        - id: siteEnvelope.siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteEnvelope.siteConfig.connectionStrings
          type:
            - array
          description: |-
            Connection
            strings.
          optional: true
        - id: siteEnvelope.siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteEnvelope.siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteEnvelope.siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values

            include: 'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub',
            'CodePlexGit',

            'CodePlexHg', 'BitbucketGit', 'BitbucketHg', 'ExternalGit',
            'ExternalHg',

            'OneDrive', 'VSO'
          optional: true
        - id: siteEnvelope.siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use 32-bit worker process; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.webSocketsEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if WebSocket is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if
            Always On is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainerVersion
          type:
            - string
          description: |-
            Java
            container version.
          optional: true
        - id: siteEnvelope.siteConfig.appCommandLine
          type:
            - string
          description: |-
            App command line to
            launch.
          optional: true
        - id: siteEnvelope.siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed
            pipeline mode. Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteEnvelope.siteConfig.virtualApplications
          type:
            - array
          description: |-
            Virtual
            applications.
          optional: true
        - id: siteEnvelope.siteConfig.loadBalancing
          type:
            - string
          description: |-
            Site load balancing.
            Possible values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteEnvelope.siteConfig.experiments
          type:
            - object
          description: |-
            This is work around
            for polymophic types.
          optional: true
        - id: siteEnvelope.siteConfig.experiments.rampUpRules
          type:
            - array
          description: |-
            List of
            ramp-up rules.
          optional: true
        - id: siteEnvelope.siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum
            allowed CPU usage percentage.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum
            allowed memory usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum
            allowed disk size usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if Auto Heal is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions
            that describe when to execute the auto-heal actions.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A
            rule based on total requests.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: |-
            Time
            interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: A rule based on status codes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule based
            on request execution time.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: |-
            Time
            taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to
            be executed when a rule is triggered.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined action to be taken. Possible values include: 'Recycle',
            'LogEvent', 'CustomAction'
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: Custom action to be taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: |-
            Executable
            to be run.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteEnvelope.siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteEnvelope.siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteEnvelope.siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing
            (CORS) settings.
          optional: true
        - id: siteEnvelope.siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets
            the list of origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteEnvelope.siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteEnvelope.siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a
            flag indicating whether the Push endpoint is enabled.
        - id: siteEnvelope.siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of tags that are whitelisted for use
            by the

            push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: |-
            Gets or
            sets a JSON string containing a list of tags that require user
            authentication to be used in the push registration endpoint.
            Tags can consist of alphanumeric characters and the following:
            '_', '@', '#', '.', ':', '-'.
            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteEnvelope.siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of dynamic tags that will be
            evaluated from

            user claims in the push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about
            the formal API definition for the app.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the
            API definition.
          optional: true
        - id: siteEnvelope.siteConfig.autoSwapSlotName
          type:
            - string
          description: |-
            Auto-swap slot
            name.
          optional: true
        - id: siteEnvelope.siteConfig.localMySqlEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to enable local MySQL; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.ipSecurityRestrictions
          type:
            - array
          description: |-
            IP security
            restrictions.
          optional: true
        - id: siteEnvelope.scmSiteAlsoStopped
          type:
            - boolean
          description: >-
            <code>true</code> to stop

            SCM (KUDU) site when the app is stopped; otherwise,
            <code>false</code>. The

            default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile
          type:
            - object
          description: |-
            App Service
            Environment to use for the app.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile.id
          type:
            - string
          description: |-
            Resource ID of
            the App Service Environment.
          optional: true
        - id: siteEnvelope.microService
          type:
            - string
          description: |-
            Micro services like apps, logic
            apps.
          optional: true
        - id: siteEnvelope.gatewaySiteName
          type:
            - string
          description: |-
            Name of gateway app
            associated with the app.
          optional: true
        - id: siteEnvelope.clientAffinityEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client affinity; <code>false</code> to stop sending session
            affinity

            cookies, which route client requests in the same session to the same

            instance. Default is <code>true</code>.
          optional: true
        - id: siteEnvelope.clientCertEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client certificate authentication (TLS mutual
            authentication);

            otherwise, <code>false</code>. Default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostNamesDisabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            disable the public hostnames of the app; otherwise,
            <code>false</code>.

            If <code>true</code>, the app is only accessible via API management
            process.
          optional: true
        - id: siteEnvelope.containerSize
          type:
            - number
          description: Size of the function container.
          optional: true
        - id: siteEnvelope.dailyMemoryTimeQuota
          type:
            - number
          description: |-
            Maximum allowed daily
            memory-time quota (applicable on dynamic apps only).
          optional: true
        - id: siteEnvelope.cloningInfo
          type:
            - object
          description: |-
            If specified during app creation,
            the app is cloned from a source app.
          optional: true
        - id: siteEnvelope.cloningInfo.correlationId
          type:
            - string
          description: |-
            Correlation ID of
            cloning operation. This ID ties multiple cloning operations
            together to use the same snapshot.
          optional: true
        - id: siteEnvelope.cloningInfo.overwrite
          type:
            - boolean
          description: |-
            <code>true</code> to
            overwrite destination app; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneCustomHostNames
          type:
            - boolean
          description: >-
            <code>true</code> to clone custom hostnames from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneSourceControl
          type:
            - boolean
          description: >-
            <code>true</code> to clone source control from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.sourceWebAppId
          type:
            - string
          description: >-
            ARM resource ID of

            the source app. App resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}

            for production slots and

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}

            for other slots.
        - id: siteEnvelope.cloningInfo.hostingEnvironment
          type:
            - string
          description: |-
            App Service
            Environment.
          optional: true
        - id: siteEnvelope.cloningInfo.appSettingsOverrides
          type:
            - object
          description: >-
            Application

            setting overrides for cloned app. If specified, these settings
            override the

            settings cloned

            from source app. Otherwise, application settings from source app are

            retained.
          optional: true
        - id: siteEnvelope.cloningInfo.configureLoadBalancing
          type:
            - boolean
          description: >-
            <code>true</code> to configure load balancing for source and
            destination

            app.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileId
          type:
            - string
          description: >-
            ARM

            resource ID of the Traffic Manager profile to use, if it exists.
            Traffic

            Manager resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileName
          type:
            - string
          description: >-
            Name of

            Traffic Manager profile to create. This is only needed if Traffic
            Manager

            profile does not already exist.
          optional: true
        - id: siteEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: siteEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.skipDnsRegistration
          type:
            - boolean
          description: |-
            If true web app hostname is
            not registered with DNS on creation. This parameter is
            only used for app creation
          optional: true
        - id: options.skipCustomDomainVerification
          type:
            - boolean
          description: >-
            If true, custom (non

            *.azurewebsites.net) domains associated with web app are not
            verified.
          optional: true
        - id: options.forceDnsRegistration
          type:
            - boolean
          description: |-
            If true, web app hostname is
            force registered with DNS
          optional: true
        - id: options.ttlInSeconds
          type:
            - string
          description: |-
            Time to live in seconds for web app's
            default domain name
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, name, siteEnvelope, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'deleteMethodWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Deletes a web, mobile, or API app, or one of the deployment slots.

      Deletes a web, mobile, or API app, or one of the deployment slots.
    fullName: >-
      azure-arm-website.WebApps.deleteMethodWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.deleteMetrics
          type:
            - boolean
          description: |-
            If true, web app metrics are also
            deleted
          optional: true
        - id: options.deleteEmptyServerFarm
          type:
            - boolean
          description: >-
            Specify true if the App

            Service plan will be empty after app deletion and you want to delete
            the

            empty App Service plan. By default, the empty App Service plan is
            not

            deleted.
          optional: true
        - id: options.skipDnsRegistration
          type:
            - boolean
          description: |-
            If true, DNS registration is
            skipped
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#deleteMethod'
    id: 'azure-arm-website.WebApps#deleteMethod'
    parent: azure-arm-website.WebApps
    name: 'deleteMethod(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Deletes a web, mobile, or API app, or one of the deployment slots.

      Deletes a web, mobile, or API app, or one of the deployment slots.
    fullName: >-
      azure-arm-website.WebApps.deleteMethod(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.deleteMetrics
          type:
            - boolean
          description: |-
            If true, web app metrics are also
            deleted
          optional: true
        - id: options.deleteEmptyServerFarm
          type:
            - boolean
          description: >-
            Specify true if the App

            Service plan will be empty after app deletion and you want to delete
            the

            empty App Service plan. By default, the empty App Service plan is
            not

            deleted.
          optional: true
        - id: options.skipDnsRegistration
          type:
            - boolean
          description: |-
            If true, DNS registration is
            skipped
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#analyzeCustomHostnameWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#analyzeCustomHostnameWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      analyzeCustomHostnameWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Analyze a custom hostname.

      Analyze a custom hostname.
    fullName: >-
      azure-arm-website.WebApps.analyzeCustomHostnameWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.hostName
          type:
            - string
          description: Custom hostname
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        analyzeCustomHostnameWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#analyzeCustomHostname'
    id: 'azure-arm-website.WebApps#analyzeCustomHostname'
    parent: azure-arm-website.WebApps
    name: 'analyzeCustomHostname(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Analyze a custom hostname.

      Analyze a custom hostname.
    fullName: >-
      azure-arm-website.WebApps.analyzeCustomHostname(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.hostName
          type:
            - string
          description: Custom hostname
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function analyzeCustomHostname(resourceGroupName, name, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#applySlotConfigToProductionWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#applySlotConfigToProductionWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      applySlotConfigToProductionWithHttpOperationResponse(resourceGroupName,
      name, slotSwapEntity, options)
    summary: |-
      Applies the configuration settings from the target slot onto the
      current slot.

      Applies the configuration settings from the target slot onto the current
      slot.
    fullName: >-
      azure-arm-website.WebApps.applySlotConfigToProductionWithHttpOperationResponse(resourceGroupName,
      name, slotSwapEntity, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        applySlotConfigToProductionWithHttpOperationResponse(resourceGroupName,
        name, slotSwapEntity, options)
  - uid: 'azure-arm-website.WebApps#applySlotConfigToProduction'
    id: 'azure-arm-website.WebApps#applySlotConfigToProduction'
    parent: azure-arm-website.WebApps
    name: >-
      applySlotConfigToProduction(resourceGroupName, name, slotSwapEntity,
      options, optionalCallback)
    summary: |-
      Applies the configuration settings from the target slot onto the
      current slot.

      Applies the configuration settings from the target slot onto the current
      slot.
    fullName: >-
      azure-arm-website.WebApps.applySlotConfigToProduction(resourceGroupName,
      name, slotSwapEntity, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function applySlotConfigToProduction(resourceGroupName, name,
        slotSwapEntity, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#backupWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#backupWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'backupWithHttpOperationResponse(resourceGroupName, name, request, options)'
    summary: |-
      Creates a backup of an app.

      Creates a backup of an app.
    fullName: >-
      azure-arm-website.WebApps.backupWithHttpOperationResponse(resourceGroupName,
      name, request, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - object
          description: |-
            Backup configuration. You can use the JSON response
            from the POST action as input here.
        - id: request.backupRequestName
          type:
            - string
          description: Name of the backup.
          optional: true
        - id: request.enabled
          type:
            - boolean
          description: >-
            True if the backup schedule is enabled

            (must be included in that case), false if the backup schedule should
            be

            disabled.
          optional: true
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.backupSchedule
          type:
            - object
          description: |-
            Schedule for the backup if it is
            executed periodically.
          optional: true
        - id: request.backupSchedule.frequencyInterval
          type:
            - number
          description: >-
            How often should be

            the backup executed (e.g. for weekly backup, this should be set to 7
            and

            FrequencyUnit should be set to Day)
        - id: request.backupSchedule.frequencyUnit
          type:
            - string
          description: >-
            The unit of time for

            how often should be the backup executed (e.g. for weekly backup,
            this should

            be set to Day and FrequencyInterval should be set to 7). Possible
            values

            include: 'Day', 'Hour'
        - id: request.backupSchedule.keepAtLeastOneBackup
          type:
            - boolean
          description: >-
            True if the

            retention policy should always keep at least one backup in the
            storage

            account, regardless how old it is; false otherwise.
        - id: request.backupSchedule.retentionPeriodInDays
          type:
            - number
          description: |-
            After how many
            days backups should be deleted.
        - id: request.backupSchedule.startTime
          type:
            - date
          description: |-
            When the schedule should
            start working.
          optional: true
        - id: request.databases
          type:
            - array
          description: Databases included in the backup.
          optional: true
        - id: request.backupRequestType
          type:
            - string
          description: |-
            Type of the backup. Possible
            values include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function backupWithHttpOperationResponse(resourceGroupName, name,
        request, options)
  - uid: 'azure-arm-website.WebApps#backup'
    id: 'azure-arm-website.WebApps#backup'
    parent: azure-arm-website.WebApps
    name: 'backup(resourceGroupName, name, request, options, optionalCallback)'
    summary: |-
      Creates a backup of an app.

      Creates a backup of an app.
    fullName: >-
      azure-arm-website.WebApps.backup(resourceGroupName, name, request,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - object
          description: |-
            Backup configuration. You can use the JSON response
            from the POST action as input here.
        - id: request.backupRequestName
          type:
            - string
          description: Name of the backup.
          optional: true
        - id: request.enabled
          type:
            - boolean
          description: >-
            True if the backup schedule is enabled

            (must be included in that case), false if the backup schedule should
            be

            disabled.
          optional: true
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.backupSchedule
          type:
            - object
          description: |-
            Schedule for the backup if it is
            executed periodically.
          optional: true
        - id: request.backupSchedule.frequencyInterval
          type:
            - number
          description: >-
            How often should be

            the backup executed (e.g. for weekly backup, this should be set to 7
            and

            FrequencyUnit should be set to Day)
        - id: request.backupSchedule.frequencyUnit
          type:
            - string
          description: >-
            The unit of time for

            how often should be the backup executed (e.g. for weekly backup,
            this should

            be set to Day and FrequencyInterval should be set to 7). Possible
            values

            include: 'Day', 'Hour'
        - id: request.backupSchedule.keepAtLeastOneBackup
          type:
            - boolean
          description: >-
            True if the

            retention policy should always keep at least one backup in the
            storage

            account, regardless how old it is; false otherwise.
        - id: request.backupSchedule.retentionPeriodInDays
          type:
            - number
          description: |-
            After how many
            days backups should be deleted.
        - id: request.backupSchedule.startTime
          type:
            - date
          description: |-
            When the schedule should
            start working.
          optional: true
        - id: request.databases
          type:
            - array
          description: Databases included in the backup.
          optional: true
        - id: request.backupRequestType
          type:
            - string
          description: |-
            Type of the backup. Possible
            values include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function backup(resourceGroupName, name, request, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listBackupsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listBackupsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listBackupsWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Gets existing backups of an app.

      Gets existing backups of an app.
    fullName: >-
      azure-arm-website.WebApps.listBackupsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listBackupsWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#listBackups'
    id: 'azure-arm-website.WebApps#listBackups'
    parent: azure-arm-website.WebApps
    name: 'listBackups(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets existing backups of an app.

      Gets existing backups of an app.
    fullName: >-
      azure-arm-website.WebApps.listBackups(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listBackups(resourceGroupName, name, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#discoverRestoreWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#discoverRestoreWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      discoverRestoreWithHttpOperationResponse(resourceGroupName, name, request,
      options)
    summary: |-
      Discovers an existing app backup that can be restored from a blob
      in Azure storage.

      Discovers an existing app backup that can be restored from a blob in Azure
      storage.
    fullName: >-
      azure-arm-website.WebApps.discoverRestoreWithHttpOperationResponse(resourceGroupName,
      name, request, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - object
          description: |-
            A RestoreRequest object that includes Azure storage
            URL and blog name for discovery of backup.
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.blobName
          type:
            - string
          description: Name of a blob which contains the backup.
          optional: true
        - id: request.overwrite
          type:
            - boolean
          description: >-
            <code>true</code> if the restore

            operation can overwrite target app; otherwise, <code>false</code>.

            <code>true</code> is needed if trying to restore over an existing
            app.
          optional: true
        - id: request.siteName
          type:
            - string
          description: Name of an app.
          optional: true
        - id: request.databases
          type:
            - array
          description: >-
            Collection of databases which should be

            restored. This list has to match the list of databases included in
            the

            backup.
          optional: true
        - id: request.ignoreConflictingHostNames
          type:
            - boolean
          description: >-
            Changes a logic when

            restoring an app with custom domains. <code>true</code> to remove
            custom

            domains automatically. If <code>false</code>, custom domains are
            added to

            the app's object when it is being restored, but that might fail due
            to

            conflicts during the operation.
          optional: true
        - id: request.operationType
          type:
            - string
          description: |-
            Operation type. Possible values
            include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.adjustConnectionStrings
          type:
            - boolean
          description: |-
            <code>true</code> if
            SiteConfig.ConnectionStrings should be set in new app; otherwise,
            <code>false</code>.
          optional: true
        - id: request.hostingEnvironment
          type:
            - string
          description: >-
            App Service Environment name,

            if needed (only when restoring an app to an App Service
            Environment).
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function discoverRestoreWithHttpOperationResponse(resourceGroupName,
        name, request, options)
  - uid: 'azure-arm-website.WebApps#discoverRestore'
    id: 'azure-arm-website.WebApps#discoverRestore'
    parent: azure-arm-website.WebApps
    name: >-
      discoverRestore(resourceGroupName, name, request, options,
      optionalCallback)
    summary: |-
      Discovers an existing app backup that can be restored from a blob
      in Azure storage.

      Discovers an existing app backup that can be restored from a blob in Azure
      storage.
    fullName: >-
      azure-arm-website.WebApps.discoverRestore(resourceGroupName, name,
      request, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - object
          description: |-
            A RestoreRequest object that includes Azure storage
            URL and blog name for discovery of backup.
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.blobName
          type:
            - string
          description: Name of a blob which contains the backup.
          optional: true
        - id: request.overwrite
          type:
            - boolean
          description: >-
            <code>true</code> if the restore

            operation can overwrite target app; otherwise, <code>false</code>.

            <code>true</code> is needed if trying to restore over an existing
            app.
          optional: true
        - id: request.siteName
          type:
            - string
          description: Name of an app.
          optional: true
        - id: request.databases
          type:
            - array
          description: >-
            Collection of databases which should be

            restored. This list has to match the list of databases included in
            the

            backup.
          optional: true
        - id: request.ignoreConflictingHostNames
          type:
            - boolean
          description: >-
            Changes a logic when

            restoring an app with custom domains. <code>true</code> to remove
            custom

            domains automatically. If <code>false</code>, custom domains are
            added to

            the app's object when it is being restored, but that might fail due
            to

            conflicts during the operation.
          optional: true
        - id: request.operationType
          type:
            - string
          description: |-
            Operation type. Possible values
            include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.adjustConnectionStrings
          type:
            - boolean
          description: |-
            <code>true</code> if
            SiteConfig.ConnectionStrings should be set in new app; otherwise,
            <code>false</code>.
          optional: true
        - id: request.hostingEnvironment
          type:
            - string
          description: >-
            App Service Environment name,

            if needed (only when restoring an app to an App Service
            Environment).
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function discoverRestore(resourceGroupName, name, request, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getBackupStatusWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getBackupStatusWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getBackupStatusWithHttpOperationResponse(resourceGroupName, name,
      backupId, options)
    summary: |-
      Gets a backup of an app by its ID.

      Gets a backup of an app by its ID.
    fullName: >-
      azure-arm-website.WebApps.getBackupStatusWithHttpOperationResponse(resourceGroupName,
      name, backupId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getBackupStatusWithHttpOperationResponse(resourceGroupName,
        name, backupId, options)
  - uid: 'azure-arm-website.WebApps#getBackupStatus'
    id: 'azure-arm-website.WebApps#getBackupStatus'
    parent: azure-arm-website.WebApps
    name: >-
      getBackupStatus(resourceGroupName, name, backupId, options,
      optionalCallback)
    summary: |-
      Gets a backup of an app by its ID.

      Gets a backup of an app by its ID.
    fullName: >-
      azure-arm-website.WebApps.getBackupStatus(resourceGroupName, name,
      backupId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getBackupStatus(resourceGroupName, name, backupId, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#deleteBackupWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deleteBackupWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      deleteBackupWithHttpOperationResponse(resourceGroupName, name, backupId,
      options)
    summary: |-
      Deletes a backup of an app by its ID.

      Deletes a backup of an app by its ID.
    fullName: >-
      azure-arm-website.WebApps.deleteBackupWithHttpOperationResponse(resourceGroupName,
      name, backupId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteBackupWithHttpOperationResponse(resourceGroupName, name,
        backupId, options)
  - uid: 'azure-arm-website.WebApps#deleteBackup'
    id: 'azure-arm-website.WebApps#deleteBackup'
    parent: azure-arm-website.WebApps
    name: 'deleteBackup(resourceGroupName, name, backupId, options, optionalCallback)'
    summary: |-
      Deletes a backup of an app by its ID.

      Deletes a backup of an app by its ID.
    fullName: >-
      azure-arm-website.WebApps.deleteBackup(resourceGroupName, name, backupId,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteBackup(resourceGroupName, name, backupId, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listBackupStatusSecretsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listBackupStatusSecretsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listBackupStatusSecretsWithHttpOperationResponse(resourceGroupName, name,
      backupId, request, options)
    summary: >-
      Gets status of a web app backup that may be in progress, including

      secrets associated with the backup, such as the Azure Storage SAS URL.
      Also

      can be used to update the SAS URL for the backup if a new URL is passed in

      the request body.


      Gets status of a web app backup that may be in progress, including secrets

      associated with the backup, such as the Azure Storage SAS URL. Also can be

      used to update the SAS URL for the backup if a new URL is passed in the

      request body.
    fullName: >-
      azure-arm-website.WebApps.listBackupStatusSecretsWithHttpOperationResponse(resourceGroupName,
      name, backupId, request, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: backupId
          type:
            - string
          description: Id of backup
        - id: request
          type:
            - object
          description: Information on backup request
        - id: request.backupRequestName
          type:
            - string
          description: Name of the backup.
          optional: true
        - id: request.enabled
          type:
            - boolean
          description: >-
            True if the backup schedule is enabled

            (must be included in that case), false if the backup schedule should
            be

            disabled.
          optional: true
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.backupSchedule
          type:
            - object
          description: |-
            Schedule for the backup if it is
            executed periodically.
          optional: true
        - id: request.backupSchedule.frequencyInterval
          type:
            - number
          description: >-
            How often should be

            the backup executed (e.g. for weekly backup, this should be set to 7
            and

            FrequencyUnit should be set to Day)
        - id: request.backupSchedule.frequencyUnit
          type:
            - string
          description: >-
            The unit of time for

            how often should be the backup executed (e.g. for weekly backup,
            this should

            be set to Day and FrequencyInterval should be set to 7). Possible
            values

            include: 'Day', 'Hour'
        - id: request.backupSchedule.keepAtLeastOneBackup
          type:
            - boolean
          description: >-
            True if the

            retention policy should always keep at least one backup in the
            storage

            account, regardless how old it is; false otherwise.
        - id: request.backupSchedule.retentionPeriodInDays
          type:
            - number
          description: |-
            After how many
            days backups should be deleted.
        - id: request.backupSchedule.startTime
          type:
            - date
          description: |-
            When the schedule should
            start working.
          optional: true
        - id: request.databases
          type:
            - array
          description: Databases included in the backup.
          optional: true
        - id: request.backupRequestType
          type:
            - string
          description: |-
            Type of the backup. Possible
            values include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listBackupStatusSecretsWithHttpOperationResponse(resourceGroupName,
        name, backupId, request, options)
  - uid: 'azure-arm-website.WebApps#listBackupStatusSecrets'
    id: 'azure-arm-website.WebApps#listBackupStatusSecrets'
    parent: azure-arm-website.WebApps
    name: >-
      listBackupStatusSecrets(resourceGroupName, name, backupId, request,
      options, optionalCallback)
    summary: >-
      Gets status of a web app backup that may be in progress, including

      secrets associated with the backup, such as the Azure Storage SAS URL.
      Also

      can be used to update the SAS URL for the backup if a new URL is passed in

      the request body.


      Gets status of a web app backup that may be in progress, including secrets

      associated with the backup, such as the Azure Storage SAS URL. Also can be

      used to update the SAS URL for the backup if a new URL is passed in the

      request body.
    fullName: >-
      azure-arm-website.WebApps.listBackupStatusSecrets(resourceGroupName, name,
      backupId, request, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: backupId
          type:
            - string
          description: Id of backup
        - id: request
          type:
            - object
          description: Information on backup request
        - id: request.backupRequestName
          type:
            - string
          description: Name of the backup.
          optional: true
        - id: request.enabled
          type:
            - boolean
          description: >-
            True if the backup schedule is enabled

            (must be included in that case), false if the backup schedule should
            be

            disabled.
          optional: true
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.backupSchedule
          type:
            - object
          description: |-
            Schedule for the backup if it is
            executed periodically.
          optional: true
        - id: request.backupSchedule.frequencyInterval
          type:
            - number
          description: >-
            How often should be

            the backup executed (e.g. for weekly backup, this should be set to 7
            and

            FrequencyUnit should be set to Day)
        - id: request.backupSchedule.frequencyUnit
          type:
            - string
          description: >-
            The unit of time for

            how often should be the backup executed (e.g. for weekly backup,
            this should

            be set to Day and FrequencyInterval should be set to 7). Possible
            values

            include: 'Day', 'Hour'
        - id: request.backupSchedule.keepAtLeastOneBackup
          type:
            - boolean
          description: >-
            True if the

            retention policy should always keep at least one backup in the
            storage

            account, regardless how old it is; false otherwise.
        - id: request.backupSchedule.retentionPeriodInDays
          type:
            - number
          description: |-
            After how many
            days backups should be deleted.
        - id: request.backupSchedule.startTime
          type:
            - date
          description: |-
            When the schedule should
            start working.
          optional: true
        - id: request.databases
          type:
            - array
          description: Databases included in the backup.
          optional: true
        - id: request.backupRequestType
          type:
            - string
          description: |-
            Type of the backup. Possible
            values include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listBackupStatusSecrets(resourceGroupName, name, backupId,
        request, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#restoreWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#restoreWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      restoreWithHttpOperationResponse(resourceGroupName, name, backupId,
      request, options)
    summary: |-
      Restores a specific backup to another app (or deployment slot, if
      specified).

      Restores a specific backup to another app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.restoreWithHttpOperationResponse(resourceGroupName,
      name, backupId, request, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: request
          type:
            - object
          description: Information on restore request
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.blobName
          type:
            - string
          description: Name of a blob which contains the backup.
          optional: true
        - id: request.overwrite
          type:
            - boolean
          description: >-
            <code>true</code> if the restore

            operation can overwrite target app; otherwise, <code>false</code>.

            <code>true</code> is needed if trying to restore over an existing
            app.
          optional: true
        - id: request.siteName
          type:
            - string
          description: Name of an app.
          optional: true
        - id: request.databases
          type:
            - array
          description: >-
            Collection of databases which should be

            restored. This list has to match the list of databases included in
            the

            backup.
          optional: true
        - id: request.ignoreConflictingHostNames
          type:
            - boolean
          description: >-
            Changes a logic when

            restoring an app with custom domains. <code>true</code> to remove
            custom

            domains automatically. If <code>false</code>, custom domains are
            added to

            the app's object when it is being restored, but that might fail due
            to

            conflicts during the operation.
          optional: true
        - id: request.operationType
          type:
            - string
          description: |-
            Operation type. Possible values
            include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.adjustConnectionStrings
          type:
            - boolean
          description: |-
            <code>true</code> if
            SiteConfig.ConnectionStrings should be set in new app; otherwise,
            <code>false</code>.
          optional: true
        - id: request.hostingEnvironment
          type:
            - string
          description: >-
            App Service Environment name,

            if needed (only when restoring an app to an App Service
            Environment).
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function restoreWithHttpOperationResponse(resourceGroupName, name,
        backupId, request, options)
  - uid: 'azure-arm-website.WebApps#restore'
    id: 'azure-arm-website.WebApps#restore'
    parent: azure-arm-website.WebApps
    name: >-
      restore(resourceGroupName, name, backupId, request, options,
      optionalCallback)
    summary: |-
      Restores a specific backup to another app (or deployment slot, if
      specified).

      Restores a specific backup to another app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.restore(resourceGroupName, name, backupId,
      request, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: request
          type:
            - object
          description: Information on restore request
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.blobName
          type:
            - string
          description: Name of a blob which contains the backup.
          optional: true
        - id: request.overwrite
          type:
            - boolean
          description: >-
            <code>true</code> if the restore

            operation can overwrite target app; otherwise, <code>false</code>.

            <code>true</code> is needed if trying to restore over an existing
            app.
          optional: true
        - id: request.siteName
          type:
            - string
          description: Name of an app.
          optional: true
        - id: request.databases
          type:
            - array
          description: >-
            Collection of databases which should be

            restored. This list has to match the list of databases included in
            the

            backup.
          optional: true
        - id: request.ignoreConflictingHostNames
          type:
            - boolean
          description: >-
            Changes a logic when

            restoring an app with custom domains. <code>true</code> to remove
            custom

            domains automatically. If <code>false</code>, custom domains are
            added to

            the app's object when it is being restored, but that might fail due
            to

            conflicts during the operation.
          optional: true
        - id: request.operationType
          type:
            - string
          description: |-
            Operation type. Possible values
            include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.adjustConnectionStrings
          type:
            - boolean
          description: |-
            <code>true</code> if
            SiteConfig.ConnectionStrings should be set in new app; otherwise,
            <code>false</code>.
          optional: true
        - id: request.hostingEnvironment
          type:
            - string
          description: >-
            App Service Environment name,

            if needed (only when restoring an app to an App Service
            Environment).
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function restore(resourceGroupName, name, backupId, request, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateApplicationSettingsWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateApplicationSettingsWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateApplicationSettingsWithHttpOperationResponse(resourceGroupName,
      name, appSettings, options)
    summary: |-
      Replaces the application settings of an app.

      Replaces the application settings of an app.
    fullName: >-
      azure-arm-website.WebApps.updateApplicationSettingsWithHttpOperationResponse(resourceGroupName,
      name, appSettings, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: appSettings
          type:
            - object
          description: Application settings of the app.
        - id: appSettings.properties
          type:
            - object
          description: Settings.
          optional: true
        - id: appSettings.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: appSettings.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: appSettings.location
          type:
            - string
          description: Resource Location.
        - id: appSettings.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: appSettings.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateApplicationSettingsWithHttpOperationResponse(resourceGroupName,
        name, appSettings, options)
  - uid: 'azure-arm-website.WebApps#updateApplicationSettings'
    id: 'azure-arm-website.WebApps#updateApplicationSettings'
    parent: azure-arm-website.WebApps
    name: >-
      updateApplicationSettings(resourceGroupName, name, appSettings, options,
      optionalCallback)
    summary: |-
      Replaces the application settings of an app.

      Replaces the application settings of an app.
    fullName: >-
      azure-arm-website.WebApps.updateApplicationSettings(resourceGroupName,
      name, appSettings, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: appSettings
          type:
            - object
          description: Application settings of the app.
        - id: appSettings.properties
          type:
            - object
          description: Settings.
          optional: true
        - id: appSettings.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: appSettings.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: appSettings.location
          type:
            - string
          description: Resource Location.
        - id: appSettings.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: appSettings.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateApplicationSettings(resourceGroupName, name, appSettings,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listApplicationSettingsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listApplicationSettingsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listApplicationSettingsWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Gets the application settings of an app.

      Gets the application settings of an app.
    fullName: >-
      azure-arm-website.WebApps.listApplicationSettingsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listApplicationSettingsWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#listApplicationSettings'
    id: 'azure-arm-website.WebApps#listApplicationSettings'
    parent: azure-arm-website.WebApps
    name: >-
      listApplicationSettings(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Gets the application settings of an app.

      Gets the application settings of an app.
    fullName: >-
      azure-arm-website.WebApps.listApplicationSettings(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listApplicationSettings(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#updateAuthSettingsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#updateAuthSettingsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      updateAuthSettingsWithHttpOperationResponse(resourceGroupName, name,
      siteAuthSettings, options)
    summary: >-
      Updates the Authentication / Authorization settings associated with

      web app.


      Updates the Authentication / Authorization settings associated with web
      app.
    fullName: >-
      azure-arm-website.WebApps.updateAuthSettingsWithHttpOperationResponse(resourceGroupName,
      name, siteAuthSettings, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: siteAuthSettings
          type:
            - object
          description: Auth settings associated with web app
        - id: siteAuthSettings.enabled
          type:
            - boolean
          description: >-
            <code>true</code> if the

            Authentication / Authorization feature is enabled for the current
            app;

            otherwise, <code>false</code>.
          optional: true
        - id: siteAuthSettings.runtimeVersion
          type:
            - string
          description: >-
            The RuntimeVersion of the

            Authentication / Authorization feature in use for the current app.

            The setting in this value can control the behavior of certain
            features in

            the Authentication / Authorization module.
          optional: true
        - id: siteAuthSettings.unauthenticatedClientAction
          type:
            - string
          description: >-
            The action to

            take when an unauthenticated client attempts to access the app.
            Possible

            values include: 'RedirectToLoginPage', 'AllowAnonymous'
          optional: true
        - id: siteAuthSettings.tokenStoreEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            durably store platform-specific security tokens that are obtained
            during

            login flows; otherwise, <code>false</code>.

            The default is <code>false</code>.
          optional: true
        - id: siteAuthSettings.allowedExternalRedirectUrls
          type:
            - array
          description: >-
            External URLs

            that can be redirected to as part of logging in or logging out of
            the app.

            Note that the query string part of the URL is ignored.

            This is an advanced setting typically only needed by Windows Store

            application backends.

            Note that URLs within the current domain are always implicitly
            allowed.
          optional: true
        - id: siteAuthSettings.defaultProvider
          type:
            - string
          description: >-
            The default

            authentication provider to use when multiple providers are
            configured.

            This setting is only needed if multiple providers are configured and
            the

            unauthenticated client

            action is set to "RedirectToLoginPage". Possible values include:

            'AzureActiveDirectory', 'Facebook', 'Google', 'MicrosoftAccount',
            'Twitter'
          optional: true
        - id: siteAuthSettings.tokenRefreshExtensionHours
          type:
            - number
          description: >-
            The number of

            hours after session token expiration that a session token can be
            used to

            call the token refresh API. The default is 72 hours.
          optional: true
        - id: siteAuthSettings.clientId
          type:
            - string
          description: >-
            The Client ID of this relying

            party application, known as the client_id.

            This setting is required for enabling OpenID Connection
            authentication with

            Azure Active Directory or

            other 3rd party OpenID Connect providers.

            More information on OpenID Connect:

            http://openid.net/specs/openid-connect-core-1_0.html
          optional: true
        - id: siteAuthSettings.clientSecret
          type:
            - string
          description: >-
            The Client Secret of this

            relying party application (in Azure Active Directory, this is also
            referred

            to as the Key).

            This setting is optional. If no client secret is configured, the
            OpenID

            Connect implicit auth flow is used to authenticate end users.

            Otherwise, the OpenID Connect Authorization Code Flow is used to

            authenticate end users.

            More information on OpenID Connect:

            http://openid.net/specs/openid-connect-core-1_0.html
          optional: true
        - id: siteAuthSettings.issuer
          type:
            - string
          description: >-
            The OpenID Connect Issuer URI that

            represents the entity which issues access tokens for this
            application.

            When using Azure Active Directory, this value is the URI of the
            directory

            tenant, e.g. https://sts.windows.net/{tenant-guid}/.

            This URI is a case-sensitive identifier for the token issuer.

            More information on OpenID Connect Discovery:

            http://openid.net/specs/openid-connect-discovery-1_0.html
          optional: true
        - id: siteAuthSettings.allowedAudiences
          type:
            - array
          description: >-
            Allowed audience values

            to consider when validating JWTs issued by

            Azure Active Directory. Note that the <code>ClientID</code> value is
            always

            considered an

            allowed audience, regardless of this setting.
          optional: true
        - id: siteAuthSettings.additionalLoginParams
          type:
            - array
          description: |-
            Login parameters to
            send to the OpenID Connect authorization endpoint when
            a user logs in. Each parameter must be in the form "key=value".
          optional: true
        - id: siteAuthSettings.googleClientId
          type:
            - string
          description: |-
            The OpenID Connect Client
            ID for the Google web application.
            This setting is required for enabling Google Sign-In.
            Google Sign-In documentation:
            https://developers.google.com/identity/sign-in/web/
          optional: true
        - id: siteAuthSettings.googleClientSecret
          type:
            - string
          description: |-
            The client secret
            associated with the Google web application.
            This setting is required for enabling Google Sign-In.
            Google Sign-In documentation:
            https://developers.google.com/identity/sign-in/web/
          optional: true
        - id: siteAuthSettings.googleOAuthScopes
          type:
            - array
          description: >-
            The OAuth 2.0 scopes

            that will be requested as part of Google Sign-In authentication.

            This setting is optional. If not specified, "openid", "profile", and
            "email"

            are used as default scopes.

            Google Sign-In documentation:

            https://developers.google.com/identity/sign-in/web/
          optional: true
        - id: siteAuthSettings.facebookAppId
          type:
            - string
          description: |-
            The App ID of the Facebook
            app used for login.
            This setting is required for enabling Facebook Login.
            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login
          optional: true
        - id: siteAuthSettings.facebookAppSecret
          type:
            - string
          description: |-
            The App Secret of the
            Facebook app used for Facebook Login.
            This setting is required for enabling Facebook Login.
            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login
          optional: true
        - id: siteAuthSettings.facebookOAuthScopes
          type:
            - array
          description: |-
            The OAuth 2.0 scopes
            that will be requested as part of Facebook Login authentication.
            This setting is optional.
            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login
          optional: true
        - id: siteAuthSettings.twitterConsumerKey
          type:
            - string
          description: |-
            The OAuth 1.0a
            consumer key of the Twitter application used for sign-in.
            This setting is required for enabling Twitter Sign-In.
            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
          optional: true
        - id: siteAuthSettings.twitterConsumerSecret
          type:
            - string
          description: |-
            The OAuth 1.0a
            consumer secret of the Twitter application used for sign-in.
            This setting is required for enabling Twitter Sign-In.
            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
          optional: true
        - id: siteAuthSettings.microsoftAccountClientId
          type:
            - string
          description: >-
            The OAuth 2.0

            client ID that was created for the app used for authentication.

            This setting is required for enabling Microsoft Account
            authentication.

            Microsoft Account OAuth documentation:

            https://dev.onedrive.com/auth/msa_oauth.htm
          optional: true
        - id: siteAuthSettings.microsoftAccountClientSecret
          type:
            - string
          description: >-
            The OAuth

            2.0 client secret that was created for the app used for
            authentication.

            This setting is required for enabling Microsoft Account
            authentication.

            Microsoft Account OAuth documentation:

            https://dev.onedrive.com/auth/msa_oauth.htm
          optional: true
        - id: siteAuthSettings.microsoftAccountOAuthScopes
          type:
            - array
          description: >-
            The OAuth 2.0

            scopes that will be requested as part of Microsoft Account
            authentication.

            This setting is optional. If not specified, "wl.basic" is used as
            the

            default scope.

            Microsoft Account Scopes and permissions documentation:

            https://msdn.microsoft.com/en-us/library/dn631845.aspx
          optional: true
        - id: siteAuthSettings.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteAuthSettings.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteAuthSettings.location
          type:
            - string
          description: Resource Location.
        - id: siteAuthSettings.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteAuthSettings.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateAuthSettingsWithHttpOperationResponse(resourceGroupName,
        name, siteAuthSettings, options)
  - uid: 'azure-arm-website.WebApps#updateAuthSettings'
    id: 'azure-arm-website.WebApps#updateAuthSettings'
    parent: azure-arm-website.WebApps
    name: >-
      updateAuthSettings(resourceGroupName, name, siteAuthSettings, options,
      optionalCallback)
    summary: >-
      Updates the Authentication / Authorization settings associated with

      web app.


      Updates the Authentication / Authorization settings associated with web
      app.
    fullName: >-
      azure-arm-website.WebApps.updateAuthSettings(resourceGroupName, name,
      siteAuthSettings, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: siteAuthSettings
          type:
            - object
          description: Auth settings associated with web app
        - id: siteAuthSettings.enabled
          type:
            - boolean
          description: >-
            <code>true</code> if the

            Authentication / Authorization feature is enabled for the current
            app;

            otherwise, <code>false</code>.
          optional: true
        - id: siteAuthSettings.runtimeVersion
          type:
            - string
          description: >-
            The RuntimeVersion of the

            Authentication / Authorization feature in use for the current app.

            The setting in this value can control the behavior of certain
            features in

            the Authentication / Authorization module.
          optional: true
        - id: siteAuthSettings.unauthenticatedClientAction
          type:
            - string
          description: >-
            The action to

            take when an unauthenticated client attempts to access the app.
            Possible

            values include: 'RedirectToLoginPage', 'AllowAnonymous'
          optional: true
        - id: siteAuthSettings.tokenStoreEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            durably store platform-specific security tokens that are obtained
            during

            login flows; otherwise, <code>false</code>.

            The default is <code>false</code>.
          optional: true
        - id: siteAuthSettings.allowedExternalRedirectUrls
          type:
            - array
          description: >-
            External URLs

            that can be redirected to as part of logging in or logging out of
            the app.

            Note that the query string part of the URL is ignored.

            This is an advanced setting typically only needed by Windows Store

            application backends.

            Note that URLs within the current domain are always implicitly
            allowed.
          optional: true
        - id: siteAuthSettings.defaultProvider
          type:
            - string
          description: >-
            The default

            authentication provider to use when multiple providers are
            configured.

            This setting is only needed if multiple providers are configured and
            the

            unauthenticated client

            action is set to "RedirectToLoginPage". Possible values include:

            'AzureActiveDirectory', 'Facebook', 'Google', 'MicrosoftAccount',
            'Twitter'
          optional: true
        - id: siteAuthSettings.tokenRefreshExtensionHours
          type:
            - number
          description: >-
            The number of

            hours after session token expiration that a session token can be
            used to

            call the token refresh API. The default is 72 hours.
          optional: true
        - id: siteAuthSettings.clientId
          type:
            - string
          description: >-
            The Client ID of this relying

            party application, known as the client_id.

            This setting is required for enabling OpenID Connection
            authentication with

            Azure Active Directory or

            other 3rd party OpenID Connect providers.

            More information on OpenID Connect:

            http://openid.net/specs/openid-connect-core-1_0.html
          optional: true
        - id: siteAuthSettings.clientSecret
          type:
            - string
          description: >-
            The Client Secret of this

            relying party application (in Azure Active Directory, this is also
            referred

            to as the Key).

            This setting is optional. If no client secret is configured, the
            OpenID

            Connect implicit auth flow is used to authenticate end users.

            Otherwise, the OpenID Connect Authorization Code Flow is used to

            authenticate end users.

            More information on OpenID Connect:

            http://openid.net/specs/openid-connect-core-1_0.html
          optional: true
        - id: siteAuthSettings.issuer
          type:
            - string
          description: >-
            The OpenID Connect Issuer URI that

            represents the entity which issues access tokens for this
            application.

            When using Azure Active Directory, this value is the URI of the
            directory

            tenant, e.g. https://sts.windows.net/{tenant-guid}/.

            This URI is a case-sensitive identifier for the token issuer.

            More information on OpenID Connect Discovery:

            http://openid.net/specs/openid-connect-discovery-1_0.html
          optional: true
        - id: siteAuthSettings.allowedAudiences
          type:
            - array
          description: >-
            Allowed audience values

            to consider when validating JWTs issued by

            Azure Active Directory. Note that the <code>ClientID</code> value is
            always

            considered an

            allowed audience, regardless of this setting.
          optional: true
        - id: siteAuthSettings.additionalLoginParams
          type:
            - array
          description: |-
            Login parameters to
            send to the OpenID Connect authorization endpoint when
            a user logs in. Each parameter must be in the form "key=value".
          optional: true
        - id: siteAuthSettings.googleClientId
          type:
            - string
          description: |-
            The OpenID Connect Client
            ID for the Google web application.
            This setting is required for enabling Google Sign-In.
            Google Sign-In documentation:
            https://developers.google.com/identity/sign-in/web/
          optional: true
        - id: siteAuthSettings.googleClientSecret
          type:
            - string
          description: |-
            The client secret
            associated with the Google web application.
            This setting is required for enabling Google Sign-In.
            Google Sign-In documentation:
            https://developers.google.com/identity/sign-in/web/
          optional: true
        - id: siteAuthSettings.googleOAuthScopes
          type:
            - array
          description: >-
            The OAuth 2.0 scopes

            that will be requested as part of Google Sign-In authentication.

            This setting is optional. If not specified, "openid", "profile", and
            "email"

            are used as default scopes.

            Google Sign-In documentation:

            https://developers.google.com/identity/sign-in/web/
          optional: true
        - id: siteAuthSettings.facebookAppId
          type:
            - string
          description: |-
            The App ID of the Facebook
            app used for login.
            This setting is required for enabling Facebook Login.
            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login
          optional: true
        - id: siteAuthSettings.facebookAppSecret
          type:
            - string
          description: |-
            The App Secret of the
            Facebook app used for Facebook Login.
            This setting is required for enabling Facebook Login.
            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login
          optional: true
        - id: siteAuthSettings.facebookOAuthScopes
          type:
            - array
          description: |-
            The OAuth 2.0 scopes
            that will be requested as part of Facebook Login authentication.
            This setting is optional.
            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login
          optional: true
        - id: siteAuthSettings.twitterConsumerKey
          type:
            - string
          description: |-
            The OAuth 1.0a
            consumer key of the Twitter application used for sign-in.
            This setting is required for enabling Twitter Sign-In.
            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
          optional: true
        - id: siteAuthSettings.twitterConsumerSecret
          type:
            - string
          description: |-
            The OAuth 1.0a
            consumer secret of the Twitter application used for sign-in.
            This setting is required for enabling Twitter Sign-In.
            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
          optional: true
        - id: siteAuthSettings.microsoftAccountClientId
          type:
            - string
          description: >-
            The OAuth 2.0

            client ID that was created for the app used for authentication.

            This setting is required for enabling Microsoft Account
            authentication.

            Microsoft Account OAuth documentation:

            https://dev.onedrive.com/auth/msa_oauth.htm
          optional: true
        - id: siteAuthSettings.microsoftAccountClientSecret
          type:
            - string
          description: >-
            The OAuth

            2.0 client secret that was created for the app used for
            authentication.

            This setting is required for enabling Microsoft Account
            authentication.

            Microsoft Account OAuth documentation:

            https://dev.onedrive.com/auth/msa_oauth.htm
          optional: true
        - id: siteAuthSettings.microsoftAccountOAuthScopes
          type:
            - array
          description: >-
            The OAuth 2.0

            scopes that will be requested as part of Microsoft Account
            authentication.

            This setting is optional. If not specified, "wl.basic" is used as
            the

            default scope.

            Microsoft Account Scopes and permissions documentation:

            https://msdn.microsoft.com/en-us/library/dn631845.aspx
          optional: true
        - id: siteAuthSettings.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteAuthSettings.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteAuthSettings.location
          type:
            - string
          description: Resource Location.
        - id: siteAuthSettings.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteAuthSettings.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateAuthSettings(resourceGroupName, name, siteAuthSettings,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#getAuthSettingsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getAuthSettingsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'getAuthSettingsWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Gets the Authentication/Authorization settings of an app.

      Gets the Authentication/Authorization settings of an app.
    fullName: >-
      azure-arm-website.WebApps.getAuthSettingsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getAuthSettingsWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#getAuthSettings'
    id: 'azure-arm-website.WebApps#getAuthSettings'
    parent: azure-arm-website.WebApps
    name: 'getAuthSettings(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets the Authentication/Authorization settings of an app.

      Gets the Authentication/Authorization settings of an app.
    fullName: >-
      azure-arm-website.WebApps.getAuthSettings(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getAuthSettings(resourceGroupName, name, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateBackupConfigurationWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateBackupConfigurationWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateBackupConfigurationWithHttpOperationResponse(resourceGroupName,
      name, request, options)
    summary: |-
      Updates the backup configuration of an app.

      Updates the backup configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.updateBackupConfigurationWithHttpOperationResponse(resourceGroupName,
      name, request, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - object
          description: Edited backup configuration.
        - id: request.backupRequestName
          type:
            - string
          description: Name of the backup.
          optional: true
        - id: request.enabled
          type:
            - boolean
          description: >-
            True if the backup schedule is enabled

            (must be included in that case), false if the backup schedule should
            be

            disabled.
          optional: true
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.backupSchedule
          type:
            - object
          description: |-
            Schedule for the backup if it is
            executed periodically.
          optional: true
        - id: request.backupSchedule.frequencyInterval
          type:
            - number
          description: >-
            How often should be

            the backup executed (e.g. for weekly backup, this should be set to 7
            and

            FrequencyUnit should be set to Day)
        - id: request.backupSchedule.frequencyUnit
          type:
            - string
          description: >-
            The unit of time for

            how often should be the backup executed (e.g. for weekly backup,
            this should

            be set to Day and FrequencyInterval should be set to 7). Possible
            values

            include: 'Day', 'Hour'
        - id: request.backupSchedule.keepAtLeastOneBackup
          type:
            - boolean
          description: >-
            True if the

            retention policy should always keep at least one backup in the
            storage

            account, regardless how old it is; false otherwise.
        - id: request.backupSchedule.retentionPeriodInDays
          type:
            - number
          description: |-
            After how many
            days backups should be deleted.
        - id: request.backupSchedule.startTime
          type:
            - date
          description: |-
            When the schedule should
            start working.
          optional: true
        - id: request.databases
          type:
            - array
          description: Databases included in the backup.
          optional: true
        - id: request.backupRequestType
          type:
            - string
          description: |-
            Type of the backup. Possible
            values include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateBackupConfigurationWithHttpOperationResponse(resourceGroupName,
        name, request, options)
  - uid: 'azure-arm-website.WebApps#updateBackupConfiguration'
    id: 'azure-arm-website.WebApps#updateBackupConfiguration'
    parent: azure-arm-website.WebApps
    name: >-
      updateBackupConfiguration(resourceGroupName, name, request, options,
      optionalCallback)
    summary: |-
      Updates the backup configuration of an app.

      Updates the backup configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.updateBackupConfiguration(resourceGroupName,
      name, request, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - object
          description: Edited backup configuration.
        - id: request.backupRequestName
          type:
            - string
          description: Name of the backup.
          optional: true
        - id: request.enabled
          type:
            - boolean
          description: >-
            True if the backup schedule is enabled

            (must be included in that case), false if the backup schedule should
            be

            disabled.
          optional: true
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.backupSchedule
          type:
            - object
          description: |-
            Schedule for the backup if it is
            executed periodically.
          optional: true
        - id: request.backupSchedule.frequencyInterval
          type:
            - number
          description: >-
            How often should be

            the backup executed (e.g. for weekly backup, this should be set to 7
            and

            FrequencyUnit should be set to Day)
        - id: request.backupSchedule.frequencyUnit
          type:
            - string
          description: >-
            The unit of time for

            how often should be the backup executed (e.g. for weekly backup,
            this should

            be set to Day and FrequencyInterval should be set to 7). Possible
            values

            include: 'Day', 'Hour'
        - id: request.backupSchedule.keepAtLeastOneBackup
          type:
            - boolean
          description: >-
            True if the

            retention policy should always keep at least one backup in the
            storage

            account, regardless how old it is; false otherwise.
        - id: request.backupSchedule.retentionPeriodInDays
          type:
            - number
          description: |-
            After how many
            days backups should be deleted.
        - id: request.backupSchedule.startTime
          type:
            - date
          description: |-
            When the schedule should
            start working.
          optional: true
        - id: request.databases
          type:
            - array
          description: Databases included in the backup.
          optional: true
        - id: request.backupRequestType
          type:
            - string
          description: |-
            Type of the backup. Possible
            values include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateBackupConfiguration(resourceGroupName, name, request,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#deleteBackupConfigurationWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#deleteBackupConfigurationWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      deleteBackupConfigurationWithHttpOperationResponse(resourceGroupName,
      name, options)
    summary: |-
      Deletes the backup configuration of an app.

      Deletes the backup configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.deleteBackupConfigurationWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteBackupConfigurationWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#deleteBackupConfiguration'
    id: 'azure-arm-website.WebApps#deleteBackupConfiguration'
    parent: azure-arm-website.WebApps
    name: >-
      deleteBackupConfiguration(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Deletes the backup configuration of an app.

      Deletes the backup configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.deleteBackupConfiguration(resourceGroupName,
      name, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteBackupConfiguration(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getBackupConfigurationWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getBackupConfigurationWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getBackupConfigurationWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Gets the backup configuration of an app.

      Gets the backup configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.getBackupConfigurationWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getBackupConfigurationWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#getBackupConfiguration'
    id: 'azure-arm-website.WebApps#getBackupConfiguration'
    parent: azure-arm-website.WebApps
    name: 'getBackupConfiguration(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets the backup configuration of an app.

      Gets the backup configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.getBackupConfiguration(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getBackupConfiguration(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#updateConnectionStringsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#updateConnectionStringsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      updateConnectionStringsWithHttpOperationResponse(resourceGroupName, name,
      connectionStrings, options)
    summary: |-
      Replaces the connection strings of an app.

      Replaces the connection strings of an app.
    fullName: >-
      azure-arm-website.WebApps.updateConnectionStringsWithHttpOperationResponse(resourceGroupName,
      name, connectionStrings, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionStrings
          type:
            - object
          description: |-
            Connection strings of the app or
            deployment slot. See example.
        - id: connectionStrings.properties
          type:
            - object
          description: Connection strings.
          optional: true
        - id: connectionStrings.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionStrings.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionStrings.location
          type:
            - string
          description: Resource Location.
        - id: connectionStrings.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionStrings.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateConnectionStringsWithHttpOperationResponse(resourceGroupName,
        name, connectionStrings, options)
  - uid: 'azure-arm-website.WebApps#updateConnectionStrings'
    id: 'azure-arm-website.WebApps#updateConnectionStrings'
    parent: azure-arm-website.WebApps
    name: >-
      updateConnectionStrings(resourceGroupName, name, connectionStrings,
      options, optionalCallback)
    summary: |-
      Replaces the connection strings of an app.

      Replaces the connection strings of an app.
    fullName: >-
      azure-arm-website.WebApps.updateConnectionStrings(resourceGroupName, name,
      connectionStrings, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionStrings
          type:
            - object
          description: |-
            Connection strings of the app or
            deployment slot. See example.
        - id: connectionStrings.properties
          type:
            - object
          description: Connection strings.
          optional: true
        - id: connectionStrings.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionStrings.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionStrings.location
          type:
            - string
          description: Resource Location.
        - id: connectionStrings.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionStrings.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateConnectionStrings(resourceGroupName, name,
        connectionStrings, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listConnectionStringsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listConnectionStringsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listConnectionStringsWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Gets the connection strings of an app.

      Gets the connection strings of an app.
    fullName: >-
      azure-arm-website.WebApps.listConnectionStringsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listConnectionStringsWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#listConnectionStrings'
    id: 'azure-arm-website.WebApps#listConnectionStrings'
    parent: azure-arm-website.WebApps
    name: 'listConnectionStrings(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets the connection strings of an app.

      Gets the connection strings of an app.
    fullName: >-
      azure-arm-website.WebApps.listConnectionStrings(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listConnectionStrings(resourceGroupName, name, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getDiagnosticLogsConfigurationWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getDiagnosticLogsConfigurationWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getDiagnosticLogsConfigurationWithHttpOperationResponse(resourceGroupName,
      name, options)
    summary: |-
      Gets the logging configuration of an app.

      Gets the logging configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.getDiagnosticLogsConfigurationWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDiagnosticLogsConfigurationWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#getDiagnosticLogsConfiguration'
    id: 'azure-arm-website.WebApps#getDiagnosticLogsConfiguration'
    parent: azure-arm-website.WebApps
    name: >-
      getDiagnosticLogsConfiguration(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Gets the logging configuration of an app.

      Gets the logging configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.getDiagnosticLogsConfiguration(resourceGroupName,
      name, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getDiagnosticLogsConfiguration(resourceGroupName, name,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateDiagnosticLogsConfigWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateDiagnosticLogsConfigWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateDiagnosticLogsConfigWithHttpOperationResponse(resourceGroupName,
      name, siteLogsConfig, options)
    summary: |-
      Updates the logging configuration of an app.

      Updates the logging configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.updateDiagnosticLogsConfigWithHttpOperationResponse(resourceGroupName,
      name, siteLogsConfig, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteLogsConfig
          type:
            - object
          description: |-
            A SiteLogsConfig JSON object that contains
            the logging configuration to change in the "properties" property.
        - id: siteLogsConfig.applicationLogs
          type:
            - object
          description: |-
            Application logs
            configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.fileSystem
          type:
            - object
          description: |-
            Application logs
            to file system configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.fileSystem.level
          type:
            - string
          description: >-
            Log level.

            Possible values include: 'Off', 'Verbose', 'Information', 'Warning',
            'Error'
          optional: true
        - id: siteLogsConfig.applicationLogs.azureTableStorage
          type:
            - object
          description: Application logs to azure table storage configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.azureTableStorage.level
          type:
            - string
          description: >-
            Log

            level. Possible values include: 'Off', 'Verbose', 'Information',
            'Warning',

            'Error'
          optional: true
        - id: siteLogsConfig.applicationLogs.azureTableStorage.sasUrl
          type:
            - string
          description: |-
            SAS
            URL to an Azure table with add/query/delete permissions.
        - id: siteLogsConfig.applicationLogs.azureBlobStorage
          type:
            - object
          description: Application logs to blob storage configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.level
          type:
            - string
          description: >-
            Log

            level. Possible values include: 'Off', 'Verbose', 'Information',
            'Warning',

            'Error'
          optional: true
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.sasUrl
          type:
            - string
          description: >-
            SAS

            url to a azure blob container with read/write/list/delete
            permissions.
          optional: true
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.retentionInDays
          type:
            - number
          description: |-
            Retention
            in days.
            Remove blobs older than X days.
            0 or lower means no retention.
          optional: true
        - id: siteLogsConfig.httpLogs
          type:
            - object
          description: HTTP logs configuration.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem
          type:
            - object
          description: |-
            Http logs to file
            system configuration.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem.retentionInMb
          type:
            - number
          description: >-
            Maximum

            size in megabytes that http log files can use.

            When reached old log files will be removed to make space for new
            ones.

            Value can range between 25 and 100.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem.retentionInDays
          type:
            - number
          description: |-
            Retention in days.
            Remove files older than X days.
            0 or lower means no retention.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem.enabled
          type:
            - boolean
          description: Enabled.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage
          type:
            - object
          description: |-
            Http logs to
            azure blob storage configuration.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage.sasUrl
          type:
            - string
          description: |-
            SAS url to
            a azure blob container with read/write/list/delete permissions.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage.retentionInDays
          type:
            - number
          description: |-
            Retention in days.
            Remove blobs older than X days.
            0 or lower means no retention.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage.enabled
          type:
            - boolean
          description: Enabled.
          optional: true
        - id: siteLogsConfig.failedRequestsTracing
          type:
            - object
          description: |-
            Failed requests
            tracing configuration.
          optional: true
        - id: siteLogsConfig.detailedErrorMessages
          type:
            - object
          description: |-
            Detailed error
            messages configuration.
          optional: true
        - id: siteLogsConfig.detailedErrorMessages.enabled
          type:
            - boolean
          description: Enabled.
          optional: true
        - id: siteLogsConfig.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteLogsConfig.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteLogsConfig.location
          type:
            - string
          description: Resource Location.
        - id: siteLogsConfig.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteLogsConfig.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateDiagnosticLogsConfigWithHttpOperationResponse(resourceGroupName,
        name, siteLogsConfig, options)
  - uid: 'azure-arm-website.WebApps#updateDiagnosticLogsConfig'
    id: 'azure-arm-website.WebApps#updateDiagnosticLogsConfig'
    parent: azure-arm-website.WebApps
    name: >-
      updateDiagnosticLogsConfig(resourceGroupName, name, siteLogsConfig,
      options, optionalCallback)
    summary: |-
      Updates the logging configuration of an app.

      Updates the logging configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.updateDiagnosticLogsConfig(resourceGroupName,
      name, siteLogsConfig, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteLogsConfig
          type:
            - object
          description: |-
            A SiteLogsConfig JSON object that contains
            the logging configuration to change in the "properties" property.
        - id: siteLogsConfig.applicationLogs
          type:
            - object
          description: |-
            Application logs
            configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.fileSystem
          type:
            - object
          description: |-
            Application logs
            to file system configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.fileSystem.level
          type:
            - string
          description: >-
            Log level.

            Possible values include: 'Off', 'Verbose', 'Information', 'Warning',
            'Error'
          optional: true
        - id: siteLogsConfig.applicationLogs.azureTableStorage
          type:
            - object
          description: Application logs to azure table storage configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.azureTableStorage.level
          type:
            - string
          description: >-
            Log

            level. Possible values include: 'Off', 'Verbose', 'Information',
            'Warning',

            'Error'
          optional: true
        - id: siteLogsConfig.applicationLogs.azureTableStorage.sasUrl
          type:
            - string
          description: |-
            SAS
            URL to an Azure table with add/query/delete permissions.
        - id: siteLogsConfig.applicationLogs.azureBlobStorage
          type:
            - object
          description: Application logs to blob storage configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.level
          type:
            - string
          description: >-
            Log

            level. Possible values include: 'Off', 'Verbose', 'Information',
            'Warning',

            'Error'
          optional: true
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.sasUrl
          type:
            - string
          description: >-
            SAS

            url to a azure blob container with read/write/list/delete
            permissions.
          optional: true
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.retentionInDays
          type:
            - number
          description: |-
            Retention
            in days.
            Remove blobs older than X days.
            0 or lower means no retention.
          optional: true
        - id: siteLogsConfig.httpLogs
          type:
            - object
          description: HTTP logs configuration.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem
          type:
            - object
          description: |-
            Http logs to file
            system configuration.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem.retentionInMb
          type:
            - number
          description: >-
            Maximum

            size in megabytes that http log files can use.

            When reached old log files will be removed to make space for new
            ones.

            Value can range between 25 and 100.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem.retentionInDays
          type:
            - number
          description: |-
            Retention in days.
            Remove files older than X days.
            0 or lower means no retention.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem.enabled
          type:
            - boolean
          description: Enabled.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage
          type:
            - object
          description: |-
            Http logs to
            azure blob storage configuration.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage.sasUrl
          type:
            - string
          description: |-
            SAS url to
            a azure blob container with read/write/list/delete permissions.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage.retentionInDays
          type:
            - number
          description: |-
            Retention in days.
            Remove blobs older than X days.
            0 or lower means no retention.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage.enabled
          type:
            - boolean
          description: Enabled.
          optional: true
        - id: siteLogsConfig.failedRequestsTracing
          type:
            - object
          description: |-
            Failed requests
            tracing configuration.
          optional: true
        - id: siteLogsConfig.detailedErrorMessages
          type:
            - object
          description: |-
            Detailed error
            messages configuration.
          optional: true
        - id: siteLogsConfig.detailedErrorMessages.enabled
          type:
            - boolean
          description: Enabled.
          optional: true
        - id: siteLogsConfig.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteLogsConfig.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteLogsConfig.location
          type:
            - string
          description: Resource Location.
        - id: siteLogsConfig.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteLogsConfig.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateDiagnosticLogsConfig(resourceGroupName, name,
        siteLogsConfig, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#updateMetadataWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#updateMetadataWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      updateMetadataWithHttpOperationResponse(resourceGroupName, name, metadata,
      options)
    summary: |-
      Replaces the metadata of an app.

      Replaces the metadata of an app.
    fullName: >-
      azure-arm-website.WebApps.updateMetadataWithHttpOperationResponse(resourceGroupName,
      name, metadata, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: metadata
          type:
            - object
          description: |-
            Edited metadata of the app or deployment slot. See
            example.
        - id: metadata.properties
          type:
            - object
          description: Settings.
          optional: true
        - id: metadata.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: metadata.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: metadata.location
          type:
            - string
          description: Resource Location.
        - id: metadata.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: metadata.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateMetadataWithHttpOperationResponse(resourceGroupName,
        name, metadata, options)
  - uid: 'azure-arm-website.WebApps#updateMetadata'
    id: 'azure-arm-website.WebApps#updateMetadata'
    parent: azure-arm-website.WebApps
    name: >-
      updateMetadata(resourceGroupName, name, metadata, options,
      optionalCallback)
    summary: |-
      Replaces the metadata of an app.

      Replaces the metadata of an app.
    fullName: >-
      azure-arm-website.WebApps.updateMetadata(resourceGroupName, name,
      metadata, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: metadata
          type:
            - object
          description: |-
            Edited metadata of the app or deployment slot. See
            example.
        - id: metadata.properties
          type:
            - object
          description: Settings.
          optional: true
        - id: metadata.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: metadata.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: metadata.location
          type:
            - string
          description: Resource Location.
        - id: metadata.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: metadata.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateMetadata(resourceGroupName, name, metadata, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listMetadataWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listMetadataWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listMetadataWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Gets the metadata of an app.

      Gets the metadata of an app.
    fullName: >-
      azure-arm-website.WebApps.listMetadataWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listMetadataWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#listMetadata'
    id: 'azure-arm-website.WebApps#listMetadata'
    parent: azure-arm-website.WebApps
    name: 'listMetadata(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets the metadata of an app.

      Gets the metadata of an app.
    fullName: >-
      azure-arm-website.WebApps.listMetadata(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listMetadata(resourceGroupName, name, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listPublishingCredentialsWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listPublishingCredentialsWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listPublishingCredentialsWithHttpOperationResponse(resourceGroupName,
      name, options)
    summary: |-
      Gets the Git/FTP publishing credentials of an app.

      Gets the Git/FTP publishing credentials of an app.
    fullName: >-
      azure-arm-website.WebApps.listPublishingCredentialsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listPublishingCredentialsWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#listPublishingCredentials'
    id: 'azure-arm-website.WebApps#listPublishingCredentials'
    parent: azure-arm-website.WebApps
    name: >-
      listPublishingCredentials(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Gets the Git/FTP publishing credentials of an app.

      Gets the Git/FTP publishing credentials of an app.
    fullName: >-
      azure-arm-website.WebApps.listPublishingCredentials(resourceGroupName,
      name, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listPublishingCredentials(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#updateSitePushSettingsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#updateSitePushSettingsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      updateSitePushSettingsWithHttpOperationResponse(resourceGroupName, name,
      pushSettings, options)
    summary: |-
      Updates the Push settings associated with web app.

      Updates the Push settings associated with web app.
    fullName: >-
      azure-arm-website.WebApps.updateSitePushSettingsWithHttpOperationResponse(resourceGroupName,
      name, pushSettings, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: pushSettings
          type:
            - object
          description: Push settings associated with web app
        - id: pushSettings.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a flag indicating
            whether the Push endpoint is enabled.
        - id: pushSettings.tagWhitelistJson
          type:
            - string
          description: |-
            Gets or sets a JSON string
            containing a list of tags that are whitelisted for use by the push
            registration endpoint.
          optional: true
        - id: pushSettings.tagsRequiringAuth
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of tags that require user authentication to be
            used in the

            push registration endpoint.

            Tags can consist of alphanumeric characters and the following:

            '_', '@', '#', '.', ':', '-'.

            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: pushSettings.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of dynamic tags that will be evaluated from user
            claims in

            the push registration endpoint.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateSitePushSettingsWithHttpOperationResponse(resourceGroupName, name,
        pushSettings, options)
  - uid: 'azure-arm-website.WebApps#updateSitePushSettings'
    id: 'azure-arm-website.WebApps#updateSitePushSettings'
    parent: azure-arm-website.WebApps
    name: >-
      updateSitePushSettings(resourceGroupName, name, pushSettings, options,
      optionalCallback)
    summary: |-
      Updates the Push settings associated with web app.

      Updates the Push settings associated with web app.
    fullName: >-
      azure-arm-website.WebApps.updateSitePushSettings(resourceGroupName, name,
      pushSettings, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: pushSettings
          type:
            - object
          description: Push settings associated with web app
        - id: pushSettings.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a flag indicating
            whether the Push endpoint is enabled.
        - id: pushSettings.tagWhitelistJson
          type:
            - string
          description: |-
            Gets or sets a JSON string
            containing a list of tags that are whitelisted for use by the push
            registration endpoint.
          optional: true
        - id: pushSettings.tagsRequiringAuth
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of tags that require user authentication to be
            used in the

            push registration endpoint.

            Tags can consist of alphanumeric characters and the following:

            '_', '@', '#', '.', ':', '-'.

            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: pushSettings.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of dynamic tags that will be evaluated from user
            claims in

            the push registration endpoint.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateSitePushSettings(resourceGroupName, name, pushSettings,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listSitePushSettingsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listSitePushSettingsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listSitePushSettingsWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Gets the Push settings associated with web app.

      Gets the Push settings associated with web app.
    fullName: >-
      azure-arm-website.WebApps.listSitePushSettingsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listSitePushSettingsWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#listSitePushSettings'
    id: 'azure-arm-website.WebApps#listSitePushSettings'
    parent: azure-arm-website.WebApps
    name: 'listSitePushSettings(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets the Push settings associated with web app.

      Gets the Push settings associated with web app.
    fullName: >-
      azure-arm-website.WebApps.listSitePushSettings(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listSitePushSettings(resourceGroupName, name, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listSlotConfigurationNamesWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listSlotConfigurationNamesWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listSlotConfigurationNamesWithHttpOperationResponse(resourceGroupName,
      name, options)
    summary: >-
      Gets the names of app settings and connection strings that stick to

      the slot (not swapped).


      Gets the names of app settings and connection strings that stick to the
      slot

      (not swapped).
    fullName: >-
      azure-arm-website.WebApps.listSlotConfigurationNamesWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listSlotConfigurationNamesWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#listSlotConfigurationNames'
    id: 'azure-arm-website.WebApps#listSlotConfigurationNames'
    parent: azure-arm-website.WebApps
    name: >-
      listSlotConfigurationNames(resourceGroupName, name, options,
      optionalCallback)
    summary: >-
      Gets the names of app settings and connection strings that stick to

      the slot (not swapped).


      Gets the names of app settings and connection strings that stick to the
      slot

      (not swapped).
    fullName: >-
      azure-arm-website.WebApps.listSlotConfigurationNames(resourceGroupName,
      name, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listSlotConfigurationNames(resourceGroupName, name, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateSlotConfigurationNamesWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateSlotConfigurationNamesWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateSlotConfigurationNamesWithHttpOperationResponse(resourceGroupName,
      name, slotConfigNames, options)
    summary: >-
      Updates the names of application settings and connection string

      that remain with the slot during swap operation.


      Updates the names of application settings and connection string that
      remain

      with the slot during swap operation.
    fullName: >-
      azure-arm-website.WebApps.updateSlotConfigurationNamesWithHttpOperationResponse(resourceGroupName,
      name, slotConfigNames, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotConfigNames
          type:
            - object
          description: |-
            Names of application settings and connection
            strings. See example.
        - id: slotConfigNames.connectionStringNames
          type:
            - array
          description: |-
            List of connection
            string names.
          optional: true
        - id: slotConfigNames.appSettingNames
          type:
            - array
          description: |-
            List of application
            settings names.
          optional: true
        - id: slotConfigNames.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: slotConfigNames.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: slotConfigNames.location
          type:
            - string
          description: Resource Location.
        - id: slotConfigNames.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: slotConfigNames.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateSlotConfigurationNamesWithHttpOperationResponse(resourceGroupName,
        name, slotConfigNames, options)
  - uid: 'azure-arm-website.WebApps#updateSlotConfigurationNames'
    id: 'azure-arm-website.WebApps#updateSlotConfigurationNames'
    parent: azure-arm-website.WebApps
    name: >-
      updateSlotConfigurationNames(resourceGroupName, name, slotConfigNames,
      options, optionalCallback)
    summary: >-
      Updates the names of application settings and connection string

      that remain with the slot during swap operation.


      Updates the names of application settings and connection string that
      remain

      with the slot during swap operation.
    fullName: >-
      azure-arm-website.WebApps.updateSlotConfigurationNames(resourceGroupName,
      name, slotConfigNames, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotConfigNames
          type:
            - object
          description: |-
            Names of application settings and connection
            strings. See example.
        - id: slotConfigNames.connectionStringNames
          type:
            - array
          description: |-
            List of connection
            string names.
          optional: true
        - id: slotConfigNames.appSettingNames
          type:
            - array
          description: |-
            List of application
            settings names.
          optional: true
        - id: slotConfigNames.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: slotConfigNames.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: slotConfigNames.location
          type:
            - string
          description: Resource Location.
        - id: slotConfigNames.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: slotConfigNames.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateSlotConfigurationNames(resourceGroupName, name,
        slotConfigNames, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#getConfigurationWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getConfigurationWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getConfigurationWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Gets the configuration of an app, such as platform version and
      bitness, default documents, virtual applications, Always On, etc.

      Gets the configuration of an app, such as platform version and bitness,
      default documents, virtual applications, Always On, etc.
    fullName: >-
      azure-arm-website.WebApps.getConfigurationWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getConfigurationWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#getConfiguration'
    id: 'azure-arm-website.WebApps#getConfiguration'
    parent: azure-arm-website.WebApps
    name: 'getConfiguration(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets the configuration of an app, such as platform version and
      bitness, default documents, virtual applications, Always On, etc.

      Gets the configuration of an app, such as platform version and bitness,
      default documents, virtual applications, Always On, etc.
    fullName: >-
      azure-arm-website.WebApps.getConfiguration(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getConfiguration(resourceGroupName, name, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateConfigurationWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateConfigurationWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateConfigurationWithHttpOperationResponse(resourceGroupName,
      name, siteConfig, options)
    summary: |-
      Updates the configuration of an app.

      Updates the configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateConfigurationWithHttpOperationResponse(resourceGroupName,
      name, siteConfig, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - object
          description: |-
            JSON representation of a SiteConfig object. See
            example.
        - id: siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteConfig.netFrameworkVersion
          type:
            - string
          description: .NET Framework version.
          optional: true
        - id: siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteConfig.linuxFxVersion
          type:
            - string
          description: Linux App Framework and version
          optional: true
        - id: siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            request tracing is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request tracing
            expiration time.
          optional: true
        - id: siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            remote debugging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote debugging
            version.
          optional: true
        - id: siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if HTTP
            logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs directory size
            limit.
          optional: true
        - id: siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if detailed error logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.publishingUsername
          type:
            - string
          description: Publishing user name.
          optional: true
        - id: siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteConfig.connectionStrings
          type:
            - array
          description: Connection strings.
          optional: true
        - id: siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values include:

            'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub', 'CodePlexGit',
            'CodePlexHg',

            'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg',
            'OneDrive',

            'VSO'
          optional: true
        - id: siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use
            32-bit worker process; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.webSocketsEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            WebSocket is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if Always On is
            enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteConfig.javaContainerVersion
          type:
            - string
          description: Java container version.
          optional: true
        - id: siteConfig.appCommandLine
          type:
            - string
          description: App command line to launch.
          optional: true
        - id: siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed pipeline mode.
            Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteConfig.virtualApplications
          type:
            - array
          description: Virtual applications.
          optional: true
        - id: siteConfig.loadBalancing
          type:
            - string
          description: >-
            Site load balancing. Possible

            values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime',

            'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteConfig.experiments
          type:
            - object
          description: |-
            This is work around for polymophic
            types.
          optional: true
        - id: siteConfig.experiments.rampUpRules
          type:
            - array
          description: List of ramp-up rules.
          optional: true
        - id: siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum allowed CPU
            usage percentage.
          optional: true
        - id: siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum allowed memory
            usage in MB.
          optional: true
        - id: siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum allowed disk
            size usage in MB.
          optional: true
        - id: siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if Auto Heal
            is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions that describe
            when to execute the auto-heal actions.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A rule based on
            total requests.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: |-
            A rule based
            on status codes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule
            based on request execution time.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: Time taken.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to be executed
            when a rule is triggered.
          optional: true
        - id: siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined
            action to be taken. Possible values include: 'Recycle', 'LogEvent',
            'CustomAction'
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: |-
            Custom
            action to be taken.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: Executable to be run.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing (CORS)
            settings.
          optional: true
        - id: siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets the list of
            origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a flag
            indicating whether the Push endpoint is enabled.
        - id: siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that are whitelisted for use by the
            push

            registration endpoint.
          optional: true
        - id: siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that require user authentication to
            be used

            in the push registration endpoint.

            Tags can consist of alphanumeric characters and the following:

            '_', '@', '#', '.', ':', '-'.

            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of dynamic tags that will be evaluated from user
            claims in

            the push registration endpoint.
          optional: true
        - id: siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about the formal API
            definition for the app.
          optional: true
        - id: siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the API
            definition.
          optional: true
        - id: siteConfig.autoSwapSlotName
          type:
            - string
          description: Auto-swap slot name.
          optional: true
        - id: siteConfig.localMySqlEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable
            local MySQL; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.ipSecurityRestrictions
          type:
            - array
          description: IP security restrictions.
          optional: true
        - id: siteConfig.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteConfig.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteConfig.location
          type:
            - string
          description: Resource Location.
        - id: siteConfig.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteConfig.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateConfigurationWithHttpOperationResponse(resourceGroupName,
        name, siteConfig, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateConfiguration'
    id: 'azure-arm-website.WebApps#createOrUpdateConfiguration'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateConfiguration(resourceGroupName, name, siteConfig, options,
      optionalCallback)
    summary: |-
      Updates the configuration of an app.

      Updates the configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateConfiguration(resourceGroupName,
      name, siteConfig, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - object
          description: |-
            JSON representation of a SiteConfig object. See
            example.
        - id: siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteConfig.netFrameworkVersion
          type:
            - string
          description: .NET Framework version.
          optional: true
        - id: siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteConfig.linuxFxVersion
          type:
            - string
          description: Linux App Framework and version
          optional: true
        - id: siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            request tracing is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request tracing
            expiration time.
          optional: true
        - id: siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            remote debugging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote debugging
            version.
          optional: true
        - id: siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if HTTP
            logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs directory size
            limit.
          optional: true
        - id: siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if detailed error logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.publishingUsername
          type:
            - string
          description: Publishing user name.
          optional: true
        - id: siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteConfig.connectionStrings
          type:
            - array
          description: Connection strings.
          optional: true
        - id: siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values include:

            'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub', 'CodePlexGit',
            'CodePlexHg',

            'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg',
            'OneDrive',

            'VSO'
          optional: true
        - id: siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use
            32-bit worker process; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.webSocketsEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            WebSocket is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if Always On is
            enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteConfig.javaContainerVersion
          type:
            - string
          description: Java container version.
          optional: true
        - id: siteConfig.appCommandLine
          type:
            - string
          description: App command line to launch.
          optional: true
        - id: siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed pipeline mode.
            Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteConfig.virtualApplications
          type:
            - array
          description: Virtual applications.
          optional: true
        - id: siteConfig.loadBalancing
          type:
            - string
          description: >-
            Site load balancing. Possible

            values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime',

            'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteConfig.experiments
          type:
            - object
          description: |-
            This is work around for polymophic
            types.
          optional: true
        - id: siteConfig.experiments.rampUpRules
          type:
            - array
          description: List of ramp-up rules.
          optional: true
        - id: siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum allowed CPU
            usage percentage.
          optional: true
        - id: siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum allowed memory
            usage in MB.
          optional: true
        - id: siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum allowed disk
            size usage in MB.
          optional: true
        - id: siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if Auto Heal
            is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions that describe
            when to execute the auto-heal actions.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A rule based on
            total requests.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: |-
            A rule based
            on status codes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule
            based on request execution time.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: Time taken.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to be executed
            when a rule is triggered.
          optional: true
        - id: siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined
            action to be taken. Possible values include: 'Recycle', 'LogEvent',
            'CustomAction'
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: |-
            Custom
            action to be taken.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: Executable to be run.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing (CORS)
            settings.
          optional: true
        - id: siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets the list of
            origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a flag
            indicating whether the Push endpoint is enabled.
        - id: siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that are whitelisted for use by the
            push

            registration endpoint.
          optional: true
        - id: siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that require user authentication to
            be used

            in the push registration endpoint.

            Tags can consist of alphanumeric characters and the following:

            '_', '@', '#', '.', ':', '-'.

            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of dynamic tags that will be evaluated from user
            claims in

            the push registration endpoint.
          optional: true
        - id: siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about the formal API
            definition for the app.
          optional: true
        - id: siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the API
            definition.
          optional: true
        - id: siteConfig.autoSwapSlotName
          type:
            - string
          description: Auto-swap slot name.
          optional: true
        - id: siteConfig.localMySqlEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable
            local MySQL; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.ipSecurityRestrictions
          type:
            - array
          description: IP security restrictions.
          optional: true
        - id: siteConfig.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteConfig.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteConfig.location
          type:
            - string
          description: Resource Location.
        - id: siteConfig.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteConfig.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateConfiguration(resourceGroupName, name,
        siteConfig, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#updateConfigurationWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#updateConfigurationWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      updateConfigurationWithHttpOperationResponse(resourceGroupName, name,
      siteConfig, options)
    summary: |-
      Updates the configuration of an app.

      Updates the configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.updateConfigurationWithHttpOperationResponse(resourceGroupName,
      name, siteConfig, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - object
          description: |-
            JSON representation of a SiteConfig object. See
            example.
        - id: siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteConfig.netFrameworkVersion
          type:
            - string
          description: .NET Framework version.
          optional: true
        - id: siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteConfig.linuxFxVersion
          type:
            - string
          description: Linux App Framework and version
          optional: true
        - id: siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            request tracing is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request tracing
            expiration time.
          optional: true
        - id: siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            remote debugging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote debugging
            version.
          optional: true
        - id: siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if HTTP
            logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs directory size
            limit.
          optional: true
        - id: siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if detailed error logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.publishingUsername
          type:
            - string
          description: Publishing user name.
          optional: true
        - id: siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteConfig.connectionStrings
          type:
            - array
          description: Connection strings.
          optional: true
        - id: siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values include:

            'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub', 'CodePlexGit',
            'CodePlexHg',

            'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg',
            'OneDrive',

            'VSO'
          optional: true
        - id: siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use
            32-bit worker process; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.webSocketsEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            WebSocket is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if Always On is
            enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteConfig.javaContainerVersion
          type:
            - string
          description: Java container version.
          optional: true
        - id: siteConfig.appCommandLine
          type:
            - string
          description: App command line to launch.
          optional: true
        - id: siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed pipeline mode.
            Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteConfig.virtualApplications
          type:
            - array
          description: Virtual applications.
          optional: true
        - id: siteConfig.loadBalancing
          type:
            - string
          description: >-
            Site load balancing. Possible

            values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime',

            'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteConfig.experiments
          type:
            - object
          description: |-
            This is work around for polymophic
            types.
          optional: true
        - id: siteConfig.experiments.rampUpRules
          type:
            - array
          description: List of ramp-up rules.
          optional: true
        - id: siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum allowed CPU
            usage percentage.
          optional: true
        - id: siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum allowed memory
            usage in MB.
          optional: true
        - id: siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum allowed disk
            size usage in MB.
          optional: true
        - id: siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if Auto Heal
            is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions that describe
            when to execute the auto-heal actions.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A rule based on
            total requests.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: |-
            A rule based
            on status codes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule
            based on request execution time.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: Time taken.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to be executed
            when a rule is triggered.
          optional: true
        - id: siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined
            action to be taken. Possible values include: 'Recycle', 'LogEvent',
            'CustomAction'
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: |-
            Custom
            action to be taken.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: Executable to be run.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing (CORS)
            settings.
          optional: true
        - id: siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets the list of
            origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a flag
            indicating whether the Push endpoint is enabled.
        - id: siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that are whitelisted for use by the
            push

            registration endpoint.
          optional: true
        - id: siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that require user authentication to
            be used

            in the push registration endpoint.

            Tags can consist of alphanumeric characters and the following:

            '_', '@', '#', '.', ':', '-'.

            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of dynamic tags that will be evaluated from user
            claims in

            the push registration endpoint.
          optional: true
        - id: siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about the formal API
            definition for the app.
          optional: true
        - id: siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the API
            definition.
          optional: true
        - id: siteConfig.autoSwapSlotName
          type:
            - string
          description: Auto-swap slot name.
          optional: true
        - id: siteConfig.localMySqlEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable
            local MySQL; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.ipSecurityRestrictions
          type:
            - array
          description: IP security restrictions.
          optional: true
        - id: siteConfig.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteConfig.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteConfig.location
          type:
            - string
          description: Resource Location.
        - id: siteConfig.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteConfig.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateConfigurationWithHttpOperationResponse(resourceGroupName,
        name, siteConfig, options)
  - uid: 'azure-arm-website.WebApps#updateConfiguration'
    id: 'azure-arm-website.WebApps#updateConfiguration'
    parent: azure-arm-website.WebApps
    name: >-
      updateConfiguration(resourceGroupName, name, siteConfig, options,
      optionalCallback)
    summary: |-
      Updates the configuration of an app.

      Updates the configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.updateConfiguration(resourceGroupName, name,
      siteConfig, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - object
          description: |-
            JSON representation of a SiteConfig object. See
            example.
        - id: siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteConfig.netFrameworkVersion
          type:
            - string
          description: .NET Framework version.
          optional: true
        - id: siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteConfig.linuxFxVersion
          type:
            - string
          description: Linux App Framework and version
          optional: true
        - id: siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            request tracing is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request tracing
            expiration time.
          optional: true
        - id: siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            remote debugging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote debugging
            version.
          optional: true
        - id: siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if HTTP
            logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs directory size
            limit.
          optional: true
        - id: siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if detailed error logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.publishingUsername
          type:
            - string
          description: Publishing user name.
          optional: true
        - id: siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteConfig.connectionStrings
          type:
            - array
          description: Connection strings.
          optional: true
        - id: siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values include:

            'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub', 'CodePlexGit',
            'CodePlexHg',

            'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg',
            'OneDrive',

            'VSO'
          optional: true
        - id: siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use
            32-bit worker process; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.webSocketsEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            WebSocket is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if Always On is
            enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteConfig.javaContainerVersion
          type:
            - string
          description: Java container version.
          optional: true
        - id: siteConfig.appCommandLine
          type:
            - string
          description: App command line to launch.
          optional: true
        - id: siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed pipeline mode.
            Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteConfig.virtualApplications
          type:
            - array
          description: Virtual applications.
          optional: true
        - id: siteConfig.loadBalancing
          type:
            - string
          description: >-
            Site load balancing. Possible

            values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime',

            'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteConfig.experiments
          type:
            - object
          description: |-
            This is work around for polymophic
            types.
          optional: true
        - id: siteConfig.experiments.rampUpRules
          type:
            - array
          description: List of ramp-up rules.
          optional: true
        - id: siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum allowed CPU
            usage percentage.
          optional: true
        - id: siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum allowed memory
            usage in MB.
          optional: true
        - id: siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum allowed disk
            size usage in MB.
          optional: true
        - id: siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if Auto Heal
            is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions that describe
            when to execute the auto-heal actions.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A rule based on
            total requests.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: |-
            A rule based
            on status codes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule
            based on request execution time.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: Time taken.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to be executed
            when a rule is triggered.
          optional: true
        - id: siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined
            action to be taken. Possible values include: 'Recycle', 'LogEvent',
            'CustomAction'
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: |-
            Custom
            action to be taken.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: Executable to be run.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing (CORS)
            settings.
          optional: true
        - id: siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets the list of
            origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a flag
            indicating whether the Push endpoint is enabled.
        - id: siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that are whitelisted for use by the
            push

            registration endpoint.
          optional: true
        - id: siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that require user authentication to
            be used

            in the push registration endpoint.

            Tags can consist of alphanumeric characters and the following:

            '_', '@', '#', '.', ':', '-'.

            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of dynamic tags that will be evaluated from user
            claims in

            the push registration endpoint.
          optional: true
        - id: siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about the formal API
            definition for the app.
          optional: true
        - id: siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the API
            definition.
          optional: true
        - id: siteConfig.autoSwapSlotName
          type:
            - string
          description: Auto-swap slot name.
          optional: true
        - id: siteConfig.localMySqlEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable
            local MySQL; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.ipSecurityRestrictions
          type:
            - array
          description: IP security restrictions.
          optional: true
        - id: siteConfig.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteConfig.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteConfig.location
          type:
            - string
          description: Resource Location.
        - id: siteConfig.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteConfig.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateConfiguration(resourceGroupName, name, siteConfig,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listConfigurationSnapshotInfoWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listConfigurationSnapshotInfoWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listConfigurationSnapshotInfoWithHttpOperationResponse(resourceGroupName,
      name, options)
    summary: >-
      Gets a list of web app configuration snapshots identifiers. Each

      element of the list contains a timestamp and the ID of the snapshot.


      Gets a list of web app configuration snapshots identifiers. Each element
      of

      the list contains a timestamp and the ID of the snapshot.
    fullName: >-
      azure-arm-website.WebApps.listConfigurationSnapshotInfoWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listConfigurationSnapshotInfoWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#listConfigurationSnapshotInfo'
    id: 'azure-arm-website.WebApps#listConfigurationSnapshotInfo'
    parent: azure-arm-website.WebApps
    name: >-
      listConfigurationSnapshotInfo(resourceGroupName, name, options,
      optionalCallback)
    summary: >-
      Gets a list of web app configuration snapshots identifiers. Each

      element of the list contains a timestamp and the ID of the snapshot.


      Gets a list of web app configuration snapshots identifiers. Each element
      of

      the list contains a timestamp and the ID of the snapshot.
    fullName: >-
      azure-arm-website.WebApps.listConfigurationSnapshotInfo(resourceGroupName,
      name, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listConfigurationSnapshotInfo(resourceGroupName, name, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getConfigurationSnapshotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getConfigurationSnapshotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getConfigurationSnapshotWithHttpOperationResponse(resourceGroupName, name,
      snapshotId, options)
    summary: >-
      Gets a snapshot of the configuration of an app at a previous point

      in time.


      Gets a snapshot of the configuration of an app at a previous point in
      time.
    fullName: >-
      azure-arm-website.WebApps.getConfigurationSnapshotWithHttpOperationResponse(resourceGroupName,
      name, snapshotId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getConfigurationSnapshotWithHttpOperationResponse(resourceGroupName,
        name, snapshotId, options)
  - uid: 'azure-arm-website.WebApps#getConfigurationSnapshot'
    id: 'azure-arm-website.WebApps#getConfigurationSnapshot'
    parent: azure-arm-website.WebApps
    name: >-
      getConfigurationSnapshot(resourceGroupName, name, snapshotId, options,
      optionalCallback)
    summary: >-
      Gets a snapshot of the configuration of an app at a previous point

      in time.


      Gets a snapshot of the configuration of an app at a previous point in
      time.
    fullName: >-
      azure-arm-website.WebApps.getConfigurationSnapshot(resourceGroupName,
      name, snapshotId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getConfigurationSnapshot(resourceGroupName, name, snapshotId,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#recoverSiteConfigurationSnapshotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#recoverSiteConfigurationSnapshotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      recoverSiteConfigurationSnapshotWithHttpOperationResponse(resourceGroupName,
      name, snapshotId, options)
    summary: |-
      Reverts the configuration of an app to a previous snapshot.

      Reverts the configuration of an app to a previous snapshot.
    fullName: >-
      azure-arm-website.WebApps.recoverSiteConfigurationSnapshotWithHttpOperationResponse(resourceGroupName,
      name, snapshotId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        recoverSiteConfigurationSnapshotWithHttpOperationResponse(resourceGroupName,
        name, snapshotId, options)
  - uid: 'azure-arm-website.WebApps#recoverSiteConfigurationSnapshot'
    id: 'azure-arm-website.WebApps#recoverSiteConfigurationSnapshot'
    parent: azure-arm-website.WebApps
    name: >-
      recoverSiteConfigurationSnapshot(resourceGroupName, name, snapshotId,
      options, optionalCallback)
    summary: |-
      Reverts the configuration of an app to a previous snapshot.

      Reverts the configuration of an app to a previous snapshot.
    fullName: >-
      azure-arm-website.WebApps.recoverSiteConfigurationSnapshot(resourceGroupName,
      name, snapshotId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function recoverSiteConfigurationSnapshot(resourceGroupName, name,
        snapshotId, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listDeploymentsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listDeploymentsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listDeploymentsWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listDeploymentsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listDeploymentsWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#listDeployments'
    id: 'azure-arm-website.WebApps#listDeployments'
    parent: azure-arm-website.WebApps
    name: 'listDeployments(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listDeployments(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listDeployments(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getDeploymentWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getDeploymentWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getDeploymentWithHttpOperationResponse(resourceGroupName, name, id,
      options)
    summary: >-
      Get a deployment by its ID for an app, a specific deployment slot,

      and/or a specific scaled-out instance.


      Get a deployment by its ID for an app, a specific deployment slot, and/or
      a

      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.getDeploymentWithHttpOperationResponse(resourceGroupName,
      name, id, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDeploymentWithHttpOperationResponse(resourceGroupName, name,
        id, options)
  - uid: 'azure-arm-website.WebApps#getDeployment'
    id: 'azure-arm-website.WebApps#getDeployment'
    parent: azure-arm-website.WebApps
    name: 'getDeployment(resourceGroupName, name, id, options, optionalCallback)'
    summary: >-
      Get a deployment by its ID for an app, a specific deployment slot,

      and/or a specific scaled-out instance.


      Get a deployment by its ID for an app, a specific deployment slot, and/or
      a

      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.getDeployment(resourceGroupName, name, id,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getDeployment(resourceGroupName, name, id, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#createDeploymentWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#createDeploymentWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      createDeploymentWithHttpOperationResponse(resourceGroupName, name, id,
      deployment, options)
    summary: |-
      Create a deployment for an app, a specific deployment slot, and/or
      a specific scaled-out instance.

      Create a deployment for an app, a specific deployment slot, and/or a
      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.createDeploymentWithHttpOperationResponse(resourceGroupName,
      name, id, deployment, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: deployment
          type:
            - object
          description: Deployment details.
        - id: deployment.deploymentId
          type:
            - string
          description: ID.
          optional: true
        - id: deployment.status
          type:
            - number
          description: Status.
          optional: true
        - id: deployment.message
          type:
            - string
          description: Message.
          optional: true
        - id: deployment.author
          type:
            - string
          description: Author.
          optional: true
        - id: deployment.deployer
          type:
            - string
          description: Deployer.
          optional: true
        - id: deployment.authorEmail
          type:
            - string
          description: Author email.
          optional: true
        - id: deployment.startTime
          type:
            - date
          description: Start time.
          optional: true
        - id: deployment.endTime
          type:
            - date
          description: End time.
          optional: true
        - id: deployment.active
          type:
            - boolean
          description: Active.
          optional: true
        - id: deployment.details
          type:
            - string
          description: Detail.
          optional: true
        - id: deployment.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: deployment.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: deployment.location
          type:
            - string
          description: Resource Location.
        - id: deployment.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: deployment.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createDeploymentWithHttpOperationResponse(resourceGroupName,
        name, id, deployment, options)
  - uid: 'azure-arm-website.WebApps#createDeployment'
    id: 'azure-arm-website.WebApps#createDeployment'
    parent: azure-arm-website.WebApps
    name: >-
      createDeployment(resourceGroupName, name, id, deployment, options,
      optionalCallback)
    summary: |-
      Create a deployment for an app, a specific deployment slot, and/or
      a specific scaled-out instance.

      Create a deployment for an app, a specific deployment slot, and/or a
      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.createDeployment(resourceGroupName, name, id,
      deployment, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: deployment
          type:
            - object
          description: Deployment details.
        - id: deployment.deploymentId
          type:
            - string
          description: ID.
          optional: true
        - id: deployment.status
          type:
            - number
          description: Status.
          optional: true
        - id: deployment.message
          type:
            - string
          description: Message.
          optional: true
        - id: deployment.author
          type:
            - string
          description: Author.
          optional: true
        - id: deployment.deployer
          type:
            - string
          description: Deployer.
          optional: true
        - id: deployment.authorEmail
          type:
            - string
          description: Author email.
          optional: true
        - id: deployment.startTime
          type:
            - date
          description: Start time.
          optional: true
        - id: deployment.endTime
          type:
            - date
          description: End time.
          optional: true
        - id: deployment.active
          type:
            - boolean
          description: Active.
          optional: true
        - id: deployment.details
          type:
            - string
          description: Detail.
          optional: true
        - id: deployment.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: deployment.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: deployment.location
          type:
            - string
          description: Resource Location.
        - id: deployment.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: deployment.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createDeployment(resourceGroupName, name, id, deployment,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#deleteDeploymentWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deleteDeploymentWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      deleteDeploymentWithHttpOperationResponse(resourceGroupName, name, id,
      options)
    summary: >-
      Delete a deployment by its ID for an app, a specific deployment

      slot, and/or a specific scaled-out instance.


      Delete a deployment by its ID for an app, a specific deployment slot,
      and/or

      a specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.deleteDeploymentWithHttpOperationResponse(resourceGroupName,
      name, id, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteDeploymentWithHttpOperationResponse(resourceGroupName,
        name, id, options)
  - uid: 'azure-arm-website.WebApps#deleteDeployment'
    id: 'azure-arm-website.WebApps#deleteDeployment'
    parent: azure-arm-website.WebApps
    name: 'deleteDeployment(resourceGroupName, name, id, options, optionalCallback)'
    summary: >-
      Delete a deployment by its ID for an app, a specific deployment

      slot, and/or a specific scaled-out instance.


      Delete a deployment by its ID for an app, a specific deployment slot,
      and/or

      a specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.deleteDeployment(resourceGroupName, name, id,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteDeployment(resourceGroupName, name, id, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listDomainOwnershipIdentifiersWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listDomainOwnershipIdentifiersWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listDomainOwnershipIdentifiersWithHttpOperationResponse(resourceGroupName,
      name, options)
    summary: |-
      Lists ownership identifiers for domain associated with web app.

      Lists ownership identifiers for domain associated with web app.
    fullName: >-
      azure-arm-website.WebApps.listDomainOwnershipIdentifiersWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listDomainOwnershipIdentifiersWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#listDomainOwnershipIdentifiers'
    id: 'azure-arm-website.WebApps#listDomainOwnershipIdentifiers'
    parent: azure-arm-website.WebApps
    name: >-
      listDomainOwnershipIdentifiers(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Lists ownership identifiers for domain associated with web app.

      Lists ownership identifiers for domain associated with web app.
    fullName: >-
      azure-arm-website.WebApps.listDomainOwnershipIdentifiers(resourceGroupName,
      name, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listDomainOwnershipIdentifiers(resourceGroupName, name,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getDomainOwnershipIdentifierWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getDomainOwnershipIdentifierWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getDomainOwnershipIdentifierWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, options)
    summary: |-
      Get domain ownership identifier for web app.

      Get domain ownership identifier for web app.
    fullName: >-
      azure-arm-website.WebApps.getDomainOwnershipIdentifierWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDomainOwnershipIdentifierWithHttpOperationResponse(resourceGroupName,
        name, domainOwnershipIdentifierName, options)
  - uid: 'azure-arm-website.WebApps#getDomainOwnershipIdentifier'
    id: 'azure-arm-website.WebApps#getDomainOwnershipIdentifier'
    parent: azure-arm-website.WebApps
    name: >-
      getDomainOwnershipIdentifier(resourceGroupName, name,
      domainOwnershipIdentifierName, options, optionalCallback)
    summary: |-
      Get domain ownership identifier for web app.

      Get domain ownership identifier for web app.
    fullName: >-
      azure-arm-website.WebApps.getDomainOwnershipIdentifier(resourceGroupName,
      name, domainOwnershipIdentifierName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getDomainOwnershipIdentifier(resourceGroupName, name,
        domainOwnershipIdentifierName, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateDomainOwnershipIdentifierWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateDomainOwnershipIdentifierWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateDomainOwnershipIdentifierWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, domainOwnershipIdentifier, options)
    summary: |-
      Creates a domain ownership identifier for web app, or updates an
      existing ownership identifier.

      Creates a domain ownership identifier for web app, or updates an existing
      ownership identifier.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateDomainOwnershipIdentifierWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, domainOwnershipIdentifier, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: domainOwnershipIdentifier
          type:
            - object
          description: |-
            A JSON representation of the
            domain ownership properties.
        - id: domainOwnershipIdentifier.identifierId
          type:
            - string
          description: ID.
          optional: true
        - id: domainOwnershipIdentifier.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: domainOwnershipIdentifier.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: domainOwnershipIdentifier.location
          type:
            - string
          description: Resource Location.
        - id: domainOwnershipIdentifier.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: domainOwnershipIdentifier.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateDomainOwnershipIdentifierWithHttpOperationResponse(resourceGroupName,
        name, domainOwnershipIdentifierName, domainOwnershipIdentifier, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateDomainOwnershipIdentifier'
    id: 'azure-arm-website.WebApps#createOrUpdateDomainOwnershipIdentifier'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateDomainOwnershipIdentifier(resourceGroupName, name,
      domainOwnershipIdentifierName, domainOwnershipIdentifier, options,
      optionalCallback)
    summary: |-
      Creates a domain ownership identifier for web app, or updates an
      existing ownership identifier.

      Creates a domain ownership identifier for web app, or updates an existing
      ownership identifier.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateDomainOwnershipIdentifier(resourceGroupName,
      name, domainOwnershipIdentifierName, domainOwnershipIdentifier, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: domainOwnershipIdentifier
          type:
            - object
          description: |-
            A JSON representation of the
            domain ownership properties.
        - id: domainOwnershipIdentifier.identifierId
          type:
            - string
          description: ID.
          optional: true
        - id: domainOwnershipIdentifier.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: domainOwnershipIdentifier.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: domainOwnershipIdentifier.location
          type:
            - string
          description: Resource Location.
        - id: domainOwnershipIdentifier.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: domainOwnershipIdentifier.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateDomainOwnershipIdentifier(resourceGroupName,
        name, domainOwnershipIdentifierName, domainOwnershipIdentifier, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#deleteDomainOwnershipIdentifierWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#deleteDomainOwnershipIdentifierWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      deleteDomainOwnershipIdentifierWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, options)
    summary: |-
      Deletes a domain ownership identifier for a web app.

      Deletes a domain ownership identifier for a web app.
    fullName: >-
      azure-arm-website.WebApps.deleteDomainOwnershipIdentifierWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteDomainOwnershipIdentifierWithHttpOperationResponse(resourceGroupName,
        name, domainOwnershipIdentifierName, options)
  - uid: 'azure-arm-website.WebApps#deleteDomainOwnershipIdentifier'
    id: 'azure-arm-website.WebApps#deleteDomainOwnershipIdentifier'
    parent: azure-arm-website.WebApps
    name: >-
      deleteDomainOwnershipIdentifier(resourceGroupName, name,
      domainOwnershipIdentifierName, options, optionalCallback)
    summary: |-
      Deletes a domain ownership identifier for a web app.

      Deletes a domain ownership identifier for a web app.
    fullName: >-
      azure-arm-website.WebApps.deleteDomainOwnershipIdentifier(resourceGroupName,
      name, domainOwnershipIdentifierName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteDomainOwnershipIdentifier(resourceGroupName, name,
        domainOwnershipIdentifierName, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateDomainOwnershipIdentifierWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateDomainOwnershipIdentifierWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateDomainOwnershipIdentifierWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, domainOwnershipIdentifier, options)
    summary: |-
      Creates a domain ownership identifier for web app, or updates an
      existing ownership identifier.

      Creates a domain ownership identifier for web app, or updates an existing
      ownership identifier.
    fullName: >-
      azure-arm-website.WebApps.updateDomainOwnershipIdentifierWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, domainOwnershipIdentifier, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: domainOwnershipIdentifier
          type:
            - object
          description: |-
            A JSON representation of the
            domain ownership properties.
        - id: domainOwnershipIdentifier.identifierId
          type:
            - string
          description: ID.
          optional: true
        - id: domainOwnershipIdentifier.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: domainOwnershipIdentifier.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: domainOwnershipIdentifier.location
          type:
            - string
          description: Resource Location.
        - id: domainOwnershipIdentifier.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: domainOwnershipIdentifier.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateDomainOwnershipIdentifierWithHttpOperationResponse(resourceGroupName,
        name, domainOwnershipIdentifierName, domainOwnershipIdentifier, options)
  - uid: 'azure-arm-website.WebApps#updateDomainOwnershipIdentifier'
    id: 'azure-arm-website.WebApps#updateDomainOwnershipIdentifier'
    parent: azure-arm-website.WebApps
    name: >-
      updateDomainOwnershipIdentifier(resourceGroupName, name,
      domainOwnershipIdentifierName, domainOwnershipIdentifier, options,
      optionalCallback)
    summary: |-
      Creates a domain ownership identifier for web app, or updates an
      existing ownership identifier.

      Creates a domain ownership identifier for web app, or updates an existing
      ownership identifier.
    fullName: >-
      azure-arm-website.WebApps.updateDomainOwnershipIdentifier(resourceGroupName,
      name, domainOwnershipIdentifierName, domainOwnershipIdentifier, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: domainOwnershipIdentifier
          type:
            - object
          description: |-
            A JSON representation of the
            domain ownership properties.
        - id: domainOwnershipIdentifier.identifierId
          type:
            - string
          description: ID.
          optional: true
        - id: domainOwnershipIdentifier.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: domainOwnershipIdentifier.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: domainOwnershipIdentifier.location
          type:
            - string
          description: Resource Location.
        - id: domainOwnershipIdentifier.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: domainOwnershipIdentifier.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateDomainOwnershipIdentifier(resourceGroupName, name,
        domainOwnershipIdentifierName, domainOwnershipIdentifier, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listHostNameBindingsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listHostNameBindingsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listHostNameBindingsWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Get hostname bindings for an app or a deployment slot.

      Get hostname bindings for an app or a deployment slot.
    fullName: >-
      azure-arm-website.WebApps.listHostNameBindingsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listHostNameBindingsWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#listHostNameBindings'
    id: 'azure-arm-website.WebApps#listHostNameBindings'
    parent: azure-arm-website.WebApps
    name: 'listHostNameBindings(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Get hostname bindings for an app or a deployment slot.

      Get hostname bindings for an app or a deployment slot.
    fullName: >-
      azure-arm-website.WebApps.listHostNameBindings(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listHostNameBindings(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getHostNameBindingWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getHostNameBindingWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getHostNameBindingWithHttpOperationResponse(resourceGroupName, name,
      hostName, options)
    summary: |-
      Get the named hostname binding for an app (or deployment slot, if
      specified).

      Get the named hostname binding for an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.getHostNameBindingWithHttpOperationResponse(resourceGroupName,
      name, hostName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getHostNameBindingWithHttpOperationResponse(resourceGroupName,
        name, hostName, options)
  - uid: 'azure-arm-website.WebApps#getHostNameBinding'
    id: 'azure-arm-website.WebApps#getHostNameBinding'
    parent: azure-arm-website.WebApps
    name: >-
      getHostNameBinding(resourceGroupName, name, hostName, options,
      optionalCallback)
    summary: |-
      Get the named hostname binding for an app (or deployment slot, if
      specified).

      Get the named hostname binding for an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.getHostNameBinding(resourceGroupName, name,
      hostName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getHostNameBinding(resourceGroupName, name, hostName, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateHostNameBindingWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateHostNameBindingWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateHostNameBindingWithHttpOperationResponse(resourceGroupName,
      name, hostName, hostNameBinding, options)
    summary: |-
      Creates a hostname binding for an app.

      Creates a hostname binding for an app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateHostNameBindingWithHttpOperationResponse(resourceGroupName,
      name, hostName, hostNameBinding, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type:
            - object
          description: |-
            Binding details. This is the JSON
            representation of a HostNameBinding object.
        - id: hostNameBinding.hostNameBindingName
          type:
            - string
          description: Hostname.
          optional: true
        - id: hostNameBinding.siteName
          type:
            - string
          description: App Service app name.
          optional: true
        - id: hostNameBinding.domainId
          type:
            - string
          description: |-
            Fully qualified ARM domain
            resource URI.
          optional: true
        - id: hostNameBinding.azureResourceName
          type:
            - string
          description: Azure resource name.
          optional: true
        - id: hostNameBinding.azureResourceType
          type:
            - string
          description: |-
            Azure resource type.
            Possible values include: 'Website', 'TrafficManager'
          optional: true
        - id: hostNameBinding.customHostNameDnsRecordType
          type:
            - string
          description: |-
            Custom DNS
            record type. Possible values include: 'CName', 'A'
          optional: true
        - id: hostNameBinding.hostNameType
          type:
            - string
          description: |-
            Hostname type. Possible
            values include: 'Verified', 'Managed'
          optional: true
        - id: hostNameBinding.sslState
          type:
            - string
          description: |-
            SSL type. Possible values
            include: 'Disabled', 'SniEnabled', 'IpBasedEnabled'
          optional: true
        - id: hostNameBinding.thumbprint
          type:
            - string
          description: SSL certificate thumbprint
          optional: true
        - id: hostNameBinding.virtualIP
          type:
            - string
          description: |-
            Virtual IP address assigned to
            the hostname if IP based SSL is enabled.
          optional: true
        - id: hostNameBinding.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: hostNameBinding.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: hostNameBinding.location
          type:
            - string
          description: Resource Location.
        - id: hostNameBinding.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: hostNameBinding.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateHostNameBindingWithHttpOperationResponse(resourceGroupName,
        name, hostName, hostNameBinding, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateHostNameBinding'
    id: 'azure-arm-website.WebApps#createOrUpdateHostNameBinding'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateHostNameBinding(resourceGroupName, name, hostName,
      hostNameBinding, options, optionalCallback)
    summary: |-
      Creates a hostname binding for an app.

      Creates a hostname binding for an app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateHostNameBinding(resourceGroupName,
      name, hostName, hostNameBinding, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type:
            - object
          description: |-
            Binding details. This is the JSON
            representation of a HostNameBinding object.
        - id: hostNameBinding.hostNameBindingName
          type:
            - string
          description: Hostname.
          optional: true
        - id: hostNameBinding.siteName
          type:
            - string
          description: App Service app name.
          optional: true
        - id: hostNameBinding.domainId
          type:
            - string
          description: |-
            Fully qualified ARM domain
            resource URI.
          optional: true
        - id: hostNameBinding.azureResourceName
          type:
            - string
          description: Azure resource name.
          optional: true
        - id: hostNameBinding.azureResourceType
          type:
            - string
          description: |-
            Azure resource type.
            Possible values include: 'Website', 'TrafficManager'
          optional: true
        - id: hostNameBinding.customHostNameDnsRecordType
          type:
            - string
          description: |-
            Custom DNS
            record type. Possible values include: 'CName', 'A'
          optional: true
        - id: hostNameBinding.hostNameType
          type:
            - string
          description: |-
            Hostname type. Possible
            values include: 'Verified', 'Managed'
          optional: true
        - id: hostNameBinding.sslState
          type:
            - string
          description: |-
            SSL type. Possible values
            include: 'Disabled', 'SniEnabled', 'IpBasedEnabled'
          optional: true
        - id: hostNameBinding.thumbprint
          type:
            - string
          description: SSL certificate thumbprint
          optional: true
        - id: hostNameBinding.virtualIP
          type:
            - string
          description: |-
            Virtual IP address assigned to
            the hostname if IP based SSL is enabled.
          optional: true
        - id: hostNameBinding.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: hostNameBinding.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: hostNameBinding.location
          type:
            - string
          description: Resource Location.
        - id: hostNameBinding.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: hostNameBinding.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateHostNameBinding(resourceGroupName, name,
        hostName, hostNameBinding, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#deleteHostNameBindingWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deleteHostNameBindingWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      deleteHostNameBindingWithHttpOperationResponse(resourceGroupName, name,
      hostName, options)
    summary: |-
      Deletes a hostname binding for an app.

      Deletes a hostname binding for an app.
    fullName: >-
      azure-arm-website.WebApps.deleteHostNameBindingWithHttpOperationResponse(resourceGroupName,
      name, hostName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteHostNameBindingWithHttpOperationResponse(resourceGroupName, name,
        hostName, options)
  - uid: 'azure-arm-website.WebApps#deleteHostNameBinding'
    id: 'azure-arm-website.WebApps#deleteHostNameBinding'
    parent: azure-arm-website.WebApps
    name: >-
      deleteHostNameBinding(resourceGroupName, name, hostName, options,
      optionalCallback)
    summary: |-
      Deletes a hostname binding for an app.

      Deletes a hostname binding for an app.
    fullName: >-
      azure-arm-website.WebApps.deleteHostNameBinding(resourceGroupName, name,
      hostName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteHostNameBinding(resourceGroupName, name, hostName,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#getHybridConnectionWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getHybridConnectionWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getHybridConnectionWithHttpOperationResponse(resourceGroupName, name,
      namespaceName, relayName, options)
    summary: |-
      Retrieves a specific Service Bus Hybrid Connection used by this Web
      App.

      Retrieves a specific Service Bus Hybrid Connection used by this Web App.
    fullName: >-
      azure-arm-website.WebApps.getHybridConnectionWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getHybridConnectionWithHttpOperationResponse(resourceGroupName,
        name, namespaceName, relayName, options)
  - uid: 'azure-arm-website.WebApps#getHybridConnection'
    id: 'azure-arm-website.WebApps#getHybridConnection'
    parent: azure-arm-website.WebApps
    name: >-
      getHybridConnection(resourceGroupName, name, namespaceName, relayName,
      options, optionalCallback)
    summary: |-
      Retrieves a specific Service Bus Hybrid Connection used by this Web
      App.

      Retrieves a specific Service Bus Hybrid Connection used by this Web App.
    fullName: >-
      azure-arm-website.WebApps.getHybridConnection(resourceGroupName, name,
      namespaceName, relayName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getHybridConnection(resourceGroupName, name, namespaceName,
        relayName, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateHybridConnectionWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateHybridConnectionWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateHybridConnectionWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, connectionEnvelope, options)
    summary: |-
      Creates a new Hybrid Connection using a Service Bus relay.

      Creates a new Hybrid Connection using a Service Bus relay.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateHybridConnectionWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, connectionEnvelope, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: connectionEnvelope
          type:
            - object
          description: The details of the hybrid connection
        - id: connectionEnvelope.serviceBusNamespace
          type:
            - string
          description: |-
            The name of the
            Service Bus namespace.
          optional: true
        - id: connectionEnvelope.relayName
          type:
            - string
          description: |-
            The name of the Service Bus
            relay.
          optional: true
        - id: connectionEnvelope.relayArmUri
          type:
            - string
          description: |-
            The ARM URI to the Service
            Bus relay.
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: The hostname of the endpoint.
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: The port of the endpoint.
          optional: true
        - id: connectionEnvelope.sendKeyName
          type:
            - string
          description: >-
            The name of the Service Bus

            key which has Send permissions. This is used to authenticate to
            Service Bus.
          optional: true
        - id: connectionEnvelope.sendKeyValue
          type:
            - string
          description: >-
            The value of the Service

            Bus key. This is used to authenticate to Service Bus. In ARM this
            key will

            not be returned

            normally, use the POST /listKeys API instead.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateHybridConnectionWithHttpOperationResponse(resourceGroupName,
        name, namespaceName, relayName, connectionEnvelope, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateHybridConnection'
    id: 'azure-arm-website.WebApps#createOrUpdateHybridConnection'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateHybridConnection(resourceGroupName, name, namespaceName,
      relayName, connectionEnvelope, options, optionalCallback)
    summary: |-
      Creates a new Hybrid Connection using a Service Bus relay.

      Creates a new Hybrid Connection using a Service Bus relay.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateHybridConnection(resourceGroupName,
      name, namespaceName, relayName, connectionEnvelope, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: connectionEnvelope
          type:
            - object
          description: The details of the hybrid connection
        - id: connectionEnvelope.serviceBusNamespace
          type:
            - string
          description: |-
            The name of the
            Service Bus namespace.
          optional: true
        - id: connectionEnvelope.relayName
          type:
            - string
          description: |-
            The name of the Service Bus
            relay.
          optional: true
        - id: connectionEnvelope.relayArmUri
          type:
            - string
          description: |-
            The ARM URI to the Service
            Bus relay.
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: The hostname of the endpoint.
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: The port of the endpoint.
          optional: true
        - id: connectionEnvelope.sendKeyName
          type:
            - string
          description: >-
            The name of the Service Bus

            key which has Send permissions. This is used to authenticate to
            Service Bus.
          optional: true
        - id: connectionEnvelope.sendKeyValue
          type:
            - string
          description: >-
            The value of the Service

            Bus key. This is used to authenticate to Service Bus. In ARM this
            key will

            not be returned

            normally, use the POST /listKeys API instead.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateHybridConnection(resourceGroupName, name,
        namespaceName, relayName, connectionEnvelope, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#deleteHybridConnectionWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deleteHybridConnectionWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      deleteHybridConnectionWithHttpOperationResponse(resourceGroupName, name,
      namespaceName, relayName, options)
    summary: |-
      Removes a Hybrid Connection from this site.

      Removes a Hybrid Connection from this site.
    fullName: >-
      azure-arm-website.WebApps.deleteHybridConnectionWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteHybridConnectionWithHttpOperationResponse(resourceGroupName, name,
        namespaceName, relayName, options)
  - uid: 'azure-arm-website.WebApps#deleteHybridConnection'
    id: 'azure-arm-website.WebApps#deleteHybridConnection'
    parent: azure-arm-website.WebApps
    name: >-
      deleteHybridConnection(resourceGroupName, name, namespaceName, relayName,
      options, optionalCallback)
    summary: |-
      Removes a Hybrid Connection from this site.

      Removes a Hybrid Connection from this site.
    fullName: >-
      azure-arm-website.WebApps.deleteHybridConnection(resourceGroupName, name,
      namespaceName, relayName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteHybridConnection(resourceGroupName, name, namespaceName,
        relayName, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#updateHybridConnectionWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#updateHybridConnectionWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      updateHybridConnectionWithHttpOperationResponse(resourceGroupName, name,
      namespaceName, relayName, connectionEnvelope, options)
    summary: |-
      Creates a new Hybrid Connection using a Service Bus relay.

      Creates a new Hybrid Connection using a Service Bus relay.
    fullName: >-
      azure-arm-website.WebApps.updateHybridConnectionWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, connectionEnvelope, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: connectionEnvelope
          type:
            - object
          description: The details of the hybrid connection
        - id: connectionEnvelope.serviceBusNamespace
          type:
            - string
          description: |-
            The name of the
            Service Bus namespace.
          optional: true
        - id: connectionEnvelope.relayName
          type:
            - string
          description: |-
            The name of the Service Bus
            relay.
          optional: true
        - id: connectionEnvelope.relayArmUri
          type:
            - string
          description: |-
            The ARM URI to the Service
            Bus relay.
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: The hostname of the endpoint.
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: The port of the endpoint.
          optional: true
        - id: connectionEnvelope.sendKeyName
          type:
            - string
          description: >-
            The name of the Service Bus

            key which has Send permissions. This is used to authenticate to
            Service Bus.
          optional: true
        - id: connectionEnvelope.sendKeyValue
          type:
            - string
          description: >-
            The value of the Service

            Bus key. This is used to authenticate to Service Bus. In ARM this
            key will

            not be returned

            normally, use the POST /listKeys API instead.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateHybridConnectionWithHttpOperationResponse(resourceGroupName, name,
        namespaceName, relayName, connectionEnvelope, options)
  - uid: 'azure-arm-website.WebApps#updateHybridConnection'
    id: 'azure-arm-website.WebApps#updateHybridConnection'
    parent: azure-arm-website.WebApps
    name: >-
      updateHybridConnection(resourceGroupName, name, namespaceName, relayName,
      connectionEnvelope, options, optionalCallback)
    summary: |-
      Creates a new Hybrid Connection using a Service Bus relay.

      Creates a new Hybrid Connection using a Service Bus relay.
    fullName: >-
      azure-arm-website.WebApps.updateHybridConnection(resourceGroupName, name,
      namespaceName, relayName, connectionEnvelope, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: connectionEnvelope
          type:
            - object
          description: The details of the hybrid connection
        - id: connectionEnvelope.serviceBusNamespace
          type:
            - string
          description: |-
            The name of the
            Service Bus namespace.
          optional: true
        - id: connectionEnvelope.relayName
          type:
            - string
          description: |-
            The name of the Service Bus
            relay.
          optional: true
        - id: connectionEnvelope.relayArmUri
          type:
            - string
          description: |-
            The ARM URI to the Service
            Bus relay.
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: The hostname of the endpoint.
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: The port of the endpoint.
          optional: true
        - id: connectionEnvelope.sendKeyName
          type:
            - string
          description: >-
            The name of the Service Bus

            key which has Send permissions. This is used to authenticate to
            Service Bus.
          optional: true
        - id: connectionEnvelope.sendKeyValue
          type:
            - string
          description: >-
            The value of the Service

            Bus key. This is used to authenticate to Service Bus. In ARM this
            key will

            not be returned

            normally, use the POST /listKeys API instead.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateHybridConnection(resourceGroupName, name, namespaceName,
        relayName, connectionEnvelope, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listHybridConnectionKeysWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listHybridConnectionKeysWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listHybridConnectionKeysWithHttpOperationResponse(resourceGroupName, name,
      namespaceName, relayName, options)
    summary: |-
      Gets the send key name and value for a Hybrid Connection.

      Gets the send key name and value for a Hybrid Connection.
    fullName: >-
      azure-arm-website.WebApps.listHybridConnectionKeysWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listHybridConnectionKeysWithHttpOperationResponse(resourceGroupName,
        name, namespaceName, relayName, options)
  - uid: 'azure-arm-website.WebApps#listHybridConnectionKeys'
    id: 'azure-arm-website.WebApps#listHybridConnectionKeys'
    parent: azure-arm-website.WebApps
    name: >-
      listHybridConnectionKeys(resourceGroupName, name, namespaceName,
      relayName, options, optionalCallback)
    summary: |-
      Gets the send key name and value for a Hybrid Connection.

      Gets the send key name and value for a Hybrid Connection.
    fullName: >-
      azure-arm-website.WebApps.listHybridConnectionKeys(resourceGroupName,
      name, namespaceName, relayName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listHybridConnectionKeys(resourceGroupName, name,
        namespaceName, relayName, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listHybridConnectionsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listHybridConnectionsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listHybridConnectionsWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Retrieves all Service Bus Hybrid Connections used by this Web App.

      Retrieves all Service Bus Hybrid Connections used by this Web App.
    fullName: >-
      azure-arm-website.WebApps.listHybridConnectionsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listHybridConnectionsWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#listHybridConnections'
    id: 'azure-arm-website.WebApps#listHybridConnections'
    parent: azure-arm-website.WebApps
    name: 'listHybridConnections(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Retrieves all Service Bus Hybrid Connections used by this Web App.

      Retrieves all Service Bus Hybrid Connections used by this Web App.
    fullName: >-
      azure-arm-website.WebApps.listHybridConnections(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listHybridConnections(resourceGroupName, name, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listRelayServiceConnectionsWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listRelayServiceConnectionsWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listRelayServiceConnectionsWithHttpOperationResponse(resourceGroupName,
      name, options)
    summary: |-
      Gets hybrid connections configured for an app (or deployment slot,
      if specified).

      Gets hybrid connections configured for an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listRelayServiceConnectionsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRelayServiceConnectionsWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#listRelayServiceConnections'
    id: 'azure-arm-website.WebApps#listRelayServiceConnections'
    parent: azure-arm-website.WebApps
    name: >-
      listRelayServiceConnections(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Gets hybrid connections configured for an app (or deployment slot,
      if specified).

      Gets hybrid connections configured for an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listRelayServiceConnections(resourceGroupName,
      name, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listRelayServiceConnections(resourceGroupName, name, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getRelayServiceConnectionWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getRelayServiceConnectionWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getRelayServiceConnectionWithHttpOperationResponse(resourceGroupName,
      name, entityName, options)
    summary: |-
      Gets a hybrid connection configuration by its name.

      Gets a hybrid connection configuration by its name.
    fullName: >-
      azure-arm-website.WebApps.getRelayServiceConnectionWithHttpOperationResponse(resourceGroupName,
      name, entityName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getRelayServiceConnectionWithHttpOperationResponse(resourceGroupName,
        name, entityName, options)
  - uid: 'azure-arm-website.WebApps#getRelayServiceConnection'
    id: 'azure-arm-website.WebApps#getRelayServiceConnection'
    parent: azure-arm-website.WebApps
    name: >-
      getRelayServiceConnection(resourceGroupName, name, entityName, options,
      optionalCallback)
    summary: |-
      Gets a hybrid connection configuration by its name.

      Gets a hybrid connection configuration by its name.
    fullName: >-
      azure-arm-website.WebApps.getRelayServiceConnection(resourceGroupName,
      name, entityName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getRelayServiceConnection(resourceGroupName, name, entityName,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateRelayServiceConnectionWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateRelayServiceConnectionWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateRelayServiceConnectionWithHttpOperationResponse(resourceGroupName,
      name, entityName, connectionEnvelope, options)
    summary: >-
      Creates a new hybrid connection configuration (PUT), or updates an

      existing one (PATCH).


      Creates a new hybrid connection configuration (PUT), or updates an
      existing

      one (PATCH).
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateRelayServiceConnectionWithHttpOperationResponse(resourceGroupName,
      name, entityName, connectionEnvelope, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Details of the hybrid connection
            configuration.
        - id: connectionEnvelope.entityName
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.entityConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceType
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: ''
          optional: true
        - id: connectionEnvelope.biztalkUri
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateRelayServiceConnectionWithHttpOperationResponse(resourceGroupName,
        name, entityName, connectionEnvelope, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateRelayServiceConnection'
    id: 'azure-arm-website.WebApps#createOrUpdateRelayServiceConnection'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateRelayServiceConnection(resourceGroupName, name, entityName,
      connectionEnvelope, options, optionalCallback)
    summary: >-
      Creates a new hybrid connection configuration (PUT), or updates an

      existing one (PATCH).


      Creates a new hybrid connection configuration (PUT), or updates an
      existing

      one (PATCH).
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateRelayServiceConnection(resourceGroupName,
      name, entityName, connectionEnvelope, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Details of the hybrid connection
            configuration.
        - id: connectionEnvelope.entityName
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.entityConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceType
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: ''
          optional: true
        - id: connectionEnvelope.biztalkUri
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateRelayServiceConnection(resourceGroupName, name,
        entityName, connectionEnvelope, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#deleteRelayServiceConnectionWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#deleteRelayServiceConnectionWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      deleteRelayServiceConnectionWithHttpOperationResponse(resourceGroupName,
      name, entityName, options)
    summary: |-
      Deletes a relay service connection by its name.

      Deletes a relay service connection by its name.
    fullName: >-
      azure-arm-website.WebApps.deleteRelayServiceConnectionWithHttpOperationResponse(resourceGroupName,
      name, entityName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteRelayServiceConnectionWithHttpOperationResponse(resourceGroupName,
        name, entityName, options)
  - uid: 'azure-arm-website.WebApps#deleteRelayServiceConnection'
    id: 'azure-arm-website.WebApps#deleteRelayServiceConnection'
    parent: azure-arm-website.WebApps
    name: >-
      deleteRelayServiceConnection(resourceGroupName, name, entityName, options,
      optionalCallback)
    summary: |-
      Deletes a relay service connection by its name.

      Deletes a relay service connection by its name.
    fullName: >-
      azure-arm-website.WebApps.deleteRelayServiceConnection(resourceGroupName,
      name, entityName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteRelayServiceConnection(resourceGroupName, name,
        entityName, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateRelayServiceConnectionWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateRelayServiceConnectionWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateRelayServiceConnectionWithHttpOperationResponse(resourceGroupName,
      name, entityName, connectionEnvelope, options)
    summary: >-
      Creates a new hybrid connection configuration (PUT), or updates an

      existing one (PATCH).


      Creates a new hybrid connection configuration (PUT), or updates an
      existing

      one (PATCH).
    fullName: >-
      azure-arm-website.WebApps.updateRelayServiceConnectionWithHttpOperationResponse(resourceGroupName,
      name, entityName, connectionEnvelope, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Details of the hybrid connection
            configuration.
        - id: connectionEnvelope.entityName
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.entityConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceType
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: ''
          optional: true
        - id: connectionEnvelope.biztalkUri
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateRelayServiceConnectionWithHttpOperationResponse(resourceGroupName,
        name, entityName, connectionEnvelope, options)
  - uid: 'azure-arm-website.WebApps#updateRelayServiceConnection'
    id: 'azure-arm-website.WebApps#updateRelayServiceConnection'
    parent: azure-arm-website.WebApps
    name: >-
      updateRelayServiceConnection(resourceGroupName, name, entityName,
      connectionEnvelope, options, optionalCallback)
    summary: >-
      Creates a new hybrid connection configuration (PUT), or updates an

      existing one (PATCH).


      Creates a new hybrid connection configuration (PUT), or updates an
      existing

      one (PATCH).
    fullName: >-
      azure-arm-website.WebApps.updateRelayServiceConnection(resourceGroupName,
      name, entityName, connectionEnvelope, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Details of the hybrid connection
            configuration.
        - id: connectionEnvelope.entityName
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.entityConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceType
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: ''
          optional: true
        - id: connectionEnvelope.biztalkUri
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateRelayServiceConnection(resourceGroupName, name,
        entityName, connectionEnvelope, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listInstanceIdentifiersWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listInstanceIdentifiersWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listInstanceIdentifiersWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Gets all scale-out instances of an app.

      Gets all scale-out instances of an app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceIdentifiersWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listInstanceIdentifiersWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#listInstanceIdentifiers'
    id: 'azure-arm-website.WebApps#listInstanceIdentifiers'
    parent: azure-arm-website.WebApps
    name: >-
      listInstanceIdentifiers(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Gets all scale-out instances of an app.

      Gets all scale-out instances of an app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceIdentifiers(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listInstanceIdentifiers(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listInstanceDeploymentsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listInstanceDeploymentsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listInstanceDeploymentsWithHttpOperationResponse(resourceGroupName, name,
      instanceId, options)
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceDeploymentsWithHttpOperationResponse(resourceGroupName,
      name, instanceId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: instanceId
          type:
            - string
          description: |-
            The ID of a specific scaled-out instance. This is
            the value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listInstanceDeploymentsWithHttpOperationResponse(resourceGroupName,
        name, instanceId, options)
  - uid: 'azure-arm-website.WebApps#listInstanceDeployments'
    id: 'azure-arm-website.WebApps#listInstanceDeployments'
    parent: azure-arm-website.WebApps
    name: >-
      listInstanceDeployments(resourceGroupName, name, instanceId, options,
      optionalCallback)
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceDeployments(resourceGroupName, name,
      instanceId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: instanceId
          type:
            - string
          description: |-
            The ID of a specific scaled-out instance. This is
            the value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listInstanceDeployments(resourceGroupName, name, instanceId,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#getInstanceDeploymentWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getInstanceDeploymentWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getInstanceDeploymentWithHttpOperationResponse(resourceGroupName, name,
      id, instanceId, options)
    summary: >-
      Get a deployment by its ID for an app, a specific deployment slot,

      and/or a specific scaled-out instance.


      Get a deployment by its ID for an app, a specific deployment slot, and/or
      a

      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.getInstanceDeploymentWithHttpOperationResponse(resourceGroupName,
      name, id, instanceId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: instanceId
          type:
            - string
          description: |-
            ID of a specific scaled-out instance. This is the
            value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getInstanceDeploymentWithHttpOperationResponse(resourceGroupName, name,
        id, instanceId, options)
  - uid: 'azure-arm-website.WebApps#getInstanceDeployment'
    id: 'azure-arm-website.WebApps#getInstanceDeployment'
    parent: azure-arm-website.WebApps
    name: >-
      getInstanceDeployment(resourceGroupName, name, id, instanceId, options,
      optionalCallback)
    summary: >-
      Get a deployment by its ID for an app, a specific deployment slot,

      and/or a specific scaled-out instance.


      Get a deployment by its ID for an app, a specific deployment slot, and/or
      a

      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.getInstanceDeployment(resourceGroupName, name,
      id, instanceId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: instanceId
          type:
            - string
          description: |-
            ID of a specific scaled-out instance. This is the
            value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getInstanceDeployment(resourceGroupName, name, id, instanceId,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createInstanceDeploymentWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createInstanceDeploymentWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createInstanceDeploymentWithHttpOperationResponse(resourceGroupName, name,
      id, instanceId, deployment, options)
    summary: |-
      Create a deployment for an app, a specific deployment slot, and/or
      a specific scaled-out instance.

      Create a deployment for an app, a specific deployment slot, and/or a
      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.createInstanceDeploymentWithHttpOperationResponse(resourceGroupName,
      name, id, instanceId, deployment, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: instanceId
          type:
            - string
          description: |-
            ID of a specific scaled-out instance. This is the
            value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: deployment
          type:
            - object
          description: Deployment details.
        - id: deployment.deploymentId
          type:
            - string
          description: ID.
          optional: true
        - id: deployment.status
          type:
            - number
          description: Status.
          optional: true
        - id: deployment.message
          type:
            - string
          description: Message.
          optional: true
        - id: deployment.author
          type:
            - string
          description: Author.
          optional: true
        - id: deployment.deployer
          type:
            - string
          description: Deployer.
          optional: true
        - id: deployment.authorEmail
          type:
            - string
          description: Author email.
          optional: true
        - id: deployment.startTime
          type:
            - date
          description: Start time.
          optional: true
        - id: deployment.endTime
          type:
            - date
          description: End time.
          optional: true
        - id: deployment.active
          type:
            - boolean
          description: Active.
          optional: true
        - id: deployment.details
          type:
            - string
          description: Detail.
          optional: true
        - id: deployment.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: deployment.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: deployment.location
          type:
            - string
          description: Resource Location.
        - id: deployment.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: deployment.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createInstanceDeploymentWithHttpOperationResponse(resourceGroupName,
        name, id, instanceId, deployment, options)
  - uid: 'azure-arm-website.WebApps#createInstanceDeployment'
    id: 'azure-arm-website.WebApps#createInstanceDeployment'
    parent: azure-arm-website.WebApps
    name: >-
      createInstanceDeployment(resourceGroupName, name, id, instanceId,
      deployment, options, optionalCallback)
    summary: |-
      Create a deployment for an app, a specific deployment slot, and/or
      a specific scaled-out instance.

      Create a deployment for an app, a specific deployment slot, and/or a
      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.createInstanceDeployment(resourceGroupName,
      name, id, instanceId, deployment, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: instanceId
          type:
            - string
          description: |-
            ID of a specific scaled-out instance. This is the
            value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: deployment
          type:
            - object
          description: Deployment details.
        - id: deployment.deploymentId
          type:
            - string
          description: ID.
          optional: true
        - id: deployment.status
          type:
            - number
          description: Status.
          optional: true
        - id: deployment.message
          type:
            - string
          description: Message.
          optional: true
        - id: deployment.author
          type:
            - string
          description: Author.
          optional: true
        - id: deployment.deployer
          type:
            - string
          description: Deployer.
          optional: true
        - id: deployment.authorEmail
          type:
            - string
          description: Author email.
          optional: true
        - id: deployment.startTime
          type:
            - date
          description: Start time.
          optional: true
        - id: deployment.endTime
          type:
            - date
          description: End time.
          optional: true
        - id: deployment.active
          type:
            - boolean
          description: Active.
          optional: true
        - id: deployment.details
          type:
            - string
          description: Detail.
          optional: true
        - id: deployment.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: deployment.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: deployment.location
          type:
            - string
          description: Resource Location.
        - id: deployment.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: deployment.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createInstanceDeployment(resourceGroupName, name, id,
        instanceId, deployment, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#deleteInstanceDeploymentWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#deleteInstanceDeploymentWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      deleteInstanceDeploymentWithHttpOperationResponse(resourceGroupName, name,
      id, instanceId, options)
    summary: >-
      Delete a deployment by its ID for an app, a specific deployment

      slot, and/or a specific scaled-out instance.


      Delete a deployment by its ID for an app, a specific deployment slot,
      and/or

      a specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.deleteInstanceDeploymentWithHttpOperationResponse(resourceGroupName,
      name, id, instanceId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: instanceId
          type:
            - string
          description: |-
            ID of a specific scaled-out instance. This is the
            value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteInstanceDeploymentWithHttpOperationResponse(resourceGroupName,
        name, id, instanceId, options)
  - uid: 'azure-arm-website.WebApps#deleteInstanceDeployment'
    id: 'azure-arm-website.WebApps#deleteInstanceDeployment'
    parent: azure-arm-website.WebApps
    name: >-
      deleteInstanceDeployment(resourceGroupName, name, id, instanceId, options,
      optionalCallback)
    summary: >-
      Delete a deployment by its ID for an app, a specific deployment

      slot, and/or a specific scaled-out instance.


      Delete a deployment by its ID for an app, a specific deployment slot,
      and/or

      a specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.deleteInstanceDeployment(resourceGroupName,
      name, id, instanceId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: instanceId
          type:
            - string
          description: |-
            ID of a specific scaled-out instance. This is the
            value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteInstanceDeployment(resourceGroupName, name, id,
        instanceId, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#isCloneableWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#isCloneableWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'isCloneableWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Shows whether an app can be cloned to another resource group or
      subscription.

      Shows whether an app can be cloned to another resource group or
      subscription.
    fullName: >-
      azure-arm-website.WebApps.isCloneableWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function isCloneableWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#isCloneable'
    id: 'azure-arm-website.WebApps#isCloneable'
    parent: azure-arm-website.WebApps
    name: 'isCloneable(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Shows whether an app can be cloned to another resource group or
      subscription.

      Shows whether an app can be cloned to another resource group or
      subscription.
    fullName: >-
      azure-arm-website.WebApps.isCloneable(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function isCloneable(resourceGroupName, name, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#listMetricDefinitionsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listMetricDefinitionsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listMetricDefinitionsWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Gets all metric definitions of an app (or deployment slot, if
      specified).

      Gets all metric definitions of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricDefinitionsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listMetricDefinitionsWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#listMetricDefinitions'
    id: 'azure-arm-website.WebApps#listMetricDefinitions'
    parent: azure-arm-website.WebApps
    name: 'listMetricDefinitions(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets all metric definitions of an app (or deployment slot, if
      specified).

      Gets all metric definitions of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricDefinitions(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listMetricDefinitions(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listMetricsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listMetricsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listMetricsWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Gets performance metrics of an app (or deployment slot, if
      specified).

      Gets performance metrics of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.details
          type:
            - boolean
          description: |-
            Specify "true" to include metric details
            in the response. It is "false" by default.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only metrics specified in the filter

            (using OData syntax). For example: $filter=(name.value eq 'Metric1'
            or

            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime

            eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listMetricsWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#listMetrics'
    id: 'azure-arm-website.WebApps#listMetrics'
    parent: azure-arm-website.WebApps
    name: 'listMetrics(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets performance metrics of an app (or deployment slot, if
      specified).

      Gets performance metrics of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetrics(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.details
          type:
            - boolean
          description: |-
            Specify "true" to include metric details
            in the response. It is "false" by default.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only metrics specified in the filter

            (using OData syntax). For example: $filter=(name.value eq 'Metric1'
            or

            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime

            eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listMetrics(resourceGroupName, name, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#migrateStorageWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#migrateStorageWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      migrateStorageWithHttpOperationResponse(subscriptionName,
      resourceGroupName, name, migrationOptions, options)
    summary: |-
      Restores a web app.

      Restores a web app.
    fullName: >-
      azure-arm-website.WebApps.migrateStorageWithHttpOperationResponse(subscriptionName,
      resourceGroupName, name, migrationOptions, options)
    type: Method
    syntax:
      parameters:
        - id: subscriptionName
          type:
            - string
          description: Azure subscription
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: migrationOptions
          type:
            - object
          description: Migration migrationOptions
        - id: migrationOptions.azurefilesConnectionString
          type:
            - string
          description: |-
            AzureFiles
            connection string.
          optional: true
        - id: migrationOptions.azurefilesShare
          type:
            - string
          description: AzureFiles share.
          optional: true
        - id: migrationOptions.switchSiteAfterMigration
          type:
            - boolean
          description: |-
            <code>true</code>if the app should be switched over; otherwise,
            <code>false</code>.
          optional: true
        - id: migrationOptions.blockWriteAccessToSite
          type:
            - boolean
          description: |-
            <code>true</code>
            if the app should be read only during copy operation; otherwise,
            <code>false</code>.
          optional: true
        - id: migrationOptions.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: migrationOptions.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: migrationOptions.location
          type:
            - string
          description: Resource Location.
        - id: migrationOptions.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: migrationOptions.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function migrateStorageWithHttpOperationResponse(subscriptionName,
        resourceGroupName, name, migrationOptions, options)
  - uid: 'azure-arm-website.WebApps#migrateStorage'
    id: 'azure-arm-website.WebApps#migrateStorage'
    parent: azure-arm-website.WebApps
    name: >-
      migrateStorage(subscriptionName, resourceGroupName, name,
      migrationOptions, options, optionalCallback)
    summary: |-
      Restores a web app.

      Restores a web app.
    fullName: >-
      azure-arm-website.WebApps.migrateStorage(subscriptionName,
      resourceGroupName, name, migrationOptions, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: subscriptionName
          type:
            - string
          description: Azure subscription
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: migrationOptions
          type:
            - object
          description: Migration migrationOptions
        - id: migrationOptions.azurefilesConnectionString
          type:
            - string
          description: |-
            AzureFiles
            connection string.
          optional: true
        - id: migrationOptions.azurefilesShare
          type:
            - string
          description: AzureFiles share.
          optional: true
        - id: migrationOptions.switchSiteAfterMigration
          type:
            - boolean
          description: |-
            <code>true</code>if the app should be switched over; otherwise,
            <code>false</code>.
          optional: true
        - id: migrationOptions.blockWriteAccessToSite
          type:
            - boolean
          description: |-
            <code>true</code>
            if the app should be read only during copy operation; otherwise,
            <code>false</code>.
          optional: true
        - id: migrationOptions.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: migrationOptions.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: migrationOptions.location
          type:
            - string
          description: Resource Location.
        - id: migrationOptions.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: migrationOptions.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function migrateStorage(subscriptionName, resourceGroupName, name,
        migrationOptions, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#migrateMySqlWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#migrateMySqlWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      migrateMySqlWithHttpOperationResponse(resourceGroupName, name,
      migrationRequestEnvelope, options)
    summary: |-
      Migrates a local (in-app) MySql database to a remote MySql
      database.

      Migrates a local (in-app) MySql database to a remote MySql database.
    fullName: >-
      azure-arm-website.WebApps.migrateMySqlWithHttpOperationResponse(resourceGroupName,
      name, migrationRequestEnvelope, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: migrationRequestEnvelope
          type:
            - object
          description: MySql migration options
        - id: migrationRequestEnvelope.connectionString
          type:
            - string
          description: >-
            Connection

            string to the remote MySQL database to which data should be
            migrated.
          optional: true
        - id: migrationRequestEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: migrationRequestEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: migrationRequestEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: migrationRequestEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: migrationRequestEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function migrateMySqlWithHttpOperationResponse(resourceGroupName, name,
        migrationRequestEnvelope, options)
  - uid: 'azure-arm-website.WebApps#migrateMySql'
    id: 'azure-arm-website.WebApps#migrateMySql'
    parent: azure-arm-website.WebApps
    name: >-
      migrateMySql(resourceGroupName, name, migrationRequestEnvelope, options,
      optionalCallback)
    summary: |-
      Migrates a local (in-app) MySql database to a remote MySql
      database.

      Migrates a local (in-app) MySql database to a remote MySql database.
    fullName: >-
      azure-arm-website.WebApps.migrateMySql(resourceGroupName, name,
      migrationRequestEnvelope, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: migrationRequestEnvelope
          type:
            - object
          description: MySql migration options
        - id: migrationRequestEnvelope.connectionString
          type:
            - string
          description: >-
            Connection

            string to the remote MySQL database to which data should be
            migrated.
          optional: true
        - id: migrationRequestEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: migrationRequestEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: migrationRequestEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: migrationRequestEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: migrationRequestEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function migrateMySql(resourceGroupName, name, migrationRequestEnvelope,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#getMigrateMySqlStatusWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getMigrateMySqlStatusWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getMigrateMySqlStatusWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: >-
      Returns the status of MySql in app migration, if one is active, and

      whether or not MySql in app is enabled


      Returns the status of MySql in app migration, if one is active, and
      whether

      or not MySql in app is enabled
    fullName: >-
      azure-arm-website.WebApps.getMigrateMySqlStatusWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getMigrateMySqlStatusWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#getMigrateMySqlStatus'
    id: 'azure-arm-website.WebApps#getMigrateMySqlStatus'
    parent: azure-arm-website.WebApps
    name: 'getMigrateMySqlStatus(resourceGroupName, name, options, optionalCallback)'
    summary: >-
      Returns the status of MySql in app migration, if one is active, and

      whether or not MySql in app is enabled


      Returns the status of MySql in app migration, if one is active, and
      whether

      or not MySql in app is enabled
    fullName: >-
      azure-arm-website.WebApps.getMigrateMySqlStatus(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getMigrateMySqlStatus(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listNetworkFeaturesWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listNetworkFeaturesWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listNetworkFeaturesWithHttpOperationResponse(resourceGroupName, name,
      view, options)
    summary: |-
      Gets all network features used by the app (or deployment slot, if
      specified).

      Gets all network features used by the app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listNetworkFeaturesWithHttpOperationResponse(resourceGroupName,
      name, view, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: view
          type:
            - string
          description: |-
            The type of view. This can either be "summary" or
            "detailed".
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listNetworkFeaturesWithHttpOperationResponse(resourceGroupName,
        name, view, options)
  - uid: 'azure-arm-website.WebApps#listNetworkFeatures'
    id: 'azure-arm-website.WebApps#listNetworkFeatures'
    parent: azure-arm-website.WebApps
    name: >-
      listNetworkFeatures(resourceGroupName, name, view, options,
      optionalCallback)
    summary: |-
      Gets all network features used by the app (or deployment slot, if
      specified).

      Gets all network features used by the app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listNetworkFeatures(resourceGroupName, name,
      view, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: view
          type:
            - string
          description: |-
            The type of view. This can either be "summary" or
            "detailed".
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listNetworkFeatures(resourceGroupName, name, view, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#startWebSiteNetworkTraceWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#startWebSiteNetworkTraceWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      startWebSiteNetworkTraceWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Start capturing network packets for the site.

      Start capturing network packets for the site.
    fullName: >-
      azure-arm-website.WebApps.startWebSiteNetworkTraceWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.durationInSeconds
          type:
            - number
          description: |-
            The duration to keep capturing
            in seconds.
          optional: true
        - id: options.maxFrameLength
          type:
            - number
          description: |-
            The maximum frame length in bytes
            (Optional).
          optional: true
        - id: options.sasUrl
          type:
            - string
          description: The Blob URL to store capture file.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        startWebSiteNetworkTraceWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#startWebSiteNetworkTrace'
    id: 'azure-arm-website.WebApps#startWebSiteNetworkTrace'
    parent: azure-arm-website.WebApps
    name: >-
      startWebSiteNetworkTrace(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Start capturing network packets for the site.

      Start capturing network packets for the site.
    fullName: >-
      azure-arm-website.WebApps.startWebSiteNetworkTrace(resourceGroupName,
      name, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.durationInSeconds
          type:
            - number
          description: |-
            The duration to keep capturing
            in seconds.
          optional: true
        - id: options.maxFrameLength
          type:
            - number
          description: |-
            The maximum frame length in bytes
            (Optional).
          optional: true
        - id: options.sasUrl
          type:
            - string
          description: The Blob URL to store capture file.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function startWebSiteNetworkTrace(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#stopWebSiteNetworkTraceWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#stopWebSiteNetworkTraceWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      stopWebSiteNetworkTraceWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Stop ongoing capturing network packets for the site.

      Stop ongoing capturing network packets for the site.
    fullName: >-
      azure-arm-website.WebApps.stopWebSiteNetworkTraceWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        stopWebSiteNetworkTraceWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#stopWebSiteNetworkTrace'
    id: 'azure-arm-website.WebApps#stopWebSiteNetworkTrace'
    parent: azure-arm-website.WebApps
    name: >-
      stopWebSiteNetworkTrace(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Stop ongoing capturing network packets for the site.

      Stop ongoing capturing network packets for the site.
    fullName: >-
      azure-arm-website.WebApps.stopWebSiteNetworkTrace(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function stopWebSiteNetworkTrace(resourceGroupName, name, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#generateNewSitePublishingPasswordWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#generateNewSitePublishingPasswordWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      generateNewSitePublishingPasswordWithHttpOperationResponse(resourceGroupName,
      name, options)
    summary: |-
      Generates a new publishing password for an app (or deployment slot,
      if specified).

      Generates a new publishing password for an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.generateNewSitePublishingPasswordWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        generateNewSitePublishingPasswordWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#generateNewSitePublishingPassword'
    id: 'azure-arm-website.WebApps#generateNewSitePublishingPassword'
    parent: azure-arm-website.WebApps
    name: >-
      generateNewSitePublishingPassword(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Generates a new publishing password for an app (or deployment slot,
      if specified).

      Generates a new publishing password for an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.generateNewSitePublishingPassword(resourceGroupName,
      name, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function generateNewSitePublishingPassword(resourceGroupName, name,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listPerfMonCountersWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listPerfMonCountersWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listPerfMonCountersWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Gets perfmon counters for web app.

      Gets perfmon counters for web app.
    fullName: >-
      azure-arm-website.WebApps.listPerfMonCountersWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only usages/metrics specified in the

            filter. Filter conforms to odata syntax. Example: $filter=(startTime
            eq

            '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and
            timeGrain

            eq duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listPerfMonCountersWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#listPerfMonCounters'
    id: 'azure-arm-website.WebApps#listPerfMonCounters'
    parent: azure-arm-website.WebApps
    name: 'listPerfMonCounters(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets perfmon counters for web app.

      Gets perfmon counters for web app.
    fullName: >-
      azure-arm-website.WebApps.listPerfMonCounters(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only usages/metrics specified in the

            filter. Filter conforms to odata syntax. Example: $filter=(startTime
            eq

            '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and
            timeGrain

            eq duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listPerfMonCounters(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getSitePhpErrorLogFlagWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getSitePhpErrorLogFlagWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getSitePhpErrorLogFlagWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Gets web app's event logs.

      Gets web app's event logs.
    fullName: >-
      azure-arm-website.WebApps.getSitePhpErrorLogFlagWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getSitePhpErrorLogFlagWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#getSitePhpErrorLogFlag'
    id: 'azure-arm-website.WebApps#getSitePhpErrorLogFlag'
    parent: azure-arm-website.WebApps
    name: 'getSitePhpErrorLogFlag(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets web app's event logs.

      Gets web app's event logs.
    fullName: >-
      azure-arm-website.WebApps.getSitePhpErrorLogFlag(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getSitePhpErrorLogFlag(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listPremierAddOnsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listPremierAddOnsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listPremierAddOnsWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Gets the premier add-ons of an app.

      Gets the premier add-ons of an app.
    fullName: >-
      azure-arm-website.WebApps.listPremierAddOnsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listPremierAddOnsWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#listPremierAddOns'
    id: 'azure-arm-website.WebApps#listPremierAddOns'
    parent: azure-arm-website.WebApps
    name: 'listPremierAddOns(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets the premier add-ons of an app.

      Gets the premier add-ons of an app.
    fullName: >-
      azure-arm-website.WebApps.listPremierAddOns(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listPremierAddOns(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getPremierAddOnWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getPremierAddOnWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getPremierAddOnWithHttpOperationResponse(resourceGroupName, name,
      premierAddOnName, options)
    summary: |-
      Gets a named add-on of an app.

      Gets a named add-on of an app.
    fullName: >-
      azure-arm-website.WebApps.getPremierAddOnWithHttpOperationResponse(resourceGroupName,
      name, premierAddOnName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getPremierAddOnWithHttpOperationResponse(resourceGroupName,
        name, premierAddOnName, options)
  - uid: 'azure-arm-website.WebApps#getPremierAddOn'
    id: 'azure-arm-website.WebApps#getPremierAddOn'
    parent: azure-arm-website.WebApps
    name: >-
      getPremierAddOn(resourceGroupName, name, premierAddOnName, options,
      optionalCallback)
    summary: |-
      Gets a named add-on of an app.

      Gets a named add-on of an app.
    fullName: >-
      azure-arm-website.WebApps.getPremierAddOn(resourceGroupName, name,
      premierAddOnName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getPremierAddOn(resourceGroupName, name, premierAddOnName,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#addPremierAddOnWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#addPremierAddOnWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      addPremierAddOnWithHttpOperationResponse(resourceGroupName, name,
      premierAddOnName, premierAddOn, options)
    summary: |-
      Updates a named add-on of an app.

      Updates a named add-on of an app.
    fullName: >-
      azure-arm-website.WebApps.addPremierAddOnWithHttpOperationResponse(resourceGroupName,
      name, premierAddOnName, premierAddOn, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - object
          description: |-
            A JSON representation of the edited premier
            add-on.
        - id: premierAddOn.sku
          type:
            - string
          description: SKU.
          optional: true
        - id: premierAddOn.product
          type:
            - string
          description: Product.
          optional: true
        - id: premierAddOn.vendor
          type:
            - string
          description: Vendor.
          optional: true
        - id: premierAddOn.premierAddOnName
          type:
            - string
          description: Name.
          optional: true
        - id: premierAddOn.premierAddOnLocation
          type:
            - string
          description: Location.
          optional: true
        - id: premierAddOn.premierAddOnTags
          type:
            - object
          description: Tags.
          optional: true
        - id: premierAddOn.marketplacePublisher
          type:
            - string
          description: Marketplace publisher.
          optional: true
        - id: premierAddOn.marketplaceOffer
          type:
            - string
          description: Marketplace offer.
          optional: true
        - id: premierAddOn.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: premierAddOn.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: premierAddOn.location
          type:
            - string
          description: Resource Location.
        - id: premierAddOn.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: premierAddOn.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function addPremierAddOnWithHttpOperationResponse(resourceGroupName,
        name, premierAddOnName, premierAddOn, options)
  - uid: 'azure-arm-website.WebApps#addPremierAddOn'
    id: 'azure-arm-website.WebApps#addPremierAddOn'
    parent: azure-arm-website.WebApps
    name: >-
      addPremierAddOn(resourceGroupName, name, premierAddOnName, premierAddOn,
      options, optionalCallback)
    summary: |-
      Updates a named add-on of an app.

      Updates a named add-on of an app.
    fullName: >-
      azure-arm-website.WebApps.addPremierAddOn(resourceGroupName, name,
      premierAddOnName, premierAddOn, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - object
          description: |-
            A JSON representation of the edited premier
            add-on.
        - id: premierAddOn.sku
          type:
            - string
          description: SKU.
          optional: true
        - id: premierAddOn.product
          type:
            - string
          description: Product.
          optional: true
        - id: premierAddOn.vendor
          type:
            - string
          description: Vendor.
          optional: true
        - id: premierAddOn.premierAddOnName
          type:
            - string
          description: Name.
          optional: true
        - id: premierAddOn.premierAddOnLocation
          type:
            - string
          description: Location.
          optional: true
        - id: premierAddOn.premierAddOnTags
          type:
            - object
          description: Tags.
          optional: true
        - id: premierAddOn.marketplacePublisher
          type:
            - string
          description: Marketplace publisher.
          optional: true
        - id: premierAddOn.marketplaceOffer
          type:
            - string
          description: Marketplace offer.
          optional: true
        - id: premierAddOn.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: premierAddOn.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: premierAddOn.location
          type:
            - string
          description: Resource Location.
        - id: premierAddOn.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: premierAddOn.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function addPremierAddOn(resourceGroupName, name, premierAddOnName,
        premierAddOn, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#deletePremierAddOnWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deletePremierAddOnWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      deletePremierAddOnWithHttpOperationResponse(resourceGroupName, name,
      premierAddOnName, options)
    summary: |-
      Delete a premier add-on from an app.

      Delete a premier add-on from an app.
    fullName: >-
      azure-arm-website.WebApps.deletePremierAddOnWithHttpOperationResponse(resourceGroupName,
      name, premierAddOnName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deletePremierAddOnWithHttpOperationResponse(resourceGroupName,
        name, premierAddOnName, options)
  - uid: 'azure-arm-website.WebApps#deletePremierAddOn'
    id: 'azure-arm-website.WebApps#deletePremierAddOn'
    parent: azure-arm-website.WebApps
    name: >-
      deletePremierAddOn(resourceGroupName, name, premierAddOnName, options,
      optionalCallback)
    summary: |-
      Delete a premier add-on from an app.

      Delete a premier add-on from an app.
    fullName: >-
      azure-arm-website.WebApps.deletePremierAddOn(resourceGroupName, name,
      premierAddOnName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deletePremierAddOn(resourceGroupName, name, premierAddOnName,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listPublishingProfileXmlWithSecretsWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listPublishingProfileXmlWithSecretsWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listPublishingProfileXmlWithSecretsWithHttpOperationResponse(resourceGroupName,
      name, options)
    summary: |-
      Gets the publishing profile for an app (or deployment slot, if
      specified).

      Gets the publishing profile for an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listPublishingProfileXmlWithSecretsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.format
          type:
            - string
          description: |-
            Name of the format. Valid values are:
            FileZilla3
            WebDeploy -- default
            Ftp. Possible values include: 'FileZilla3', 'WebDeploy', 'Ftp'
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listPublishingProfileXmlWithSecretsWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#listPublishingProfileXmlWithSecrets'
    id: 'azure-arm-website.WebApps#listPublishingProfileXmlWithSecrets'
    parent: azure-arm-website.WebApps
    name: >-
      listPublishingProfileXmlWithSecrets(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Gets the publishing profile for an app (or deployment slot, if
      specified).

      Gets the publishing profile for an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listPublishingProfileXmlWithSecrets(resourceGroupName,
      name, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.format
          type:
            - string
          description: |-
            Name of the format. Valid values are:
            FileZilla3
            WebDeploy -- default
            Ftp. Possible values include: 'FileZilla3', 'WebDeploy', 'Ftp'
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listPublishingProfileXmlWithSecrets(resourceGroupName, name,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#recoverWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#recoverWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      recoverWithHttpOperationResponse(resourceGroupName, name, recoveryEntity,
      options)
    summary: |-
      Recovers a deleted web app.

      Recovers a deleted web app.
    fullName: >-
      azure-arm-website.WebApps.recoverWithHttpOperationResponse(resourceGroupName,
      name, recoveryEntity, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: recoveryEntity
          type:
            - object
          description: |-
            Snapshot data used for web app recovery.
            Snapshot information can be obtained by calling GetDeletedSites or
            GetSiteSnapshots API.
        - id: recoveryEntity.snapshotTime
          type:
            - date
          description: |-
            Point in time in which the app
            recovery should be attempted.
          optional: true
        - id: recoveryEntity.siteName
          type:
            - string
          description: >-
            [Optional] Destination app name

            into which app should be recovered. This is case when new app should
            be

            created instead.
          optional: true
        - id: recoveryEntity.slotName
          type:
            - string
          description: |-
            [Optional] Destination app slot
            name into which app should be recovered.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function recoverWithHttpOperationResponse(resourceGroupName, name,
        recoveryEntity, options)
  - uid: 'azure-arm-website.WebApps#recover'
    id: 'azure-arm-website.WebApps#recover'
    parent: azure-arm-website.WebApps
    name: >-
      recover(resourceGroupName, name, recoveryEntity, options,
      optionalCallback)
    summary: |-
      Recovers a deleted web app.

      Recovers a deleted web app.
    fullName: >-
      azure-arm-website.WebApps.recover(resourceGroupName, name, recoveryEntity,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: recoveryEntity
          type:
            - object
          description: |-
            Snapshot data used for web app recovery.
            Snapshot information can be obtained by calling GetDeletedSites or
            GetSiteSnapshots API.
        - id: recoveryEntity.snapshotTime
          type:
            - date
          description: |-
            Point in time in which the app
            recovery should be attempted.
          optional: true
        - id: recoveryEntity.siteName
          type:
            - string
          description: >-
            [Optional] Destination app name

            into which app should be recovered. This is case when new app should
            be

            created instead.
          optional: true
        - id: recoveryEntity.slotName
          type:
            - string
          description: |-
            [Optional] Destination app slot
            name into which app should be recovered.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function recover(resourceGroupName, name, recoveryEntity, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#resetProductionSlotConfigWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#resetProductionSlotConfigWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      resetProductionSlotConfigWithHttpOperationResponse(resourceGroupName,
      name, options)
    summary: |-
      Resets the configuration settings of the current slot if they were
      previously modified by calling the API with POST.

      Resets the configuration settings of the current slot if they were
      previously modified by calling the API with POST.
    fullName: >-
      azure-arm-website.WebApps.resetProductionSlotConfigWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        resetProductionSlotConfigWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#resetProductionSlotConfig'
    id: 'azure-arm-website.WebApps#resetProductionSlotConfig'
    parent: azure-arm-website.WebApps
    name: >-
      resetProductionSlotConfig(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Resets the configuration settings of the current slot if they were
      previously modified by calling the API with POST.

      Resets the configuration settings of the current slot if they were
      previously modified by calling the API with POST.
    fullName: >-
      azure-arm-website.WebApps.resetProductionSlotConfig(resourceGroupName,
      name, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function resetProductionSlotConfig(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#restartWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#restartWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'restartWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Restarts an app (or deployment slot, if specified).

      Restarts an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.restartWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.softRestart
          type:
            - boolean
          description: >-
            Specify true to apply the

            configuration settings and restarts the app only if necessary. By
            default,

            the API always restarts and reprovisions the app.
          optional: true
        - id: options.synchronous
          type:
            - boolean
          description: |-
            Specify true to block until the app
            is restarted. By default, it is set to false, and the API responds
            immediately (asynchronous).
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function restartWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#restart'
    id: 'azure-arm-website.WebApps#restart'
    parent: azure-arm-website.WebApps
    name: 'restart(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Restarts an app (or deployment slot, if specified).

      Restarts an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.restart(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.softRestart
          type:
            - boolean
          description: >-
            Specify true to apply the

            configuration settings and restarts the app only if necessary. By
            default,

            the API always restarts and reprovisions the app.
          optional: true
        - id: options.synchronous
          type:
            - boolean
          description: |-
            Specify true to block until the app
            is restarted. By default, it is set to false, and the API responds
            immediately (asynchronous).
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function restart(resourceGroupName, name, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#listSlotsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listSlotsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listSlotsWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Gets an app's deployment slots.

      Gets an app's deployment slots.
    fullName: >-
      azure-arm-website.WebApps.listSlotsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listSlotsWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#listSlots'
    id: 'azure-arm-website.WebApps#listSlots'
    parent: azure-arm-website.WebApps
    name: 'listSlots(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets an app's deployment slots.

      Gets an app's deployment slots.
    fullName: >-
      azure-arm-website.WebApps.listSlots(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listSlots(resourceGroupName, name, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#getSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'getSlotWithHttpOperationResponse(resourceGroupName, name, slot, options)'
    summary: |-
      Gets the details of a web, mobile, or API app.

      Gets the details of a web, mobile, or API app.
    fullName: >-
      azure-arm-website.WebApps.getSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. By default, this API
            returns the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getSlotWithHttpOperationResponse(resourceGroupName, name, slot,
        options)
  - uid: 'azure-arm-website.WebApps#getSlot'
    id: 'azure-arm-website.WebApps#getSlot'
    parent: azure-arm-website.WebApps
    name: 'getSlot(resourceGroupName, name, slot, options, optionalCallback)'
    summary: |-
      Gets the details of a web, mobile, or API app.

      Gets the details of a web, mobile, or API app.
    fullName: >-
      azure-arm-website.WebApps.getSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. By default, this API
            returns the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#createOrUpdateSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#createOrUpdateSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateSlotWithHttpOperationResponse(resourceGroupName, name,
      siteEnvelope, slot, options)
    summary: |-
      Creates a new web, mobile, or API app in an existing resource
      group, or updates an existing app.

      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateSlotWithHttpOperationResponse(resourceGroupName,
      name, siteEnvelope, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: |-
            Unique name of the app to create or update. To create
            or update a deployment slot, use the {slot} parameter.
        - id: siteEnvelope
          type:
            - object
          description: |-
            A JSON representation of the app properties.
            See example.
        - id: siteEnvelope.enabled
          type:
            - boolean
          description: >-
            <code>true</code> if the app is

            enabled; otherwise, <code>false</code>. Setting this value to false
            disables

            the app (takes the app offline).
          optional: true
        - id: siteEnvelope.hostNameSslStates
          type:
            - array
          description: |-
            Hostname SSL states are used
            to manage the SSL bindings for app's hostnames.
          optional: true
        - id: siteEnvelope.serverFarmId
          type:
            - string
          description: >-
            Resource ID of the associated

            App Service plan, formatted as:

            "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
          optional: true
        - id: siteEnvelope.reserved
          type:
            - boolean
          description: |-
            <code>true</code> if reserved;
            otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig
          type:
            - object
          description: Configuration of the app.
          optional: true
        - id: siteEnvelope.siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteEnvelope.siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteEnvelope.siteConfig.netFrameworkVersion
          type:
            - string
          description: |-
            .NET Framework
            version.
          optional: true
        - id: siteEnvelope.siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteEnvelope.siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteEnvelope.siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteEnvelope.siteConfig.linuxFxVersion
          type:
            - string
          description: |-
            Linux App Framework
            and version
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if request tracing is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request
            tracing expiration time.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if remote debugging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote
            debugging version.
          optional: true
        - id: siteEnvelope.siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if HTTP logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs
            directory size limit.
          optional: true
        - id: siteEnvelope.siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if detailed error logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.publishingUsername
          type:
            - string
          description: |-
            Publishing user
            name.
          optional: true
        - id: siteEnvelope.siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteEnvelope.siteConfig.connectionStrings
          type:
            - array
          description: |-
            Connection
            strings.
          optional: true
        - id: siteEnvelope.siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteEnvelope.siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteEnvelope.siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values

            include: 'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub',
            'CodePlexGit',

            'CodePlexHg', 'BitbucketGit', 'BitbucketHg', 'ExternalGit',
            'ExternalHg',

            'OneDrive', 'VSO'
          optional: true
        - id: siteEnvelope.siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use 32-bit worker process; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.webSocketsEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if WebSocket is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if
            Always On is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainerVersion
          type:
            - string
          description: |-
            Java
            container version.
          optional: true
        - id: siteEnvelope.siteConfig.appCommandLine
          type:
            - string
          description: |-
            App command line to
            launch.
          optional: true
        - id: siteEnvelope.siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed
            pipeline mode. Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteEnvelope.siteConfig.virtualApplications
          type:
            - array
          description: |-
            Virtual
            applications.
          optional: true
        - id: siteEnvelope.siteConfig.loadBalancing
          type:
            - string
          description: |-
            Site load balancing.
            Possible values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteEnvelope.siteConfig.experiments
          type:
            - object
          description: |-
            This is work around
            for polymophic types.
          optional: true
        - id: siteEnvelope.siteConfig.experiments.rampUpRules
          type:
            - array
          description: |-
            List of
            ramp-up rules.
          optional: true
        - id: siteEnvelope.siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum
            allowed CPU usage percentage.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum
            allowed memory usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum
            allowed disk size usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if Auto Heal is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions
            that describe when to execute the auto-heal actions.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A
            rule based on total requests.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: |-
            Time
            interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: A rule based on status codes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule based
            on request execution time.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: |-
            Time
            taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to
            be executed when a rule is triggered.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined action to be taken. Possible values include: 'Recycle',
            'LogEvent', 'CustomAction'
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: Custom action to be taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: |-
            Executable
            to be run.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteEnvelope.siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteEnvelope.siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteEnvelope.siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing
            (CORS) settings.
          optional: true
        - id: siteEnvelope.siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets
            the list of origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteEnvelope.siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteEnvelope.siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a
            flag indicating whether the Push endpoint is enabled.
        - id: siteEnvelope.siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of tags that are whitelisted for use
            by the

            push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: |-
            Gets or
            sets a JSON string containing a list of tags that require user
            authentication to be used in the push registration endpoint.
            Tags can consist of alphanumeric characters and the following:
            '_', '@', '#', '.', ':', '-'.
            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteEnvelope.siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of dynamic tags that will be
            evaluated from

            user claims in the push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about
            the formal API definition for the app.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the
            API definition.
          optional: true
        - id: siteEnvelope.siteConfig.autoSwapSlotName
          type:
            - string
          description: |-
            Auto-swap slot
            name.
          optional: true
        - id: siteEnvelope.siteConfig.localMySqlEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to enable local MySQL; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.ipSecurityRestrictions
          type:
            - array
          description: |-
            IP security
            restrictions.
          optional: true
        - id: siteEnvelope.scmSiteAlsoStopped
          type:
            - boolean
          description: >-
            <code>true</code> to stop

            SCM (KUDU) site when the app is stopped; otherwise,
            <code>false</code>. The

            default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile
          type:
            - object
          description: |-
            App Service
            Environment to use for the app.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile.id
          type:
            - string
          description: |-
            Resource ID of
            the App Service Environment.
          optional: true
        - id: siteEnvelope.microService
          type:
            - string
          description: |-
            Micro services like apps, logic
            apps.
          optional: true
        - id: siteEnvelope.gatewaySiteName
          type:
            - string
          description: |-
            Name of gateway app
            associated with the app.
          optional: true
        - id: siteEnvelope.clientAffinityEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client affinity; <code>false</code> to stop sending session
            affinity

            cookies, which route client requests in the same session to the same

            instance. Default is <code>true</code>.
          optional: true
        - id: siteEnvelope.clientCertEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client certificate authentication (TLS mutual
            authentication);

            otherwise, <code>false</code>. Default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostNamesDisabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            disable the public hostnames of the app; otherwise,
            <code>false</code>.

            If <code>true</code>, the app is only accessible via API management
            process.
          optional: true
        - id: siteEnvelope.containerSize
          type:
            - number
          description: Size of the function container.
          optional: true
        - id: siteEnvelope.dailyMemoryTimeQuota
          type:
            - number
          description: |-
            Maximum allowed daily
            memory-time quota (applicable on dynamic apps only).
          optional: true
        - id: siteEnvelope.cloningInfo
          type:
            - object
          description: |-
            If specified during app creation,
            the app is cloned from a source app.
          optional: true
        - id: siteEnvelope.cloningInfo.correlationId
          type:
            - string
          description: |-
            Correlation ID of
            cloning operation. This ID ties multiple cloning operations
            together to use the same snapshot.
          optional: true
        - id: siteEnvelope.cloningInfo.overwrite
          type:
            - boolean
          description: |-
            <code>true</code> to
            overwrite destination app; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneCustomHostNames
          type:
            - boolean
          description: >-
            <code>true</code> to clone custom hostnames from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneSourceControl
          type:
            - boolean
          description: >-
            <code>true</code> to clone source control from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.sourceWebAppId
          type:
            - string
          description: >-
            ARM resource ID of

            the source app. App resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}

            for production slots and

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}

            for other slots.
        - id: siteEnvelope.cloningInfo.hostingEnvironment
          type:
            - string
          description: |-
            App Service
            Environment.
          optional: true
        - id: siteEnvelope.cloningInfo.appSettingsOverrides
          type:
            - object
          description: >-
            Application

            setting overrides for cloned app. If specified, these settings
            override the

            settings cloned

            from source app. Otherwise, application settings from source app are

            retained.
          optional: true
        - id: siteEnvelope.cloningInfo.configureLoadBalancing
          type:
            - boolean
          description: >-
            <code>true</code> to configure load balancing for source and
            destination

            app.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileId
          type:
            - string
          description: >-
            ARM

            resource ID of the Traffic Manager profile to use, if it exists.
            Traffic

            Manager resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileName
          type:
            - string
          description: >-
            Name of

            Traffic Manager profile to create. This is only needed if Traffic
            Manager

            profile does not already exist.
          optional: true
        - id: siteEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: siteEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot to create or update. By
            default, this API attempts to create or modify the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.skipDnsRegistration
          type:
            - boolean
          description: |-
            If true web app hostname is
            not registered with DNS on creation. This parameter is
            only used for app creation
          optional: true
        - id: options.skipCustomDomainVerification
          type:
            - boolean
          description: >-
            If true, custom (non

            *.azurewebsites.net) domains associated with web app are not
            verified.
          optional: true
        - id: options.forceDnsRegistration
          type:
            - boolean
          description: |-
            If true, web app hostname is
            force registered with DNS
          optional: true
        - id: options.ttlInSeconds
          type:
            - string
          description: |-
            Time to live in seconds for web app's
            default domain name
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateSlotWithHttpOperationResponse(resourceGroupName,
        name, siteEnvelope, slot, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateSlot'
    id: 'azure-arm-website.WebApps#createOrUpdateSlot'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateSlot(resourceGroupName, name, siteEnvelope, slot, options,
      optionalCallback)
    summary: |-
      Creates a new web, mobile, or API app in an existing resource
      group, or updates an existing app.

      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateSlot(resourceGroupName, name,
      siteEnvelope, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: |-
            Unique name of the app to create or update. To create
            or update a deployment slot, use the {slot} parameter.
        - id: siteEnvelope
          type:
            - object
          description: |-
            A JSON representation of the app properties.
            See example.
        - id: siteEnvelope.enabled
          type:
            - boolean
          description: >-
            <code>true</code> if the app is

            enabled; otherwise, <code>false</code>. Setting this value to false
            disables

            the app (takes the app offline).
          optional: true
        - id: siteEnvelope.hostNameSslStates
          type:
            - array
          description: |-
            Hostname SSL states are used
            to manage the SSL bindings for app's hostnames.
          optional: true
        - id: siteEnvelope.serverFarmId
          type:
            - string
          description: >-
            Resource ID of the associated

            App Service plan, formatted as:

            "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
          optional: true
        - id: siteEnvelope.reserved
          type:
            - boolean
          description: |-
            <code>true</code> if reserved;
            otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig
          type:
            - object
          description: Configuration of the app.
          optional: true
        - id: siteEnvelope.siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteEnvelope.siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteEnvelope.siteConfig.netFrameworkVersion
          type:
            - string
          description: |-
            .NET Framework
            version.
          optional: true
        - id: siteEnvelope.siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteEnvelope.siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteEnvelope.siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteEnvelope.siteConfig.linuxFxVersion
          type:
            - string
          description: |-
            Linux App Framework
            and version
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if request tracing is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request
            tracing expiration time.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if remote debugging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote
            debugging version.
          optional: true
        - id: siteEnvelope.siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if HTTP logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs
            directory size limit.
          optional: true
        - id: siteEnvelope.siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if detailed error logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.publishingUsername
          type:
            - string
          description: |-
            Publishing user
            name.
          optional: true
        - id: siteEnvelope.siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteEnvelope.siteConfig.connectionStrings
          type:
            - array
          description: |-
            Connection
            strings.
          optional: true
        - id: siteEnvelope.siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteEnvelope.siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteEnvelope.siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values

            include: 'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub',
            'CodePlexGit',

            'CodePlexHg', 'BitbucketGit', 'BitbucketHg', 'ExternalGit',
            'ExternalHg',

            'OneDrive', 'VSO'
          optional: true
        - id: siteEnvelope.siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use 32-bit worker process; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.webSocketsEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if WebSocket is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if
            Always On is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainerVersion
          type:
            - string
          description: |-
            Java
            container version.
          optional: true
        - id: siteEnvelope.siteConfig.appCommandLine
          type:
            - string
          description: |-
            App command line to
            launch.
          optional: true
        - id: siteEnvelope.siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed
            pipeline mode. Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteEnvelope.siteConfig.virtualApplications
          type:
            - array
          description: |-
            Virtual
            applications.
          optional: true
        - id: siteEnvelope.siteConfig.loadBalancing
          type:
            - string
          description: |-
            Site load balancing.
            Possible values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteEnvelope.siteConfig.experiments
          type:
            - object
          description: |-
            This is work around
            for polymophic types.
          optional: true
        - id: siteEnvelope.siteConfig.experiments.rampUpRules
          type:
            - array
          description: |-
            List of
            ramp-up rules.
          optional: true
        - id: siteEnvelope.siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum
            allowed CPU usage percentage.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum
            allowed memory usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum
            allowed disk size usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if Auto Heal is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions
            that describe when to execute the auto-heal actions.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A
            rule based on total requests.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: |-
            Time
            interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: A rule based on status codes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule based
            on request execution time.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: |-
            Time
            taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to
            be executed when a rule is triggered.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined action to be taken. Possible values include: 'Recycle',
            'LogEvent', 'CustomAction'
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: Custom action to be taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: |-
            Executable
            to be run.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteEnvelope.siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteEnvelope.siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteEnvelope.siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing
            (CORS) settings.
          optional: true
        - id: siteEnvelope.siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets
            the list of origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteEnvelope.siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteEnvelope.siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a
            flag indicating whether the Push endpoint is enabled.
        - id: siteEnvelope.siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of tags that are whitelisted for use
            by the

            push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: |-
            Gets or
            sets a JSON string containing a list of tags that require user
            authentication to be used in the push registration endpoint.
            Tags can consist of alphanumeric characters and the following:
            '_', '@', '#', '.', ':', '-'.
            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteEnvelope.siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of dynamic tags that will be
            evaluated from

            user claims in the push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about
            the formal API definition for the app.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the
            API definition.
          optional: true
        - id: siteEnvelope.siteConfig.autoSwapSlotName
          type:
            - string
          description: |-
            Auto-swap slot
            name.
          optional: true
        - id: siteEnvelope.siteConfig.localMySqlEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to enable local MySQL; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.ipSecurityRestrictions
          type:
            - array
          description: |-
            IP security
            restrictions.
          optional: true
        - id: siteEnvelope.scmSiteAlsoStopped
          type:
            - boolean
          description: >-
            <code>true</code> to stop

            SCM (KUDU) site when the app is stopped; otherwise,
            <code>false</code>. The

            default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile
          type:
            - object
          description: |-
            App Service
            Environment to use for the app.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile.id
          type:
            - string
          description: |-
            Resource ID of
            the App Service Environment.
          optional: true
        - id: siteEnvelope.microService
          type:
            - string
          description: |-
            Micro services like apps, logic
            apps.
          optional: true
        - id: siteEnvelope.gatewaySiteName
          type:
            - string
          description: |-
            Name of gateway app
            associated with the app.
          optional: true
        - id: siteEnvelope.clientAffinityEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client affinity; <code>false</code> to stop sending session
            affinity

            cookies, which route client requests in the same session to the same

            instance. Default is <code>true</code>.
          optional: true
        - id: siteEnvelope.clientCertEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client certificate authentication (TLS mutual
            authentication);

            otherwise, <code>false</code>. Default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostNamesDisabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            disable the public hostnames of the app; otherwise,
            <code>false</code>.

            If <code>true</code>, the app is only accessible via API management
            process.
          optional: true
        - id: siteEnvelope.containerSize
          type:
            - number
          description: Size of the function container.
          optional: true
        - id: siteEnvelope.dailyMemoryTimeQuota
          type:
            - number
          description: |-
            Maximum allowed daily
            memory-time quota (applicable on dynamic apps only).
          optional: true
        - id: siteEnvelope.cloningInfo
          type:
            - object
          description: |-
            If specified during app creation,
            the app is cloned from a source app.
          optional: true
        - id: siteEnvelope.cloningInfo.correlationId
          type:
            - string
          description: |-
            Correlation ID of
            cloning operation. This ID ties multiple cloning operations
            together to use the same snapshot.
          optional: true
        - id: siteEnvelope.cloningInfo.overwrite
          type:
            - boolean
          description: |-
            <code>true</code> to
            overwrite destination app; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneCustomHostNames
          type:
            - boolean
          description: >-
            <code>true</code> to clone custom hostnames from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneSourceControl
          type:
            - boolean
          description: >-
            <code>true</code> to clone source control from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.sourceWebAppId
          type:
            - string
          description: >-
            ARM resource ID of

            the source app. App resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}

            for production slots and

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}

            for other slots.
        - id: siteEnvelope.cloningInfo.hostingEnvironment
          type:
            - string
          description: |-
            App Service
            Environment.
          optional: true
        - id: siteEnvelope.cloningInfo.appSettingsOverrides
          type:
            - object
          description: >-
            Application

            setting overrides for cloned app. If specified, these settings
            override the

            settings cloned

            from source app. Otherwise, application settings from source app are

            retained.
          optional: true
        - id: siteEnvelope.cloningInfo.configureLoadBalancing
          type:
            - boolean
          description: >-
            <code>true</code> to configure load balancing for source and
            destination

            app.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileId
          type:
            - string
          description: >-
            ARM

            resource ID of the Traffic Manager profile to use, if it exists.
            Traffic

            Manager resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileName
          type:
            - string
          description: >-
            Name of

            Traffic Manager profile to create. This is only needed if Traffic
            Manager

            profile does not already exist.
          optional: true
        - id: siteEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: siteEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot to create or update. By
            default, this API attempts to create or modify the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.skipDnsRegistration
          type:
            - boolean
          description: |-
            If true web app hostname is
            not registered with DNS on creation. This parameter is
            only used for app creation
          optional: true
        - id: options.skipCustomDomainVerification
          type:
            - boolean
          description: >-
            If true, custom (non

            *.azurewebsites.net) domains associated with web app are not
            verified.
          optional: true
        - id: options.forceDnsRegistration
          type:
            - boolean
          description: |-
            If true, web app hostname is
            force registered with DNS
          optional: true
        - id: options.ttlInSeconds
          type:
            - string
          description: |-
            Time to live in seconds for web app's
            default domain name
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateSlot(resourceGroupName, name, siteEnvelope, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#deleteSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deleteSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      deleteSlotWithHttpOperationResponse(resourceGroupName, name, slot,
      options)
    summary: |-
      Deletes a web, mobile, or API app, or one of the deployment slots.

      Deletes a web, mobile, or API app, or one of the deployment slots.
    fullName: >-
      azure-arm-website.WebApps.deleteSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app to delete.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot to delete. By default, the
            API deletes the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.deleteMetrics
          type:
            - boolean
          description: |-
            If true, web app metrics are also
            deleted
          optional: true
        - id: options.deleteEmptyServerFarm
          type:
            - boolean
          description: >-
            Specify true if the App

            Service plan will be empty after app deletion and you want to delete
            the

            empty App Service plan. By default, the empty App Service plan is
            not

            deleted.
          optional: true
        - id: options.skipDnsRegistration
          type:
            - boolean
          description: |-
            If true, DNS registration is
            skipped
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteSlotWithHttpOperationResponse(resourceGroupName, name,
        slot, options)
  - uid: 'azure-arm-website.WebApps#deleteSlot'
    id: 'azure-arm-website.WebApps#deleteSlot'
    parent: azure-arm-website.WebApps
    name: 'deleteSlot(resourceGroupName, name, slot, options, optionalCallback)'
    summary: |-
      Deletes a web, mobile, or API app, or one of the deployment slots.

      Deletes a web, mobile, or API app, or one of the deployment slots.
    fullName: >-
      azure-arm-website.WebApps.deleteSlot(resourceGroupName, name, slot,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app to delete.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot to delete. By default, the
            API deletes the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.deleteMetrics
          type:
            - boolean
          description: |-
            If true, web app metrics are also
            deleted
          optional: true
        - id: options.deleteEmptyServerFarm
          type:
            - boolean
          description: >-
            Specify true if the App

            Service plan will be empty after app deletion and you want to delete
            the

            empty App Service plan. By default, the empty App Service plan is
            not

            deleted.
          optional: true
        - id: options.skipDnsRegistration
          type:
            - boolean
          description: |-
            If true, DNS registration is
            skipped
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#analyzeCustomHostnameSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#analyzeCustomHostnameSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      analyzeCustomHostnameSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Analyze a custom hostname.

      Analyze a custom hostname.
    fullName: >-
      azure-arm-website.WebApps.analyzeCustomHostnameSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.hostName
          type:
            - string
          description: Custom hostname
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        analyzeCustomHostnameSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#analyzeCustomHostnameSlot'
    id: 'azure-arm-website.WebApps#analyzeCustomHostnameSlot'
    parent: azure-arm-website.WebApps
    name: >-
      analyzeCustomHostnameSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Analyze a custom hostname.

      Analyze a custom hostname.
    fullName: >-
      azure-arm-website.WebApps.analyzeCustomHostnameSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.hostName
          type:
            - string
          description: Custom hostname
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function analyzeCustomHostnameSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#applySlotConfigurationSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#applySlotConfigurationSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      applySlotConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, slotSwapEntity, slot, options)
    summary: |-
      Applies the configuration settings from the target slot onto the
      current slot.

      Applies the configuration settings from the target slot onto the current
      slot.
    fullName: >-
      azure-arm-website.WebApps.applySlotConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, slotSwapEntity, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: slot
          type:
            - string
          description: |-
            Name of the source slot. If a slot is not specified,
            the production slot is used as the source slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        applySlotConfigurationSlotWithHttpOperationResponse(resourceGroupName,
        name, slotSwapEntity, slot, options)
  - uid: 'azure-arm-website.WebApps#applySlotConfigurationSlot'
    id: 'azure-arm-website.WebApps#applySlotConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: >-
      applySlotConfigurationSlot(resourceGroupName, name, slotSwapEntity, slot,
      options, optionalCallback)
    summary: |-
      Applies the configuration settings from the target slot onto the
      current slot.

      Applies the configuration settings from the target slot onto the current
      slot.
    fullName: >-
      azure-arm-website.WebApps.applySlotConfigurationSlot(resourceGroupName,
      name, slotSwapEntity, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: slot
          type:
            - string
          description: |-
            Name of the source slot. If a slot is not specified,
            the production slot is used as the source slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function applySlotConfigurationSlot(resourceGroupName, name,
        slotSwapEntity, slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#backupSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#backupSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      backupSlotWithHttpOperationResponse(resourceGroupName, name, request,
      slot, options)
    summary: |-
      Creates a backup of an app.

      Creates a backup of an app.
    fullName: >-
      azure-arm-website.WebApps.backupSlotWithHttpOperationResponse(resourceGroupName,
      name, request, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - object
          description: |-
            Backup configuration. You can use the JSON response
            from the POST action as input here.
        - id: request.backupRequestName
          type:
            - string
          description: Name of the backup.
          optional: true
        - id: request.enabled
          type:
            - boolean
          description: >-
            True if the backup schedule is enabled

            (must be included in that case), false if the backup schedule should
            be

            disabled.
          optional: true
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.backupSchedule
          type:
            - object
          description: |-
            Schedule for the backup if it is
            executed periodically.
          optional: true
        - id: request.backupSchedule.frequencyInterval
          type:
            - number
          description: >-
            How often should be

            the backup executed (e.g. for weekly backup, this should be set to 7
            and

            FrequencyUnit should be set to Day)
        - id: request.backupSchedule.frequencyUnit
          type:
            - string
          description: >-
            The unit of time for

            how often should be the backup executed (e.g. for weekly backup,
            this should

            be set to Day and FrequencyInterval should be set to 7). Possible
            values

            include: 'Day', 'Hour'
        - id: request.backupSchedule.keepAtLeastOneBackup
          type:
            - boolean
          description: >-
            True if the

            retention policy should always keep at least one backup in the
            storage

            account, regardless how old it is; false otherwise.
        - id: request.backupSchedule.retentionPeriodInDays
          type:
            - number
          description: |-
            After how many
            days backups should be deleted.
        - id: request.backupSchedule.startTime
          type:
            - date
          description: |-
            When the schedule should
            start working.
          optional: true
        - id: request.databases
          type:
            - array
          description: Databases included in the backup.
          optional: true
        - id: request.backupRequestType
          type:
            - string
          description: |-
            Type of the backup. Possible
            values include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will create a backup for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function backupSlotWithHttpOperationResponse(resourceGroupName, name,
        request, slot, options)
  - uid: 'azure-arm-website.WebApps#backupSlot'
    id: 'azure-arm-website.WebApps#backupSlot'
    parent: azure-arm-website.WebApps
    name: >-
      backupSlot(resourceGroupName, name, request, slot, options,
      optionalCallback)
    summary: |-
      Creates a backup of an app.

      Creates a backup of an app.
    fullName: >-
      azure-arm-website.WebApps.backupSlot(resourceGroupName, name, request,
      slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - object
          description: |-
            Backup configuration. You can use the JSON response
            from the POST action as input here.
        - id: request.backupRequestName
          type:
            - string
          description: Name of the backup.
          optional: true
        - id: request.enabled
          type:
            - boolean
          description: >-
            True if the backup schedule is enabled

            (must be included in that case), false if the backup schedule should
            be

            disabled.
          optional: true
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.backupSchedule
          type:
            - object
          description: |-
            Schedule for the backup if it is
            executed periodically.
          optional: true
        - id: request.backupSchedule.frequencyInterval
          type:
            - number
          description: >-
            How often should be

            the backup executed (e.g. for weekly backup, this should be set to 7
            and

            FrequencyUnit should be set to Day)
        - id: request.backupSchedule.frequencyUnit
          type:
            - string
          description: >-
            The unit of time for

            how often should be the backup executed (e.g. for weekly backup,
            this should

            be set to Day and FrequencyInterval should be set to 7). Possible
            values

            include: 'Day', 'Hour'
        - id: request.backupSchedule.keepAtLeastOneBackup
          type:
            - boolean
          description: >-
            True if the

            retention policy should always keep at least one backup in the
            storage

            account, regardless how old it is; false otherwise.
        - id: request.backupSchedule.retentionPeriodInDays
          type:
            - number
          description: |-
            After how many
            days backups should be deleted.
        - id: request.backupSchedule.startTime
          type:
            - date
          description: |-
            When the schedule should
            start working.
          optional: true
        - id: request.databases
          type:
            - array
          description: Databases included in the backup.
          optional: true
        - id: request.backupRequestType
          type:
            - string
          description: |-
            Type of the backup. Possible
            values include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will create a backup for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function backupSlot(resourceGroupName, name, request, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listBackupsSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listBackupsSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listBackupsSlotWithHttpOperationResponse(resourceGroupName, name, slot,
      options)
    summary: |-
      Gets existing backups of an app.

      Gets existing backups of an app.
    fullName: >-
      azure-arm-website.WebApps.listBackupsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will get backups of the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listBackupsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listBackupsSlot'
    id: 'azure-arm-website.WebApps#listBackupsSlot'
    parent: azure-arm-website.WebApps
    name: 'listBackupsSlot(resourceGroupName, name, slot, options, optionalCallback)'
    summary: |-
      Gets existing backups of an app.

      Gets existing backups of an app.
    fullName: >-
      azure-arm-website.WebApps.listBackupsSlot(resourceGroupName, name, slot,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will get backups of the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listBackupsSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#discoverRestoreSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#discoverRestoreSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      discoverRestoreSlotWithHttpOperationResponse(resourceGroupName, name,
      request, slot, options)
    summary: |-
      Discovers an existing app backup that can be restored from a blob
      in Azure storage.

      Discovers an existing app backup that can be restored from a blob in Azure
      storage.
    fullName: >-
      azure-arm-website.WebApps.discoverRestoreSlotWithHttpOperationResponse(resourceGroupName,
      name, request, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - object
          description: |-
            A RestoreRequest object that includes Azure storage
            URL and blog name for discovery of backup.
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.blobName
          type:
            - string
          description: Name of a blob which contains the backup.
          optional: true
        - id: request.overwrite
          type:
            - boolean
          description: >-
            <code>true</code> if the restore

            operation can overwrite target app; otherwise, <code>false</code>.

            <code>true</code> is needed if trying to restore over an existing
            app.
          optional: true
        - id: request.siteName
          type:
            - string
          description: Name of an app.
          optional: true
        - id: request.databases
          type:
            - array
          description: >-
            Collection of databases which should be

            restored. This list has to match the list of databases included in
            the

            backup.
          optional: true
        - id: request.ignoreConflictingHostNames
          type:
            - boolean
          description: >-
            Changes a logic when

            restoring an app with custom domains. <code>true</code> to remove
            custom

            domains automatically. If <code>false</code>, custom domains are
            added to

            the app's object when it is being restored, but that might fail due
            to

            conflicts during the operation.
          optional: true
        - id: request.operationType
          type:
            - string
          description: |-
            Operation type. Possible values
            include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.adjustConnectionStrings
          type:
            - boolean
          description: |-
            <code>true</code> if
            SiteConfig.ConnectionStrings should be set in new app; otherwise,
            <code>false</code>.
          optional: true
        - id: request.hostingEnvironment
          type:
            - string
          description: >-
            App Service Environment name,

            if needed (only when restoring an app to an App Service
            Environment).
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will perform discovery for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function discoverRestoreSlotWithHttpOperationResponse(resourceGroupName,
        name, request, slot, options)
  - uid: 'azure-arm-website.WebApps#discoverRestoreSlot'
    id: 'azure-arm-website.WebApps#discoverRestoreSlot'
    parent: azure-arm-website.WebApps
    name: >-
      discoverRestoreSlot(resourceGroupName, name, request, slot, options,
      optionalCallback)
    summary: |-
      Discovers an existing app backup that can be restored from a blob
      in Azure storage.

      Discovers an existing app backup that can be restored from a blob in Azure
      storage.
    fullName: >-
      azure-arm-website.WebApps.discoverRestoreSlot(resourceGroupName, name,
      request, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - object
          description: |-
            A RestoreRequest object that includes Azure storage
            URL and blog name for discovery of backup.
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.blobName
          type:
            - string
          description: Name of a blob which contains the backup.
          optional: true
        - id: request.overwrite
          type:
            - boolean
          description: >-
            <code>true</code> if the restore

            operation can overwrite target app; otherwise, <code>false</code>.

            <code>true</code> is needed if trying to restore over an existing
            app.
          optional: true
        - id: request.siteName
          type:
            - string
          description: Name of an app.
          optional: true
        - id: request.databases
          type:
            - array
          description: >-
            Collection of databases which should be

            restored. This list has to match the list of databases included in
            the

            backup.
          optional: true
        - id: request.ignoreConflictingHostNames
          type:
            - boolean
          description: >-
            Changes a logic when

            restoring an app with custom domains. <code>true</code> to remove
            custom

            domains automatically. If <code>false</code>, custom domains are
            added to

            the app's object when it is being restored, but that might fail due
            to

            conflicts during the operation.
          optional: true
        - id: request.operationType
          type:
            - string
          description: |-
            Operation type. Possible values
            include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.adjustConnectionStrings
          type:
            - boolean
          description: |-
            <code>true</code> if
            SiteConfig.ConnectionStrings should be set in new app; otherwise,
            <code>false</code>.
          optional: true
        - id: request.hostingEnvironment
          type:
            - string
          description: >-
            App Service Environment name,

            if needed (only when restoring an app to an App Service
            Environment).
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will perform discovery for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function discoverRestoreSlot(resourceGroupName, name, request, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#getBackupStatusSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getBackupStatusSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getBackupStatusSlotWithHttpOperationResponse(resourceGroupName, name,
      backupId, slot, options)
    summary: |-
      Gets a backup of an app by its ID.

      Gets a backup of an app by its ID.
    fullName: >-
      azure-arm-website.WebApps.getBackupStatusSlotWithHttpOperationResponse(resourceGroupName,
      name, backupId, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will get a backup of the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getBackupStatusSlotWithHttpOperationResponse(resourceGroupName,
        name, backupId, slot, options)
  - uid: 'azure-arm-website.WebApps#getBackupStatusSlot'
    id: 'azure-arm-website.WebApps#getBackupStatusSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getBackupStatusSlot(resourceGroupName, name, backupId, slot, options,
      optionalCallback)
    summary: |-
      Gets a backup of an app by its ID.

      Gets a backup of an app by its ID.
    fullName: >-
      azure-arm-website.WebApps.getBackupStatusSlot(resourceGroupName, name,
      backupId, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will get a backup of the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getBackupStatusSlot(resourceGroupName, name, backupId, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#deleteBackupSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deleteBackupSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      deleteBackupSlotWithHttpOperationResponse(resourceGroupName, name,
      backupId, slot, options)
    summary: |-
      Deletes a backup of an app by its ID.

      Deletes a backup of an app by its ID.
    fullName: >-
      azure-arm-website.WebApps.deleteBackupSlotWithHttpOperationResponse(resourceGroupName,
      name, backupId, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete a backup of the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteBackupSlotWithHttpOperationResponse(resourceGroupName,
        name, backupId, slot, options)
  - uid: 'azure-arm-website.WebApps#deleteBackupSlot'
    id: 'azure-arm-website.WebApps#deleteBackupSlot'
    parent: azure-arm-website.WebApps
    name: >-
      deleteBackupSlot(resourceGroupName, name, backupId, slot, options,
      optionalCallback)
    summary: |-
      Deletes a backup of an app by its ID.

      Deletes a backup of an app by its ID.
    fullName: >-
      azure-arm-website.WebApps.deleteBackupSlot(resourceGroupName, name,
      backupId, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete a backup of the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteBackupSlot(resourceGroupName, name, backupId, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listBackupStatusSecretsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listBackupStatusSecretsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listBackupStatusSecretsSlotWithHttpOperationResponse(resourceGroupName,
      name, backupId, request, slot, options)
    summary: >-
      Gets status of a web app backup that may be in progress, including

      secrets associated with the backup, such as the Azure Storage SAS URL.
      Also

      can be used to update the SAS URL for the backup if a new URL is passed in

      the request body.


      Gets status of a web app backup that may be in progress, including secrets

      associated with the backup, such as the Azure Storage SAS URL. Also can be

      used to update the SAS URL for the backup if a new URL is passed in the

      request body.
    fullName: >-
      azure-arm-website.WebApps.listBackupStatusSecretsSlotWithHttpOperationResponse(resourceGroupName,
      name, backupId, request, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: backupId
          type:
            - string
          description: Id of backup
        - id: request
          type:
            - object
          description: Information on backup request
        - id: request.backupRequestName
          type:
            - string
          description: Name of the backup.
          optional: true
        - id: request.enabled
          type:
            - boolean
          description: >-
            True if the backup schedule is enabled

            (must be included in that case), false if the backup schedule should
            be

            disabled.
          optional: true
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.backupSchedule
          type:
            - object
          description: |-
            Schedule for the backup if it is
            executed periodically.
          optional: true
        - id: request.backupSchedule.frequencyInterval
          type:
            - number
          description: >-
            How often should be

            the backup executed (e.g. for weekly backup, this should be set to 7
            and

            FrequencyUnit should be set to Day)
        - id: request.backupSchedule.frequencyUnit
          type:
            - string
          description: >-
            The unit of time for

            how often should be the backup executed (e.g. for weekly backup,
            this should

            be set to Day and FrequencyInterval should be set to 7). Possible
            values

            include: 'Day', 'Hour'
        - id: request.backupSchedule.keepAtLeastOneBackup
          type:
            - boolean
          description: >-
            True if the

            retention policy should always keep at least one backup in the
            storage

            account, regardless how old it is; false otherwise.
        - id: request.backupSchedule.retentionPeriodInDays
          type:
            - number
          description: |-
            After how many
            days backups should be deleted.
        - id: request.backupSchedule.startTime
          type:
            - date
          description: |-
            When the schedule should
            start working.
          optional: true
        - id: request.databases
          type:
            - array
          description: Databases included in the backup.
          optional: true
        - id: request.backupRequestType
          type:
            - string
          description: |-
            Type of the backup. Possible
            values include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listBackupStatusSecretsSlotWithHttpOperationResponse(resourceGroupName,
        name, backupId, request, slot, options)
  - uid: 'azure-arm-website.WebApps#listBackupStatusSecretsSlot'
    id: 'azure-arm-website.WebApps#listBackupStatusSecretsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listBackupStatusSecretsSlot(resourceGroupName, name, backupId, request,
      slot, options, optionalCallback)
    summary: >-
      Gets status of a web app backup that may be in progress, including

      secrets associated with the backup, such as the Azure Storage SAS URL.
      Also

      can be used to update the SAS URL for the backup if a new URL is passed in

      the request body.


      Gets status of a web app backup that may be in progress, including secrets

      associated with the backup, such as the Azure Storage SAS URL. Also can be

      used to update the SAS URL for the backup if a new URL is passed in the

      request body.
    fullName: >-
      azure-arm-website.WebApps.listBackupStatusSecretsSlot(resourceGroupName,
      name, backupId, request, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: backupId
          type:
            - string
          description: Id of backup
        - id: request
          type:
            - object
          description: Information on backup request
        - id: request.backupRequestName
          type:
            - string
          description: Name of the backup.
          optional: true
        - id: request.enabled
          type:
            - boolean
          description: >-
            True if the backup schedule is enabled

            (must be included in that case), false if the backup schedule should
            be

            disabled.
          optional: true
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.backupSchedule
          type:
            - object
          description: |-
            Schedule for the backup if it is
            executed periodically.
          optional: true
        - id: request.backupSchedule.frequencyInterval
          type:
            - number
          description: >-
            How often should be

            the backup executed (e.g. for weekly backup, this should be set to 7
            and

            FrequencyUnit should be set to Day)
        - id: request.backupSchedule.frequencyUnit
          type:
            - string
          description: >-
            The unit of time for

            how often should be the backup executed (e.g. for weekly backup,
            this should

            be set to Day and FrequencyInterval should be set to 7). Possible
            values

            include: 'Day', 'Hour'
        - id: request.backupSchedule.keepAtLeastOneBackup
          type:
            - boolean
          description: >-
            True if the

            retention policy should always keep at least one backup in the
            storage

            account, regardless how old it is; false otherwise.
        - id: request.backupSchedule.retentionPeriodInDays
          type:
            - number
          description: |-
            After how many
            days backups should be deleted.
        - id: request.backupSchedule.startTime
          type:
            - date
          description: |-
            When the schedule should
            start working.
          optional: true
        - id: request.databases
          type:
            - array
          description: Databases included in the backup.
          optional: true
        - id: request.backupRequestType
          type:
            - string
          description: |-
            Type of the backup. Possible
            values include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listBackupStatusSecretsSlot(resourceGroupName, name, backupId,
        request, slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#restoreSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#restoreSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      restoreSlotWithHttpOperationResponse(resourceGroupName, name, backupId,
      request, slot, options)
    summary: |-
      Restores a specific backup to another app (or deployment slot, if
      specified).

      Restores a specific backup to another app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.restoreSlotWithHttpOperationResponse(resourceGroupName,
      name, backupId, request, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: request
          type:
            - object
          description: Information on restore request
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.blobName
          type:
            - string
          description: Name of a blob which contains the backup.
          optional: true
        - id: request.overwrite
          type:
            - boolean
          description: >-
            <code>true</code> if the restore

            operation can overwrite target app; otherwise, <code>false</code>.

            <code>true</code> is needed if trying to restore over an existing
            app.
          optional: true
        - id: request.siteName
          type:
            - string
          description: Name of an app.
          optional: true
        - id: request.databases
          type:
            - array
          description: >-
            Collection of databases which should be

            restored. This list has to match the list of databases included in
            the

            backup.
          optional: true
        - id: request.ignoreConflictingHostNames
          type:
            - boolean
          description: >-
            Changes a logic when

            restoring an app with custom domains. <code>true</code> to remove
            custom

            domains automatically. If <code>false</code>, custom domains are
            added to

            the app's object when it is being restored, but that might fail due
            to

            conflicts during the operation.
          optional: true
        - id: request.operationType
          type:
            - string
          description: |-
            Operation type. Possible values
            include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.adjustConnectionStrings
          type:
            - boolean
          description: |-
            <code>true</code> if
            SiteConfig.ConnectionStrings should be set in new app; otherwise,
            <code>false</code>.
          optional: true
        - id: request.hostingEnvironment
          type:
            - string
          description: >-
            App Service Environment name,

            if needed (only when restoring an app to an App Service
            Environment).
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will restore a backup of the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function restoreSlotWithHttpOperationResponse(resourceGroupName, name,
        backupId, request, slot, options)
  - uid: 'azure-arm-website.WebApps#restoreSlot'
    id: 'azure-arm-website.WebApps#restoreSlot'
    parent: azure-arm-website.WebApps
    name: >-
      restoreSlot(resourceGroupName, name, backupId, request, slot, options,
      optionalCallback)
    summary: |-
      Restores a specific backup to another app (or deployment slot, if
      specified).

      Restores a specific backup to another app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.restoreSlot(resourceGroupName, name, backupId,
      request, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: request
          type:
            - object
          description: Information on restore request
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.blobName
          type:
            - string
          description: Name of a blob which contains the backup.
          optional: true
        - id: request.overwrite
          type:
            - boolean
          description: >-
            <code>true</code> if the restore

            operation can overwrite target app; otherwise, <code>false</code>.

            <code>true</code> is needed if trying to restore over an existing
            app.
          optional: true
        - id: request.siteName
          type:
            - string
          description: Name of an app.
          optional: true
        - id: request.databases
          type:
            - array
          description: >-
            Collection of databases which should be

            restored. This list has to match the list of databases included in
            the

            backup.
          optional: true
        - id: request.ignoreConflictingHostNames
          type:
            - boolean
          description: >-
            Changes a logic when

            restoring an app with custom domains. <code>true</code> to remove
            custom

            domains automatically. If <code>false</code>, custom domains are
            added to

            the app's object when it is being restored, but that might fail due
            to

            conflicts during the operation.
          optional: true
        - id: request.operationType
          type:
            - string
          description: |-
            Operation type. Possible values
            include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.adjustConnectionStrings
          type:
            - boolean
          description: |-
            <code>true</code> if
            SiteConfig.ConnectionStrings should be set in new app; otherwise,
            <code>false</code>.
          optional: true
        - id: request.hostingEnvironment
          type:
            - string
          description: >-
            App Service Environment name,

            if needed (only when restoring an app to an App Service
            Environment).
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will restore a backup of the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function restoreSlot(resourceGroupName, name, backupId, request, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateApplicationSettingsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateApplicationSettingsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateApplicationSettingsSlotWithHttpOperationResponse(resourceGroupName,
      name, appSettings, slot, options)
    summary: |-
      Replaces the application settings of an app.

      Replaces the application settings of an app.
    fullName: >-
      azure-arm-website.WebApps.updateApplicationSettingsSlotWithHttpOperationResponse(resourceGroupName,
      name, appSettings, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: appSettings
          type:
            - object
          description: Application settings of the app.
        - id: appSettings.properties
          type:
            - object
          description: Settings.
          optional: true
        - id: appSettings.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: appSettings.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: appSettings.location
          type:
            - string
          description: Resource Location.
        - id: appSettings.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: appSettings.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the application settings for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateApplicationSettingsSlotWithHttpOperationResponse(resourceGroupName,
        name, appSettings, slot, options)
  - uid: 'azure-arm-website.WebApps#updateApplicationSettingsSlot'
    id: 'azure-arm-website.WebApps#updateApplicationSettingsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateApplicationSettingsSlot(resourceGroupName, name, appSettings, slot,
      options, optionalCallback)
    summary: |-
      Replaces the application settings of an app.

      Replaces the application settings of an app.
    fullName: >-
      azure-arm-website.WebApps.updateApplicationSettingsSlot(resourceGroupName,
      name, appSettings, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: appSettings
          type:
            - object
          description: Application settings of the app.
        - id: appSettings.properties
          type:
            - object
          description: Settings.
          optional: true
        - id: appSettings.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: appSettings.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: appSettings.location
          type:
            - string
          description: Resource Location.
        - id: appSettings.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: appSettings.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the application settings for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateApplicationSettingsSlot(resourceGroupName, name,
        appSettings, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listApplicationSettingsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listApplicationSettingsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listApplicationSettingsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Gets the application settings of an app.

      Gets the application settings of an app.
    fullName: >-
      azure-arm-website.WebApps.listApplicationSettingsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the application settings for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listApplicationSettingsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listApplicationSettingsSlot'
    id: 'azure-arm-website.WebApps#listApplicationSettingsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listApplicationSettingsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets the application settings of an app.

      Gets the application settings of an app.
    fullName: >-
      azure-arm-website.WebApps.listApplicationSettingsSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the application settings for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listApplicationSettingsSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#updateAuthSettingsSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#updateAuthSettingsSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      updateAuthSettingsSlotWithHttpOperationResponse(resourceGroupName, name,
      siteAuthSettings, slot, options)
    summary: >-
      Updates the Authentication / Authorization settings associated with

      web app.


      Updates the Authentication / Authorization settings associated with web
      app.
    fullName: >-
      azure-arm-website.WebApps.updateAuthSettingsSlotWithHttpOperationResponse(resourceGroupName,
      name, siteAuthSettings, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: siteAuthSettings
          type:
            - object
          description: Auth settings associated with web app
        - id: siteAuthSettings.enabled
          type:
            - boolean
          description: >-
            <code>true</code> if the

            Authentication / Authorization feature is enabled for the current
            app;

            otherwise, <code>false</code>.
          optional: true
        - id: siteAuthSettings.runtimeVersion
          type:
            - string
          description: >-
            The RuntimeVersion of the

            Authentication / Authorization feature in use for the current app.

            The setting in this value can control the behavior of certain
            features in

            the Authentication / Authorization module.
          optional: true
        - id: siteAuthSettings.unauthenticatedClientAction
          type:
            - string
          description: >-
            The action to

            take when an unauthenticated client attempts to access the app.
            Possible

            values include: 'RedirectToLoginPage', 'AllowAnonymous'
          optional: true
        - id: siteAuthSettings.tokenStoreEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            durably store platform-specific security tokens that are obtained
            during

            login flows; otherwise, <code>false</code>.

            The default is <code>false</code>.
          optional: true
        - id: siteAuthSettings.allowedExternalRedirectUrls
          type:
            - array
          description: >-
            External URLs

            that can be redirected to as part of logging in or logging out of
            the app.

            Note that the query string part of the URL is ignored.

            This is an advanced setting typically only needed by Windows Store

            application backends.

            Note that URLs within the current domain are always implicitly
            allowed.
          optional: true
        - id: siteAuthSettings.defaultProvider
          type:
            - string
          description: >-
            The default

            authentication provider to use when multiple providers are
            configured.

            This setting is only needed if multiple providers are configured and
            the

            unauthenticated client

            action is set to "RedirectToLoginPage". Possible values include:

            'AzureActiveDirectory', 'Facebook', 'Google', 'MicrosoftAccount',
            'Twitter'
          optional: true
        - id: siteAuthSettings.tokenRefreshExtensionHours
          type:
            - number
          description: >-
            The number of

            hours after session token expiration that a session token can be
            used to

            call the token refresh API. The default is 72 hours.
          optional: true
        - id: siteAuthSettings.clientId
          type:
            - string
          description: >-
            The Client ID of this relying

            party application, known as the client_id.

            This setting is required for enabling OpenID Connection
            authentication with

            Azure Active Directory or

            other 3rd party OpenID Connect providers.

            More information on OpenID Connect:

            http://openid.net/specs/openid-connect-core-1_0.html
          optional: true
        - id: siteAuthSettings.clientSecret
          type:
            - string
          description: >-
            The Client Secret of this

            relying party application (in Azure Active Directory, this is also
            referred

            to as the Key).

            This setting is optional. If no client secret is configured, the
            OpenID

            Connect implicit auth flow is used to authenticate end users.

            Otherwise, the OpenID Connect Authorization Code Flow is used to

            authenticate end users.

            More information on OpenID Connect:

            http://openid.net/specs/openid-connect-core-1_0.html
          optional: true
        - id: siteAuthSettings.issuer
          type:
            - string
          description: >-
            The OpenID Connect Issuer URI that

            represents the entity which issues access tokens for this
            application.

            When using Azure Active Directory, this value is the URI of the
            directory

            tenant, e.g. https://sts.windows.net/{tenant-guid}/.

            This URI is a case-sensitive identifier for the token issuer.

            More information on OpenID Connect Discovery:

            http://openid.net/specs/openid-connect-discovery-1_0.html
          optional: true
        - id: siteAuthSettings.allowedAudiences
          type:
            - array
          description: >-
            Allowed audience values

            to consider when validating JWTs issued by

            Azure Active Directory. Note that the <code>ClientID</code> value is
            always

            considered an

            allowed audience, regardless of this setting.
          optional: true
        - id: siteAuthSettings.additionalLoginParams
          type:
            - array
          description: |-
            Login parameters to
            send to the OpenID Connect authorization endpoint when
            a user logs in. Each parameter must be in the form "key=value".
          optional: true
        - id: siteAuthSettings.googleClientId
          type:
            - string
          description: |-
            The OpenID Connect Client
            ID for the Google web application.
            This setting is required for enabling Google Sign-In.
            Google Sign-In documentation:
            https://developers.google.com/identity/sign-in/web/
          optional: true
        - id: siteAuthSettings.googleClientSecret
          type:
            - string
          description: |-
            The client secret
            associated with the Google web application.
            This setting is required for enabling Google Sign-In.
            Google Sign-In documentation:
            https://developers.google.com/identity/sign-in/web/
          optional: true
        - id: siteAuthSettings.googleOAuthScopes
          type:
            - array
          description: >-
            The OAuth 2.0 scopes

            that will be requested as part of Google Sign-In authentication.

            This setting is optional. If not specified, "openid", "profile", and
            "email"

            are used as default scopes.

            Google Sign-In documentation:

            https://developers.google.com/identity/sign-in/web/
          optional: true
        - id: siteAuthSettings.facebookAppId
          type:
            - string
          description: |-
            The App ID of the Facebook
            app used for login.
            This setting is required for enabling Facebook Login.
            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login
          optional: true
        - id: siteAuthSettings.facebookAppSecret
          type:
            - string
          description: |-
            The App Secret of the
            Facebook app used for Facebook Login.
            This setting is required for enabling Facebook Login.
            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login
          optional: true
        - id: siteAuthSettings.facebookOAuthScopes
          type:
            - array
          description: |-
            The OAuth 2.0 scopes
            that will be requested as part of Facebook Login authentication.
            This setting is optional.
            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login
          optional: true
        - id: siteAuthSettings.twitterConsumerKey
          type:
            - string
          description: |-
            The OAuth 1.0a
            consumer key of the Twitter application used for sign-in.
            This setting is required for enabling Twitter Sign-In.
            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
          optional: true
        - id: siteAuthSettings.twitterConsumerSecret
          type:
            - string
          description: |-
            The OAuth 1.0a
            consumer secret of the Twitter application used for sign-in.
            This setting is required for enabling Twitter Sign-In.
            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
          optional: true
        - id: siteAuthSettings.microsoftAccountClientId
          type:
            - string
          description: >-
            The OAuth 2.0

            client ID that was created for the app used for authentication.

            This setting is required for enabling Microsoft Account
            authentication.

            Microsoft Account OAuth documentation:

            https://dev.onedrive.com/auth/msa_oauth.htm
          optional: true
        - id: siteAuthSettings.microsoftAccountClientSecret
          type:
            - string
          description: >-
            The OAuth

            2.0 client secret that was created for the app used for
            authentication.

            This setting is required for enabling Microsoft Account
            authentication.

            Microsoft Account OAuth documentation:

            https://dev.onedrive.com/auth/msa_oauth.htm
          optional: true
        - id: siteAuthSettings.microsoftAccountOAuthScopes
          type:
            - array
          description: >-
            The OAuth 2.0

            scopes that will be requested as part of Microsoft Account
            authentication.

            This setting is optional. If not specified, "wl.basic" is used as
            the

            default scope.

            Microsoft Account Scopes and permissions documentation:

            https://msdn.microsoft.com/en-us/library/dn631845.aspx
          optional: true
        - id: siteAuthSettings.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteAuthSettings.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteAuthSettings.location
          type:
            - string
          description: Resource Location.
        - id: siteAuthSettings.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteAuthSettings.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateAuthSettingsSlotWithHttpOperationResponse(resourceGroupName, name,
        siteAuthSettings, slot, options)
  - uid: 'azure-arm-website.WebApps#updateAuthSettingsSlot'
    id: 'azure-arm-website.WebApps#updateAuthSettingsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateAuthSettingsSlot(resourceGroupName, name, siteAuthSettings, slot,
      options, optionalCallback)
    summary: >-
      Updates the Authentication / Authorization settings associated with

      web app.


      Updates the Authentication / Authorization settings associated with web
      app.
    fullName: >-
      azure-arm-website.WebApps.updateAuthSettingsSlot(resourceGroupName, name,
      siteAuthSettings, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: siteAuthSettings
          type:
            - object
          description: Auth settings associated with web app
        - id: siteAuthSettings.enabled
          type:
            - boolean
          description: >-
            <code>true</code> if the

            Authentication / Authorization feature is enabled for the current
            app;

            otherwise, <code>false</code>.
          optional: true
        - id: siteAuthSettings.runtimeVersion
          type:
            - string
          description: >-
            The RuntimeVersion of the

            Authentication / Authorization feature in use for the current app.

            The setting in this value can control the behavior of certain
            features in

            the Authentication / Authorization module.
          optional: true
        - id: siteAuthSettings.unauthenticatedClientAction
          type:
            - string
          description: >-
            The action to

            take when an unauthenticated client attempts to access the app.
            Possible

            values include: 'RedirectToLoginPage', 'AllowAnonymous'
          optional: true
        - id: siteAuthSettings.tokenStoreEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            durably store platform-specific security tokens that are obtained
            during

            login flows; otherwise, <code>false</code>.

            The default is <code>false</code>.
          optional: true
        - id: siteAuthSettings.allowedExternalRedirectUrls
          type:
            - array
          description: >-
            External URLs

            that can be redirected to as part of logging in or logging out of
            the app.

            Note that the query string part of the URL is ignored.

            This is an advanced setting typically only needed by Windows Store

            application backends.

            Note that URLs within the current domain are always implicitly
            allowed.
          optional: true
        - id: siteAuthSettings.defaultProvider
          type:
            - string
          description: >-
            The default

            authentication provider to use when multiple providers are
            configured.

            This setting is only needed if multiple providers are configured and
            the

            unauthenticated client

            action is set to "RedirectToLoginPage". Possible values include:

            'AzureActiveDirectory', 'Facebook', 'Google', 'MicrosoftAccount',
            'Twitter'
          optional: true
        - id: siteAuthSettings.tokenRefreshExtensionHours
          type:
            - number
          description: >-
            The number of

            hours after session token expiration that a session token can be
            used to

            call the token refresh API. The default is 72 hours.
          optional: true
        - id: siteAuthSettings.clientId
          type:
            - string
          description: >-
            The Client ID of this relying

            party application, known as the client_id.

            This setting is required for enabling OpenID Connection
            authentication with

            Azure Active Directory or

            other 3rd party OpenID Connect providers.

            More information on OpenID Connect:

            http://openid.net/specs/openid-connect-core-1_0.html
          optional: true
        - id: siteAuthSettings.clientSecret
          type:
            - string
          description: >-
            The Client Secret of this

            relying party application (in Azure Active Directory, this is also
            referred

            to as the Key).

            This setting is optional. If no client secret is configured, the
            OpenID

            Connect implicit auth flow is used to authenticate end users.

            Otherwise, the OpenID Connect Authorization Code Flow is used to

            authenticate end users.

            More information on OpenID Connect:

            http://openid.net/specs/openid-connect-core-1_0.html
          optional: true
        - id: siteAuthSettings.issuer
          type:
            - string
          description: >-
            The OpenID Connect Issuer URI that

            represents the entity which issues access tokens for this
            application.

            When using Azure Active Directory, this value is the URI of the
            directory

            tenant, e.g. https://sts.windows.net/{tenant-guid}/.

            This URI is a case-sensitive identifier for the token issuer.

            More information on OpenID Connect Discovery:

            http://openid.net/specs/openid-connect-discovery-1_0.html
          optional: true
        - id: siteAuthSettings.allowedAudiences
          type:
            - array
          description: >-
            Allowed audience values

            to consider when validating JWTs issued by

            Azure Active Directory. Note that the <code>ClientID</code> value is
            always

            considered an

            allowed audience, regardless of this setting.
          optional: true
        - id: siteAuthSettings.additionalLoginParams
          type:
            - array
          description: |-
            Login parameters to
            send to the OpenID Connect authorization endpoint when
            a user logs in. Each parameter must be in the form "key=value".
          optional: true
        - id: siteAuthSettings.googleClientId
          type:
            - string
          description: |-
            The OpenID Connect Client
            ID for the Google web application.
            This setting is required for enabling Google Sign-In.
            Google Sign-In documentation:
            https://developers.google.com/identity/sign-in/web/
          optional: true
        - id: siteAuthSettings.googleClientSecret
          type:
            - string
          description: |-
            The client secret
            associated with the Google web application.
            This setting is required for enabling Google Sign-In.
            Google Sign-In documentation:
            https://developers.google.com/identity/sign-in/web/
          optional: true
        - id: siteAuthSettings.googleOAuthScopes
          type:
            - array
          description: >-
            The OAuth 2.0 scopes

            that will be requested as part of Google Sign-In authentication.

            This setting is optional. If not specified, "openid", "profile", and
            "email"

            are used as default scopes.

            Google Sign-In documentation:

            https://developers.google.com/identity/sign-in/web/
          optional: true
        - id: siteAuthSettings.facebookAppId
          type:
            - string
          description: |-
            The App ID of the Facebook
            app used for login.
            This setting is required for enabling Facebook Login.
            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login
          optional: true
        - id: siteAuthSettings.facebookAppSecret
          type:
            - string
          description: |-
            The App Secret of the
            Facebook app used for Facebook Login.
            This setting is required for enabling Facebook Login.
            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login
          optional: true
        - id: siteAuthSettings.facebookOAuthScopes
          type:
            - array
          description: |-
            The OAuth 2.0 scopes
            that will be requested as part of Facebook Login authentication.
            This setting is optional.
            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login
          optional: true
        - id: siteAuthSettings.twitterConsumerKey
          type:
            - string
          description: |-
            The OAuth 1.0a
            consumer key of the Twitter application used for sign-in.
            This setting is required for enabling Twitter Sign-In.
            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
          optional: true
        - id: siteAuthSettings.twitterConsumerSecret
          type:
            - string
          description: |-
            The OAuth 1.0a
            consumer secret of the Twitter application used for sign-in.
            This setting is required for enabling Twitter Sign-In.
            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
          optional: true
        - id: siteAuthSettings.microsoftAccountClientId
          type:
            - string
          description: >-
            The OAuth 2.0

            client ID that was created for the app used for authentication.

            This setting is required for enabling Microsoft Account
            authentication.

            Microsoft Account OAuth documentation:

            https://dev.onedrive.com/auth/msa_oauth.htm
          optional: true
        - id: siteAuthSettings.microsoftAccountClientSecret
          type:
            - string
          description: >-
            The OAuth

            2.0 client secret that was created for the app used for
            authentication.

            This setting is required for enabling Microsoft Account
            authentication.

            Microsoft Account OAuth documentation:

            https://dev.onedrive.com/auth/msa_oauth.htm
          optional: true
        - id: siteAuthSettings.microsoftAccountOAuthScopes
          type:
            - array
          description: >-
            The OAuth 2.0

            scopes that will be requested as part of Microsoft Account
            authentication.

            This setting is optional. If not specified, "wl.basic" is used as
            the

            default scope.

            Microsoft Account Scopes and permissions documentation:

            https://msdn.microsoft.com/en-us/library/dn631845.aspx
          optional: true
        - id: siteAuthSettings.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteAuthSettings.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteAuthSettings.location
          type:
            - string
          description: Resource Location.
        - id: siteAuthSettings.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteAuthSettings.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateAuthSettingsSlot(resourceGroupName, name,
        siteAuthSettings, slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#getAuthSettingsSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getAuthSettingsSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getAuthSettingsSlotWithHttpOperationResponse(resourceGroupName, name,
      slot, options)
    summary: |-
      Gets the Authentication/Authorization settings of an app.

      Gets the Authentication/Authorization settings of an app.
    fullName: >-
      azure-arm-website.WebApps.getAuthSettingsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will get the settings for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getAuthSettingsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#getAuthSettingsSlot'
    id: 'azure-arm-website.WebApps#getAuthSettingsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getAuthSettingsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets the Authentication/Authorization settings of an app.

      Gets the Authentication/Authorization settings of an app.
    fullName: >-
      azure-arm-website.WebApps.getAuthSettingsSlot(resourceGroupName, name,
      slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will get the settings for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getAuthSettingsSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateBackupConfigurationSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateBackupConfigurationSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateBackupConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, request, slot, options)
    summary: |-
      Updates the backup configuration of an app.

      Updates the backup configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.updateBackupConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, request, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - object
          description: Edited backup configuration.
        - id: request.backupRequestName
          type:
            - string
          description: Name of the backup.
          optional: true
        - id: request.enabled
          type:
            - boolean
          description: >-
            True if the backup schedule is enabled

            (must be included in that case), false if the backup schedule should
            be

            disabled.
          optional: true
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.backupSchedule
          type:
            - object
          description: |-
            Schedule for the backup if it is
            executed periodically.
          optional: true
        - id: request.backupSchedule.frequencyInterval
          type:
            - number
          description: >-
            How often should be

            the backup executed (e.g. for weekly backup, this should be set to 7
            and

            FrequencyUnit should be set to Day)
        - id: request.backupSchedule.frequencyUnit
          type:
            - string
          description: >-
            The unit of time for

            how often should be the backup executed (e.g. for weekly backup,
            this should

            be set to Day and FrequencyInterval should be set to 7). Possible
            values

            include: 'Day', 'Hour'
        - id: request.backupSchedule.keepAtLeastOneBackup
          type:
            - boolean
          description: >-
            True if the

            retention policy should always keep at least one backup in the
            storage

            account, regardless how old it is; false otherwise.
        - id: request.backupSchedule.retentionPeriodInDays
          type:
            - number
          description: |-
            After how many
            days backups should be deleted.
        - id: request.backupSchedule.startTime
          type:
            - date
          description: |-
            When the schedule should
            start working.
          optional: true
        - id: request.databases
          type:
            - array
          description: Databases included in the backup.
          optional: true
        - id: request.backupRequestType
          type:
            - string
          description: |-
            Type of the backup. Possible
            values include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the backup configuration for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateBackupConfigurationSlotWithHttpOperationResponse(resourceGroupName,
        name, request, slot, options)
  - uid: 'azure-arm-website.WebApps#updateBackupConfigurationSlot'
    id: 'azure-arm-website.WebApps#updateBackupConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateBackupConfigurationSlot(resourceGroupName, name, request, slot,
      options, optionalCallback)
    summary: |-
      Updates the backup configuration of an app.

      Updates the backup configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.updateBackupConfigurationSlot(resourceGroupName,
      name, request, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: request
          type:
            - object
          description: Edited backup configuration.
        - id: request.backupRequestName
          type:
            - string
          description: Name of the backup.
          optional: true
        - id: request.enabled
          type:
            - boolean
          description: >-
            True if the backup schedule is enabled

            (must be included in that case), false if the backup schedule should
            be

            disabled.
          optional: true
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.backupSchedule
          type:
            - object
          description: |-
            Schedule for the backup if it is
            executed periodically.
          optional: true
        - id: request.backupSchedule.frequencyInterval
          type:
            - number
          description: >-
            How often should be

            the backup executed (e.g. for weekly backup, this should be set to 7
            and

            FrequencyUnit should be set to Day)
        - id: request.backupSchedule.frequencyUnit
          type:
            - string
          description: >-
            The unit of time for

            how often should be the backup executed (e.g. for weekly backup,
            this should

            be set to Day and FrequencyInterval should be set to 7). Possible
            values

            include: 'Day', 'Hour'
        - id: request.backupSchedule.keepAtLeastOneBackup
          type:
            - boolean
          description: >-
            True if the

            retention policy should always keep at least one backup in the
            storage

            account, regardless how old it is; false otherwise.
        - id: request.backupSchedule.retentionPeriodInDays
          type:
            - number
          description: |-
            After how many
            days backups should be deleted.
        - id: request.backupSchedule.startTime
          type:
            - date
          description: |-
            When the schedule should
            start working.
          optional: true
        - id: request.databases
          type:
            - array
          description: Databases included in the backup.
          optional: true
        - id: request.backupRequestType
          type:
            - string
          description: |-
            Type of the backup. Possible
            values include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the backup configuration for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateBackupConfigurationSlot(resourceGroupName, name, request,
        slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#deleteBackupConfigurationSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#deleteBackupConfigurationSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      deleteBackupConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Deletes the backup configuration of an app.

      Deletes the backup configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.deleteBackupConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will delete the backup configuration for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteBackupConfigurationSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#deleteBackupConfigurationSlot'
    id: 'azure-arm-website.WebApps#deleteBackupConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: >-
      deleteBackupConfigurationSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Deletes the backup configuration of an app.

      Deletes the backup configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.deleteBackupConfigurationSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will delete the backup configuration for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteBackupConfigurationSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getBackupConfigurationSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getBackupConfigurationSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getBackupConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Gets the backup configuration of an app.

      Gets the backup configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.getBackupConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the backup configuration for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getBackupConfigurationSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#getBackupConfigurationSlot'
    id: 'azure-arm-website.WebApps#getBackupConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getBackupConfigurationSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets the backup configuration of an app.

      Gets the backup configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.getBackupConfigurationSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the backup configuration for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getBackupConfigurationSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateConnectionStringsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateConnectionStringsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateConnectionStringsSlotWithHttpOperationResponse(resourceGroupName,
      name, connectionStrings, slot, options)
    summary: |-
      Replaces the connection strings of an app.

      Replaces the connection strings of an app.
    fullName: >-
      azure-arm-website.WebApps.updateConnectionStringsSlotWithHttpOperationResponse(resourceGroupName,
      name, connectionStrings, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionStrings
          type:
            - object
          description: |-
            Connection strings of the app or
            deployment slot. See example.
        - id: connectionStrings.properties
          type:
            - object
          description: Connection strings.
          optional: true
        - id: connectionStrings.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionStrings.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionStrings.location
          type:
            - string
          description: Resource Location.
        - id: connectionStrings.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionStrings.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the connection settings for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateConnectionStringsSlotWithHttpOperationResponse(resourceGroupName,
        name, connectionStrings, slot, options)
  - uid: 'azure-arm-website.WebApps#updateConnectionStringsSlot'
    id: 'azure-arm-website.WebApps#updateConnectionStringsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateConnectionStringsSlot(resourceGroupName, name, connectionStrings,
      slot, options, optionalCallback)
    summary: |-
      Replaces the connection strings of an app.

      Replaces the connection strings of an app.
    fullName: >-
      azure-arm-website.WebApps.updateConnectionStringsSlot(resourceGroupName,
      name, connectionStrings, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: connectionStrings
          type:
            - object
          description: |-
            Connection strings of the app or
            deployment slot. See example.
        - id: connectionStrings.properties
          type:
            - object
          description: Connection strings.
          optional: true
        - id: connectionStrings.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionStrings.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionStrings.location
          type:
            - string
          description: Resource Location.
        - id: connectionStrings.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionStrings.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the connection settings for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateConnectionStringsSlot(resourceGroupName, name,
        connectionStrings, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listConnectionStringsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listConnectionStringsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listConnectionStringsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Gets the connection strings of an app.

      Gets the connection strings of an app.
    fullName: >-
      azure-arm-website.WebApps.listConnectionStringsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the connection settings for the
            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listConnectionStringsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listConnectionStringsSlot'
    id: 'azure-arm-website.WebApps#listConnectionStringsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listConnectionStringsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets the connection strings of an app.

      Gets the connection strings of an app.
    fullName: >-
      azure-arm-website.WebApps.listConnectionStringsSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the connection settings for the
            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listConnectionStringsSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getDiagnosticLogsConfigurationSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getDiagnosticLogsConfigurationSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getDiagnosticLogsConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Gets the logging configuration of an app.

      Gets the logging configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.getDiagnosticLogsConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the logging configuration for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDiagnosticLogsConfigurationSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#getDiagnosticLogsConfigurationSlot'
    id: 'azure-arm-website.WebApps#getDiagnosticLogsConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getDiagnosticLogsConfigurationSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets the logging configuration of an app.

      Gets the logging configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.getDiagnosticLogsConfigurationSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the logging configuration for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getDiagnosticLogsConfigurationSlot(resourceGroupName, name,
        slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateDiagnosticLogsConfigSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateDiagnosticLogsConfigSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateDiagnosticLogsConfigSlotWithHttpOperationResponse(resourceGroupName,
      name, siteLogsConfig, slot, options)
    summary: |-
      Updates the logging configuration of an app.

      Updates the logging configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.updateDiagnosticLogsConfigSlotWithHttpOperationResponse(resourceGroupName,
      name, siteLogsConfig, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteLogsConfig
          type:
            - object
          description: |-
            A SiteLogsConfig JSON object that contains
            the logging configuration to change in the "properties" property.
        - id: siteLogsConfig.applicationLogs
          type:
            - object
          description: |-
            Application logs
            configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.fileSystem
          type:
            - object
          description: |-
            Application logs
            to file system configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.fileSystem.level
          type:
            - string
          description: >-
            Log level.

            Possible values include: 'Off', 'Verbose', 'Information', 'Warning',
            'Error'
          optional: true
        - id: siteLogsConfig.applicationLogs.azureTableStorage
          type:
            - object
          description: Application logs to azure table storage configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.azureTableStorage.level
          type:
            - string
          description: >-
            Log

            level. Possible values include: 'Off', 'Verbose', 'Information',
            'Warning',

            'Error'
          optional: true
        - id: siteLogsConfig.applicationLogs.azureTableStorage.sasUrl
          type:
            - string
          description: |-
            SAS
            URL to an Azure table with add/query/delete permissions.
        - id: siteLogsConfig.applicationLogs.azureBlobStorage
          type:
            - object
          description: Application logs to blob storage configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.level
          type:
            - string
          description: >-
            Log

            level. Possible values include: 'Off', 'Verbose', 'Information',
            'Warning',

            'Error'
          optional: true
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.sasUrl
          type:
            - string
          description: >-
            SAS

            url to a azure blob container with read/write/list/delete
            permissions.
          optional: true
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.retentionInDays
          type:
            - number
          description: |-
            Retention
            in days.
            Remove blobs older than X days.
            0 or lower means no retention.
          optional: true
        - id: siteLogsConfig.httpLogs
          type:
            - object
          description: HTTP logs configuration.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem
          type:
            - object
          description: |-
            Http logs to file
            system configuration.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem.retentionInMb
          type:
            - number
          description: >-
            Maximum

            size in megabytes that http log files can use.

            When reached old log files will be removed to make space for new
            ones.

            Value can range between 25 and 100.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem.retentionInDays
          type:
            - number
          description: |-
            Retention in days.
            Remove files older than X days.
            0 or lower means no retention.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem.enabled
          type:
            - boolean
          description: Enabled.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage
          type:
            - object
          description: |-
            Http logs to
            azure blob storage configuration.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage.sasUrl
          type:
            - string
          description: |-
            SAS url to
            a azure blob container with read/write/list/delete permissions.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage.retentionInDays
          type:
            - number
          description: |-
            Retention in days.
            Remove blobs older than X days.
            0 or lower means no retention.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage.enabled
          type:
            - boolean
          description: Enabled.
          optional: true
        - id: siteLogsConfig.failedRequestsTracing
          type:
            - object
          description: |-
            Failed requests
            tracing configuration.
          optional: true
        - id: siteLogsConfig.detailedErrorMessages
          type:
            - object
          description: |-
            Detailed error
            messages configuration.
          optional: true
        - id: siteLogsConfig.detailedErrorMessages.enabled
          type:
            - boolean
          description: Enabled.
          optional: true
        - id: siteLogsConfig.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteLogsConfig.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteLogsConfig.location
          type:
            - string
          description: Resource Location.
        - id: siteLogsConfig.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteLogsConfig.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the logging configuration for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateDiagnosticLogsConfigSlotWithHttpOperationResponse(resourceGroupName,
        name, siteLogsConfig, slot, options)
  - uid: 'azure-arm-website.WebApps#updateDiagnosticLogsConfigSlot'
    id: 'azure-arm-website.WebApps#updateDiagnosticLogsConfigSlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateDiagnosticLogsConfigSlot(resourceGroupName, name, siteLogsConfig,
      slot, options, optionalCallback)
    summary: |-
      Updates the logging configuration of an app.

      Updates the logging configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.updateDiagnosticLogsConfigSlot(resourceGroupName,
      name, siteLogsConfig, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteLogsConfig
          type:
            - object
          description: |-
            A SiteLogsConfig JSON object that contains
            the logging configuration to change in the "properties" property.
        - id: siteLogsConfig.applicationLogs
          type:
            - object
          description: |-
            Application logs
            configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.fileSystem
          type:
            - object
          description: |-
            Application logs
            to file system configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.fileSystem.level
          type:
            - string
          description: >-
            Log level.

            Possible values include: 'Off', 'Verbose', 'Information', 'Warning',
            'Error'
          optional: true
        - id: siteLogsConfig.applicationLogs.azureTableStorage
          type:
            - object
          description: Application logs to azure table storage configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.azureTableStorage.level
          type:
            - string
          description: >-
            Log

            level. Possible values include: 'Off', 'Verbose', 'Information',
            'Warning',

            'Error'
          optional: true
        - id: siteLogsConfig.applicationLogs.azureTableStorage.sasUrl
          type:
            - string
          description: |-
            SAS
            URL to an Azure table with add/query/delete permissions.
        - id: siteLogsConfig.applicationLogs.azureBlobStorage
          type:
            - object
          description: Application logs to blob storage configuration.
          optional: true
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.level
          type:
            - string
          description: >-
            Log

            level. Possible values include: 'Off', 'Verbose', 'Information',
            'Warning',

            'Error'
          optional: true
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.sasUrl
          type:
            - string
          description: >-
            SAS

            url to a azure blob container with read/write/list/delete
            permissions.
          optional: true
        - id: siteLogsConfig.applicationLogs.azureBlobStorage.retentionInDays
          type:
            - number
          description: |-
            Retention
            in days.
            Remove blobs older than X days.
            0 or lower means no retention.
          optional: true
        - id: siteLogsConfig.httpLogs
          type:
            - object
          description: HTTP logs configuration.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem
          type:
            - object
          description: |-
            Http logs to file
            system configuration.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem.retentionInMb
          type:
            - number
          description: >-
            Maximum

            size in megabytes that http log files can use.

            When reached old log files will be removed to make space for new
            ones.

            Value can range between 25 and 100.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem.retentionInDays
          type:
            - number
          description: |-
            Retention in days.
            Remove files older than X days.
            0 or lower means no retention.
          optional: true
        - id: siteLogsConfig.httpLogs.fileSystem.enabled
          type:
            - boolean
          description: Enabled.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage
          type:
            - object
          description: |-
            Http logs to
            azure blob storage configuration.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage.sasUrl
          type:
            - string
          description: |-
            SAS url to
            a azure blob container with read/write/list/delete permissions.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage.retentionInDays
          type:
            - number
          description: |-
            Retention in days.
            Remove blobs older than X days.
            0 or lower means no retention.
          optional: true
        - id: siteLogsConfig.httpLogs.azureBlobStorage.enabled
          type:
            - boolean
          description: Enabled.
          optional: true
        - id: siteLogsConfig.failedRequestsTracing
          type:
            - object
          description: |-
            Failed requests
            tracing configuration.
          optional: true
        - id: siteLogsConfig.detailedErrorMessages
          type:
            - object
          description: |-
            Detailed error
            messages configuration.
          optional: true
        - id: siteLogsConfig.detailedErrorMessages.enabled
          type:
            - boolean
          description: Enabled.
          optional: true
        - id: siteLogsConfig.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteLogsConfig.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteLogsConfig.location
          type:
            - string
          description: Resource Location.
        - id: siteLogsConfig.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteLogsConfig.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the logging configuration for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateDiagnosticLogsConfigSlot(resourceGroupName, name,
        siteLogsConfig, slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#updateMetadataSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#updateMetadataSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      updateMetadataSlotWithHttpOperationResponse(resourceGroupName, name,
      metadata, slot, options)
    summary: |-
      Replaces the metadata of an app.

      Replaces the metadata of an app.
    fullName: >-
      azure-arm-website.WebApps.updateMetadataSlotWithHttpOperationResponse(resourceGroupName,
      name, metadata, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: metadata
          type:
            - object
          description: |-
            Edited metadata of the app or deployment slot. See
            example.
        - id: metadata.properties
          type:
            - object
          description: Settings.
          optional: true
        - id: metadata.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: metadata.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: metadata.location
          type:
            - string
          description: Resource Location.
        - id: metadata.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: metadata.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will update the metadata for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateMetadataSlotWithHttpOperationResponse(resourceGroupName,
        name, metadata, slot, options)
  - uid: 'azure-arm-website.WebApps#updateMetadataSlot'
    id: 'azure-arm-website.WebApps#updateMetadataSlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateMetadataSlot(resourceGroupName, name, metadata, slot, options,
      optionalCallback)
    summary: |-
      Replaces the metadata of an app.

      Replaces the metadata of an app.
    fullName: >-
      azure-arm-website.WebApps.updateMetadataSlot(resourceGroupName, name,
      metadata, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: metadata
          type:
            - object
          description: |-
            Edited metadata of the app or deployment slot. See
            example.
        - id: metadata.properties
          type:
            - object
          description: Settings.
          optional: true
        - id: metadata.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: metadata.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: metadata.location
          type:
            - string
          description: Resource Location.
        - id: metadata.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: metadata.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will update the metadata for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateMetadataSlot(resourceGroupName, name, metadata, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listMetadataSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listMetadataSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listMetadataSlotWithHttpOperationResponse(resourceGroupName, name, slot,
      options)
    summary: |-
      Gets the metadata of an app.

      Gets the metadata of an app.
    fullName: >-
      azure-arm-website.WebApps.listMetadataSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will get the metadata for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listMetadataSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listMetadataSlot'
    id: 'azure-arm-website.WebApps#listMetadataSlot'
    parent: azure-arm-website.WebApps
    name: 'listMetadataSlot(resourceGroupName, name, slot, options, optionalCallback)'
    summary: |-
      Gets the metadata of an app.

      Gets the metadata of an app.
    fullName: >-
      azure-arm-website.WebApps.listMetadataSlot(resourceGroupName, name, slot,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will get the metadata for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listMetadataSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listPublishingCredentialsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listPublishingCredentialsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listPublishingCredentialsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Gets the Git/FTP publishing credentials of an app.

      Gets the Git/FTP publishing credentials of an app.
    fullName: >-
      azure-arm-website.WebApps.listPublishingCredentialsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the publishing credentials for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listPublishingCredentialsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listPublishingCredentialsSlot'
    id: 'azure-arm-website.WebApps#listPublishingCredentialsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listPublishingCredentialsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets the Git/FTP publishing credentials of an app.

      Gets the Git/FTP publishing credentials of an app.
    fullName: >-
      azure-arm-website.WebApps.listPublishingCredentialsSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the publishing credentials for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listPublishingCredentialsSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateSitePushSettingsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateSitePushSettingsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateSitePushSettingsSlotWithHttpOperationResponse(resourceGroupName,
      name, pushSettings, slot, options)
    summary: |-
      Updates the Push settings associated with web app.

      Updates the Push settings associated with web app.
    fullName: >-
      azure-arm-website.WebApps.updateSitePushSettingsSlotWithHttpOperationResponse(resourceGroupName,
      name, pushSettings, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: pushSettings
          type:
            - object
          description: Push settings associated with web app
        - id: pushSettings.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a flag indicating
            whether the Push endpoint is enabled.
        - id: pushSettings.tagWhitelistJson
          type:
            - string
          description: |-
            Gets or sets a JSON string
            containing a list of tags that are whitelisted for use by the push
            registration endpoint.
          optional: true
        - id: pushSettings.tagsRequiringAuth
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of tags that require user authentication to be
            used in the

            push registration endpoint.

            Tags can consist of alphanumeric characters and the following:

            '_', '@', '#', '.', ':', '-'.

            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: pushSettings.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of dynamic tags that will be evaluated from user
            claims in

            the push registration endpoint.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateSitePushSettingsSlotWithHttpOperationResponse(resourceGroupName,
        name, pushSettings, slot, options)
  - uid: 'azure-arm-website.WebApps#updateSitePushSettingsSlot'
    id: 'azure-arm-website.WebApps#updateSitePushSettingsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateSitePushSettingsSlot(resourceGroupName, name, pushSettings, slot,
      options, optionalCallback)
    summary: |-
      Updates the Push settings associated with web app.

      Updates the Push settings associated with web app.
    fullName: >-
      azure-arm-website.WebApps.updateSitePushSettingsSlot(resourceGroupName,
      name, pushSettings, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: pushSettings
          type:
            - object
          description: Push settings associated with web app
        - id: pushSettings.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a flag indicating
            whether the Push endpoint is enabled.
        - id: pushSettings.tagWhitelistJson
          type:
            - string
          description: |-
            Gets or sets a JSON string
            containing a list of tags that are whitelisted for use by the push
            registration endpoint.
          optional: true
        - id: pushSettings.tagsRequiringAuth
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of tags that require user authentication to be
            used in the

            push registration endpoint.

            Tags can consist of alphanumeric characters and the following:

            '_', '@', '#', '.', ':', '-'.

            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: pushSettings.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of dynamic tags that will be evaluated from user
            claims in

            the push registration endpoint.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateSitePushSettingsSlot(resourceGroupName, name,
        pushSettings, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listSitePushSettingsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listSitePushSettingsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listSitePushSettingsSlotWithHttpOperationResponse(resourceGroupName, name,
      slot, options)
    summary: |-
      Gets the Push settings associated with web app.

      Gets the Push settings associated with web app.
    fullName: >-
      azure-arm-website.WebApps.listSitePushSettingsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listSitePushSettingsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listSitePushSettingsSlot'
    id: 'azure-arm-website.WebApps#listSitePushSettingsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listSitePushSettingsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets the Push settings associated with web app.

      Gets the Push settings associated with web app.
    fullName: >-
      azure-arm-website.WebApps.listSitePushSettingsSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listSitePushSettingsSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#getConfigurationSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getConfigurationSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getConfigurationSlotWithHttpOperationResponse(resourceGroupName, name,
      slot, options)
    summary: |-
      Gets the configuration of an app, such as platform version and
      bitness, default documents, virtual applications, Always On, etc.

      Gets the configuration of an app, such as platform version and bitness,
      default documents, virtual applications, Always On, etc.
    fullName: >-
      azure-arm-website.WebApps.getConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will return configuration for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getConfigurationSlotWithHttpOperationResponse(resourceGroupName, name,
        slot, options)
  - uid: 'azure-arm-website.WebApps#getConfigurationSlot'
    id: 'azure-arm-website.WebApps#getConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getConfigurationSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets the configuration of an app, such as platform version and
      bitness, default documents, virtual applications, Always On, etc.

      Gets the configuration of an app, such as platform version and bitness,
      default documents, virtual applications, Always On, etc.
    fullName: >-
      azure-arm-website.WebApps.getConfigurationSlot(resourceGroupName, name,
      slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will return configuration for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getConfigurationSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateConfigurationSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateConfigurationSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, siteConfig, slot, options)
    summary: |-
      Updates the configuration of an app.

      Updates the configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, siteConfig, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - object
          description: |-
            JSON representation of a SiteConfig object. See
            example.
        - id: siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteConfig.netFrameworkVersion
          type:
            - string
          description: .NET Framework version.
          optional: true
        - id: siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteConfig.linuxFxVersion
          type:
            - string
          description: Linux App Framework and version
          optional: true
        - id: siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            request tracing is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request tracing
            expiration time.
          optional: true
        - id: siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            remote debugging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote debugging
            version.
          optional: true
        - id: siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if HTTP
            logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs directory size
            limit.
          optional: true
        - id: siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if detailed error logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.publishingUsername
          type:
            - string
          description: Publishing user name.
          optional: true
        - id: siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteConfig.connectionStrings
          type:
            - array
          description: Connection strings.
          optional: true
        - id: siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values include:

            'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub', 'CodePlexGit',
            'CodePlexHg',

            'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg',
            'OneDrive',

            'VSO'
          optional: true
        - id: siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use
            32-bit worker process; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.webSocketsEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            WebSocket is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if Always On is
            enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteConfig.javaContainerVersion
          type:
            - string
          description: Java container version.
          optional: true
        - id: siteConfig.appCommandLine
          type:
            - string
          description: App command line to launch.
          optional: true
        - id: siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed pipeline mode.
            Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteConfig.virtualApplications
          type:
            - array
          description: Virtual applications.
          optional: true
        - id: siteConfig.loadBalancing
          type:
            - string
          description: >-
            Site load balancing. Possible

            values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime',

            'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteConfig.experiments
          type:
            - object
          description: |-
            This is work around for polymophic
            types.
          optional: true
        - id: siteConfig.experiments.rampUpRules
          type:
            - array
          description: List of ramp-up rules.
          optional: true
        - id: siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum allowed CPU
            usage percentage.
          optional: true
        - id: siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum allowed memory
            usage in MB.
          optional: true
        - id: siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum allowed disk
            size usage in MB.
          optional: true
        - id: siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if Auto Heal
            is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions that describe
            when to execute the auto-heal actions.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A rule based on
            total requests.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: |-
            A rule based
            on status codes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule
            based on request execution time.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: Time taken.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to be executed
            when a rule is triggered.
          optional: true
        - id: siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined
            action to be taken. Possible values include: 'Recycle', 'LogEvent',
            'CustomAction'
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: |-
            Custom
            action to be taken.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: Executable to be run.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing (CORS)
            settings.
          optional: true
        - id: siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets the list of
            origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a flag
            indicating whether the Push endpoint is enabled.
        - id: siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that are whitelisted for use by the
            push

            registration endpoint.
          optional: true
        - id: siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that require user authentication to
            be used

            in the push registration endpoint.

            Tags can consist of alphanumeric characters and the following:

            '_', '@', '#', '.', ':', '-'.

            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of dynamic tags that will be evaluated from user
            claims in

            the push registration endpoint.
          optional: true
        - id: siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about the formal API
            definition for the app.
          optional: true
        - id: siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the API
            definition.
          optional: true
        - id: siteConfig.autoSwapSlotName
          type:
            - string
          description: Auto-swap slot name.
          optional: true
        - id: siteConfig.localMySqlEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable
            local MySQL; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.ipSecurityRestrictions
          type:
            - array
          description: IP security restrictions.
          optional: true
        - id: siteConfig.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteConfig.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteConfig.location
          type:
            - string
          description: Resource Location.
        - id: siteConfig.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteConfig.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update configuration for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateConfigurationSlotWithHttpOperationResponse(resourceGroupName,
        name, siteConfig, slot, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateConfigurationSlot'
    id: 'azure-arm-website.WebApps#createOrUpdateConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateConfigurationSlot(resourceGroupName, name, siteConfig, slot,
      options, optionalCallback)
    summary: |-
      Updates the configuration of an app.

      Updates the configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateConfigurationSlot(resourceGroupName,
      name, siteConfig, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - object
          description: |-
            JSON representation of a SiteConfig object. See
            example.
        - id: siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteConfig.netFrameworkVersion
          type:
            - string
          description: .NET Framework version.
          optional: true
        - id: siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteConfig.linuxFxVersion
          type:
            - string
          description: Linux App Framework and version
          optional: true
        - id: siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            request tracing is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request tracing
            expiration time.
          optional: true
        - id: siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            remote debugging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote debugging
            version.
          optional: true
        - id: siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if HTTP
            logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs directory size
            limit.
          optional: true
        - id: siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if detailed error logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.publishingUsername
          type:
            - string
          description: Publishing user name.
          optional: true
        - id: siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteConfig.connectionStrings
          type:
            - array
          description: Connection strings.
          optional: true
        - id: siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values include:

            'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub', 'CodePlexGit',
            'CodePlexHg',

            'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg',
            'OneDrive',

            'VSO'
          optional: true
        - id: siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use
            32-bit worker process; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.webSocketsEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            WebSocket is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if Always On is
            enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteConfig.javaContainerVersion
          type:
            - string
          description: Java container version.
          optional: true
        - id: siteConfig.appCommandLine
          type:
            - string
          description: App command line to launch.
          optional: true
        - id: siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed pipeline mode.
            Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteConfig.virtualApplications
          type:
            - array
          description: Virtual applications.
          optional: true
        - id: siteConfig.loadBalancing
          type:
            - string
          description: >-
            Site load balancing. Possible

            values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime',

            'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteConfig.experiments
          type:
            - object
          description: |-
            This is work around for polymophic
            types.
          optional: true
        - id: siteConfig.experiments.rampUpRules
          type:
            - array
          description: List of ramp-up rules.
          optional: true
        - id: siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum allowed CPU
            usage percentage.
          optional: true
        - id: siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum allowed memory
            usage in MB.
          optional: true
        - id: siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum allowed disk
            size usage in MB.
          optional: true
        - id: siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if Auto Heal
            is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions that describe
            when to execute the auto-heal actions.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A rule based on
            total requests.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: |-
            A rule based
            on status codes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule
            based on request execution time.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: Time taken.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to be executed
            when a rule is triggered.
          optional: true
        - id: siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined
            action to be taken. Possible values include: 'Recycle', 'LogEvent',
            'CustomAction'
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: |-
            Custom
            action to be taken.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: Executable to be run.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing (CORS)
            settings.
          optional: true
        - id: siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets the list of
            origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a flag
            indicating whether the Push endpoint is enabled.
        - id: siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that are whitelisted for use by the
            push

            registration endpoint.
          optional: true
        - id: siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that require user authentication to
            be used

            in the push registration endpoint.

            Tags can consist of alphanumeric characters and the following:

            '_', '@', '#', '.', ':', '-'.

            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of dynamic tags that will be evaluated from user
            claims in

            the push registration endpoint.
          optional: true
        - id: siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about the formal API
            definition for the app.
          optional: true
        - id: siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the API
            definition.
          optional: true
        - id: siteConfig.autoSwapSlotName
          type:
            - string
          description: Auto-swap slot name.
          optional: true
        - id: siteConfig.localMySqlEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable
            local MySQL; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.ipSecurityRestrictions
          type:
            - array
          description: IP security restrictions.
          optional: true
        - id: siteConfig.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteConfig.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteConfig.location
          type:
            - string
          description: Resource Location.
        - id: siteConfig.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteConfig.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update configuration for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateConfigurationSlot(resourceGroupName, name,
        siteConfig, slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#updateConfigurationSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#updateConfigurationSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      updateConfigurationSlotWithHttpOperationResponse(resourceGroupName, name,
      siteConfig, slot, options)
    summary: |-
      Updates the configuration of an app.

      Updates the configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.updateConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, siteConfig, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - object
          description: |-
            JSON representation of a SiteConfig object. See
            example.
        - id: siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteConfig.netFrameworkVersion
          type:
            - string
          description: .NET Framework version.
          optional: true
        - id: siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteConfig.linuxFxVersion
          type:
            - string
          description: Linux App Framework and version
          optional: true
        - id: siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            request tracing is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request tracing
            expiration time.
          optional: true
        - id: siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            remote debugging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote debugging
            version.
          optional: true
        - id: siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if HTTP
            logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs directory size
            limit.
          optional: true
        - id: siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if detailed error logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.publishingUsername
          type:
            - string
          description: Publishing user name.
          optional: true
        - id: siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteConfig.connectionStrings
          type:
            - array
          description: Connection strings.
          optional: true
        - id: siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values include:

            'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub', 'CodePlexGit',
            'CodePlexHg',

            'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg',
            'OneDrive',

            'VSO'
          optional: true
        - id: siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use
            32-bit worker process; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.webSocketsEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            WebSocket is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if Always On is
            enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteConfig.javaContainerVersion
          type:
            - string
          description: Java container version.
          optional: true
        - id: siteConfig.appCommandLine
          type:
            - string
          description: App command line to launch.
          optional: true
        - id: siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed pipeline mode.
            Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteConfig.virtualApplications
          type:
            - array
          description: Virtual applications.
          optional: true
        - id: siteConfig.loadBalancing
          type:
            - string
          description: >-
            Site load balancing. Possible

            values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime',

            'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteConfig.experiments
          type:
            - object
          description: |-
            This is work around for polymophic
            types.
          optional: true
        - id: siteConfig.experiments.rampUpRules
          type:
            - array
          description: List of ramp-up rules.
          optional: true
        - id: siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum allowed CPU
            usage percentage.
          optional: true
        - id: siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum allowed memory
            usage in MB.
          optional: true
        - id: siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum allowed disk
            size usage in MB.
          optional: true
        - id: siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if Auto Heal
            is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions that describe
            when to execute the auto-heal actions.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A rule based on
            total requests.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: |-
            A rule based
            on status codes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule
            based on request execution time.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: Time taken.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to be executed
            when a rule is triggered.
          optional: true
        - id: siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined
            action to be taken. Possible values include: 'Recycle', 'LogEvent',
            'CustomAction'
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: |-
            Custom
            action to be taken.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: Executable to be run.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing (CORS)
            settings.
          optional: true
        - id: siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets the list of
            origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a flag
            indicating whether the Push endpoint is enabled.
        - id: siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that are whitelisted for use by the
            push

            registration endpoint.
          optional: true
        - id: siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that require user authentication to
            be used

            in the push registration endpoint.

            Tags can consist of alphanumeric characters and the following:

            '_', '@', '#', '.', ':', '-'.

            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of dynamic tags that will be evaluated from user
            claims in

            the push registration endpoint.
          optional: true
        - id: siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about the formal API
            definition for the app.
          optional: true
        - id: siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the API
            definition.
          optional: true
        - id: siteConfig.autoSwapSlotName
          type:
            - string
          description: Auto-swap slot name.
          optional: true
        - id: siteConfig.localMySqlEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable
            local MySQL; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.ipSecurityRestrictions
          type:
            - array
          description: IP security restrictions.
          optional: true
        - id: siteConfig.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteConfig.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteConfig.location
          type:
            - string
          description: Resource Location.
        - id: siteConfig.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteConfig.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update configuration for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateConfigurationSlotWithHttpOperationResponse(resourceGroupName,
        name, siteConfig, slot, options)
  - uid: 'azure-arm-website.WebApps#updateConfigurationSlot'
    id: 'azure-arm-website.WebApps#updateConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateConfigurationSlot(resourceGroupName, name, siteConfig, slot,
      options, optionalCallback)
    summary: |-
      Updates the configuration of an app.

      Updates the configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.updateConfigurationSlot(resourceGroupName, name,
      siteConfig, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteConfig
          type:
            - object
          description: |-
            JSON representation of a SiteConfig object. See
            example.
        - id: siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteConfig.netFrameworkVersion
          type:
            - string
          description: .NET Framework version.
          optional: true
        - id: siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteConfig.linuxFxVersion
          type:
            - string
          description: Linux App Framework and version
          optional: true
        - id: siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            request tracing is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request tracing
            expiration time.
          optional: true
        - id: siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            remote debugging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote debugging
            version.
          optional: true
        - id: siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if HTTP
            logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs directory size
            limit.
          optional: true
        - id: siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if detailed error logging is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.publishingUsername
          type:
            - string
          description: Publishing user name.
          optional: true
        - id: siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteConfig.connectionStrings
          type:
            - array
          description: Connection strings.
          optional: true
        - id: siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values include:

            'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub', 'CodePlexGit',
            'CodePlexHg',

            'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg',
            'OneDrive',

            'VSO'
          optional: true
        - id: siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use
            32-bit worker process; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.webSocketsEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if
            WebSocket is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if Always On is
            enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteConfig.javaContainerVersion
          type:
            - string
          description: Java container version.
          optional: true
        - id: siteConfig.appCommandLine
          type:
            - string
          description: App command line to launch.
          optional: true
        - id: siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed pipeline mode.
            Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteConfig.virtualApplications
          type:
            - array
          description: Virtual applications.
          optional: true
        - id: siteConfig.loadBalancing
          type:
            - string
          description: >-
            Site load balancing. Possible

            values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime',

            'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteConfig.experiments
          type:
            - object
          description: |-
            This is work around for polymophic
            types.
          optional: true
        - id: siteConfig.experiments.rampUpRules
          type:
            - array
          description: List of ramp-up rules.
          optional: true
        - id: siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum allowed CPU
            usage percentage.
          optional: true
        - id: siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum allowed memory
            usage in MB.
          optional: true
        - id: siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum allowed disk
            size usage in MB.
          optional: true
        - id: siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if Auto Heal
            is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions that describe
            when to execute the auto-heal actions.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A rule based on
            total requests.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: |-
            A rule based
            on status codes.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule
            based on request execution time.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: Time taken.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to be executed
            when a rule is triggered.
          optional: true
        - id: siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined
            action to be taken. Possible values include: 'Recycle', 'LogEvent',
            'CustomAction'
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: |-
            Custom
            action to be taken.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: Executable to be run.
          optional: true
        - id: siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing (CORS)
            settings.
          optional: true
        - id: siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets the list of
            origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a flag
            indicating whether the Push endpoint is enabled.
        - id: siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that are whitelisted for use by the
            push

            registration endpoint.
          optional: true
        - id: siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: >-
            Gets or sets a JSON

            string containing a list of tags that require user authentication to
            be used

            in the push registration endpoint.

            Tags can consist of alphanumeric characters and the following:

            '_', '@', '#', '.', ':', '-'.

            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets a JSON string

            containing a list of dynamic tags that will be evaluated from user
            claims in

            the push registration endpoint.
          optional: true
        - id: siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about the formal API
            definition for the app.
          optional: true
        - id: siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the API
            definition.
          optional: true
        - id: siteConfig.autoSwapSlotName
          type:
            - string
          description: Auto-swap slot name.
          optional: true
        - id: siteConfig.localMySqlEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable
            local MySQL; otherwise, <code>false</code>.
          optional: true
        - id: siteConfig.ipSecurityRestrictions
          type:
            - array
          description: IP security restrictions.
          optional: true
        - id: siteConfig.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteConfig.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteConfig.location
          type:
            - string
          description: Resource Location.
        - id: siteConfig.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteConfig.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update configuration for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateConfigurationSlot(resourceGroupName, name, siteConfig,
        slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listConfigurationSnapshotInfoSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listConfigurationSnapshotInfoSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listConfigurationSnapshotInfoSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: >-
      Gets a list of web app configuration snapshots identifiers. Each

      element of the list contains a timestamp and the ID of the snapshot.


      Gets a list of web app configuration snapshots identifiers. Each element
      of

      the list contains a timestamp and the ID of the snapshot.
    fullName: >-
      azure-arm-website.WebApps.listConfigurationSnapshotInfoSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will return configuration for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listConfigurationSnapshotInfoSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listConfigurationSnapshotInfoSlot'
    id: 'azure-arm-website.WebApps#listConfigurationSnapshotInfoSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listConfigurationSnapshotInfoSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: >-
      Gets a list of web app configuration snapshots identifiers. Each

      element of the list contains a timestamp and the ID of the snapshot.


      Gets a list of web app configuration snapshots identifiers. Each element
      of

      the list contains a timestamp and the ID of the snapshot.
    fullName: >-
      azure-arm-website.WebApps.listConfigurationSnapshotInfoSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will return configuration for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listConfigurationSnapshotInfoSlot(resourceGroupName, name,
        slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getConfigurationSnapshotSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getConfigurationSnapshotSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getConfigurationSnapshotSlotWithHttpOperationResponse(resourceGroupName,
      name, snapshotId, slot, options)
    summary: >-
      Gets a snapshot of the configuration of an app at a previous point

      in time.


      Gets a snapshot of the configuration of an app at a previous point in
      time.
    fullName: >-
      azure-arm-website.WebApps.getConfigurationSnapshotSlotWithHttpOperationResponse(resourceGroupName,
      name, snapshotId, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will return configuration for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getConfigurationSnapshotSlotWithHttpOperationResponse(resourceGroupName,
        name, snapshotId, slot, options)
  - uid: 'azure-arm-website.WebApps#getConfigurationSnapshotSlot'
    id: 'azure-arm-website.WebApps#getConfigurationSnapshotSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getConfigurationSnapshotSlot(resourceGroupName, name, snapshotId, slot,
      options, optionalCallback)
    summary: >-
      Gets a snapshot of the configuration of an app at a previous point

      in time.


      Gets a snapshot of the configuration of an app at a previous point in
      time.
    fullName: >-
      azure-arm-website.WebApps.getConfigurationSnapshotSlot(resourceGroupName,
      name, snapshotId, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will return configuration for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getConfigurationSnapshotSlot(resourceGroupName, name,
        snapshotId, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#recoverSiteConfigurationSnapshotSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#recoverSiteConfigurationSnapshotSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      recoverSiteConfigurationSnapshotSlotWithHttpOperationResponse(resourceGroupName,
      name, snapshotId, slot, options)
    summary: |-
      Reverts the configuration of an app to a previous snapshot.

      Reverts the configuration of an app to a previous snapshot.
    fullName: >-
      azure-arm-website.WebApps.recoverSiteConfigurationSnapshotSlotWithHttpOperationResponse(resourceGroupName,
      name, snapshotId, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will return configuration for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        recoverSiteConfigurationSnapshotSlotWithHttpOperationResponse(resourceGroupName,
        name, snapshotId, slot, options)
  - uid: 'azure-arm-website.WebApps#recoverSiteConfigurationSnapshotSlot'
    id: 'azure-arm-website.WebApps#recoverSiteConfigurationSnapshotSlot'
    parent: azure-arm-website.WebApps
    name: >-
      recoverSiteConfigurationSnapshotSlot(resourceGroupName, name, snapshotId,
      slot, options, optionalCallback)
    summary: |-
      Reverts the configuration of an app to a previous snapshot.

      Reverts the configuration of an app to a previous snapshot.
    fullName: >-
      azure-arm-website.WebApps.recoverSiteConfigurationSnapshotSlot(resourceGroupName,
      name, snapshotId, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: snapshotId
          type:
            - string
          description: The ID of the snapshot to read.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will return configuration for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function recoverSiteConfigurationSnapshotSlot(resourceGroupName, name,
        snapshotId, slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listDeploymentsSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listDeploymentsSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listDeploymentsSlotWithHttpOperationResponse(resourceGroupName, name,
      slot, options)
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listDeploymentsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API returns deployments for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listDeploymentsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listDeploymentsSlot'
    id: 'azure-arm-website.WebApps#listDeploymentsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listDeploymentsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listDeploymentsSlot(resourceGroupName, name,
      slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API returns deployments for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listDeploymentsSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getDeploymentSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getDeploymentSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getDeploymentSlotWithHttpOperationResponse(resourceGroupName, name, id,
      slot, options)
    summary: >-
      Get a deployment by its ID for an app, a specific deployment slot,

      and/or a specific scaled-out instance.


      Get a deployment by its ID for an app, a specific deployment slot, and/or
      a

      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.getDeploymentSlotWithHttpOperationResponse(resourceGroupName,
      name, id, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API gets a deployment for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDeploymentSlotWithHttpOperationResponse(resourceGroupName,
        name, id, slot, options)
  - uid: 'azure-arm-website.WebApps#getDeploymentSlot'
    id: 'azure-arm-website.WebApps#getDeploymentSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getDeploymentSlot(resourceGroupName, name, id, slot, options,
      optionalCallback)
    summary: >-
      Get a deployment by its ID for an app, a specific deployment slot,

      and/or a specific scaled-out instance.


      Get a deployment by its ID for an app, a specific deployment slot, and/or
      a

      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.getDeploymentSlot(resourceGroupName, name, id,
      slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API gets a deployment for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getDeploymentSlot(resourceGroupName, name, id, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#createDeploymentSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#createDeploymentSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      createDeploymentSlotWithHttpOperationResponse(resourceGroupName, name, id,
      slot, deployment, options)
    summary: |-
      Create a deployment for an app, a specific deployment slot, and/or
      a specific scaled-out instance.

      Create a deployment for an app, a specific deployment slot, and/or a
      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.createDeploymentSlotWithHttpOperationResponse(resourceGroupName,
      name, id, slot, deployment, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API creates a deployment for the production slot.
        - id: deployment
          type:
            - object
          description: Deployment details.
        - id: deployment.deploymentId
          type:
            - string
          description: ID.
          optional: true
        - id: deployment.status
          type:
            - number
          description: Status.
          optional: true
        - id: deployment.message
          type:
            - string
          description: Message.
          optional: true
        - id: deployment.author
          type:
            - string
          description: Author.
          optional: true
        - id: deployment.deployer
          type:
            - string
          description: Deployer.
          optional: true
        - id: deployment.authorEmail
          type:
            - string
          description: Author email.
          optional: true
        - id: deployment.startTime
          type:
            - date
          description: Start time.
          optional: true
        - id: deployment.endTime
          type:
            - date
          description: End time.
          optional: true
        - id: deployment.active
          type:
            - boolean
          description: Active.
          optional: true
        - id: deployment.details
          type:
            - string
          description: Detail.
          optional: true
        - id: deployment.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: deployment.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: deployment.location
          type:
            - string
          description: Resource Location.
        - id: deployment.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: deployment.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createDeploymentSlotWithHttpOperationResponse(resourceGroupName, name,
        id, slot, deployment, options)
  - uid: 'azure-arm-website.WebApps#createDeploymentSlot'
    id: 'azure-arm-website.WebApps#createDeploymentSlot'
    parent: azure-arm-website.WebApps
    name: >-
      createDeploymentSlot(resourceGroupName, name, id, slot, deployment,
      options, optionalCallback)
    summary: |-
      Create a deployment for an app, a specific deployment slot, and/or
      a specific scaled-out instance.

      Create a deployment for an app, a specific deployment slot, and/or a
      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.createDeploymentSlot(resourceGroupName, name,
      id, slot, deployment, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API creates a deployment for the production slot.
        - id: deployment
          type:
            - object
          description: Deployment details.
        - id: deployment.deploymentId
          type:
            - string
          description: ID.
          optional: true
        - id: deployment.status
          type:
            - number
          description: Status.
          optional: true
        - id: deployment.message
          type:
            - string
          description: Message.
          optional: true
        - id: deployment.author
          type:
            - string
          description: Author.
          optional: true
        - id: deployment.deployer
          type:
            - string
          description: Deployer.
          optional: true
        - id: deployment.authorEmail
          type:
            - string
          description: Author email.
          optional: true
        - id: deployment.startTime
          type:
            - date
          description: Start time.
          optional: true
        - id: deployment.endTime
          type:
            - date
          description: End time.
          optional: true
        - id: deployment.active
          type:
            - boolean
          description: Active.
          optional: true
        - id: deployment.details
          type:
            - string
          description: Detail.
          optional: true
        - id: deployment.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: deployment.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: deployment.location
          type:
            - string
          description: Resource Location.
        - id: deployment.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: deployment.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createDeploymentSlot(resourceGroupName, name, id, slot,
        deployment, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#deleteDeploymentSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deleteDeploymentSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      deleteDeploymentSlotWithHttpOperationResponse(resourceGroupName, name, id,
      slot, options)
    summary: >-
      Delete a deployment by its ID for an app, a specific deployment

      slot, and/or a specific scaled-out instance.


      Delete a deployment by its ID for an app, a specific deployment slot,
      and/or

      a specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.deleteDeploymentSlotWithHttpOperationResponse(resourceGroupName,
      name, id, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API deletes a deployment for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteDeploymentSlotWithHttpOperationResponse(resourceGroupName, name,
        id, slot, options)
  - uid: 'azure-arm-website.WebApps#deleteDeploymentSlot'
    id: 'azure-arm-website.WebApps#deleteDeploymentSlot'
    parent: azure-arm-website.WebApps
    name: >-
      deleteDeploymentSlot(resourceGroupName, name, id, slot, options,
      optionalCallback)
    summary: >-
      Delete a deployment by its ID for an app, a specific deployment

      slot, and/or a specific scaled-out instance.


      Delete a deployment by its ID for an app, a specific deployment slot,
      and/or

      a specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.deleteDeploymentSlot(resourceGroupName, name,
      id, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API deletes a deployment for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteDeploymentSlot(resourceGroupName, name, id, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listDomainOwnershipIdentifiersSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listDomainOwnershipIdentifiersSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listDomainOwnershipIdentifiersSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Lists ownership identifiers for domain associated with web app.

      Lists ownership identifiers for domain associated with web app.
    fullName: >-
      azure-arm-website.WebApps.listDomainOwnershipIdentifiersSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete the binding for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listDomainOwnershipIdentifiersSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listDomainOwnershipIdentifiersSlot'
    id: 'azure-arm-website.WebApps#listDomainOwnershipIdentifiersSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listDomainOwnershipIdentifiersSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Lists ownership identifiers for domain associated with web app.

      Lists ownership identifiers for domain associated with web app.
    fullName: >-
      azure-arm-website.WebApps.listDomainOwnershipIdentifiersSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete the binding for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listDomainOwnershipIdentifiersSlot(resourceGroupName, name,
        slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getDomainOwnershipIdentifierSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getDomainOwnershipIdentifierSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getDomainOwnershipIdentifierSlotWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, slot, options)
    summary: |-
      Get domain ownership identifier for web app.

      Get domain ownership identifier for web app.
    fullName: >-
      azure-arm-website.WebApps.getDomainOwnershipIdentifierSlotWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete the binding for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDomainOwnershipIdentifierSlotWithHttpOperationResponse(resourceGroupName,
        name, domainOwnershipIdentifierName, slot, options)
  - uid: 'azure-arm-website.WebApps#getDomainOwnershipIdentifierSlot'
    id: 'azure-arm-website.WebApps#getDomainOwnershipIdentifierSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getDomainOwnershipIdentifierSlot(resourceGroupName, name,
      domainOwnershipIdentifierName, slot, options, optionalCallback)
    summary: |-
      Get domain ownership identifier for web app.

      Get domain ownership identifier for web app.
    fullName: >-
      azure-arm-website.WebApps.getDomainOwnershipIdentifierSlot(resourceGroupName,
      name, domainOwnershipIdentifierName, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete the binding for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getDomainOwnershipIdentifierSlot(resourceGroupName, name,
        domainOwnershipIdentifierName, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateDomainOwnershipIdentifierSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateDomainOwnershipIdentifierSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateDomainOwnershipIdentifierSlotWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, domainOwnershipIdentifier, slot,
      options)
    summary: |-
      Creates a domain ownership identifier for web app, or updates an
      existing ownership identifier.

      Creates a domain ownership identifier for web app, or updates an existing
      ownership identifier.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateDomainOwnershipIdentifierSlotWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, domainOwnershipIdentifier, slot,
      options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: domainOwnershipIdentifier
          type:
            - object
          description: |-
            A JSON representation of the
            domain ownership properties.
        - id: domainOwnershipIdentifier.identifierId
          type:
            - string
          description: ID.
          optional: true
        - id: domainOwnershipIdentifier.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: domainOwnershipIdentifier.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: domainOwnershipIdentifier.location
          type:
            - string
          description: Resource Location.
        - id: domainOwnershipIdentifier.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: domainOwnershipIdentifier.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete the binding for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateDomainOwnershipIdentifierSlotWithHttpOperationResponse(resourceGroupName,
        name, domainOwnershipIdentifierName, domainOwnershipIdentifier, slot,
        options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateDomainOwnershipIdentifierSlot'
    id: 'azure-arm-website.WebApps#createOrUpdateDomainOwnershipIdentifierSlot'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateDomainOwnershipIdentifierSlot(resourceGroupName, name,
      domainOwnershipIdentifierName, domainOwnershipIdentifier, slot, options,
      optionalCallback)
    summary: |-
      Creates a domain ownership identifier for web app, or updates an
      existing ownership identifier.

      Creates a domain ownership identifier for web app, or updates an existing
      ownership identifier.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateDomainOwnershipIdentifierSlot(resourceGroupName,
      name, domainOwnershipIdentifierName, domainOwnershipIdentifier, slot,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: domainOwnershipIdentifier
          type:
            - object
          description: |-
            A JSON representation of the
            domain ownership properties.
        - id: domainOwnershipIdentifier.identifierId
          type:
            - string
          description: ID.
          optional: true
        - id: domainOwnershipIdentifier.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: domainOwnershipIdentifier.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: domainOwnershipIdentifier.location
          type:
            - string
          description: Resource Location.
        - id: domainOwnershipIdentifier.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: domainOwnershipIdentifier.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete the binding for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateDomainOwnershipIdentifierSlot(resourceGroupName,
        name, domainOwnershipIdentifierName, domainOwnershipIdentifier, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#deleteDomainOwnershipIdentifierSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#deleteDomainOwnershipIdentifierSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      deleteDomainOwnershipIdentifierSlotWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, slot, options)
    summary: |-
      Deletes a domain ownership identifier for a web app.

      Deletes a domain ownership identifier for a web app.
    fullName: >-
      azure-arm-website.WebApps.deleteDomainOwnershipIdentifierSlotWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete the binding for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteDomainOwnershipIdentifierSlotWithHttpOperationResponse(resourceGroupName,
        name, domainOwnershipIdentifierName, slot, options)
  - uid: 'azure-arm-website.WebApps#deleteDomainOwnershipIdentifierSlot'
    id: 'azure-arm-website.WebApps#deleteDomainOwnershipIdentifierSlot'
    parent: azure-arm-website.WebApps
    name: >-
      deleteDomainOwnershipIdentifierSlot(resourceGroupName, name,
      domainOwnershipIdentifierName, slot, options, optionalCallback)
    summary: |-
      Deletes a domain ownership identifier for a web app.

      Deletes a domain ownership identifier for a web app.
    fullName: >-
      azure-arm-website.WebApps.deleteDomainOwnershipIdentifierSlot(resourceGroupName,
      name, domainOwnershipIdentifierName, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete the binding for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteDomainOwnershipIdentifierSlot(resourceGroupName, name,
        domainOwnershipIdentifierName, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateDomainOwnershipIdentifierSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateDomainOwnershipIdentifierSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateDomainOwnershipIdentifierSlotWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, domainOwnershipIdentifier, slot,
      options)
    summary: |-
      Creates a domain ownership identifier for web app, or updates an
      existing ownership identifier.

      Creates a domain ownership identifier for web app, or updates an existing
      ownership identifier.
    fullName: >-
      azure-arm-website.WebApps.updateDomainOwnershipIdentifierSlotWithHttpOperationResponse(resourceGroupName,
      name, domainOwnershipIdentifierName, domainOwnershipIdentifier, slot,
      options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: domainOwnershipIdentifier
          type:
            - object
          description: |-
            A JSON representation of the
            domain ownership properties.
        - id: domainOwnershipIdentifier.identifierId
          type:
            - string
          description: ID.
          optional: true
        - id: domainOwnershipIdentifier.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: domainOwnershipIdentifier.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: domainOwnershipIdentifier.location
          type:
            - string
          description: Resource Location.
        - id: domainOwnershipIdentifier.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: domainOwnershipIdentifier.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete the binding for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateDomainOwnershipIdentifierSlotWithHttpOperationResponse(resourceGroupName,
        name, domainOwnershipIdentifierName, domainOwnershipIdentifier, slot,
        options)
  - uid: 'azure-arm-website.WebApps#updateDomainOwnershipIdentifierSlot'
    id: 'azure-arm-website.WebApps#updateDomainOwnershipIdentifierSlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateDomainOwnershipIdentifierSlot(resourceGroupName, name,
      domainOwnershipIdentifierName, domainOwnershipIdentifier, slot, options,
      optionalCallback)
    summary: |-
      Creates a domain ownership identifier for web app, or updates an
      existing ownership identifier.

      Creates a domain ownership identifier for web app, or updates an existing
      ownership identifier.
    fullName: >-
      azure-arm-website.WebApps.updateDomainOwnershipIdentifierSlot(resourceGroupName,
      name, domainOwnershipIdentifierName, domainOwnershipIdentifier, slot,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type:
            - string
          description: |-
            Name of domain ownership
            identifier.
        - id: domainOwnershipIdentifier
          type:
            - object
          description: |-
            A JSON representation of the
            domain ownership properties.
        - id: domainOwnershipIdentifier.identifierId
          type:
            - string
          description: ID.
          optional: true
        - id: domainOwnershipIdentifier.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: domainOwnershipIdentifier.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: domainOwnershipIdentifier.location
          type:
            - string
          description: Resource Location.
        - id: domainOwnershipIdentifier.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: domainOwnershipIdentifier.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete the binding for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateDomainOwnershipIdentifierSlot(resourceGroupName, name,
        domainOwnershipIdentifierName, domainOwnershipIdentifier, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listHostNameBindingsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listHostNameBindingsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listHostNameBindingsSlotWithHttpOperationResponse(resourceGroupName, name,
      slot, options)
    summary: |-
      Get hostname bindings for an app or a deployment slot.

      Get hostname bindings for an app or a deployment slot.
    fullName: >-
      azure-arm-website.WebApps.listHostNameBindingsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API gets hostname bindings for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listHostNameBindingsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listHostNameBindingsSlot'
    id: 'azure-arm-website.WebApps#listHostNameBindingsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listHostNameBindingsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Get hostname bindings for an app or a deployment slot.

      Get hostname bindings for an app or a deployment slot.
    fullName: >-
      azure-arm-website.WebApps.listHostNameBindingsSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API gets hostname bindings for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listHostNameBindingsSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#getHostNameBindingSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getHostNameBindingSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getHostNameBindingSlotWithHttpOperationResponse(resourceGroupName, name,
      slot, hostName, options)
    summary: |-
      Get the named hostname binding for an app (or deployment slot, if
      specified).

      Get the named hostname binding for an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.getHostNameBindingSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, hostName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API the named binding for the production slot.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getHostNameBindingSlotWithHttpOperationResponse(resourceGroupName, name,
        slot, hostName, options)
  - uid: 'azure-arm-website.WebApps#getHostNameBindingSlot'
    id: 'azure-arm-website.WebApps#getHostNameBindingSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getHostNameBindingSlot(resourceGroupName, name, slot, hostName, options,
      optionalCallback)
    summary: |-
      Get the named hostname binding for an app (or deployment slot, if
      specified).

      Get the named hostname binding for an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.getHostNameBindingSlot(resourceGroupName, name,
      slot, hostName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API the named binding for the production slot.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getHostNameBindingSlot(resourceGroupName, name, slot, hostName,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateHostNameBindingSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateHostNameBindingSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateHostNameBindingSlotWithHttpOperationResponse(resourceGroupName,
      name, hostName, hostNameBinding, slot, options)
    summary: |-
      Creates a hostname binding for an app.

      Creates a hostname binding for an app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateHostNameBindingSlotWithHttpOperationResponse(resourceGroupName,
      name, hostName, hostNameBinding, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type:
            - object
          description: |-
            Binding details. This is the JSON
            representation of a HostNameBinding object.
        - id: hostNameBinding.hostNameBindingName
          type:
            - string
          description: Hostname.
          optional: true
        - id: hostNameBinding.siteName
          type:
            - string
          description: App Service app name.
          optional: true
        - id: hostNameBinding.domainId
          type:
            - string
          description: |-
            Fully qualified ARM domain
            resource URI.
          optional: true
        - id: hostNameBinding.azureResourceName
          type:
            - string
          description: Azure resource name.
          optional: true
        - id: hostNameBinding.azureResourceType
          type:
            - string
          description: |-
            Azure resource type.
            Possible values include: 'Website', 'TrafficManager'
          optional: true
        - id: hostNameBinding.customHostNameDnsRecordType
          type:
            - string
          description: |-
            Custom DNS
            record type. Possible values include: 'CName', 'A'
          optional: true
        - id: hostNameBinding.hostNameType
          type:
            - string
          description: |-
            Hostname type. Possible
            values include: 'Verified', 'Managed'
          optional: true
        - id: hostNameBinding.sslState
          type:
            - string
          description: |-
            SSL type. Possible values
            include: 'Disabled', 'SniEnabled', 'IpBasedEnabled'
          optional: true
        - id: hostNameBinding.thumbprint
          type:
            - string
          description: SSL certificate thumbprint
          optional: true
        - id: hostNameBinding.virtualIP
          type:
            - string
          description: |-
            Virtual IP address assigned to
            the hostname if IP based SSL is enabled.
          optional: true
        - id: hostNameBinding.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: hostNameBinding.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: hostNameBinding.location
          type:
            - string
          description: Resource Location.
        - id: hostNameBinding.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: hostNameBinding.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will create a binding for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateHostNameBindingSlotWithHttpOperationResponse(resourceGroupName,
        name, hostName, hostNameBinding, slot, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateHostNameBindingSlot'
    id: 'azure-arm-website.WebApps#createOrUpdateHostNameBindingSlot'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateHostNameBindingSlot(resourceGroupName, name, hostName,
      hostNameBinding, slot, options, optionalCallback)
    summary: |-
      Creates a hostname binding for an app.

      Creates a hostname binding for an app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateHostNameBindingSlot(resourceGroupName,
      name, hostName, hostNameBinding, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type:
            - object
          description: |-
            Binding details. This is the JSON
            representation of a HostNameBinding object.
        - id: hostNameBinding.hostNameBindingName
          type:
            - string
          description: Hostname.
          optional: true
        - id: hostNameBinding.siteName
          type:
            - string
          description: App Service app name.
          optional: true
        - id: hostNameBinding.domainId
          type:
            - string
          description: |-
            Fully qualified ARM domain
            resource URI.
          optional: true
        - id: hostNameBinding.azureResourceName
          type:
            - string
          description: Azure resource name.
          optional: true
        - id: hostNameBinding.azureResourceType
          type:
            - string
          description: |-
            Azure resource type.
            Possible values include: 'Website', 'TrafficManager'
          optional: true
        - id: hostNameBinding.customHostNameDnsRecordType
          type:
            - string
          description: |-
            Custom DNS
            record type. Possible values include: 'CName', 'A'
          optional: true
        - id: hostNameBinding.hostNameType
          type:
            - string
          description: |-
            Hostname type. Possible
            values include: 'Verified', 'Managed'
          optional: true
        - id: hostNameBinding.sslState
          type:
            - string
          description: |-
            SSL type. Possible values
            include: 'Disabled', 'SniEnabled', 'IpBasedEnabled'
          optional: true
        - id: hostNameBinding.thumbprint
          type:
            - string
          description: SSL certificate thumbprint
          optional: true
        - id: hostNameBinding.virtualIP
          type:
            - string
          description: |-
            Virtual IP address assigned to
            the hostname if IP based SSL is enabled.
          optional: true
        - id: hostNameBinding.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: hostNameBinding.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: hostNameBinding.location
          type:
            - string
          description: Resource Location.
        - id: hostNameBinding.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: hostNameBinding.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will create a binding for the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateHostNameBindingSlot(resourceGroupName, name,
        hostName, hostNameBinding, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#deleteHostNameBindingSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#deleteHostNameBindingSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      deleteHostNameBindingSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, hostName, options)
    summary: |-
      Deletes a hostname binding for an app.

      Deletes a hostname binding for an app.
    fullName: >-
      azure-arm-website.WebApps.deleteHostNameBindingSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, hostName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete the binding for the production slot.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteHostNameBindingSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, hostName, options)
  - uid: 'azure-arm-website.WebApps#deleteHostNameBindingSlot'
    id: 'azure-arm-website.WebApps#deleteHostNameBindingSlot'
    parent: azure-arm-website.WebApps
    name: >-
      deleteHostNameBindingSlot(resourceGroupName, name, slot, hostName,
      options, optionalCallback)
    summary: |-
      Deletes a hostname binding for an app.

      Deletes a hostname binding for an app.
    fullName: >-
      azure-arm-website.WebApps.deleteHostNameBindingSlot(resourceGroupName,
      name, slot, hostName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will delete the binding for the production slot.
        - id: hostName
          type:
            - string
          description: Hostname in the hostname binding.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteHostNameBindingSlot(resourceGroupName, name, slot,
        hostName, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#getHybridConnectionSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getHybridConnectionSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getHybridConnectionSlotWithHttpOperationResponse(resourceGroupName, name,
      namespaceName, relayName, slot, options)
    summary: |-
      Retrieves a specific Service Bus Hybrid Connection used by this Web
      App.

      Retrieves a specific Service Bus Hybrid Connection used by this Web App.
    fullName: >-
      azure-arm-website.WebApps.getHybridConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getHybridConnectionSlotWithHttpOperationResponse(resourceGroupName,
        name, namespaceName, relayName, slot, options)
  - uid: 'azure-arm-website.WebApps#getHybridConnectionSlot'
    id: 'azure-arm-website.WebApps#getHybridConnectionSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getHybridConnectionSlot(resourceGroupName, name, namespaceName, relayName,
      slot, options, optionalCallback)
    summary: |-
      Retrieves a specific Service Bus Hybrid Connection used by this Web
      App.

      Retrieves a specific Service Bus Hybrid Connection used by this Web App.
    fullName: >-
      azure-arm-website.WebApps.getHybridConnectionSlot(resourceGroupName, name,
      namespaceName, relayName, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getHybridConnectionSlot(resourceGroupName, name, namespaceName,
        relayName, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateHybridConnectionSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateHybridConnectionSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateHybridConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, connectionEnvelope, slot, options)
    summary: |-
      Creates a new Hybrid Connection using a Service Bus relay.

      Creates a new Hybrid Connection using a Service Bus relay.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateHybridConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, connectionEnvelope, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: connectionEnvelope
          type:
            - object
          description: The details of the hybrid connection
        - id: connectionEnvelope.serviceBusNamespace
          type:
            - string
          description: |-
            The name of the
            Service Bus namespace.
          optional: true
        - id: connectionEnvelope.relayName
          type:
            - string
          description: |-
            The name of the Service Bus
            relay.
          optional: true
        - id: connectionEnvelope.relayArmUri
          type:
            - string
          description: |-
            The ARM URI to the Service
            Bus relay.
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: The hostname of the endpoint.
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: The port of the endpoint.
          optional: true
        - id: connectionEnvelope.sendKeyName
          type:
            - string
          description: >-
            The name of the Service Bus

            key which has Send permissions. This is used to authenticate to
            Service Bus.
          optional: true
        - id: connectionEnvelope.sendKeyValue
          type:
            - string
          description: >-
            The value of the Service

            Bus key. This is used to authenticate to Service Bus. In ARM this
            key will

            not be returned

            normally, use the POST /listKeys API instead.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateHybridConnectionSlotWithHttpOperationResponse(resourceGroupName,
        name, namespaceName, relayName, connectionEnvelope, slot, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateHybridConnectionSlot'
    id: 'azure-arm-website.WebApps#createOrUpdateHybridConnectionSlot'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateHybridConnectionSlot(resourceGroupName, name, namespaceName,
      relayName, connectionEnvelope, slot, options, optionalCallback)
    summary: |-
      Creates a new Hybrid Connection using a Service Bus relay.

      Creates a new Hybrid Connection using a Service Bus relay.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateHybridConnectionSlot(resourceGroupName,
      name, namespaceName, relayName, connectionEnvelope, slot, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: connectionEnvelope
          type:
            - object
          description: The details of the hybrid connection
        - id: connectionEnvelope.serviceBusNamespace
          type:
            - string
          description: |-
            The name of the
            Service Bus namespace.
          optional: true
        - id: connectionEnvelope.relayName
          type:
            - string
          description: |-
            The name of the Service Bus
            relay.
          optional: true
        - id: connectionEnvelope.relayArmUri
          type:
            - string
          description: |-
            The ARM URI to the Service
            Bus relay.
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: The hostname of the endpoint.
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: The port of the endpoint.
          optional: true
        - id: connectionEnvelope.sendKeyName
          type:
            - string
          description: >-
            The name of the Service Bus

            key which has Send permissions. This is used to authenticate to
            Service Bus.
          optional: true
        - id: connectionEnvelope.sendKeyValue
          type:
            - string
          description: >-
            The value of the Service

            Bus key. This is used to authenticate to Service Bus. In ARM this
            key will

            not be returned

            normally, use the POST /listKeys API instead.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateHybridConnectionSlot(resourceGroupName, name,
        namespaceName, relayName, connectionEnvelope, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#deleteHybridConnectionSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#deleteHybridConnectionSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      deleteHybridConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, slot, options)
    summary: |-
      Removes a Hybrid Connection from this site.

      Removes a Hybrid Connection from this site.
    fullName: >-
      azure-arm-website.WebApps.deleteHybridConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteHybridConnectionSlotWithHttpOperationResponse(resourceGroupName,
        name, namespaceName, relayName, slot, options)
  - uid: 'azure-arm-website.WebApps#deleteHybridConnectionSlot'
    id: 'azure-arm-website.WebApps#deleteHybridConnectionSlot'
    parent: azure-arm-website.WebApps
    name: >-
      deleteHybridConnectionSlot(resourceGroupName, name, namespaceName,
      relayName, slot, options, optionalCallback)
    summary: |-
      Removes a Hybrid Connection from this site.

      Removes a Hybrid Connection from this site.
    fullName: >-
      azure-arm-website.WebApps.deleteHybridConnectionSlot(resourceGroupName,
      name, namespaceName, relayName, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteHybridConnectionSlot(resourceGroupName, name,
        namespaceName, relayName, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateHybridConnectionSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateHybridConnectionSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateHybridConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, connectionEnvelope, slot, options)
    summary: |-
      Creates a new Hybrid Connection using a Service Bus relay.

      Creates a new Hybrid Connection using a Service Bus relay.
    fullName: >-
      azure-arm-website.WebApps.updateHybridConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, connectionEnvelope, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: connectionEnvelope
          type:
            - object
          description: The details of the hybrid connection
        - id: connectionEnvelope.serviceBusNamespace
          type:
            - string
          description: |-
            The name of the
            Service Bus namespace.
          optional: true
        - id: connectionEnvelope.relayName
          type:
            - string
          description: |-
            The name of the Service Bus
            relay.
          optional: true
        - id: connectionEnvelope.relayArmUri
          type:
            - string
          description: |-
            The ARM URI to the Service
            Bus relay.
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: The hostname of the endpoint.
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: The port of the endpoint.
          optional: true
        - id: connectionEnvelope.sendKeyName
          type:
            - string
          description: >-
            The name of the Service Bus

            key which has Send permissions. This is used to authenticate to
            Service Bus.
          optional: true
        - id: connectionEnvelope.sendKeyValue
          type:
            - string
          description: >-
            The value of the Service

            Bus key. This is used to authenticate to Service Bus. In ARM this
            key will

            not be returned

            normally, use the POST /listKeys API instead.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateHybridConnectionSlotWithHttpOperationResponse(resourceGroupName,
        name, namespaceName, relayName, connectionEnvelope, slot, options)
  - uid: 'azure-arm-website.WebApps#updateHybridConnectionSlot'
    id: 'azure-arm-website.WebApps#updateHybridConnectionSlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateHybridConnectionSlot(resourceGroupName, name, namespaceName,
      relayName, connectionEnvelope, slot, options, optionalCallback)
    summary: |-
      Creates a new Hybrid Connection using a Service Bus relay.

      Creates a new Hybrid Connection using a Service Bus relay.
    fullName: >-
      azure-arm-website.WebApps.updateHybridConnectionSlot(resourceGroupName,
      name, namespaceName, relayName, connectionEnvelope, slot, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: connectionEnvelope
          type:
            - object
          description: The details of the hybrid connection
        - id: connectionEnvelope.serviceBusNamespace
          type:
            - string
          description: |-
            The name of the
            Service Bus namespace.
          optional: true
        - id: connectionEnvelope.relayName
          type:
            - string
          description: |-
            The name of the Service Bus
            relay.
          optional: true
        - id: connectionEnvelope.relayArmUri
          type:
            - string
          description: |-
            The ARM URI to the Service
            Bus relay.
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: The hostname of the endpoint.
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: The port of the endpoint.
          optional: true
        - id: connectionEnvelope.sendKeyName
          type:
            - string
          description: >-
            The name of the Service Bus

            key which has Send permissions. This is used to authenticate to
            Service Bus.
          optional: true
        - id: connectionEnvelope.sendKeyValue
          type:
            - string
          description: >-
            The value of the Service

            Bus key. This is used to authenticate to Service Bus. In ARM this
            key will

            not be returned

            normally, use the POST /listKeys API instead.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateHybridConnectionSlot(resourceGroupName, name,
        namespaceName, relayName, connectionEnvelope, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listHybridConnectionKeysSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listHybridConnectionKeysSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listHybridConnectionKeysSlotWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, slot, options)
    summary: |-
      Gets the send key name and value for a Hybrid Connection.

      Gets the send key name and value for a Hybrid Connection.
    fullName: >-
      azure-arm-website.WebApps.listHybridConnectionKeysSlotWithHttpOperationResponse(resourceGroupName,
      name, namespaceName, relayName, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listHybridConnectionKeysSlotWithHttpOperationResponse(resourceGroupName,
        name, namespaceName, relayName, slot, options)
  - uid: 'azure-arm-website.WebApps#listHybridConnectionKeysSlot'
    id: 'azure-arm-website.WebApps#listHybridConnectionKeysSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listHybridConnectionKeysSlot(resourceGroupName, name, namespaceName,
      relayName, slot, options, optionalCallback)
    summary: |-
      Gets the send key name and value for a Hybrid Connection.

      Gets the send key name and value for a Hybrid Connection.
    fullName: >-
      azure-arm-website.WebApps.listHybridConnectionKeysSlot(resourceGroupName,
      name, namespaceName, relayName, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: namespaceName
          type:
            - string
          description: The namespace for this hybrid connection
        - id: relayName
          type:
            - string
          description: The relay name for this hybrid connection
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listHybridConnectionKeysSlot(resourceGroupName, name,
        namespaceName, relayName, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listHybridConnectionsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listHybridConnectionsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listHybridConnectionsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Retrieves all Service Bus Hybrid Connections used by this Web App.

      Retrieves all Service Bus Hybrid Connections used by this Web App.
    fullName: >-
      azure-arm-website.WebApps.listHybridConnectionsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listHybridConnectionsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listHybridConnectionsSlot'
    id: 'azure-arm-website.WebApps#listHybridConnectionsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listHybridConnectionsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Retrieves all Service Bus Hybrid Connections used by this Web App.

      Retrieves all Service Bus Hybrid Connections used by this Web App.
    fullName: >-
      azure-arm-website.WebApps.listHybridConnectionsSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app
        - id: slot
          type:
            - string
          description: The name of the slot for the web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listHybridConnectionsSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listRelayServiceConnectionsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listRelayServiceConnectionsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listRelayServiceConnectionsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Gets hybrid connections configured for an app (or deployment slot,
      if specified).

      Gets hybrid connections configured for an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listRelayServiceConnectionsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get hybrid connections for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRelayServiceConnectionsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listRelayServiceConnectionsSlot'
    id: 'azure-arm-website.WebApps#listRelayServiceConnectionsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listRelayServiceConnectionsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets hybrid connections configured for an app (or deployment slot,
      if specified).

      Gets hybrid connections configured for an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listRelayServiceConnectionsSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get hybrid connections for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listRelayServiceConnectionsSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getRelayServiceConnectionSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getRelayServiceConnectionSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getRelayServiceConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, entityName, slot, options)
    summary: |-
      Gets a hybrid connection configuration by its name.

      Gets a hybrid connection configuration by its name.
    fullName: >-
      azure-arm-website.WebApps.getRelayServiceConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, entityName, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get a hybrid connection for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getRelayServiceConnectionSlotWithHttpOperationResponse(resourceGroupName,
        name, entityName, slot, options)
  - uid: 'azure-arm-website.WebApps#getRelayServiceConnectionSlot'
    id: 'azure-arm-website.WebApps#getRelayServiceConnectionSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getRelayServiceConnectionSlot(resourceGroupName, name, entityName, slot,
      options, optionalCallback)
    summary: |-
      Gets a hybrid connection configuration by its name.

      Gets a hybrid connection configuration by its name.
    fullName: >-
      azure-arm-website.WebApps.getRelayServiceConnectionSlot(resourceGroupName,
      name, entityName, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get a hybrid connection for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getRelayServiceConnectionSlot(resourceGroupName, name,
        entityName, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateRelayServiceConnectionSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateRelayServiceConnectionSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateRelayServiceConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, entityName, connectionEnvelope, slot, options)
    summary: >-
      Creates a new hybrid connection configuration (PUT), or updates an

      existing one (PATCH).


      Creates a new hybrid connection configuration (PUT), or updates an
      existing

      one (PATCH).
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateRelayServiceConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, entityName, connectionEnvelope, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Details of the hybrid connection
            configuration.
        - id: connectionEnvelope.entityName
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.entityConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceType
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: ''
          optional: true
        - id: connectionEnvelope.biztalkUri
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will create or update a hybrid connection for the
            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateRelayServiceConnectionSlotWithHttpOperationResponse(resourceGroupName,
        name, entityName, connectionEnvelope, slot, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateRelayServiceConnectionSlot'
    id: 'azure-arm-website.WebApps#createOrUpdateRelayServiceConnectionSlot'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateRelayServiceConnectionSlot(resourceGroupName, name,
      entityName, connectionEnvelope, slot, options, optionalCallback)
    summary: >-
      Creates a new hybrid connection configuration (PUT), or updates an

      existing one (PATCH).


      Creates a new hybrid connection configuration (PUT), or updates an
      existing

      one (PATCH).
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateRelayServiceConnectionSlot(resourceGroupName,
      name, entityName, connectionEnvelope, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Details of the hybrid connection
            configuration.
        - id: connectionEnvelope.entityName
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.entityConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceType
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: ''
          optional: true
        - id: connectionEnvelope.biztalkUri
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will create or update a hybrid connection for the
            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateRelayServiceConnectionSlot(resourceGroupName,
        name, entityName, connectionEnvelope, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#deleteRelayServiceConnectionSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#deleteRelayServiceConnectionSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      deleteRelayServiceConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, entityName, slot, options)
    summary: |-
      Deletes a relay service connection by its name.

      Deletes a relay service connection by its name.
    fullName: >-
      azure-arm-website.WebApps.deleteRelayServiceConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, entityName, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will delete a hybrid connection for the
            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteRelayServiceConnectionSlotWithHttpOperationResponse(resourceGroupName,
        name, entityName, slot, options)
  - uid: 'azure-arm-website.WebApps#deleteRelayServiceConnectionSlot'
    id: 'azure-arm-website.WebApps#deleteRelayServiceConnectionSlot'
    parent: azure-arm-website.WebApps
    name: >-
      deleteRelayServiceConnectionSlot(resourceGroupName, name, entityName,
      slot, options, optionalCallback)
    summary: |-
      Deletes a relay service connection by its name.

      Deletes a relay service connection by its name.
    fullName: >-
      azure-arm-website.WebApps.deleteRelayServiceConnectionSlot(resourceGroupName,
      name, entityName, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will delete a hybrid connection for the
            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteRelayServiceConnectionSlot(resourceGroupName, name,
        entityName, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateRelayServiceConnectionSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateRelayServiceConnectionSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateRelayServiceConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, entityName, connectionEnvelope, slot, options)
    summary: >-
      Creates a new hybrid connection configuration (PUT), or updates an

      existing one (PATCH).


      Creates a new hybrid connection configuration (PUT), or updates an
      existing

      one (PATCH).
    fullName: >-
      azure-arm-website.WebApps.updateRelayServiceConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, entityName, connectionEnvelope, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Details of the hybrid connection
            configuration.
        - id: connectionEnvelope.entityName
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.entityConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceType
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: ''
          optional: true
        - id: connectionEnvelope.biztalkUri
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will create or update a hybrid connection for the
            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateRelayServiceConnectionSlotWithHttpOperationResponse(resourceGroupName,
        name, entityName, connectionEnvelope, slot, options)
  - uid: 'azure-arm-website.WebApps#updateRelayServiceConnectionSlot'
    id: 'azure-arm-website.WebApps#updateRelayServiceConnectionSlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateRelayServiceConnectionSlot(resourceGroupName, name, entityName,
      connectionEnvelope, slot, options, optionalCallback)
    summary: >-
      Creates a new hybrid connection configuration (PUT), or updates an

      existing one (PATCH).


      Creates a new hybrid connection configuration (PUT), or updates an
      existing

      one (PATCH).
    fullName: >-
      azure-arm-website.WebApps.updateRelayServiceConnectionSlot(resourceGroupName,
      name, entityName, connectionEnvelope, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: entityName
          type:
            - string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Details of the hybrid connection
            configuration.
        - id: connectionEnvelope.entityName
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.entityConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceType
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.resourceConnectionString
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.hostname
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.port
          type:
            - number
          description: ''
          optional: true
        - id: connectionEnvelope.biztalkUri
          type:
            - string
          description: ''
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will create or update a hybrid connection for the
            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateRelayServiceConnectionSlot(resourceGroupName, name,
        entityName, connectionEnvelope, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listInstanceIdentifiersSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listInstanceIdentifiersSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listInstanceIdentifiersSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Gets all scale-out instances of an app.

      Gets all scale-out instances of an app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceIdentifiersSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API gets the production slot instances.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listInstanceIdentifiersSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listInstanceIdentifiersSlot'
    id: 'azure-arm-website.WebApps#listInstanceIdentifiersSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listInstanceIdentifiersSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets all scale-out instances of an app.

      Gets all scale-out instances of an app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceIdentifiersSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API gets the production slot instances.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listInstanceIdentifiersSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listInstanceDeploymentsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listInstanceDeploymentsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listInstanceDeploymentsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, instanceId, options)
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceDeploymentsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, instanceId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API returns deployments for the production slot.
        - id: instanceId
          type:
            - string
          description: |-
            The ID of a specific scaled-out instance. This is
            the value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listInstanceDeploymentsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, instanceId, options)
  - uid: 'azure-arm-website.WebApps#listInstanceDeploymentsSlot'
    id: 'azure-arm-website.WebApps#listInstanceDeploymentsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listInstanceDeploymentsSlot(resourceGroupName, name, slot, instanceId,
      options, optionalCallback)
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceDeploymentsSlot(resourceGroupName,
      name, slot, instanceId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API returns deployments for the production slot.
        - id: instanceId
          type:
            - string
          description: |-
            The ID of a specific scaled-out instance. This is
            the value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listInstanceDeploymentsSlot(resourceGroupName, name, slot,
        instanceId, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getInstanceDeploymentSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getInstanceDeploymentSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getInstanceDeploymentSlotWithHttpOperationResponse(resourceGroupName,
      name, id, slot, instanceId, options)
    summary: >-
      Get a deployment by its ID for an app, a specific deployment slot,

      and/or a specific scaled-out instance.


      Get a deployment by its ID for an app, a specific deployment slot, and/or
      a

      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.getInstanceDeploymentSlotWithHttpOperationResponse(resourceGroupName,
      name, id, slot, instanceId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API gets a deployment for the production slot.
        - id: instanceId
          type:
            - string
          description: |-
            ID of a specific scaled-out instance. This is the
            value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getInstanceDeploymentSlotWithHttpOperationResponse(resourceGroupName,
        name, id, slot, instanceId, options)
  - uid: 'azure-arm-website.WebApps#getInstanceDeploymentSlot'
    id: 'azure-arm-website.WebApps#getInstanceDeploymentSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getInstanceDeploymentSlot(resourceGroupName, name, id, slot, instanceId,
      options, optionalCallback)
    summary: >-
      Get a deployment by its ID for an app, a specific deployment slot,

      and/or a specific scaled-out instance.


      Get a deployment by its ID for an app, a specific deployment slot, and/or
      a

      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.getInstanceDeploymentSlot(resourceGroupName,
      name, id, slot, instanceId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API gets a deployment for the production slot.
        - id: instanceId
          type:
            - string
          description: |-
            ID of a specific scaled-out instance. This is the
            value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getInstanceDeploymentSlot(resourceGroupName, name, id, slot,
        instanceId, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createInstanceDeploymentSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createInstanceDeploymentSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createInstanceDeploymentSlotWithHttpOperationResponse(resourceGroupName,
      name, id, slot, instanceId, deployment, options)
    summary: |-
      Create a deployment for an app, a specific deployment slot, and/or
      a specific scaled-out instance.

      Create a deployment for an app, a specific deployment slot, and/or a
      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.createInstanceDeploymentSlotWithHttpOperationResponse(resourceGroupName,
      name, id, slot, instanceId, deployment, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API creates a deployment for the production slot.
        - id: instanceId
          type:
            - string
          description: |-
            ID of a specific scaled-out instance. This is the
            value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: deployment
          type:
            - object
          description: Deployment details.
        - id: deployment.deploymentId
          type:
            - string
          description: ID.
          optional: true
        - id: deployment.status
          type:
            - number
          description: Status.
          optional: true
        - id: deployment.message
          type:
            - string
          description: Message.
          optional: true
        - id: deployment.author
          type:
            - string
          description: Author.
          optional: true
        - id: deployment.deployer
          type:
            - string
          description: Deployer.
          optional: true
        - id: deployment.authorEmail
          type:
            - string
          description: Author email.
          optional: true
        - id: deployment.startTime
          type:
            - date
          description: Start time.
          optional: true
        - id: deployment.endTime
          type:
            - date
          description: End time.
          optional: true
        - id: deployment.active
          type:
            - boolean
          description: Active.
          optional: true
        - id: deployment.details
          type:
            - string
          description: Detail.
          optional: true
        - id: deployment.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: deployment.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: deployment.location
          type:
            - string
          description: Resource Location.
        - id: deployment.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: deployment.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createInstanceDeploymentSlotWithHttpOperationResponse(resourceGroupName,
        name, id, slot, instanceId, deployment, options)
  - uid: 'azure-arm-website.WebApps#createInstanceDeploymentSlot'
    id: 'azure-arm-website.WebApps#createInstanceDeploymentSlot'
    parent: azure-arm-website.WebApps
    name: >-
      createInstanceDeploymentSlot(resourceGroupName, name, id, slot,
      instanceId, deployment, options, optionalCallback)
    summary: |-
      Create a deployment for an app, a specific deployment slot, and/or
      a specific scaled-out instance.

      Create a deployment for an app, a specific deployment slot, and/or a
      specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.createInstanceDeploymentSlot(resourceGroupName,
      name, id, slot, instanceId, deployment, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: ID of an existing deployment.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API creates a deployment for the production slot.
        - id: instanceId
          type:
            - string
          description: |-
            ID of a specific scaled-out instance. This is the
            value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: deployment
          type:
            - object
          description: Deployment details.
        - id: deployment.deploymentId
          type:
            - string
          description: ID.
          optional: true
        - id: deployment.status
          type:
            - number
          description: Status.
          optional: true
        - id: deployment.message
          type:
            - string
          description: Message.
          optional: true
        - id: deployment.author
          type:
            - string
          description: Author.
          optional: true
        - id: deployment.deployer
          type:
            - string
          description: Deployer.
          optional: true
        - id: deployment.authorEmail
          type:
            - string
          description: Author email.
          optional: true
        - id: deployment.startTime
          type:
            - date
          description: Start time.
          optional: true
        - id: deployment.endTime
          type:
            - date
          description: End time.
          optional: true
        - id: deployment.active
          type:
            - boolean
          description: Active.
          optional: true
        - id: deployment.details
          type:
            - string
          description: Detail.
          optional: true
        - id: deployment.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: deployment.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: deployment.location
          type:
            - string
          description: Resource Location.
        - id: deployment.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: deployment.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createInstanceDeploymentSlot(resourceGroupName, name, id, slot,
        instanceId, deployment, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#deleteInstanceDeploymentSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#deleteInstanceDeploymentSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      deleteInstanceDeploymentSlotWithHttpOperationResponse(resourceGroupName,
      name, id, slot, instanceId, options)
    summary: >-
      Delete a deployment by its ID for an app, a specific deployment

      slot, and/or a specific scaled-out instance.


      Delete a deployment by its ID for an app, a specific deployment slot,
      and/or

      a specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.deleteInstanceDeploymentSlotWithHttpOperationResponse(resourceGroupName,
      name, id, slot, instanceId, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API deletes a deployment for the production slot.
        - id: instanceId
          type:
            - string
          description: |-
            ID of a specific scaled-out instance. This is the
            value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteInstanceDeploymentSlotWithHttpOperationResponse(resourceGroupName,
        name, id, slot, instanceId, options)
  - uid: 'azure-arm-website.WebApps#deleteInstanceDeploymentSlot'
    id: 'azure-arm-website.WebApps#deleteInstanceDeploymentSlot'
    parent: azure-arm-website.WebApps
    name: >-
      deleteInstanceDeploymentSlot(resourceGroupName, name, id, slot,
      instanceId, options, optionalCallback)
    summary: >-
      Delete a deployment by its ID for an app, a specific deployment

      slot, and/or a specific scaled-out instance.


      Delete a deployment by its ID for an app, a specific deployment slot,
      and/or

      a specific scaled-out instance.
    fullName: >-
      azure-arm-website.WebApps.deleteInstanceDeploymentSlot(resourceGroupName,
      name, id, slot, instanceId, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: id
          type:
            - string
          description: Deployment ID.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API deletes a deployment for the production slot.
        - id: instanceId
          type:
            - string
          description: |-
            ID of a specific scaled-out instance. This is the
            value of the name property in the JSON response from "GET
            api/sites/{siteName}/instances"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteInstanceDeploymentSlot(resourceGroupName, name, id, slot,
        instanceId, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#isCloneableSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#isCloneableSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      isCloneableSlotWithHttpOperationResponse(resourceGroupName, name, slot,
      options)
    summary: |-
      Shows whether an app can be cloned to another resource group or
      subscription.

      Shows whether an app can be cloned to another resource group or
      subscription.
    fullName: >-
      azure-arm-website.WebApps.isCloneableSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. By default, this API
            returns information on the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function isCloneableSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#isCloneableSlot'
    id: 'azure-arm-website.WebApps#isCloneableSlot'
    parent: azure-arm-website.WebApps
    name: 'isCloneableSlot(resourceGroupName, name, slot, options, optionalCallback)'
    summary: |-
      Shows whether an app can be cloned to another resource group or
      subscription.

      Shows whether an app can be cloned to another resource group or
      subscription.
    fullName: >-
      azure-arm-website.WebApps.isCloneableSlot(resourceGroupName, name, slot,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. By default, this API
            returns information on the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function isCloneableSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listMetricDefinitionsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listMetricDefinitionsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listMetricDefinitionsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Gets all metric definitions of an app (or deployment slot, if
      specified).

      Gets all metric definitions of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricDefinitionsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get metric definitions of the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listMetricDefinitionsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listMetricDefinitionsSlot'
    id: 'azure-arm-website.WebApps#listMetricDefinitionsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listMetricDefinitionsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets all metric definitions of an app (or deployment slot, if
      specified).

      Gets all metric definitions of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricDefinitionsSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get metric definitions of the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listMetricDefinitionsSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listMetricsSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listMetricsSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listMetricsSlotWithHttpOperationResponse(resourceGroupName, name, slot,
      options)
    summary: |-
      Gets performance metrics of an app (or deployment slot, if
      specified).

      Gets performance metrics of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will get metrics of the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.details
          type:
            - boolean
          description: |-
            Specify "true" to include metric details
            in the response. It is "false" by default.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only metrics specified in the filter

            (using OData syntax). For example: $filter=(name.value eq 'Metric1'
            or

            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime

            eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listMetricsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listMetricsSlot'
    id: 'azure-arm-website.WebApps#listMetricsSlot'
    parent: azure-arm-website.WebApps
    name: 'listMetricsSlot(resourceGroupName, name, slot, options, optionalCallback)'
    summary: |-
      Gets performance metrics of an app (or deployment slot, if
      specified).

      Gets performance metrics of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricsSlot(resourceGroupName, name, slot,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will get metrics of the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.details
          type:
            - boolean
          description: |-
            Specify "true" to include metric details
            in the response. It is "false" by default.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only metrics specified in the filter

            (using OData syntax). For example: $filter=(name.value eq 'Metric1'
            or

            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime

            eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listMetricsSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getMigrateMySqlStatusSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getMigrateMySqlStatusSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getMigrateMySqlStatusSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: >-
      Returns the status of MySql in app migration, if one is active, and

      whether or not MySql in app is enabled


      Returns the status of MySql in app migration, if one is active, and
      whether

      or not MySql in app is enabled
    fullName: >-
      azure-arm-website.WebApps.getMigrateMySqlStatusSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: slot
          type:
            - string
          description: Name of the deployment slot
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getMigrateMySqlStatusSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#getMigrateMySqlStatusSlot'
    id: 'azure-arm-website.WebApps#getMigrateMySqlStatusSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getMigrateMySqlStatusSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: >-
      Returns the status of MySql in app migration, if one is active, and

      whether or not MySql in app is enabled


      Returns the status of MySql in app migration, if one is active, and
      whether

      or not MySql in app is enabled
    fullName: >-
      azure-arm-website.WebApps.getMigrateMySqlStatusSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: slot
          type:
            - string
          description: Name of the deployment slot
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getMigrateMySqlStatusSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listNetworkFeaturesSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listNetworkFeaturesSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listNetworkFeaturesSlotWithHttpOperationResponse(resourceGroupName, name,
      view, slot, options)
    summary: |-
      Gets all network features used by the app (or deployment slot, if
      specified).

      Gets all network features used by the app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listNetworkFeaturesSlotWithHttpOperationResponse(resourceGroupName,
      name, view, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: view
          type:
            - string
          description: |-
            The type of view. This can either be "summary" or
            "detailed".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get network features for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listNetworkFeaturesSlotWithHttpOperationResponse(resourceGroupName,
        name, view, slot, options)
  - uid: 'azure-arm-website.WebApps#listNetworkFeaturesSlot'
    id: 'azure-arm-website.WebApps#listNetworkFeaturesSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listNetworkFeaturesSlot(resourceGroupName, name, view, slot, options,
      optionalCallback)
    summary: |-
      Gets all network features used by the app (or deployment slot, if
      specified).

      Gets all network features used by the app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listNetworkFeaturesSlot(resourceGroupName, name,
      view, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: view
          type:
            - string
          description: |-
            The type of view. This can either be "summary" or
            "detailed".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get network features for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listNetworkFeaturesSlot(resourceGroupName, name, view, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#startWebSiteNetworkTraceSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#startWebSiteNetworkTraceSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      startWebSiteNetworkTraceSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Start capturing network packets for the site.

      Start capturing network packets for the site.
    fullName: >-
      azure-arm-website.WebApps.startWebSiteNetworkTraceSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.durationInSeconds
          type:
            - number
          description: |-
            The duration to keep capturing
            in seconds.
          optional: true
        - id: options.maxFrameLength
          type:
            - number
          description: |-
            The maximum frame length in bytes
            (Optional).
          optional: true
        - id: options.sasUrl
          type:
            - string
          description: The Blob URL to store capture file.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        startWebSiteNetworkTraceSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#startWebSiteNetworkTraceSlot'
    id: 'azure-arm-website.WebApps#startWebSiteNetworkTraceSlot'
    parent: azure-arm-website.WebApps
    name: >-
      startWebSiteNetworkTraceSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Start capturing network packets for the site.

      Start capturing network packets for the site.
    fullName: >-
      azure-arm-website.WebApps.startWebSiteNetworkTraceSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.durationInSeconds
          type:
            - number
          description: |-
            The duration to keep capturing
            in seconds.
          optional: true
        - id: options.maxFrameLength
          type:
            - number
          description: |-
            The maximum frame length in bytes
            (Optional).
          optional: true
        - id: options.sasUrl
          type:
            - string
          description: The Blob URL to store capture file.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function startWebSiteNetworkTraceSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#stopWebSiteNetworkTraceSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#stopWebSiteNetworkTraceSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      stopWebSiteNetworkTraceSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Stop ongoing capturing network packets for the site.

      Stop ongoing capturing network packets for the site.
    fullName: >-
      azure-arm-website.WebApps.stopWebSiteNetworkTraceSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        stopWebSiteNetworkTraceSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#stopWebSiteNetworkTraceSlot'
    id: 'azure-arm-website.WebApps#stopWebSiteNetworkTraceSlot'
    parent: azure-arm-website.WebApps
    name: >-
      stopWebSiteNetworkTraceSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Stop ongoing capturing network packets for the site.

      Stop ongoing capturing network packets for the site.
    fullName: >-
      azure-arm-website.WebApps.stopWebSiteNetworkTraceSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: The name of the web app.
        - id: slot
          type:
            - string
          description: The name of the slot for this web app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function stopWebSiteNetworkTraceSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#generateNewSitePublishingPasswordSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#generateNewSitePublishingPasswordSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      generateNewSitePublishingPasswordSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Generates a new publishing password for an app (or deployment slot,
      if specified).

      Generates a new publishing password for an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.generateNewSitePublishingPasswordSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API generate a new publishing password for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        generateNewSitePublishingPasswordSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#generateNewSitePublishingPasswordSlot'
    id: 'azure-arm-website.WebApps#generateNewSitePublishingPasswordSlot'
    parent: azure-arm-website.WebApps
    name: >-
      generateNewSitePublishingPasswordSlot(resourceGroupName, name, slot,
      options, optionalCallback)
    summary: |-
      Generates a new publishing password for an app (or deployment slot,
      if specified).

      Generates a new publishing password for an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.generateNewSitePublishingPasswordSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API generate a new publishing password for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function generateNewSitePublishingPasswordSlot(resourceGroupName, name,
        slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listPerfMonCountersSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listPerfMonCountersSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listPerfMonCountersSlotWithHttpOperationResponse(resourceGroupName, name,
      slot, options)
    summary: |-
      Gets perfmon counters for web app.

      Gets perfmon counters for web app.
    fullName: >-
      azure-arm-website.WebApps.listPerfMonCountersSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot. **** CURRENTLY UNUSED *****
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only usages/metrics specified in the

            filter. Filter conforms to odata syntax. Example: $filter=(startTime
            eq

            '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and
            timeGrain

            eq duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listPerfMonCountersSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listPerfMonCountersSlot'
    id: 'azure-arm-website.WebApps#listPerfMonCountersSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listPerfMonCountersSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets perfmon counters for web app.

      Gets perfmon counters for web app.
    fullName: >-
      azure-arm-website.WebApps.listPerfMonCountersSlot(resourceGroupName, name,
      slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot. **** CURRENTLY UNUSED *****
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only usages/metrics specified in the

            filter. Filter conforms to odata syntax. Example: $filter=(startTime
            eq

            '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and
            timeGrain

            eq duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listPerfMonCountersSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getSitePhpErrorLogFlagSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getSitePhpErrorLogFlagSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getSitePhpErrorLogFlagSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Gets web app's event logs.

      Gets web app's event logs.
    fullName: >-
      azure-arm-website.WebApps.getSitePhpErrorLogFlagSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getSitePhpErrorLogFlagSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#getSitePhpErrorLogFlagSlot'
    id: 'azure-arm-website.WebApps#getSitePhpErrorLogFlagSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getSitePhpErrorLogFlagSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets web app's event logs.

      Gets web app's event logs.
    fullName: >-
      azure-arm-website.WebApps.getSitePhpErrorLogFlagSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getSitePhpErrorLogFlagSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listPremierAddOnsSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listPremierAddOnsSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listPremierAddOnsSlotWithHttpOperationResponse(resourceGroupName, name,
      slot, options)
    summary: |-
      Gets the premier add-ons of an app.

      Gets the premier add-ons of an app.
    fullName: >-
      azure-arm-website.WebApps.listPremierAddOnsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the premier add-ons for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listPremierAddOnsSlotWithHttpOperationResponse(resourceGroupName, name,
        slot, options)
  - uid: 'azure-arm-website.WebApps#listPremierAddOnsSlot'
    id: 'azure-arm-website.WebApps#listPremierAddOnsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listPremierAddOnsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets the premier add-ons of an app.

      Gets the premier add-ons of an app.
    fullName: >-
      azure-arm-website.WebApps.listPremierAddOnsSlot(resourceGroupName, name,
      slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the premier add-ons for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listPremierAddOnsSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getPremierAddOnSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getPremierAddOnSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getPremierAddOnSlotWithHttpOperationResponse(resourceGroupName, name,
      premierAddOnName, slot, options)
    summary: |-
      Gets a named add-on of an app.

      Gets a named add-on of an app.
    fullName: >-
      azure-arm-website.WebApps.getPremierAddOnSlotWithHttpOperationResponse(resourceGroupName,
      name, premierAddOnName, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the named add-on for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getPremierAddOnSlotWithHttpOperationResponse(resourceGroupName,
        name, premierAddOnName, slot, options)
  - uid: 'azure-arm-website.WebApps#getPremierAddOnSlot'
    id: 'azure-arm-website.WebApps#getPremierAddOnSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getPremierAddOnSlot(resourceGroupName, name, premierAddOnName, slot,
      options, optionalCallback)
    summary: |-
      Gets a named add-on of an app.

      Gets a named add-on of an app.
    fullName: >-
      azure-arm-website.WebApps.getPremierAddOnSlot(resourceGroupName, name,
      premierAddOnName, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the named add-on for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getPremierAddOnSlot(resourceGroupName, name, premierAddOnName,
        slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#addPremierAddOnSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#addPremierAddOnSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      addPremierAddOnSlotWithHttpOperationResponse(resourceGroupName, name,
      premierAddOnName, premierAddOn, slot, options)
    summary: |-
      Updates a named add-on of an app.

      Updates a named add-on of an app.
    fullName: >-
      azure-arm-website.WebApps.addPremierAddOnSlotWithHttpOperationResponse(resourceGroupName,
      name, premierAddOnName, premierAddOn, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - object
          description: |-
            A JSON representation of the edited premier
            add-on.
        - id: premierAddOn.sku
          type:
            - string
          description: SKU.
          optional: true
        - id: premierAddOn.product
          type:
            - string
          description: Product.
          optional: true
        - id: premierAddOn.vendor
          type:
            - string
          description: Vendor.
          optional: true
        - id: premierAddOn.premierAddOnName
          type:
            - string
          description: Name.
          optional: true
        - id: premierAddOn.premierAddOnLocation
          type:
            - string
          description: Location.
          optional: true
        - id: premierAddOn.premierAddOnTags
          type:
            - object
          description: Tags.
          optional: true
        - id: premierAddOn.marketplacePublisher
          type:
            - string
          description: Marketplace publisher.
          optional: true
        - id: premierAddOn.marketplaceOffer
          type:
            - string
          description: Marketplace offer.
          optional: true
        - id: premierAddOn.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: premierAddOn.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: premierAddOn.location
          type:
            - string
          description: Resource Location.
        - id: premierAddOn.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: premierAddOn.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the named add-on for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function addPremierAddOnSlotWithHttpOperationResponse(resourceGroupName,
        name, premierAddOnName, premierAddOn, slot, options)
  - uid: 'azure-arm-website.WebApps#addPremierAddOnSlot'
    id: 'azure-arm-website.WebApps#addPremierAddOnSlot'
    parent: azure-arm-website.WebApps
    name: >-
      addPremierAddOnSlot(resourceGroupName, name, premierAddOnName,
      premierAddOn, slot, options, optionalCallback)
    summary: |-
      Updates a named add-on of an app.

      Updates a named add-on of an app.
    fullName: >-
      azure-arm-website.WebApps.addPremierAddOnSlot(resourceGroupName, name,
      premierAddOnName, premierAddOn, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: premierAddOn
          type:
            - object
          description: |-
            A JSON representation of the edited premier
            add-on.
        - id: premierAddOn.sku
          type:
            - string
          description: SKU.
          optional: true
        - id: premierAddOn.product
          type:
            - string
          description: Product.
          optional: true
        - id: premierAddOn.vendor
          type:
            - string
          description: Vendor.
          optional: true
        - id: premierAddOn.premierAddOnName
          type:
            - string
          description: Name.
          optional: true
        - id: premierAddOn.premierAddOnLocation
          type:
            - string
          description: Location.
          optional: true
        - id: premierAddOn.premierAddOnTags
          type:
            - object
          description: Tags.
          optional: true
        - id: premierAddOn.marketplacePublisher
          type:
            - string
          description: Marketplace publisher.
          optional: true
        - id: premierAddOn.marketplaceOffer
          type:
            - string
          description: Marketplace offer.
          optional: true
        - id: premierAddOn.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: premierAddOn.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: premierAddOn.location
          type:
            - string
          description: Resource Location.
        - id: premierAddOn.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: premierAddOn.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the named add-on for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function addPremierAddOnSlot(resourceGroupName, name, premierAddOnName,
        premierAddOn, slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#deletePremierAddOnSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deletePremierAddOnSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      deletePremierAddOnSlotWithHttpOperationResponse(resourceGroupName, name,
      premierAddOnName, slot, options)
    summary: |-
      Delete a premier add-on from an app.

      Delete a premier add-on from an app.
    fullName: >-
      azure-arm-website.WebApps.deletePremierAddOnSlotWithHttpOperationResponse(resourceGroupName,
      name, premierAddOnName, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will delete the named add-on for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deletePremierAddOnSlotWithHttpOperationResponse(resourceGroupName, name,
        premierAddOnName, slot, options)
  - uid: 'azure-arm-website.WebApps#deletePremierAddOnSlot'
    id: 'azure-arm-website.WebApps#deletePremierAddOnSlot'
    parent: azure-arm-website.WebApps
    name: >-
      deletePremierAddOnSlot(resourceGroupName, name, premierAddOnName, slot,
      options, optionalCallback)
    summary: |-
      Delete a premier add-on from an app.

      Delete a premier add-on from an app.
    fullName: >-
      azure-arm-website.WebApps.deletePremierAddOnSlot(resourceGroupName, name,
      premierAddOnName, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: premierAddOnName
          type:
            - string
          description: Add-on name.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will delete the named add-on for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deletePremierAddOnSlot(resourceGroupName, name,
        premierAddOnName, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listPublishingProfileXmlWithSecretsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listPublishingProfileXmlWithSecretsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listPublishingProfileXmlWithSecretsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Gets the publishing profile for an app (or deployment slot, if
      specified).

      Gets the publishing profile for an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listPublishingProfileXmlWithSecretsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the publishing profile for the
            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.format
          type:
            - string
          description: |-
            Name of the format. Valid values are:
            FileZilla3
            WebDeploy -- default
            Ftp. Possible values include: 'FileZilla3', 'WebDeploy', 'Ftp'
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listPublishingProfileXmlWithSecretsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listPublishingProfileXmlWithSecretsSlot'
    id: 'azure-arm-website.WebApps#listPublishingProfileXmlWithSecretsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listPublishingProfileXmlWithSecretsSlot(resourceGroupName, name, slot,
      options, optionalCallback)
    summary: |-
      Gets the publishing profile for an app (or deployment slot, if
      specified).

      Gets the publishing profile for an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listPublishingProfileXmlWithSecretsSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the publishing profile for the
            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.format
          type:
            - string
          description: |-
            Name of the format. Valid values are:
            FileZilla3
            WebDeploy -- default
            Ftp. Possible values include: 'FileZilla3', 'WebDeploy', 'Ftp'
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listPublishingProfileXmlWithSecretsSlot(resourceGroupName,
        name, slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#recoverSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#recoverSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      recoverSlotWithHttpOperationResponse(resourceGroupName, name,
      recoveryEntity, slot, options)
    summary: |-
      Recovers a deleted web app.

      Recovers a deleted web app.
    fullName: >-
      azure-arm-website.WebApps.recoverSlotWithHttpOperationResponse(resourceGroupName,
      name, recoveryEntity, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: recoveryEntity
          type:
            - object
          description: |-
            Snapshot data used for web app recovery.
            Snapshot information can be obtained by calling GetDeletedSites or
            GetSiteSnapshots API.
        - id: recoveryEntity.snapshotTime
          type:
            - date
          description: |-
            Point in time in which the app
            recovery should be attempted.
          optional: true
        - id: recoveryEntity.siteName
          type:
            - string
          description: >-
            [Optional] Destination app name

            into which app should be recovered. This is case when new app should
            be

            created instead.
          optional: true
        - id: recoveryEntity.slotName
          type:
            - string
          description: |-
            [Optional] Destination app slot
            name into which app should be recovered.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function recoverSlotWithHttpOperationResponse(resourceGroupName, name,
        recoveryEntity, slot, options)
  - uid: 'azure-arm-website.WebApps#recoverSlot'
    id: 'azure-arm-website.WebApps#recoverSlot'
    parent: azure-arm-website.WebApps
    name: >-
      recoverSlot(resourceGroupName, name, recoveryEntity, slot, options,
      optionalCallback)
    summary: |-
      Recovers a deleted web app.

      Recovers a deleted web app.
    fullName: >-
      azure-arm-website.WebApps.recoverSlot(resourceGroupName, name,
      recoveryEntity, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: recoveryEntity
          type:
            - object
          description: |-
            Snapshot data used for web app recovery.
            Snapshot information can be obtained by calling GetDeletedSites or
            GetSiteSnapshots API.
        - id: recoveryEntity.snapshotTime
          type:
            - date
          description: |-
            Point in time in which the app
            recovery should be attempted.
          optional: true
        - id: recoveryEntity.siteName
          type:
            - string
          description: >-
            [Optional] Destination app name

            into which app should be recovered. This is case when new app should
            be

            created instead.
          optional: true
        - id: recoveryEntity.slotName
          type:
            - string
          description: |-
            [Optional] Destination app slot
            name into which app should be recovered.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function recoverSlot(resourceGroupName, name, recoveryEntity, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#resetSlotConfigurationSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#resetSlotConfigurationSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      resetSlotConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Resets the configuration settings of the current slot if they were
      previously modified by calling the API with POST.

      Resets the configuration settings of the current slot if they were
      previously modified by calling the API with POST.
    fullName: >-
      azure-arm-website.WebApps.resetSlotConfigurationSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API resets configuration settings for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        resetSlotConfigurationSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#resetSlotConfigurationSlot'
    id: 'azure-arm-website.WebApps#resetSlotConfigurationSlot'
    parent: azure-arm-website.WebApps
    name: >-
      resetSlotConfigurationSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Resets the configuration settings of the current slot if they were
      previously modified by calling the API with POST.

      Resets the configuration settings of the current slot if they were
      previously modified by calling the API with POST.
    fullName: >-
      azure-arm-website.WebApps.resetSlotConfigurationSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API resets configuration settings for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function resetSlotConfigurationSlot(resourceGroupName, name, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#restartSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#restartSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      restartSlotWithHttpOperationResponse(resourceGroupName, name, slot,
      options)
    summary: |-
      Restarts an app (or deployment slot, if specified).

      Restarts an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.restartSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will restart the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.softRestart
          type:
            - boolean
          description: >-
            Specify true to apply the

            configuration settings and restarts the app only if necessary. By
            default,

            the API always restarts and reprovisions the app.
          optional: true
        - id: options.synchronous
          type:
            - boolean
          description: |-
            Specify true to block until the app
            is restarted. By default, it is set to false, and the API responds
            immediately (asynchronous).
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function restartSlotWithHttpOperationResponse(resourceGroupName, name,
        slot, options)
  - uid: 'azure-arm-website.WebApps#restartSlot'
    id: 'azure-arm-website.WebApps#restartSlot'
    parent: azure-arm-website.WebApps
    name: 'restartSlot(resourceGroupName, name, slot, options, optionalCallback)'
    summary: |-
      Restarts an app (or deployment slot, if specified).

      Restarts an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.restartSlot(resourceGroupName, name, slot,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will restart the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.softRestart
          type:
            - boolean
          description: >-
            Specify true to apply the

            configuration settings and restarts the app only if necessary. By
            default,

            the API always restarts and reprovisions the app.
          optional: true
        - id: options.synchronous
          type:
            - boolean
          description: |-
            Specify true to block until the app
            is restarted. By default, it is set to false, and the API responds
            immediately (asynchronous).
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function restartSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listSlotDifferencesSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listSlotDifferencesSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listSlotDifferencesSlotWithHttpOperationResponse(resourceGroupName, name,
      slotSwapEntity, slot, options)
    summary: |-
      Get the difference in configuration settings between two web app
      slots.

      Get the difference in configuration settings between two web app slots.
    fullName: >-
      azure-arm-website.WebApps.listSlotDifferencesSlotWithHttpOperationResponse(resourceGroupName,
      name, slotSwapEntity, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: slot
          type:
            - string
          description: |-
            Name of the source slot. If a slot is not specified,
            the production slot is used as the source slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listSlotDifferencesSlotWithHttpOperationResponse(resourceGroupName,
        name, slotSwapEntity, slot, options)
  - uid: 'azure-arm-website.WebApps#listSlotDifferencesSlot'
    id: 'azure-arm-website.WebApps#listSlotDifferencesSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listSlotDifferencesSlot(resourceGroupName, name, slotSwapEntity, slot,
      options, optionalCallback)
    summary: |-
      Get the difference in configuration settings between two web app
      slots.

      Get the difference in configuration settings between two web app slots.
    fullName: >-
      azure-arm-website.WebApps.listSlotDifferencesSlot(resourceGroupName, name,
      slotSwapEntity, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: slot
          type:
            - string
          description: |-
            Name of the source slot. If a slot is not specified,
            the production slot is used as the source slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listSlotDifferencesSlot(resourceGroupName, name,
        slotSwapEntity, slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#swapSlotSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#swapSlotSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      swapSlotSlotWithHttpOperationResponse(resourceGroupName, name,
      slotSwapEntity, slot, options)
    summary: |-
      Swaps two deployment slots of an app.

      Swaps two deployment slots of an app.
    fullName: >-
      azure-arm-website.WebApps.swapSlotSlotWithHttpOperationResponse(resourceGroupName,
      name, slotSwapEntity, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: slot
          type:
            - string
          description: |-
            Name of the source slot. If a slot is not specified,
            the production slot is used as the source slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function swapSlotSlotWithHttpOperationResponse(resourceGroupName, name,
        slotSwapEntity, slot, options)
  - uid: 'azure-arm-website.WebApps#swapSlotSlot'
    id: 'azure-arm-website.WebApps#swapSlotSlot'
    parent: azure-arm-website.WebApps
    name: >-
      swapSlotSlot(resourceGroupName, name, slotSwapEntity, slot, options,
      optionalCallback)
    summary: |-
      Swaps two deployment slots of an app.

      Swaps two deployment slots of an app.
    fullName: >-
      azure-arm-website.WebApps.swapSlotSlot(resourceGroupName, name,
      slotSwapEntity, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: slot
          type:
            - string
          description: |-
            Name of the source slot. If a slot is not specified,
            the production slot is used as the source slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function swapSlotSlot(resourceGroupName, name, slotSwapEntity, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listSnapshotsSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listSnapshotsSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listSnapshotsSlotWithHttpOperationResponse(resourceGroupName, name, slot,
      options)
    summary: |-
      Returns all Snapshots to the user.

      Returns all Snapshots to the user.
    fullName: >-
      azure-arm-website.WebApps.listSnapshotsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Website Name
        - id: slot
          type:
            - string
          description: Website Slot
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listSnapshotsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listSnapshotsSlot'
    id: 'azure-arm-website.WebApps#listSnapshotsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listSnapshotsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Returns all Snapshots to the user.

      Returns all Snapshots to the user.
    fullName: >-
      azure-arm-website.WebApps.listSnapshotsSlot(resourceGroupName, name, slot,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Website Name
        - id: slot
          type:
            - string
          description: Website Slot
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listSnapshotsSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getSourceControlSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getSourceControlSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getSourceControlSlotWithHttpOperationResponse(resourceGroupName, name,
      slot, options)
    summary: |-
      Gets the source control configuration of an app.

      Gets the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.getSourceControlSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will get the source control configuration for the
            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getSourceControlSlotWithHttpOperationResponse(resourceGroupName, name,
        slot, options)
  - uid: 'azure-arm-website.WebApps#getSourceControlSlot'
    id: 'azure-arm-website.WebApps#getSourceControlSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getSourceControlSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets the source control configuration of an app.

      Gets the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.getSourceControlSlot(resourceGroupName, name,
      slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will get the source control configuration for the
            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getSourceControlSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateSourceControlSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateSourceControlSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateSourceControlSlotWithHttpOperationResponse(resourceGroupName,
      name, siteSourceControl, slot, options)
    summary: |-
      Updates the source control configuration of an app.

      Updates the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateSourceControlSlotWithHttpOperationResponse(resourceGroupName,
      name, siteSourceControl, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - object
          description: |-
            JSON representation of a SiteSourceControl
            object. See example.
        - id: siteSourceControl.repoUrl
          type:
            - string
          description: |-
            Repository or source control
            URL.
          optional: true
        - id: siteSourceControl.branch
          type:
            - string
          description: |-
            Name of branch to use for
            deployment.
          optional: true
        - id: siteSourceControl.isManualIntegration
          type:
            - boolean
          description: >-
            <code>true</code>

            to limit to manual integration; <code>false</code> to enable
            continuous

            integration (which configures webhooks into online repos like
            GitHub).
          optional: true
        - id: siteSourceControl.deploymentRollbackEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable deployment rollback; otherwise,
            <code>false</code>.
          optional: true
        - id: siteSourceControl.isMercurial
          type:
            - boolean
          description: |-
            <code>true</code> for a
            Mercurial repository; <code>false</code> for a Git repository.
          optional: true
        - id: siteSourceControl.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteSourceControl.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteSourceControl.location
          type:
            - string
          description: Resource Location.
        - id: siteSourceControl.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteSourceControl.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the source control configuration for
            the

            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateSourceControlSlotWithHttpOperationResponse(resourceGroupName,
        name, siteSourceControl, slot, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateSourceControlSlot'
    id: 'azure-arm-website.WebApps#createOrUpdateSourceControlSlot'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateSourceControlSlot(resourceGroupName, name,
      siteSourceControl, slot, options, optionalCallback)
    summary: |-
      Updates the source control configuration of an app.

      Updates the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateSourceControlSlot(resourceGroupName,
      name, siteSourceControl, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - object
          description: |-
            JSON representation of a SiteSourceControl
            object. See example.
        - id: siteSourceControl.repoUrl
          type:
            - string
          description: |-
            Repository or source control
            URL.
          optional: true
        - id: siteSourceControl.branch
          type:
            - string
          description: |-
            Name of branch to use for
            deployment.
          optional: true
        - id: siteSourceControl.isManualIntegration
          type:
            - boolean
          description: >-
            <code>true</code>

            to limit to manual integration; <code>false</code> to enable
            continuous

            integration (which configures webhooks into online repos like
            GitHub).
          optional: true
        - id: siteSourceControl.deploymentRollbackEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable deployment rollback; otherwise,
            <code>false</code>.
          optional: true
        - id: siteSourceControl.isMercurial
          type:
            - boolean
          description: |-
            <code>true</code> for a
            Mercurial repository; <code>false</code> for a Git repository.
          optional: true
        - id: siteSourceControl.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteSourceControl.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteSourceControl.location
          type:
            - string
          description: Resource Location.
        - id: siteSourceControl.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteSourceControl.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the source control configuration for
            the

            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateSourceControlSlot(resourceGroupName, name,
        siteSourceControl, slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#deleteSourceControlSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deleteSourceControlSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      deleteSourceControlSlotWithHttpOperationResponse(resourceGroupName, name,
      slot, options)
    summary: |-
      Deletes the source control configuration of an app.

      Deletes the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.deleteSourceControlSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will delete the source control configuration for
            the

            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteSourceControlSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#deleteSourceControlSlot'
    id: 'azure-arm-website.WebApps#deleteSourceControlSlot'
    parent: azure-arm-website.WebApps
    name: >-
      deleteSourceControlSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Deletes the source control configuration of an app.

      Deletes the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.deleteSourceControlSlot(resourceGroupName, name,
      slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will delete the source control configuration for
            the

            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteSourceControlSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#startSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#startSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'startSlotWithHttpOperationResponse(resourceGroupName, name, slot, options)'
    summary: |-
      Starts an app (or deployment slot, if specified).

      Starts an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.startSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will start the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function startSlotWithHttpOperationResponse(resourceGroupName, name,
        slot, options)
  - uid: 'azure-arm-website.WebApps#startSlot'
    id: 'azure-arm-website.WebApps#startSlot'
    parent: azure-arm-website.WebApps
    name: 'startSlot(resourceGroupName, name, slot, options, optionalCallback)'
    summary: |-
      Starts an app (or deployment slot, if specified).

      Starts an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.startSlot(resourceGroupName, name, slot,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will start the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function startSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#stopSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#stopSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'stopSlotWithHttpOperationResponse(resourceGroupName, name, slot, options)'
    summary: |-
      Stops an app (or deployment slot, if specified).

      Stops an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.stopSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will stop the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function stopSlotWithHttpOperationResponse(resourceGroupName, name,
        slot, options)
  - uid: 'azure-arm-website.WebApps#stopSlot'
    id: 'azure-arm-website.WebApps#stopSlot'
    parent: azure-arm-website.WebApps
    name: 'stopSlot(resourceGroupName, name, slot, options, optionalCallback)'
    summary: |-
      Stops an app (or deployment slot, if specified).

      Stops an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.stopSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will stop the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function stopSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#syncRepositorySlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#syncRepositorySlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      syncRepositorySlotWithHttpOperationResponse(resourceGroupName, name, slot,
      options)
    summary: |-
      Sync web app repository.

      Sync web app repository.
    fullName: >-
      azure-arm-website.WebApps.syncRepositorySlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function syncRepositorySlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#syncRepositorySlot'
    id: 'azure-arm-website.WebApps#syncRepositorySlot'
    parent: azure-arm-website.WebApps
    name: >-
      syncRepositorySlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Sync web app repository.

      Sync web app repository.
    fullName: >-
      azure-arm-website.WebApps.syncRepositorySlot(resourceGroupName, name,
      slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function syncRepositorySlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listUsagesSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listUsagesSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listUsagesSlotWithHttpOperationResponse(resourceGroupName, name, slot,
      options)
    summary: |-
      Gets the quota usage information of an app (or deployment slot, if
      specified).

      Gets the quota usage information of an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listUsagesSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get quota information of the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only information specified in the

            filter (using OData syntax). For example: $filter=(name.value eq
            'Metric1'

            or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z'
            and

            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq

            duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listUsagesSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listUsagesSlot'
    id: 'azure-arm-website.WebApps#listUsagesSlot'
    parent: azure-arm-website.WebApps
    name: 'listUsagesSlot(resourceGroupName, name, slot, options, optionalCallback)'
    summary: |-
      Gets the quota usage information of an app (or deployment slot, if
      specified).

      Gets the quota usage information of an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listUsagesSlot(resourceGroupName, name, slot,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get quota information of the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only information specified in the

            filter (using OData syntax). For example: $filter=(name.value eq
            'Metric1'

            or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z'
            and

            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq

            duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listUsagesSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listVnetConnectionsSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listVnetConnectionsSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listVnetConnectionsSlotWithHttpOperationResponse(resourceGroupName, name,
      slot, options)
    summary: |-
      Gets the virtual networks the app (or deployment slot) is connected
      to.

      Gets the virtual networks the app (or deployment slot) is connected to.
    fullName: >-
      azure-arm-website.WebApps.listVnetConnectionsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get virtual network connections for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listVnetConnectionsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#listVnetConnectionsSlot'
    id: 'azure-arm-website.WebApps#listVnetConnectionsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      listVnetConnectionsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets the virtual networks the app (or deployment slot) is connected
      to.

      Gets the virtual networks the app (or deployment slot) is connected to.
    fullName: >-
      azure-arm-website.WebApps.listVnetConnectionsSlot(resourceGroupName, name,
      slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get virtual network connections for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listVnetConnectionsSlot(resourceGroupName, name, slot, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getVnetConnectionSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getVnetConnectionSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getVnetConnectionSlotWithHttpOperationResponse(resourceGroupName, name,
      vnetName, slot, options)
    summary: >-
      Gets a virtual network the app (or deployment slot) is connected to

      by name.


      Gets a virtual network the app (or deployment slot) is connected to by
      name.
    fullName: >-
      azure-arm-website.WebApps.getVnetConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, vnetName, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the named virtual network for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getVnetConnectionSlotWithHttpOperationResponse(resourceGroupName, name,
        vnetName, slot, options)
  - uid: 'azure-arm-website.WebApps#getVnetConnectionSlot'
    id: 'azure-arm-website.WebApps#getVnetConnectionSlot'
    parent: azure-arm-website.WebApps
    name: >-
      getVnetConnectionSlot(resourceGroupName, name, vnetName, slot, options,
      optionalCallback)
    summary: >-
      Gets a virtual network the app (or deployment slot) is connected to

      by name.


      Gets a virtual network the app (or deployment slot) is connected to by
      name.
    fullName: >-
      azure-arm-website.WebApps.getVnetConnectionSlot(resourceGroupName, name,
      vnetName, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the named virtual network for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getVnetConnectionSlot(resourceGroupName, name, vnetName, slot,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateVnetConnectionSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateVnetConnectionSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateVnetConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, vnetName, connectionEnvelope, slot, options)
    summary: |-
      Adds a Virtual Network connection to an app or slot (PUT) or
      updates the connection properties (PATCH).

      Adds a Virtual Network connection to an app or slot (PUT) or updates the
      connection properties (PATCH).
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateVnetConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, vnetName, connectionEnvelope, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Properties of the Virtual Network
            connection. See example.
        - id: connectionEnvelope.vnetResourceId
          type:
            - string
          description: |-
            The Virtual Network's
            resource ID.
          optional: true
        - id: connectionEnvelope.certBlob
          type:
            - string
          description: |-
            A certificate file (.cer) blob
            containing the public key of the private key used to authenticate a
            Point-To-Site VPN connection.
          optional: true
        - id: connectionEnvelope.dnsServers
          type:
            - string
          description: >-
            DNS servers to be used by

            this Virtual Network. This should be a comma-separated list of IP
            addresses.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will add or update connections for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateVnetConnectionSlotWithHttpOperationResponse(resourceGroupName,
        name, vnetName, connectionEnvelope, slot, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateVnetConnectionSlot'
    id: 'azure-arm-website.WebApps#createOrUpdateVnetConnectionSlot'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateVnetConnectionSlot(resourceGroupName, name, vnetName,
      connectionEnvelope, slot, options, optionalCallback)
    summary: |-
      Adds a Virtual Network connection to an app or slot (PUT) or
      updates the connection properties (PATCH).

      Adds a Virtual Network connection to an app or slot (PUT) or updates the
      connection properties (PATCH).
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateVnetConnectionSlot(resourceGroupName,
      name, vnetName, connectionEnvelope, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Properties of the Virtual Network
            connection. See example.
        - id: connectionEnvelope.vnetResourceId
          type:
            - string
          description: |-
            The Virtual Network's
            resource ID.
          optional: true
        - id: connectionEnvelope.certBlob
          type:
            - string
          description: |-
            A certificate file (.cer) blob
            containing the public key of the private key used to authenticate a
            Point-To-Site VPN connection.
          optional: true
        - id: connectionEnvelope.dnsServers
          type:
            - string
          description: >-
            DNS servers to be used by

            this Virtual Network. This should be a comma-separated list of IP
            addresses.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will add or update connections for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateVnetConnectionSlot(resourceGroupName, name,
        vnetName, connectionEnvelope, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#deleteVnetConnectionSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#deleteVnetConnectionSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      deleteVnetConnectionSlotWithHttpOperationResponse(resourceGroupName, name,
      vnetName, slot, options)
    summary: |-
      Deletes a connection from an app (or deployment slot to a named
      virtual network.

      Deletes a connection from an app (or deployment slot to a named virtual
      network.
    fullName: >-
      azure-arm-website.WebApps.deleteVnetConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, vnetName, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will delete the connection for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteVnetConnectionSlotWithHttpOperationResponse(resourceGroupName,
        name, vnetName, slot, options)
  - uid: 'azure-arm-website.WebApps#deleteVnetConnectionSlot'
    id: 'azure-arm-website.WebApps#deleteVnetConnectionSlot'
    parent: azure-arm-website.WebApps
    name: >-
      deleteVnetConnectionSlot(resourceGroupName, name, vnetName, slot, options,
      optionalCallback)
    summary: |-
      Deletes a connection from an app (or deployment slot to a named
      virtual network.

      Deletes a connection from an app (or deployment slot to a named virtual
      network.
    fullName: >-
      azure-arm-website.WebApps.deleteVnetConnectionSlot(resourceGroupName,
      name, vnetName, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will delete the connection for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteVnetConnectionSlot(resourceGroupName, name, vnetName,
        slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateVnetConnectionSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateVnetConnectionSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateVnetConnectionSlotWithHttpOperationResponse(resourceGroupName, name,
      vnetName, connectionEnvelope, slot, options)
    summary: |-
      Adds a Virtual Network connection to an app or slot (PUT) or
      updates the connection properties (PATCH).

      Adds a Virtual Network connection to an app or slot (PUT) or updates the
      connection properties (PATCH).
    fullName: >-
      azure-arm-website.WebApps.updateVnetConnectionSlotWithHttpOperationResponse(resourceGroupName,
      name, vnetName, connectionEnvelope, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Properties of the Virtual Network
            connection. See example.
        - id: connectionEnvelope.vnetResourceId
          type:
            - string
          description: |-
            The Virtual Network's
            resource ID.
          optional: true
        - id: connectionEnvelope.certBlob
          type:
            - string
          description: |-
            A certificate file (.cer) blob
            containing the public key of the private key used to authenticate a
            Point-To-Site VPN connection.
          optional: true
        - id: connectionEnvelope.dnsServers
          type:
            - string
          description: >-
            DNS servers to be used by

            this Virtual Network. This should be a comma-separated list of IP
            addresses.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will add or update connections for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateVnetConnectionSlotWithHttpOperationResponse(resourceGroupName,
        name, vnetName, connectionEnvelope, slot, options)
  - uid: 'azure-arm-website.WebApps#updateVnetConnectionSlot'
    id: 'azure-arm-website.WebApps#updateVnetConnectionSlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateVnetConnectionSlot(resourceGroupName, name, vnetName,
      connectionEnvelope, slot, options, optionalCallback)
    summary: |-
      Adds a Virtual Network connection to an app or slot (PUT) or
      updates the connection properties (PATCH).

      Adds a Virtual Network connection to an app or slot (PUT) or updates the
      connection properties (PATCH).
    fullName: >-
      azure-arm-website.WebApps.updateVnetConnectionSlot(resourceGroupName,
      name, vnetName, connectionEnvelope, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Properties of the Virtual Network
            connection. See example.
        - id: connectionEnvelope.vnetResourceId
          type:
            - string
          description: |-
            The Virtual Network's
            resource ID.
          optional: true
        - id: connectionEnvelope.certBlob
          type:
            - string
          description: |-
            A certificate file (.cer) blob
            containing the public key of the private key used to authenticate a
            Point-To-Site VPN connection.
          optional: true
        - id: connectionEnvelope.dnsServers
          type:
            - string
          description: >-
            DNS servers to be used by

            this Virtual Network. This should be a comma-separated list of IP
            addresses.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will add or update connections for the production
            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateVnetConnectionSlot(resourceGroupName, name, vnetName,
        connectionEnvelope, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getVnetConnectionGatewaySlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getVnetConnectionGatewaySlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getVnetConnectionGatewaySlotWithHttpOperationResponse(resourceGroupName,
      name, vnetName, gatewayName, slot, options)
    summary: |-
      Gets an app's Virtual Network gateway.

      Gets an app's Virtual Network gateway.
    fullName: >-
      azure-arm-website.WebApps.getVnetConnectionGatewaySlotWithHttpOperationResponse(resourceGroupName,
      name, vnetName, gatewayName, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Currently, the only
            supported string is "primary".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get a gateway for the production slot's
            Virtual

            Network.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getVnetConnectionGatewaySlotWithHttpOperationResponse(resourceGroupName,
        name, vnetName, gatewayName, slot, options)
  - uid: 'azure-arm-website.WebApps#getVnetConnectionGatewaySlot'
    id: 'azure-arm-website.WebApps#getVnetConnectionGatewaySlot'
    parent: azure-arm-website.WebApps
    name: >-
      getVnetConnectionGatewaySlot(resourceGroupName, name, vnetName,
      gatewayName, slot, options, optionalCallback)
    summary: |-
      Gets an app's Virtual Network gateway.

      Gets an app's Virtual Network gateway.
    fullName: >-
      azure-arm-website.WebApps.getVnetConnectionGatewaySlot(resourceGroupName,
      name, vnetName, gatewayName, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Currently, the only
            supported string is "primary".
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get a gateway for the production slot's
            Virtual

            Network.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getVnetConnectionGatewaySlot(resourceGroupName, name, vnetName,
        gatewayName, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateVnetConnectionGatewaySlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateVnetConnectionGatewaySlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateVnetConnectionGatewaySlotWithHttpOperationResponse(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, slot, options)
    summary: |-
      Adds a gateway to a connected Virtual Network (PUT) or updates it
      (PATCH).

      Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateVnetConnectionGatewaySlotWithHttpOperationResponse(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Currently, the only
            supported string is "primary".
        - id: connectionEnvelope
          type:
            - object
          description: |-
            The properties to update this gateway
            with.
        - id: connectionEnvelope.vnetName
          type:
            - string
          description: The Virtual Network name.
          optional: true
        - id: connectionEnvelope.vpnPackageUri
          type:
            - string
          description: |-
            The URI where the VPN
            package can be downloaded.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will add or update a gateway for the production
            slot's

            Virtual Network.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateVnetConnectionGatewaySlotWithHttpOperationResponse(resourceGroupName,
        name, vnetName, gatewayName, connectionEnvelope, slot, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateVnetConnectionGatewaySlot'
    id: 'azure-arm-website.WebApps#createOrUpdateVnetConnectionGatewaySlot'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateVnetConnectionGatewaySlot(resourceGroupName, name, vnetName,
      gatewayName, connectionEnvelope, slot, options, optionalCallback)
    summary: |-
      Adds a gateway to a connected Virtual Network (PUT) or updates it
      (PATCH).

      Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateVnetConnectionGatewaySlot(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, slot, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Currently, the only
            supported string is "primary".
        - id: connectionEnvelope
          type:
            - object
          description: |-
            The properties to update this gateway
            with.
        - id: connectionEnvelope.vnetName
          type:
            - string
          description: The Virtual Network name.
          optional: true
        - id: connectionEnvelope.vpnPackageUri
          type:
            - string
          description: |-
            The URI where the VPN
            package can be downloaded.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will add or update a gateway for the production
            slot's

            Virtual Network.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateVnetConnectionGatewaySlot(resourceGroupName,
        name, vnetName, gatewayName, connectionEnvelope, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateVnetConnectionGatewaySlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateVnetConnectionGatewaySlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateVnetConnectionGatewaySlotWithHttpOperationResponse(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, slot, options)
    summary: |-
      Adds a gateway to a connected Virtual Network (PUT) or updates it
      (PATCH).

      Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
    fullName: >-
      azure-arm-website.WebApps.updateVnetConnectionGatewaySlotWithHttpOperationResponse(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Currently, the only
            supported string is "primary".
        - id: connectionEnvelope
          type:
            - object
          description: |-
            The properties to update this gateway
            with.
        - id: connectionEnvelope.vnetName
          type:
            - string
          description: The Virtual Network name.
          optional: true
        - id: connectionEnvelope.vpnPackageUri
          type:
            - string
          description: |-
            The URI where the VPN
            package can be downloaded.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will add or update a gateway for the production
            slot's

            Virtual Network.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateVnetConnectionGatewaySlotWithHttpOperationResponse(resourceGroupName,
        name, vnetName, gatewayName, connectionEnvelope, slot, options)
  - uid: 'azure-arm-website.WebApps#updateVnetConnectionGatewaySlot'
    id: 'azure-arm-website.WebApps#updateVnetConnectionGatewaySlot'
    parent: azure-arm-website.WebApps
    name: >-
      updateVnetConnectionGatewaySlot(resourceGroupName, name, vnetName,
      gatewayName, connectionEnvelope, slot, options, optionalCallback)
    summary: |-
      Adds a gateway to a connected Virtual Network (PUT) or updates it
      (PATCH).

      Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
    fullName: >-
      azure-arm-website.WebApps.updateVnetConnectionGatewaySlot(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, slot, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Currently, the only
            supported string is "primary".
        - id: connectionEnvelope
          type:
            - object
          description: |-
            The properties to update this gateway
            with.
        - id: connectionEnvelope.vnetName
          type:
            - string
          description: The Virtual Network name.
          optional: true
        - id: connectionEnvelope.vpnPackageUri
          type:
            - string
          description: |-
            The URI where the VPN
            package can be downloaded.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will add or update a gateway for the production
            slot's

            Virtual Network.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateVnetConnectionGatewaySlot(resourceGroupName, name,
        vnetName, gatewayName, connectionEnvelope, slot, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listSlotDifferencesFromProductionWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listSlotDifferencesFromProductionWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listSlotDifferencesFromProductionWithHttpOperationResponse(resourceGroupName,
      name, slotSwapEntity, options)
    summary: |-
      Get the difference in configuration settings between two web app
      slots.

      Get the difference in configuration settings between two web app slots.
    fullName: >-
      azure-arm-website.WebApps.listSlotDifferencesFromProductionWithHttpOperationResponse(resourceGroupName,
      name, slotSwapEntity, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listSlotDifferencesFromProductionWithHttpOperationResponse(resourceGroupName,
        name, slotSwapEntity, options)
  - uid: 'azure-arm-website.WebApps#listSlotDifferencesFromProduction'
    id: 'azure-arm-website.WebApps#listSlotDifferencesFromProduction'
    parent: azure-arm-website.WebApps
    name: >-
      listSlotDifferencesFromProduction(resourceGroupName, name, slotSwapEntity,
      options, optionalCallback)
    summary: |-
      Get the difference in configuration settings between two web app
      slots.

      Get the difference in configuration settings between two web app slots.
    fullName: >-
      azure-arm-website.WebApps.listSlotDifferencesFromProduction(resourceGroupName,
      name, slotSwapEntity, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listSlotDifferencesFromProduction(resourceGroupName, name,
        slotSwapEntity, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#swapSlotWithProductionWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#swapSlotWithProductionWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      swapSlotWithProductionWithHttpOperationResponse(resourceGroupName, name,
      slotSwapEntity, options)
    summary: |-
      Swaps two deployment slots of an app.

      Swaps two deployment slots of an app.
    fullName: >-
      azure-arm-website.WebApps.swapSlotWithProductionWithHttpOperationResponse(resourceGroupName,
      name, slotSwapEntity, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        swapSlotWithProductionWithHttpOperationResponse(resourceGroupName, name,
        slotSwapEntity, options)
  - uid: 'azure-arm-website.WebApps#swapSlotWithProduction'
    id: 'azure-arm-website.WebApps#swapSlotWithProduction'
    parent: azure-arm-website.WebApps
    name: >-
      swapSlotWithProduction(resourceGroupName, name, slotSwapEntity, options,
      optionalCallback)
    summary: |-
      Swaps two deployment slots of an app.

      Swaps two deployment slots of an app.
    fullName: >-
      azure-arm-website.WebApps.swapSlotWithProduction(resourceGroupName, name,
      slotSwapEntity, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function swapSlotWithProduction(resourceGroupName, name, slotSwapEntity,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listSnapshotsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listSnapshotsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listSnapshotsWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Returns all Snapshots to the user.

      Returns all Snapshots to the user.
    fullName: >-
      azure-arm-website.WebApps.listSnapshotsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Website Name
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listSnapshotsWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#listSnapshots'
    id: 'azure-arm-website.WebApps#listSnapshots'
    parent: azure-arm-website.WebApps
    name: 'listSnapshots(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Returns all Snapshots to the user.

      Returns all Snapshots to the user.
    fullName: >-
      azure-arm-website.WebApps.listSnapshots(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Website Name
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listSnapshots(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getSourceControlWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getSourceControlWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getSourceControlWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Gets the source control configuration of an app.

      Gets the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.getSourceControlWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getSourceControlWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#getSourceControl'
    id: 'azure-arm-website.WebApps#getSourceControl'
    parent: azure-arm-website.WebApps
    name: 'getSourceControl(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets the source control configuration of an app.

      Gets the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.getSourceControl(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getSourceControl(resourceGroupName, name, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateSourceControlWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateSourceControlWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateSourceControlWithHttpOperationResponse(resourceGroupName,
      name, siteSourceControl, options)
    summary: |-
      Updates the source control configuration of an app.

      Updates the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateSourceControlWithHttpOperationResponse(resourceGroupName,
      name, siteSourceControl, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - object
          description: |-
            JSON representation of a SiteSourceControl
            object. See example.
        - id: siteSourceControl.repoUrl
          type:
            - string
          description: |-
            Repository or source control
            URL.
          optional: true
        - id: siteSourceControl.branch
          type:
            - string
          description: |-
            Name of branch to use for
            deployment.
          optional: true
        - id: siteSourceControl.isManualIntegration
          type:
            - boolean
          description: >-
            <code>true</code>

            to limit to manual integration; <code>false</code> to enable
            continuous

            integration (which configures webhooks into online repos like
            GitHub).
          optional: true
        - id: siteSourceControl.deploymentRollbackEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable deployment rollback; otherwise,
            <code>false</code>.
          optional: true
        - id: siteSourceControl.isMercurial
          type:
            - boolean
          description: |-
            <code>true</code> for a
            Mercurial repository; <code>false</code> for a Git repository.
          optional: true
        - id: siteSourceControl.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteSourceControl.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteSourceControl.location
          type:
            - string
          description: Resource Location.
        - id: siteSourceControl.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteSourceControl.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateSourceControlWithHttpOperationResponse(resourceGroupName,
        name, siteSourceControl, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateSourceControl'
    id: 'azure-arm-website.WebApps#createOrUpdateSourceControl'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateSourceControl(resourceGroupName, name, siteSourceControl,
      options, optionalCallback)
    summary: |-
      Updates the source control configuration of an app.

      Updates the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateSourceControl(resourceGroupName,
      name, siteSourceControl, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - object
          description: |-
            JSON representation of a SiteSourceControl
            object. See example.
        - id: siteSourceControl.repoUrl
          type:
            - string
          description: |-
            Repository or source control
            URL.
          optional: true
        - id: siteSourceControl.branch
          type:
            - string
          description: |-
            Name of branch to use for
            deployment.
          optional: true
        - id: siteSourceControl.isManualIntegration
          type:
            - boolean
          description: >-
            <code>true</code>

            to limit to manual integration; <code>false</code> to enable
            continuous

            integration (which configures webhooks into online repos like
            GitHub).
          optional: true
        - id: siteSourceControl.deploymentRollbackEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable deployment rollback; otherwise,
            <code>false</code>.
          optional: true
        - id: siteSourceControl.isMercurial
          type:
            - boolean
          description: |-
            <code>true</code> for a
            Mercurial repository; <code>false</code> for a Git repository.
          optional: true
        - id: siteSourceControl.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteSourceControl.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteSourceControl.location
          type:
            - string
          description: Resource Location.
        - id: siteSourceControl.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteSourceControl.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateSourceControl(resourceGroupName, name,
        siteSourceControl, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#deleteSourceControlWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deleteSourceControlWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      deleteSourceControlWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Deletes the source control configuration of an app.

      Deletes the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.deleteSourceControlWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteSourceControlWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#deleteSourceControl'
    id: 'azure-arm-website.WebApps#deleteSourceControl'
    parent: azure-arm-website.WebApps
    name: 'deleteSourceControl(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Deletes the source control configuration of an app.

      Deletes the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.deleteSourceControl(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteSourceControl(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#startWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#startWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'startWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Starts an app (or deployment slot, if specified).

      Starts an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.startWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function startWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#start'
    id: 'azure-arm-website.WebApps#start'
    parent: azure-arm-website.WebApps
    name: 'start(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Starts an app (or deployment slot, if specified).

      Starts an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.start(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function start(resourceGroupName, name, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#stopWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#stopWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'stopWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Stops an app (or deployment slot, if specified).

      Stops an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.stopWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function stopWithHttpOperationResponse(resourceGroupName, name, options)'
  - uid: 'azure-arm-website.WebApps#stop'
    id: 'azure-arm-website.WebApps#stop'
    parent: azure-arm-website.WebApps
    name: 'stop(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Stops an app (or deployment slot, if specified).

      Stops an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.stop(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function stop(resourceGroupName, name, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#syncRepositoryWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#syncRepositoryWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'syncRepositoryWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Sync web app repository.

      Sync web app repository.
    fullName: >-
      azure-arm-website.WebApps.syncRepositoryWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function syncRepositoryWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#syncRepository'
    id: 'azure-arm-website.WebApps#syncRepository'
    parent: azure-arm-website.WebApps
    name: 'syncRepository(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Sync web app repository.

      Sync web app repository.
    fullName: >-
      azure-arm-website.WebApps.syncRepository(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function syncRepository(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listUsagesWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listUsagesWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listUsagesWithHttpOperationResponse(resourceGroupName, name, options)'
    summary: |-
      Gets the quota usage information of an app (or deployment slot, if
      specified).

      Gets the quota usage information of an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listUsagesWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only information specified in the

            filter (using OData syntax). For example: $filter=(name.value eq
            'Metric1'

            or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z'
            and

            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq

            duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listUsagesWithHttpOperationResponse(resourceGroupName, name,
        options)
  - uid: 'azure-arm-website.WebApps#listUsages'
    id: 'azure-arm-website.WebApps#listUsages'
    parent: azure-arm-website.WebApps
    name: 'listUsages(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets the quota usage information of an app (or deployment slot, if
      specified).

      Gets the quota usage information of an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listUsages(resourceGroupName, name, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only information specified in the

            filter (using OData syntax). For example: $filter=(name.value eq
            'Metric1'

            or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z'
            and

            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq

            duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listUsages(resourceGroupName, name, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#listVnetConnectionsWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listVnetConnectionsWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      listVnetConnectionsWithHttpOperationResponse(resourceGroupName, name,
      options)
    summary: |-
      Gets the virtual networks the app (or deployment slot) is connected
      to.

      Gets the virtual networks the app (or deployment slot) is connected to.
    fullName: >-
      azure-arm-website.WebApps.listVnetConnectionsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listVnetConnectionsWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#listVnetConnections'
    id: 'azure-arm-website.WebApps#listVnetConnections'
    parent: azure-arm-website.WebApps
    name: 'listVnetConnections(resourceGroupName, name, options, optionalCallback)'
    summary: |-
      Gets the virtual networks the app (or deployment slot) is connected
      to.

      Gets the virtual networks the app (or deployment slot) is connected to.
    fullName: >-
      azure-arm-website.WebApps.listVnetConnections(resourceGroupName, name,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listVnetConnections(resourceGroupName, name, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#getVnetConnectionWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#getVnetConnectionWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      getVnetConnectionWithHttpOperationResponse(resourceGroupName, name,
      vnetName, options)
    summary: >-
      Gets a virtual network the app (or deployment slot) is connected to

      by name.


      Gets a virtual network the app (or deployment slot) is connected to by
      name.
    fullName: >-
      azure-arm-website.WebApps.getVnetConnectionWithHttpOperationResponse(resourceGroupName,
      name, vnetName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getVnetConnectionWithHttpOperationResponse(resourceGroupName,
        name, vnetName, options)
  - uid: 'azure-arm-website.WebApps#getVnetConnection'
    id: 'azure-arm-website.WebApps#getVnetConnection'
    parent: azure-arm-website.WebApps
    name: >-
      getVnetConnection(resourceGroupName, name, vnetName, options,
      optionalCallback)
    summary: >-
      Gets a virtual network the app (or deployment slot) is connected to

      by name.


      Gets a virtual network the app (or deployment slot) is connected to by
      name.
    fullName: >-
      azure-arm-website.WebApps.getVnetConnection(resourceGroupName, name,
      vnetName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getVnetConnection(resourceGroupName, name, vnetName, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateVnetConnectionWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateVnetConnectionWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateVnetConnectionWithHttpOperationResponse(resourceGroupName,
      name, vnetName, connectionEnvelope, options)
    summary: |-
      Adds a Virtual Network connection to an app or slot (PUT) or
      updates the connection properties (PATCH).

      Adds a Virtual Network connection to an app or slot (PUT) or updates the
      connection properties (PATCH).
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateVnetConnectionWithHttpOperationResponse(resourceGroupName,
      name, vnetName, connectionEnvelope, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Properties of the Virtual Network
            connection. See example.
        - id: connectionEnvelope.vnetResourceId
          type:
            - string
          description: |-
            The Virtual Network's
            resource ID.
          optional: true
        - id: connectionEnvelope.certBlob
          type:
            - string
          description: |-
            A certificate file (.cer) blob
            containing the public key of the private key used to authenticate a
            Point-To-Site VPN connection.
          optional: true
        - id: connectionEnvelope.dnsServers
          type:
            - string
          description: >-
            DNS servers to be used by

            this Virtual Network. This should be a comma-separated list of IP
            addresses.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateVnetConnectionWithHttpOperationResponse(resourceGroupName,
        name, vnetName, connectionEnvelope, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateVnetConnection'
    id: 'azure-arm-website.WebApps#createOrUpdateVnetConnection'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateVnetConnection(resourceGroupName, name, vnetName,
      connectionEnvelope, options, optionalCallback)
    summary: |-
      Adds a Virtual Network connection to an app or slot (PUT) or
      updates the connection properties (PATCH).

      Adds a Virtual Network connection to an app or slot (PUT) or updates the
      connection properties (PATCH).
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateVnetConnection(resourceGroupName,
      name, vnetName, connectionEnvelope, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Properties of the Virtual Network
            connection. See example.
        - id: connectionEnvelope.vnetResourceId
          type:
            - string
          description: |-
            The Virtual Network's
            resource ID.
          optional: true
        - id: connectionEnvelope.certBlob
          type:
            - string
          description: |-
            A certificate file (.cer) blob
            containing the public key of the private key used to authenticate a
            Point-To-Site VPN connection.
          optional: true
        - id: connectionEnvelope.dnsServers
          type:
            - string
          description: >-
            DNS servers to be used by

            this Virtual Network. This should be a comma-separated list of IP
            addresses.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateVnetConnection(resourceGroupName, name, vnetName,
        connectionEnvelope, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#deleteVnetConnectionWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#deleteVnetConnectionWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      deleteVnetConnectionWithHttpOperationResponse(resourceGroupName, name,
      vnetName, options)
    summary: |-
      Deletes a connection from an app (or deployment slot to a named
      virtual network.

      Deletes a connection from an app (or deployment slot to a named virtual
      network.
    fullName: >-
      azure-arm-website.WebApps.deleteVnetConnectionWithHttpOperationResponse(resourceGroupName,
      name, vnetName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteVnetConnectionWithHttpOperationResponse(resourceGroupName, name,
        vnetName, options)
  - uid: 'azure-arm-website.WebApps#deleteVnetConnection'
    id: 'azure-arm-website.WebApps#deleteVnetConnection'
    parent: azure-arm-website.WebApps
    name: >-
      deleteVnetConnection(resourceGroupName, name, vnetName, options,
      optionalCallback)
    summary: |-
      Deletes a connection from an app (or deployment slot to a named
      virtual network.

      Deletes a connection from an app (or deployment slot to a named virtual
      network.
    fullName: >-
      azure-arm-website.WebApps.deleteVnetConnection(resourceGroupName, name,
      vnetName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the virtual network.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteVnetConnection(resourceGroupName, name, vnetName,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#updateVnetConnectionWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#updateVnetConnectionWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      updateVnetConnectionWithHttpOperationResponse(resourceGroupName, name,
      vnetName, connectionEnvelope, options)
    summary: |-
      Adds a Virtual Network connection to an app or slot (PUT) or
      updates the connection properties (PATCH).

      Adds a Virtual Network connection to an app or slot (PUT) or updates the
      connection properties (PATCH).
    fullName: >-
      azure-arm-website.WebApps.updateVnetConnectionWithHttpOperationResponse(resourceGroupName,
      name, vnetName, connectionEnvelope, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Properties of the Virtual Network
            connection. See example.
        - id: connectionEnvelope.vnetResourceId
          type:
            - string
          description: |-
            The Virtual Network's
            resource ID.
          optional: true
        - id: connectionEnvelope.certBlob
          type:
            - string
          description: |-
            A certificate file (.cer) blob
            containing the public key of the private key used to authenticate a
            Point-To-Site VPN connection.
          optional: true
        - id: connectionEnvelope.dnsServers
          type:
            - string
          description: >-
            DNS servers to be used by

            this Virtual Network. This should be a comma-separated list of IP
            addresses.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateVnetConnectionWithHttpOperationResponse(resourceGroupName, name,
        vnetName, connectionEnvelope, options)
  - uid: 'azure-arm-website.WebApps#updateVnetConnection'
    id: 'azure-arm-website.WebApps#updateVnetConnection'
    parent: azure-arm-website.WebApps
    name: >-
      updateVnetConnection(resourceGroupName, name, vnetName,
      connectionEnvelope, options, optionalCallback)
    summary: |-
      Adds a Virtual Network connection to an app or slot (PUT) or
      updates the connection properties (PATCH).

      Adds a Virtual Network connection to an app or slot (PUT) or updates the
      connection properties (PATCH).
    fullName: >-
      azure-arm-website.WebApps.updateVnetConnection(resourceGroupName, name,
      vnetName, connectionEnvelope, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type:
            - object
          description: |-
            Properties of the Virtual Network
            connection. See example.
        - id: connectionEnvelope.vnetResourceId
          type:
            - string
          description: |-
            The Virtual Network's
            resource ID.
          optional: true
        - id: connectionEnvelope.certBlob
          type:
            - string
          description: |-
            A certificate file (.cer) blob
            containing the public key of the private key used to authenticate a
            Point-To-Site VPN connection.
          optional: true
        - id: connectionEnvelope.dnsServers
          type:
            - string
          description: >-
            DNS servers to be used by

            this Virtual Network. This should be a comma-separated list of IP
            addresses.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateVnetConnection(resourceGroupName, name, vnetName,
        connectionEnvelope, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#getVnetConnectionGatewayWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#getVnetConnectionGatewayWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      getVnetConnectionGatewayWithHttpOperationResponse(resourceGroupName, name,
      vnetName, gatewayName, options)
    summary: |-
      Gets an app's Virtual Network gateway.

      Gets an app's Virtual Network gateway.
    fullName: >-
      azure-arm-website.WebApps.getVnetConnectionGatewayWithHttpOperationResponse(resourceGroupName,
      name, vnetName, gatewayName, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Currently, the only
            supported string is "primary".
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getVnetConnectionGatewayWithHttpOperationResponse(resourceGroupName,
        name, vnetName, gatewayName, options)
  - uid: 'azure-arm-website.WebApps#getVnetConnectionGateway'
    id: 'azure-arm-website.WebApps#getVnetConnectionGateway'
    parent: azure-arm-website.WebApps
    name: >-
      getVnetConnectionGateway(resourceGroupName, name, vnetName, gatewayName,
      options, optionalCallback)
    summary: |-
      Gets an app's Virtual Network gateway.

      Gets an app's Virtual Network gateway.
    fullName: >-
      azure-arm-website.WebApps.getVnetConnectionGateway(resourceGroupName,
      name, vnetName, gatewayName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Currently, the only
            supported string is "primary".
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getVnetConnectionGateway(resourceGroupName, name, vnetName,
        gatewayName, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#createOrUpdateVnetConnectionGatewayWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#createOrUpdateVnetConnectionGatewayWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateVnetConnectionGatewayWithHttpOperationResponse(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, options)
    summary: |-
      Adds a gateway to a connected Virtual Network (PUT) or updates it
      (PATCH).

      Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateVnetConnectionGatewayWithHttpOperationResponse(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Currently, the only
            supported string is "primary".
        - id: connectionEnvelope
          type:
            - object
          description: |-
            The properties to update this gateway
            with.
        - id: connectionEnvelope.vnetName
          type:
            - string
          description: The Virtual Network name.
          optional: true
        - id: connectionEnvelope.vpnPackageUri
          type:
            - string
          description: |-
            The URI where the VPN
            package can be downloaded.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateVnetConnectionGatewayWithHttpOperationResponse(resourceGroupName,
        name, vnetName, gatewayName, connectionEnvelope, options)
  - uid: 'azure-arm-website.WebApps#createOrUpdateVnetConnectionGateway'
    id: 'azure-arm-website.WebApps#createOrUpdateVnetConnectionGateway'
    parent: azure-arm-website.WebApps
    name: >-
      createOrUpdateVnetConnectionGateway(resourceGroupName, name, vnetName,
      gatewayName, connectionEnvelope, options, optionalCallback)
    summary: |-
      Adds a gateway to a connected Virtual Network (PUT) or updates it
      (PATCH).

      Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
    fullName: >-
      azure-arm-website.WebApps.createOrUpdateVnetConnectionGateway(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Currently, the only
            supported string is "primary".
        - id: connectionEnvelope
          type:
            - object
          description: |-
            The properties to update this gateway
            with.
        - id: connectionEnvelope.vnetName
          type:
            - string
          description: The Virtual Network name.
          optional: true
        - id: connectionEnvelope.vpnPackageUri
          type:
            - string
          description: |-
            The URI where the VPN
            package can be downloaded.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateVnetConnectionGateway(resourceGroupName, name,
        vnetName, gatewayName, connectionEnvelope, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#updateVnetConnectionGatewayWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#updateVnetConnectionGatewayWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      updateVnetConnectionGatewayWithHttpOperationResponse(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, options)
    summary: |-
      Adds a gateway to a connected Virtual Network (PUT) or updates it
      (PATCH).

      Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
    fullName: >-
      azure-arm-website.WebApps.updateVnetConnectionGatewayWithHttpOperationResponse(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Currently, the only
            supported string is "primary".
        - id: connectionEnvelope
          type:
            - object
          description: |-
            The properties to update this gateway
            with.
        - id: connectionEnvelope.vnetName
          type:
            - string
          description: The Virtual Network name.
          optional: true
        - id: connectionEnvelope.vpnPackageUri
          type:
            - string
          description: |-
            The URI where the VPN
            package can be downloaded.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateVnetConnectionGatewayWithHttpOperationResponse(resourceGroupName,
        name, vnetName, gatewayName, connectionEnvelope, options)
  - uid: 'azure-arm-website.WebApps#updateVnetConnectionGateway'
    id: 'azure-arm-website.WebApps#updateVnetConnectionGateway'
    parent: azure-arm-website.WebApps
    name: >-
      updateVnetConnectionGateway(resourceGroupName, name, vnetName,
      gatewayName, connectionEnvelope, options, optionalCallback)
    summary: |-
      Adds a gateway to a connected Virtual Network (PUT) or updates it
      (PATCH).

      Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).
    fullName: >-
      azure-arm-website.WebApps.updateVnetConnectionGateway(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: vnetName
          type:
            - string
          description: Name of the Virtual Network.
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Currently, the only
            supported string is "primary".
        - id: connectionEnvelope
          type:
            - object
          description: |-
            The properties to update this gateway
            with.
        - id: connectionEnvelope.vnetName
          type:
            - string
          description: The Virtual Network name.
          optional: true
        - id: connectionEnvelope.vpnPackageUri
          type:
            - string
          description: |-
            The URI where the VPN
            package can be downloaded.
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateVnetConnectionGateway(resourceGroupName, name, vnetName,
        gatewayName, connectionEnvelope, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#beginCreateOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#beginCreateOrUpdateWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName, name,
      siteEnvelope, options)
    summary: |-
      Creates a new web, mobile, or API app in an existing resource
      group, or updates an existing app.

      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    fullName: >-
      azure-arm-website.WebApps.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      name, siteEnvelope, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: |-
            Unique name of the app to create or update. To create
            or update a deployment slot, use the {slot} parameter.
        - id: siteEnvelope
          type:
            - object
          description: |-
            A JSON representation of the app properties.
            See example.
        - id: siteEnvelope.enabled
          type:
            - boolean
          description: >-
            <code>true</code> if the app is

            enabled; otherwise, <code>false</code>. Setting this value to false
            disables

            the app (takes the app offline).
          optional: true
        - id: siteEnvelope.hostNameSslStates
          type:
            - array
          description: |-
            Hostname SSL states are used
            to manage the SSL bindings for app's hostnames.
          optional: true
        - id: siteEnvelope.serverFarmId
          type:
            - string
          description: >-
            Resource ID of the associated

            App Service plan, formatted as:

            "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
          optional: true
        - id: siteEnvelope.reserved
          type:
            - boolean
          description: |-
            <code>true</code> if reserved;
            otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig
          type:
            - object
          description: Configuration of the app.
          optional: true
        - id: siteEnvelope.siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteEnvelope.siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteEnvelope.siteConfig.netFrameworkVersion
          type:
            - string
          description: |-
            .NET Framework
            version.
          optional: true
        - id: siteEnvelope.siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteEnvelope.siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteEnvelope.siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteEnvelope.siteConfig.linuxFxVersion
          type:
            - string
          description: |-
            Linux App Framework
            and version
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if request tracing is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request
            tracing expiration time.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if remote debugging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote
            debugging version.
          optional: true
        - id: siteEnvelope.siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if HTTP logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs
            directory size limit.
          optional: true
        - id: siteEnvelope.siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if detailed error logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.publishingUsername
          type:
            - string
          description: |-
            Publishing user
            name.
          optional: true
        - id: siteEnvelope.siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteEnvelope.siteConfig.connectionStrings
          type:
            - array
          description: |-
            Connection
            strings.
          optional: true
        - id: siteEnvelope.siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteEnvelope.siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteEnvelope.siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values

            include: 'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub',
            'CodePlexGit',

            'CodePlexHg', 'BitbucketGit', 'BitbucketHg', 'ExternalGit',
            'ExternalHg',

            'OneDrive', 'VSO'
          optional: true
        - id: siteEnvelope.siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use 32-bit worker process; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.webSocketsEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if WebSocket is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if
            Always On is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainerVersion
          type:
            - string
          description: |-
            Java
            container version.
          optional: true
        - id: siteEnvelope.siteConfig.appCommandLine
          type:
            - string
          description: |-
            App command line to
            launch.
          optional: true
        - id: siteEnvelope.siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed
            pipeline mode. Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteEnvelope.siteConfig.virtualApplications
          type:
            - array
          description: |-
            Virtual
            applications.
          optional: true
        - id: siteEnvelope.siteConfig.loadBalancing
          type:
            - string
          description: |-
            Site load balancing.
            Possible values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteEnvelope.siteConfig.experiments
          type:
            - object
          description: |-
            This is work around
            for polymophic types.
          optional: true
        - id: siteEnvelope.siteConfig.experiments.rampUpRules
          type:
            - array
          description: |-
            List of
            ramp-up rules.
          optional: true
        - id: siteEnvelope.siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum
            allowed CPU usage percentage.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum
            allowed memory usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum
            allowed disk size usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if Auto Heal is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions
            that describe when to execute the auto-heal actions.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A
            rule based on total requests.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: |-
            Time
            interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: A rule based on status codes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule based
            on request execution time.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: |-
            Time
            taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to
            be executed when a rule is triggered.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined action to be taken. Possible values include: 'Recycle',
            'LogEvent', 'CustomAction'
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: Custom action to be taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: |-
            Executable
            to be run.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteEnvelope.siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteEnvelope.siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteEnvelope.siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing
            (CORS) settings.
          optional: true
        - id: siteEnvelope.siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets
            the list of origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteEnvelope.siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteEnvelope.siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a
            flag indicating whether the Push endpoint is enabled.
        - id: siteEnvelope.siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of tags that are whitelisted for use
            by the

            push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: |-
            Gets or
            sets a JSON string containing a list of tags that require user
            authentication to be used in the push registration endpoint.
            Tags can consist of alphanumeric characters and the following:
            '_', '@', '#', '.', ':', '-'.
            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteEnvelope.siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of dynamic tags that will be
            evaluated from

            user claims in the push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about
            the formal API definition for the app.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the
            API definition.
          optional: true
        - id: siteEnvelope.siteConfig.autoSwapSlotName
          type:
            - string
          description: |-
            Auto-swap slot
            name.
          optional: true
        - id: siteEnvelope.siteConfig.localMySqlEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to enable local MySQL; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.ipSecurityRestrictions
          type:
            - array
          description: |-
            IP security
            restrictions.
          optional: true
        - id: siteEnvelope.scmSiteAlsoStopped
          type:
            - boolean
          description: >-
            <code>true</code> to stop

            SCM (KUDU) site when the app is stopped; otherwise,
            <code>false</code>. The

            default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile
          type:
            - object
          description: |-
            App Service
            Environment to use for the app.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile.id
          type:
            - string
          description: |-
            Resource ID of
            the App Service Environment.
          optional: true
        - id: siteEnvelope.microService
          type:
            - string
          description: |-
            Micro services like apps, logic
            apps.
          optional: true
        - id: siteEnvelope.gatewaySiteName
          type:
            - string
          description: |-
            Name of gateway app
            associated with the app.
          optional: true
        - id: siteEnvelope.clientAffinityEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client affinity; <code>false</code> to stop sending session
            affinity

            cookies, which route client requests in the same session to the same

            instance. Default is <code>true</code>.
          optional: true
        - id: siteEnvelope.clientCertEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client certificate authentication (TLS mutual
            authentication);

            otherwise, <code>false</code>. Default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostNamesDisabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            disable the public hostnames of the app; otherwise,
            <code>false</code>.

            If <code>true</code>, the app is only accessible via API management
            process.
          optional: true
        - id: siteEnvelope.containerSize
          type:
            - number
          description: Size of the function container.
          optional: true
        - id: siteEnvelope.dailyMemoryTimeQuota
          type:
            - number
          description: |-
            Maximum allowed daily
            memory-time quota (applicable on dynamic apps only).
          optional: true
        - id: siteEnvelope.cloningInfo
          type:
            - object
          description: |-
            If specified during app creation,
            the app is cloned from a source app.
          optional: true
        - id: siteEnvelope.cloningInfo.correlationId
          type:
            - string
          description: |-
            Correlation ID of
            cloning operation. This ID ties multiple cloning operations
            together to use the same snapshot.
          optional: true
        - id: siteEnvelope.cloningInfo.overwrite
          type:
            - boolean
          description: |-
            <code>true</code> to
            overwrite destination app; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneCustomHostNames
          type:
            - boolean
          description: >-
            <code>true</code> to clone custom hostnames from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneSourceControl
          type:
            - boolean
          description: >-
            <code>true</code> to clone source control from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.sourceWebAppId
          type:
            - string
          description: >-
            ARM resource ID of

            the source app. App resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}

            for production slots and

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}

            for other slots.
        - id: siteEnvelope.cloningInfo.hostingEnvironment
          type:
            - string
          description: |-
            App Service
            Environment.
          optional: true
        - id: siteEnvelope.cloningInfo.appSettingsOverrides
          type:
            - object
          description: >-
            Application

            setting overrides for cloned app. If specified, these settings
            override the

            settings cloned

            from source app. Otherwise, application settings from source app are

            retained.
          optional: true
        - id: siteEnvelope.cloningInfo.configureLoadBalancing
          type:
            - boolean
          description: >-
            <code>true</code> to configure load balancing for source and
            destination

            app.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileId
          type:
            - string
          description: >-
            ARM

            resource ID of the Traffic Manager profile to use, if it exists.
            Traffic

            Manager resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileName
          type:
            - string
          description: >-
            Name of

            Traffic Manager profile to create. This is only needed if Traffic
            Manager

            profile does not already exist.
          optional: true
        - id: siteEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: siteEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.skipDnsRegistration
          type:
            - boolean
          description: |-
            If true web app hostname is
            not registered with DNS on creation. This parameter is
            only used for app creation
          optional: true
        - id: options.skipCustomDomainVerification
          type:
            - boolean
          description: >-
            If true, custom (non

            *.azurewebsites.net) domains associated with web app are not
            verified.
          optional: true
        - id: options.forceDnsRegistration
          type:
            - boolean
          description: |-
            If true, web app hostname is
            force registered with DNS
          optional: true
        - id: options.ttlInSeconds
          type:
            - string
          description: |-
            Time to live in seconds for web app's
            default domain name
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        name, siteEnvelope, options)
  - uid: 'azure-arm-website.WebApps#beginCreateOrUpdate'
    id: 'azure-arm-website.WebApps#beginCreateOrUpdate'
    parent: azure-arm-website.WebApps
    name: >-
      beginCreateOrUpdate(resourceGroupName, name, siteEnvelope, options,
      optionalCallback)
    summary: |-
      Creates a new web, mobile, or API app in an existing resource
      group, or updates an existing app.

      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    fullName: >-
      azure-arm-website.WebApps.beginCreateOrUpdate(resourceGroupName, name,
      siteEnvelope, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: |-
            Unique name of the app to create or update. To create
            or update a deployment slot, use the {slot} parameter.
        - id: siteEnvelope
          type:
            - object
          description: |-
            A JSON representation of the app properties.
            See example.
        - id: siteEnvelope.enabled
          type:
            - boolean
          description: >-
            <code>true</code> if the app is

            enabled; otherwise, <code>false</code>. Setting this value to false
            disables

            the app (takes the app offline).
          optional: true
        - id: siteEnvelope.hostNameSslStates
          type:
            - array
          description: |-
            Hostname SSL states are used
            to manage the SSL bindings for app's hostnames.
          optional: true
        - id: siteEnvelope.serverFarmId
          type:
            - string
          description: >-
            Resource ID of the associated

            App Service plan, formatted as:

            "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
          optional: true
        - id: siteEnvelope.reserved
          type:
            - boolean
          description: |-
            <code>true</code> if reserved;
            otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig
          type:
            - object
          description: Configuration of the app.
          optional: true
        - id: siteEnvelope.siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteEnvelope.siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteEnvelope.siteConfig.netFrameworkVersion
          type:
            - string
          description: |-
            .NET Framework
            version.
          optional: true
        - id: siteEnvelope.siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteEnvelope.siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteEnvelope.siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteEnvelope.siteConfig.linuxFxVersion
          type:
            - string
          description: |-
            Linux App Framework
            and version
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if request tracing is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request
            tracing expiration time.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if remote debugging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote
            debugging version.
          optional: true
        - id: siteEnvelope.siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if HTTP logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs
            directory size limit.
          optional: true
        - id: siteEnvelope.siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if detailed error logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.publishingUsername
          type:
            - string
          description: |-
            Publishing user
            name.
          optional: true
        - id: siteEnvelope.siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteEnvelope.siteConfig.connectionStrings
          type:
            - array
          description: |-
            Connection
            strings.
          optional: true
        - id: siteEnvelope.siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteEnvelope.siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteEnvelope.siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values

            include: 'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub',
            'CodePlexGit',

            'CodePlexHg', 'BitbucketGit', 'BitbucketHg', 'ExternalGit',
            'ExternalHg',

            'OneDrive', 'VSO'
          optional: true
        - id: siteEnvelope.siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use 32-bit worker process; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.webSocketsEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if WebSocket is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if
            Always On is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainerVersion
          type:
            - string
          description: |-
            Java
            container version.
          optional: true
        - id: siteEnvelope.siteConfig.appCommandLine
          type:
            - string
          description: |-
            App command line to
            launch.
          optional: true
        - id: siteEnvelope.siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed
            pipeline mode. Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteEnvelope.siteConfig.virtualApplications
          type:
            - array
          description: |-
            Virtual
            applications.
          optional: true
        - id: siteEnvelope.siteConfig.loadBalancing
          type:
            - string
          description: |-
            Site load balancing.
            Possible values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteEnvelope.siteConfig.experiments
          type:
            - object
          description: |-
            This is work around
            for polymophic types.
          optional: true
        - id: siteEnvelope.siteConfig.experiments.rampUpRules
          type:
            - array
          description: |-
            List of
            ramp-up rules.
          optional: true
        - id: siteEnvelope.siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum
            allowed CPU usage percentage.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum
            allowed memory usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum
            allowed disk size usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if Auto Heal is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions
            that describe when to execute the auto-heal actions.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A
            rule based on total requests.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: |-
            Time
            interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: A rule based on status codes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule based
            on request execution time.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: |-
            Time
            taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to
            be executed when a rule is triggered.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined action to be taken. Possible values include: 'Recycle',
            'LogEvent', 'CustomAction'
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: Custom action to be taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: |-
            Executable
            to be run.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteEnvelope.siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteEnvelope.siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteEnvelope.siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing
            (CORS) settings.
          optional: true
        - id: siteEnvelope.siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets
            the list of origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteEnvelope.siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteEnvelope.siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a
            flag indicating whether the Push endpoint is enabled.
        - id: siteEnvelope.siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of tags that are whitelisted for use
            by the

            push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: |-
            Gets or
            sets a JSON string containing a list of tags that require user
            authentication to be used in the push registration endpoint.
            Tags can consist of alphanumeric characters and the following:
            '_', '@', '#', '.', ':', '-'.
            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteEnvelope.siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of dynamic tags that will be
            evaluated from

            user claims in the push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about
            the formal API definition for the app.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the
            API definition.
          optional: true
        - id: siteEnvelope.siteConfig.autoSwapSlotName
          type:
            - string
          description: |-
            Auto-swap slot
            name.
          optional: true
        - id: siteEnvelope.siteConfig.localMySqlEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to enable local MySQL; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.ipSecurityRestrictions
          type:
            - array
          description: |-
            IP security
            restrictions.
          optional: true
        - id: siteEnvelope.scmSiteAlsoStopped
          type:
            - boolean
          description: >-
            <code>true</code> to stop

            SCM (KUDU) site when the app is stopped; otherwise,
            <code>false</code>. The

            default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile
          type:
            - object
          description: |-
            App Service
            Environment to use for the app.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile.id
          type:
            - string
          description: |-
            Resource ID of
            the App Service Environment.
          optional: true
        - id: siteEnvelope.microService
          type:
            - string
          description: |-
            Micro services like apps, logic
            apps.
          optional: true
        - id: siteEnvelope.gatewaySiteName
          type:
            - string
          description: |-
            Name of gateway app
            associated with the app.
          optional: true
        - id: siteEnvelope.clientAffinityEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client affinity; <code>false</code> to stop sending session
            affinity

            cookies, which route client requests in the same session to the same

            instance. Default is <code>true</code>.
          optional: true
        - id: siteEnvelope.clientCertEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client certificate authentication (TLS mutual
            authentication);

            otherwise, <code>false</code>. Default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostNamesDisabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            disable the public hostnames of the app; otherwise,
            <code>false</code>.

            If <code>true</code>, the app is only accessible via API management
            process.
          optional: true
        - id: siteEnvelope.containerSize
          type:
            - number
          description: Size of the function container.
          optional: true
        - id: siteEnvelope.dailyMemoryTimeQuota
          type:
            - number
          description: |-
            Maximum allowed daily
            memory-time quota (applicable on dynamic apps only).
          optional: true
        - id: siteEnvelope.cloningInfo
          type:
            - object
          description: |-
            If specified during app creation,
            the app is cloned from a source app.
          optional: true
        - id: siteEnvelope.cloningInfo.correlationId
          type:
            - string
          description: |-
            Correlation ID of
            cloning operation. This ID ties multiple cloning operations
            together to use the same snapshot.
          optional: true
        - id: siteEnvelope.cloningInfo.overwrite
          type:
            - boolean
          description: |-
            <code>true</code> to
            overwrite destination app; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneCustomHostNames
          type:
            - boolean
          description: >-
            <code>true</code> to clone custom hostnames from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneSourceControl
          type:
            - boolean
          description: >-
            <code>true</code> to clone source control from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.sourceWebAppId
          type:
            - string
          description: >-
            ARM resource ID of

            the source app. App resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}

            for production slots and

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}

            for other slots.
        - id: siteEnvelope.cloningInfo.hostingEnvironment
          type:
            - string
          description: |-
            App Service
            Environment.
          optional: true
        - id: siteEnvelope.cloningInfo.appSettingsOverrides
          type:
            - object
          description: >-
            Application

            setting overrides for cloned app. If specified, these settings
            override the

            settings cloned

            from source app. Otherwise, application settings from source app are

            retained.
          optional: true
        - id: siteEnvelope.cloningInfo.configureLoadBalancing
          type:
            - boolean
          description: >-
            <code>true</code> to configure load balancing for source and
            destination

            app.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileId
          type:
            - string
          description: >-
            ARM

            resource ID of the Traffic Manager profile to use, if it exists.
            Traffic

            Manager resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileName
          type:
            - string
          description: >-
            Name of

            Traffic Manager profile to create. This is only needed if Traffic
            Manager

            profile does not already exist.
          optional: true
        - id: siteEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: siteEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.skipDnsRegistration
          type:
            - boolean
          description: |-
            If true web app hostname is
            not registered with DNS on creation. This parameter is
            only used for app creation
          optional: true
        - id: options.skipCustomDomainVerification
          type:
            - boolean
          description: >-
            If true, custom (non

            *.azurewebsites.net) domains associated with web app are not
            verified.
          optional: true
        - id: options.forceDnsRegistration
          type:
            - boolean
          description: |-
            If true, web app hostname is
            force registered with DNS
          optional: true
        - id: options.ttlInSeconds
          type:
            - string
          description: |-
            Time to live in seconds for web app's
            default domain name
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreateOrUpdate(resourceGroupName, name, siteEnvelope,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#beginRestoreWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#beginRestoreWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      beginRestoreWithHttpOperationResponse(resourceGroupName, name, backupId,
      request, options)
    summary: |-
      Restores a specific backup to another app (or deployment slot, if
      specified).

      Restores a specific backup to another app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.beginRestoreWithHttpOperationResponse(resourceGroupName,
      name, backupId, request, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: request
          type:
            - object
          description: Information on restore request
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.blobName
          type:
            - string
          description: Name of a blob which contains the backup.
          optional: true
        - id: request.overwrite
          type:
            - boolean
          description: >-
            <code>true</code> if the restore

            operation can overwrite target app; otherwise, <code>false</code>.

            <code>true</code> is needed if trying to restore over an existing
            app.
          optional: true
        - id: request.siteName
          type:
            - string
          description: Name of an app.
          optional: true
        - id: request.databases
          type:
            - array
          description: >-
            Collection of databases which should be

            restored. This list has to match the list of databases included in
            the

            backup.
          optional: true
        - id: request.ignoreConflictingHostNames
          type:
            - boolean
          description: >-
            Changes a logic when

            restoring an app with custom domains. <code>true</code> to remove
            custom

            domains automatically. If <code>false</code>, custom domains are
            added to

            the app's object when it is being restored, but that might fail due
            to

            conflicts during the operation.
          optional: true
        - id: request.operationType
          type:
            - string
          description: |-
            Operation type. Possible values
            include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.adjustConnectionStrings
          type:
            - boolean
          description: |-
            <code>true</code> if
            SiteConfig.ConnectionStrings should be set in new app; otherwise,
            <code>false</code>.
          optional: true
        - id: request.hostingEnvironment
          type:
            - string
          description: >-
            App Service Environment name,

            if needed (only when restoring an app to an App Service
            Environment).
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginRestoreWithHttpOperationResponse(resourceGroupName, name,
        backupId, request, options)
  - uid: 'azure-arm-website.WebApps#beginRestore'
    id: 'azure-arm-website.WebApps#beginRestore'
    parent: azure-arm-website.WebApps
    name: >-
      beginRestore(resourceGroupName, name, backupId, request, options,
      optionalCallback)
    summary: |-
      Restores a specific backup to another app (or deployment slot, if
      specified).

      Restores a specific backup to another app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.beginRestore(resourceGroupName, name, backupId,
      request, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: request
          type:
            - object
          description: Information on restore request
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.blobName
          type:
            - string
          description: Name of a blob which contains the backup.
          optional: true
        - id: request.overwrite
          type:
            - boolean
          description: >-
            <code>true</code> if the restore

            operation can overwrite target app; otherwise, <code>false</code>.

            <code>true</code> is needed if trying to restore over an existing
            app.
          optional: true
        - id: request.siteName
          type:
            - string
          description: Name of an app.
          optional: true
        - id: request.databases
          type:
            - array
          description: >-
            Collection of databases which should be

            restored. This list has to match the list of databases included in
            the

            backup.
          optional: true
        - id: request.ignoreConflictingHostNames
          type:
            - boolean
          description: >-
            Changes a logic when

            restoring an app with custom domains. <code>true</code> to remove
            custom

            domains automatically. If <code>false</code>, custom domains are
            added to

            the app's object when it is being restored, but that might fail due
            to

            conflicts during the operation.
          optional: true
        - id: request.operationType
          type:
            - string
          description: |-
            Operation type. Possible values
            include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.adjustConnectionStrings
          type:
            - boolean
          description: |-
            <code>true</code> if
            SiteConfig.ConnectionStrings should be set in new app; otherwise,
            <code>false</code>.
          optional: true
        - id: request.hostingEnvironment
          type:
            - string
          description: >-
            App Service Environment name,

            if needed (only when restoring an app to an App Service
            Environment).
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginRestore(resourceGroupName, name, backupId, request,
        options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#beginListPublishingCredentialsWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#beginListPublishingCredentialsWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      beginListPublishingCredentialsWithHttpOperationResponse(resourceGroupName,
      name, options)
    summary: |-
      Gets the Git/FTP publishing credentials of an app.

      Gets the Git/FTP publishing credentials of an app.
    fullName: >-
      azure-arm-website.WebApps.beginListPublishingCredentialsWithHttpOperationResponse(resourceGroupName,
      name, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginListPublishingCredentialsWithHttpOperationResponse(resourceGroupName,
        name, options)
  - uid: 'azure-arm-website.WebApps#beginListPublishingCredentials'
    id: 'azure-arm-website.WebApps#beginListPublishingCredentials'
    parent: azure-arm-website.WebApps
    name: >-
      beginListPublishingCredentials(resourceGroupName, name, options,
      optionalCallback)
    summary: |-
      Gets the Git/FTP publishing credentials of an app.

      Gets the Git/FTP publishing credentials of an app.
    fullName: >-
      azure-arm-website.WebApps.beginListPublishingCredentials(resourceGroupName,
      name, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginListPublishingCredentials(resourceGroupName, name,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#beginMigrateStorageWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#beginMigrateStorageWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      beginMigrateStorageWithHttpOperationResponse(subscriptionName,
      resourceGroupName, name, migrationOptions, options)
    summary: |-
      Restores a web app.

      Restores a web app.
    fullName: >-
      azure-arm-website.WebApps.beginMigrateStorageWithHttpOperationResponse(subscriptionName,
      resourceGroupName, name, migrationOptions, options)
    type: Method
    syntax:
      parameters:
        - id: subscriptionName
          type:
            - string
          description: Azure subscription
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: migrationOptions
          type:
            - object
          description: Migration migrationOptions
        - id: migrationOptions.azurefilesConnectionString
          type:
            - string
          description: |-
            AzureFiles
            connection string.
          optional: true
        - id: migrationOptions.azurefilesShare
          type:
            - string
          description: AzureFiles share.
          optional: true
        - id: migrationOptions.switchSiteAfterMigration
          type:
            - boolean
          description: |-
            <code>true</code>if the app should be switched over; otherwise,
            <code>false</code>.
          optional: true
        - id: migrationOptions.blockWriteAccessToSite
          type:
            - boolean
          description: |-
            <code>true</code>
            if the app should be read only during copy operation; otherwise,
            <code>false</code>.
          optional: true
        - id: migrationOptions.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: migrationOptions.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: migrationOptions.location
          type:
            - string
          description: Resource Location.
        - id: migrationOptions.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: migrationOptions.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginMigrateStorageWithHttpOperationResponse(subscriptionName,
        resourceGroupName, name, migrationOptions, options)
  - uid: 'azure-arm-website.WebApps#beginMigrateStorage'
    id: 'azure-arm-website.WebApps#beginMigrateStorage'
    parent: azure-arm-website.WebApps
    name: >-
      beginMigrateStorage(subscriptionName, resourceGroupName, name,
      migrationOptions, options, optionalCallback)
    summary: |-
      Restores a web app.

      Restores a web app.
    fullName: >-
      azure-arm-website.WebApps.beginMigrateStorage(subscriptionName,
      resourceGroupName, name, migrationOptions, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: subscriptionName
          type:
            - string
          description: Azure subscription
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: migrationOptions
          type:
            - object
          description: Migration migrationOptions
        - id: migrationOptions.azurefilesConnectionString
          type:
            - string
          description: |-
            AzureFiles
            connection string.
          optional: true
        - id: migrationOptions.azurefilesShare
          type:
            - string
          description: AzureFiles share.
          optional: true
        - id: migrationOptions.switchSiteAfterMigration
          type:
            - boolean
          description: |-
            <code>true</code>if the app should be switched over; otherwise,
            <code>false</code>.
          optional: true
        - id: migrationOptions.blockWriteAccessToSite
          type:
            - boolean
          description: |-
            <code>true</code>
            if the app should be read only during copy operation; otherwise,
            <code>false</code>.
          optional: true
        - id: migrationOptions.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: migrationOptions.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: migrationOptions.location
          type:
            - string
          description: Resource Location.
        - id: migrationOptions.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: migrationOptions.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginMigrateStorage(subscriptionName, resourceGroupName, name,
        migrationOptions, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#beginMigrateMySqlWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#beginMigrateMySqlWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      beginMigrateMySqlWithHttpOperationResponse(resourceGroupName, name,
      migrationRequestEnvelope, options)
    summary: |-
      Migrates a local (in-app) MySql database to a remote MySql
      database.

      Migrates a local (in-app) MySql database to a remote MySql database.
    fullName: >-
      azure-arm-website.WebApps.beginMigrateMySqlWithHttpOperationResponse(resourceGroupName,
      name, migrationRequestEnvelope, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: migrationRequestEnvelope
          type:
            - object
          description: MySql migration options
        - id: migrationRequestEnvelope.connectionString
          type:
            - string
          description: >-
            Connection

            string to the remote MySQL database to which data should be
            migrated.
          optional: true
        - id: migrationRequestEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: migrationRequestEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: migrationRequestEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: migrationRequestEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: migrationRequestEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginMigrateMySqlWithHttpOperationResponse(resourceGroupName,
        name, migrationRequestEnvelope, options)
  - uid: 'azure-arm-website.WebApps#beginMigrateMySql'
    id: 'azure-arm-website.WebApps#beginMigrateMySql'
    parent: azure-arm-website.WebApps
    name: >-
      beginMigrateMySql(resourceGroupName, name, migrationRequestEnvelope,
      options, optionalCallback)
    summary: |-
      Migrates a local (in-app) MySql database to a remote MySql
      database.

      Migrates a local (in-app) MySql database to a remote MySql database.
    fullName: >-
      azure-arm-website.WebApps.beginMigrateMySql(resourceGroupName, name,
      migrationRequestEnvelope, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: migrationRequestEnvelope
          type:
            - object
          description: MySql migration options
        - id: migrationRequestEnvelope.connectionString
          type:
            - string
          description: >-
            Connection

            string to the remote MySQL database to which data should be
            migrated.
          optional: true
        - id: migrationRequestEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: migrationRequestEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: migrationRequestEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: migrationRequestEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: migrationRequestEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginMigrateMySql(resourceGroupName, name,
        migrationRequestEnvelope, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#beginRecoverWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#beginRecoverWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      beginRecoverWithHttpOperationResponse(resourceGroupName, name,
      recoveryEntity, options)
    summary: |-
      Recovers a deleted web app.

      Recovers a deleted web app.
    fullName: >-
      azure-arm-website.WebApps.beginRecoverWithHttpOperationResponse(resourceGroupName,
      name, recoveryEntity, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: recoveryEntity
          type:
            - object
          description: |-
            Snapshot data used for web app recovery.
            Snapshot information can be obtained by calling GetDeletedSites or
            GetSiteSnapshots API.
        - id: recoveryEntity.snapshotTime
          type:
            - date
          description: |-
            Point in time in which the app
            recovery should be attempted.
          optional: true
        - id: recoveryEntity.siteName
          type:
            - string
          description: >-
            [Optional] Destination app name

            into which app should be recovered. This is case when new app should
            be

            created instead.
          optional: true
        - id: recoveryEntity.slotName
          type:
            - string
          description: |-
            [Optional] Destination app slot
            name into which app should be recovered.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginRecoverWithHttpOperationResponse(resourceGroupName, name,
        recoveryEntity, options)
  - uid: 'azure-arm-website.WebApps#beginRecover'
    id: 'azure-arm-website.WebApps#beginRecover'
    parent: azure-arm-website.WebApps
    name: >-
      beginRecover(resourceGroupName, name, recoveryEntity, options,
      optionalCallback)
    summary: |-
      Recovers a deleted web app.

      Recovers a deleted web app.
    fullName: >-
      azure-arm-website.WebApps.beginRecover(resourceGroupName, name,
      recoveryEntity, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: recoveryEntity
          type:
            - object
          description: |-
            Snapshot data used for web app recovery.
            Snapshot information can be obtained by calling GetDeletedSites or
            GetSiteSnapshots API.
        - id: recoveryEntity.snapshotTime
          type:
            - date
          description: |-
            Point in time in which the app
            recovery should be attempted.
          optional: true
        - id: recoveryEntity.siteName
          type:
            - string
          description: >-
            [Optional] Destination app name

            into which app should be recovered. This is case when new app should
            be

            created instead.
          optional: true
        - id: recoveryEntity.slotName
          type:
            - string
          description: |-
            [Optional] Destination app slot
            name into which app should be recovered.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginRecover(resourceGroupName, name, recoveryEntity, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#beginCreateOrUpdateSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#beginCreateOrUpdateSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      beginCreateOrUpdateSlotWithHttpOperationResponse(resourceGroupName, name,
      siteEnvelope, slot, options)
    summary: |-
      Creates a new web, mobile, or API app in an existing resource
      group, or updates an existing app.

      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    fullName: >-
      azure-arm-website.WebApps.beginCreateOrUpdateSlotWithHttpOperationResponse(resourceGroupName,
      name, siteEnvelope, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: |-
            Unique name of the app to create or update. To create
            or update a deployment slot, use the {slot} parameter.
        - id: siteEnvelope
          type:
            - object
          description: |-
            A JSON representation of the app properties.
            See example.
        - id: siteEnvelope.enabled
          type:
            - boolean
          description: >-
            <code>true</code> if the app is

            enabled; otherwise, <code>false</code>. Setting this value to false
            disables

            the app (takes the app offline).
          optional: true
        - id: siteEnvelope.hostNameSslStates
          type:
            - array
          description: |-
            Hostname SSL states are used
            to manage the SSL bindings for app's hostnames.
          optional: true
        - id: siteEnvelope.serverFarmId
          type:
            - string
          description: >-
            Resource ID of the associated

            App Service plan, formatted as:

            "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
          optional: true
        - id: siteEnvelope.reserved
          type:
            - boolean
          description: |-
            <code>true</code> if reserved;
            otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig
          type:
            - object
          description: Configuration of the app.
          optional: true
        - id: siteEnvelope.siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteEnvelope.siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteEnvelope.siteConfig.netFrameworkVersion
          type:
            - string
          description: |-
            .NET Framework
            version.
          optional: true
        - id: siteEnvelope.siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteEnvelope.siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteEnvelope.siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteEnvelope.siteConfig.linuxFxVersion
          type:
            - string
          description: |-
            Linux App Framework
            and version
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if request tracing is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request
            tracing expiration time.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if remote debugging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote
            debugging version.
          optional: true
        - id: siteEnvelope.siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if HTTP logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs
            directory size limit.
          optional: true
        - id: siteEnvelope.siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if detailed error logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.publishingUsername
          type:
            - string
          description: |-
            Publishing user
            name.
          optional: true
        - id: siteEnvelope.siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteEnvelope.siteConfig.connectionStrings
          type:
            - array
          description: |-
            Connection
            strings.
          optional: true
        - id: siteEnvelope.siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteEnvelope.siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteEnvelope.siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values

            include: 'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub',
            'CodePlexGit',

            'CodePlexHg', 'BitbucketGit', 'BitbucketHg', 'ExternalGit',
            'ExternalHg',

            'OneDrive', 'VSO'
          optional: true
        - id: siteEnvelope.siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use 32-bit worker process; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.webSocketsEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if WebSocket is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if
            Always On is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainerVersion
          type:
            - string
          description: |-
            Java
            container version.
          optional: true
        - id: siteEnvelope.siteConfig.appCommandLine
          type:
            - string
          description: |-
            App command line to
            launch.
          optional: true
        - id: siteEnvelope.siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed
            pipeline mode. Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteEnvelope.siteConfig.virtualApplications
          type:
            - array
          description: |-
            Virtual
            applications.
          optional: true
        - id: siteEnvelope.siteConfig.loadBalancing
          type:
            - string
          description: |-
            Site load balancing.
            Possible values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteEnvelope.siteConfig.experiments
          type:
            - object
          description: |-
            This is work around
            for polymophic types.
          optional: true
        - id: siteEnvelope.siteConfig.experiments.rampUpRules
          type:
            - array
          description: |-
            List of
            ramp-up rules.
          optional: true
        - id: siteEnvelope.siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum
            allowed CPU usage percentage.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum
            allowed memory usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum
            allowed disk size usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if Auto Heal is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions
            that describe when to execute the auto-heal actions.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A
            rule based on total requests.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: |-
            Time
            interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: A rule based on status codes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule based
            on request execution time.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: |-
            Time
            taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to
            be executed when a rule is triggered.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined action to be taken. Possible values include: 'Recycle',
            'LogEvent', 'CustomAction'
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: Custom action to be taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: |-
            Executable
            to be run.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteEnvelope.siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteEnvelope.siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteEnvelope.siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing
            (CORS) settings.
          optional: true
        - id: siteEnvelope.siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets
            the list of origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteEnvelope.siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteEnvelope.siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a
            flag indicating whether the Push endpoint is enabled.
        - id: siteEnvelope.siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of tags that are whitelisted for use
            by the

            push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: |-
            Gets or
            sets a JSON string containing a list of tags that require user
            authentication to be used in the push registration endpoint.
            Tags can consist of alphanumeric characters and the following:
            '_', '@', '#', '.', ':', '-'.
            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteEnvelope.siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of dynamic tags that will be
            evaluated from

            user claims in the push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about
            the formal API definition for the app.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the
            API definition.
          optional: true
        - id: siteEnvelope.siteConfig.autoSwapSlotName
          type:
            - string
          description: |-
            Auto-swap slot
            name.
          optional: true
        - id: siteEnvelope.siteConfig.localMySqlEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to enable local MySQL; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.ipSecurityRestrictions
          type:
            - array
          description: |-
            IP security
            restrictions.
          optional: true
        - id: siteEnvelope.scmSiteAlsoStopped
          type:
            - boolean
          description: >-
            <code>true</code> to stop

            SCM (KUDU) site when the app is stopped; otherwise,
            <code>false</code>. The

            default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile
          type:
            - object
          description: |-
            App Service
            Environment to use for the app.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile.id
          type:
            - string
          description: |-
            Resource ID of
            the App Service Environment.
          optional: true
        - id: siteEnvelope.microService
          type:
            - string
          description: |-
            Micro services like apps, logic
            apps.
          optional: true
        - id: siteEnvelope.gatewaySiteName
          type:
            - string
          description: |-
            Name of gateway app
            associated with the app.
          optional: true
        - id: siteEnvelope.clientAffinityEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client affinity; <code>false</code> to stop sending session
            affinity

            cookies, which route client requests in the same session to the same

            instance. Default is <code>true</code>.
          optional: true
        - id: siteEnvelope.clientCertEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client certificate authentication (TLS mutual
            authentication);

            otherwise, <code>false</code>. Default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostNamesDisabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            disable the public hostnames of the app; otherwise,
            <code>false</code>.

            If <code>true</code>, the app is only accessible via API management
            process.
          optional: true
        - id: siteEnvelope.containerSize
          type:
            - number
          description: Size of the function container.
          optional: true
        - id: siteEnvelope.dailyMemoryTimeQuota
          type:
            - number
          description: |-
            Maximum allowed daily
            memory-time quota (applicable on dynamic apps only).
          optional: true
        - id: siteEnvelope.cloningInfo
          type:
            - object
          description: |-
            If specified during app creation,
            the app is cloned from a source app.
          optional: true
        - id: siteEnvelope.cloningInfo.correlationId
          type:
            - string
          description: |-
            Correlation ID of
            cloning operation. This ID ties multiple cloning operations
            together to use the same snapshot.
          optional: true
        - id: siteEnvelope.cloningInfo.overwrite
          type:
            - boolean
          description: |-
            <code>true</code> to
            overwrite destination app; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneCustomHostNames
          type:
            - boolean
          description: >-
            <code>true</code> to clone custom hostnames from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneSourceControl
          type:
            - boolean
          description: >-
            <code>true</code> to clone source control from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.sourceWebAppId
          type:
            - string
          description: >-
            ARM resource ID of

            the source app. App resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}

            for production slots and

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}

            for other slots.
        - id: siteEnvelope.cloningInfo.hostingEnvironment
          type:
            - string
          description: |-
            App Service
            Environment.
          optional: true
        - id: siteEnvelope.cloningInfo.appSettingsOverrides
          type:
            - object
          description: >-
            Application

            setting overrides for cloned app. If specified, these settings
            override the

            settings cloned

            from source app. Otherwise, application settings from source app are

            retained.
          optional: true
        - id: siteEnvelope.cloningInfo.configureLoadBalancing
          type:
            - boolean
          description: >-
            <code>true</code> to configure load balancing for source and
            destination

            app.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileId
          type:
            - string
          description: >-
            ARM

            resource ID of the Traffic Manager profile to use, if it exists.
            Traffic

            Manager resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileName
          type:
            - string
          description: >-
            Name of

            Traffic Manager profile to create. This is only needed if Traffic
            Manager

            profile does not already exist.
          optional: true
        - id: siteEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: siteEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot to create or update. By
            default, this API attempts to create or modify the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.skipDnsRegistration
          type:
            - boolean
          description: |-
            If true web app hostname is
            not registered with DNS on creation. This parameter is
            only used for app creation
          optional: true
        - id: options.skipCustomDomainVerification
          type:
            - boolean
          description: >-
            If true, custom (non

            *.azurewebsites.net) domains associated with web app are not
            verified.
          optional: true
        - id: options.forceDnsRegistration
          type:
            - boolean
          description: |-
            If true, web app hostname is
            force registered with DNS
          optional: true
        - id: options.ttlInSeconds
          type:
            - string
          description: |-
            Time to live in seconds for web app's
            default domain name
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginCreateOrUpdateSlotWithHttpOperationResponse(resourceGroupName,
        name, siteEnvelope, slot, options)
  - uid: 'azure-arm-website.WebApps#beginCreateOrUpdateSlot'
    id: 'azure-arm-website.WebApps#beginCreateOrUpdateSlot'
    parent: azure-arm-website.WebApps
    name: >-
      beginCreateOrUpdateSlot(resourceGroupName, name, siteEnvelope, slot,
      options, optionalCallback)
    summary: |-
      Creates a new web, mobile, or API app in an existing resource
      group, or updates an existing app.

      Creates a new web, mobile, or API app in an existing resource group, or
      updates an existing app.
    fullName: >-
      azure-arm-website.WebApps.beginCreateOrUpdateSlot(resourceGroupName, name,
      siteEnvelope, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: |-
            Unique name of the app to create or update. To create
            or update a deployment slot, use the {slot} parameter.
        - id: siteEnvelope
          type:
            - object
          description: |-
            A JSON representation of the app properties.
            See example.
        - id: siteEnvelope.enabled
          type:
            - boolean
          description: >-
            <code>true</code> if the app is

            enabled; otherwise, <code>false</code>. Setting this value to false
            disables

            the app (takes the app offline).
          optional: true
        - id: siteEnvelope.hostNameSslStates
          type:
            - array
          description: |-
            Hostname SSL states are used
            to manage the SSL bindings for app's hostnames.
          optional: true
        - id: siteEnvelope.serverFarmId
          type:
            - string
          description: >-
            Resource ID of the associated

            App Service plan, formatted as:

            "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
          optional: true
        - id: siteEnvelope.reserved
          type:
            - boolean
          description: |-
            <code>true</code> if reserved;
            otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig
          type:
            - object
          description: Configuration of the app.
          optional: true
        - id: siteEnvelope.siteConfig.numberOfWorkers
          type:
            - number
          description: Number of workers.
          optional: true
        - id: siteEnvelope.siteConfig.defaultDocuments
          type:
            - array
          description: Default documents.
          optional: true
        - id: siteEnvelope.siteConfig.netFrameworkVersion
          type:
            - string
          description: |-
            .NET Framework
            version.
          optional: true
        - id: siteEnvelope.siteConfig.phpVersion
          type:
            - string
          description: Version of PHP.
          optional: true
        - id: siteEnvelope.siteConfig.pythonVersion
          type:
            - string
          description: Version of Python.
          optional: true
        - id: siteEnvelope.siteConfig.nodeVersion
          type:
            - string
          description: Version of Node.js.
          optional: true
        - id: siteEnvelope.siteConfig.linuxFxVersion
          type:
            - string
          description: |-
            Linux App Framework
            and version
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if request tracing is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.requestTracingExpirationTime
          type:
            - date
          description: |-
            Request
            tracing expiration time.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if remote debugging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.remoteDebuggingVersion
          type:
            - string
          description: |-
            Remote
            debugging version.
          optional: true
        - id: siteEnvelope.siteConfig.httpLoggingEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if HTTP logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.logsDirectorySizeLimit
          type:
            - number
          description: |-
            HTTP logs
            directory size limit.
          optional: true
        - id: siteEnvelope.siteConfig.detailedErrorLoggingEnabled
          type:
            - boolean
          description: |-
            <code>true</code> if detailed error logging is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.publishingUsername
          type:
            - string
          description: |-
            Publishing user
            name.
          optional: true
        - id: siteEnvelope.siteConfig.appSettings
          type:
            - array
          description: Application settings.
          optional: true
        - id: siteEnvelope.siteConfig.connectionStrings
          type:
            - array
          description: |-
            Connection
            strings.
          optional: true
        - id: siteEnvelope.siteConfig.handlerMappings
          type:
            - array
          description: Handler mappings.
          optional: true
        - id: siteEnvelope.siteConfig.documentRoot
          type:
            - string
          description: Document root.
          optional: true
        - id: siteEnvelope.siteConfig.scmType
          type:
            - string
          description: >-
            SCM type. Possible values

            include: 'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub',
            'CodePlexGit',

            'CodePlexHg', 'BitbucketGit', 'BitbucketHg', 'ExternalGit',
            'ExternalHg',

            'OneDrive', 'VSO'
          optional: true
        - id: siteEnvelope.siteConfig.use32BitWorkerProcess
          type:
            - boolean
          description: |-
            <code>true</code> to use 32-bit worker process; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.webSocketsEnabled
          type:
            - boolean
          description: >-
            <code>true</code> if WebSocket is enabled; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.alwaysOn
          type:
            - boolean
          description: |-
            <code>true</code> if
            Always On is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.javaVersion
          type:
            - string
          description: Java version.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainer
          type:
            - string
          description: Java container.
          optional: true
        - id: siteEnvelope.siteConfig.javaContainerVersion
          type:
            - string
          description: |-
            Java
            container version.
          optional: true
        - id: siteEnvelope.siteConfig.appCommandLine
          type:
            - string
          description: |-
            App command line to
            launch.
          optional: true
        - id: siteEnvelope.siteConfig.managedPipelineMode
          type:
            - string
          description: |-
            Managed
            pipeline mode. Possible values include: 'Integrated', 'Classic'
          optional: true
        - id: siteEnvelope.siteConfig.virtualApplications
          type:
            - array
          description: |-
            Virtual
            applications.
          optional: true
        - id: siteEnvelope.siteConfig.loadBalancing
          type:
            - string
          description: |-
            Site load balancing.
            Possible values include: 'WeightedRoundRobin', 'LeastRequests',
            'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
          optional: true
        - id: siteEnvelope.siteConfig.experiments
          type:
            - object
          description: |-
            This is work around
            for polymophic types.
          optional: true
        - id: siteEnvelope.siteConfig.experiments.rampUpRules
          type:
            - array
          description: |-
            List of
            ramp-up rules.
          optional: true
        - id: siteEnvelope.siteConfig.limits
          type:
            - object
          description: Site limits.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxPercentageCpu
          type:
            - number
          description: |-
            Maximum
            allowed CPU usage percentage.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxMemoryInMb
          type:
            - number
          description: |-
            Maximum
            allowed memory usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.limits.maxDiskSizeInMb
          type:
            - number
          description: |-
            Maximum
            allowed disk size usage in MB.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealEnabled
          type:
            - boolean
          description: |-
            <code>true</code>
            if Auto Heal is enabled; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules
          type:
            - object
          description: Auto Heal rules.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers
          type:
            - object
          description: |-
            Conditions
            that describe when to execute the auto-heal actions.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests
          type:
            - object
          description: |-
            A
            rule based on total requests.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.count
          type:
            - number
          description: Count.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.requests.timeInterval
          type:
            - string
          description: |-
            Time
            interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.privateBytesInKB
          type:
            - number
          description: |-
            A rule
            based on private bytes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.statusCodes
          type:
            - array
          description: A rule based on status codes.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests
          type:
            - object
          description: |-
            A rule based
            on request execution time.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeTaken
          type:
            - string
          description: |-
            Time
            taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.count
          type:
            - number
          description: Count.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.triggers.slowRequests.timeInterval
          type:
            - string
          description: Time interval.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions
          type:
            - object
          description: |-
            Actions to
            be executed when a rule is triggered.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.actionType
          type:
            - string
          description: |-
            Predefined action to be taken. Possible values include: 'Recycle',
            'LogEvent', 'CustomAction'
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction
          type:
            - object
          description: Custom action to be taken.
          optional: true
        - id: siteEnvelope.siteConfig.autoHealRules.actions.customAction.exe
          type:
            - string
          description: |-
            Executable
            to be run.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.customAction.parameters
          type:
            - string
          description: Parameters for the executable.
          optional: true
        - id: >-
            siteEnvelope.siteConfig.autoHealRules.actions.minProcessExecutionTime
          type:
            - string
          description: |-
            Minimum time the process must execute
            before taking the action
          optional: true
        - id: siteEnvelope.siteConfig.tracingOptions
          type:
            - string
          description: Tracing options.
          optional: true
        - id: siteEnvelope.siteConfig.vnetName
          type:
            - string
          description: Virtual Network name.
          optional: true
        - id: siteEnvelope.siteConfig.cors
          type:
            - object
          description: |-
            Cross-Origin Resource Sharing
            (CORS) settings.
          optional: true
        - id: siteEnvelope.siteConfig.cors.allowedOrigins
          type:
            - array
          description: |-
            Gets or sets
            the list of origins that should be allowed to make cross-origin
            calls (for example: http://example.com:12345). Use "*" to allow all.
          optional: true
        - id: siteEnvelope.siteConfig.push
          type:
            - object
          description: Push endpoint settings.
          optional: true
        - id: siteEnvelope.siteConfig.push.isPushEnabled
          type:
            - boolean
          description: |-
            Gets or sets a
            flag indicating whether the Push endpoint is enabled.
        - id: siteEnvelope.siteConfig.push.tagWhitelistJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of tags that are whitelisted for use
            by the

            push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.push.tagsRequiringAuth
          type:
            - string
          description: |-
            Gets or
            sets a JSON string containing a list of tags that require user
            authentication to be used in the push registration endpoint.
            Tags can consist of alphanumeric characters and the following:
            '_', '@', '#', '.', ':', '-'.
            Validation should be performed at the PushRequestHandler.
          optional: true
        - id: siteEnvelope.siteConfig.push.dynamicTagsJson
          type:
            - string
          description: >-
            Gets or sets

            a JSON string containing a list of dynamic tags that will be
            evaluated from

            user claims in the push registration endpoint.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition
          type:
            - object
          description: |-
            Information about
            the formal API definition for the app.
          optional: true
        - id: siteEnvelope.siteConfig.apiDefinition.url
          type:
            - string
          description: |-
            The URL of the
            API definition.
          optional: true
        - id: siteEnvelope.siteConfig.autoSwapSlotName
          type:
            - string
          description: |-
            Auto-swap slot
            name.
          optional: true
        - id: siteEnvelope.siteConfig.localMySqlEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to enable local MySQL; otherwise,
            <code>false</code>.
          optional: true
        - id: siteEnvelope.siteConfig.ipSecurityRestrictions
          type:
            - array
          description: |-
            IP security
            restrictions.
          optional: true
        - id: siteEnvelope.scmSiteAlsoStopped
          type:
            - boolean
          description: >-
            <code>true</code> to stop

            SCM (KUDU) site when the app is stopped; otherwise,
            <code>false</code>. The

            default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile
          type:
            - object
          description: |-
            App Service
            Environment to use for the app.
          optional: true
        - id: siteEnvelope.hostingEnvironmentProfile.id
          type:
            - string
          description: |-
            Resource ID of
            the App Service Environment.
          optional: true
        - id: siteEnvelope.microService
          type:
            - string
          description: |-
            Micro services like apps, logic
            apps.
          optional: true
        - id: siteEnvelope.gatewaySiteName
          type:
            - string
          description: |-
            Name of gateway app
            associated with the app.
          optional: true
        - id: siteEnvelope.clientAffinityEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client affinity; <code>false</code> to stop sending session
            affinity

            cookies, which route client requests in the same session to the same

            instance. Default is <code>true</code>.
          optional: true
        - id: siteEnvelope.clientCertEnabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            enable client certificate authentication (TLS mutual
            authentication);

            otherwise, <code>false</code>. Default is <code>false</code>.
          optional: true
        - id: siteEnvelope.hostNamesDisabled
          type:
            - boolean
          description: >-
            <code>true</code> to

            disable the public hostnames of the app; otherwise,
            <code>false</code>.

            If <code>true</code>, the app is only accessible via API management
            process.
          optional: true
        - id: siteEnvelope.containerSize
          type:
            - number
          description: Size of the function container.
          optional: true
        - id: siteEnvelope.dailyMemoryTimeQuota
          type:
            - number
          description: |-
            Maximum allowed daily
            memory-time quota (applicable on dynamic apps only).
          optional: true
        - id: siteEnvelope.cloningInfo
          type:
            - object
          description: |-
            If specified during app creation,
            the app is cloned from a source app.
          optional: true
        - id: siteEnvelope.cloningInfo.correlationId
          type:
            - string
          description: |-
            Correlation ID of
            cloning operation. This ID ties multiple cloning operations
            together to use the same snapshot.
          optional: true
        - id: siteEnvelope.cloningInfo.overwrite
          type:
            - boolean
          description: |-
            <code>true</code> to
            overwrite destination app; otherwise, <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneCustomHostNames
          type:
            - boolean
          description: >-
            <code>true</code> to clone custom hostnames from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.cloneSourceControl
          type:
            - boolean
          description: >-
            <code>true</code> to clone source control from source app;
            otherwise,

            <code>false</code>.
          optional: true
        - id: siteEnvelope.cloningInfo.sourceWebAppId
          type:
            - string
          description: >-
            ARM resource ID of

            the source app. App resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}

            for production slots and

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}

            for other slots.
        - id: siteEnvelope.cloningInfo.hostingEnvironment
          type:
            - string
          description: |-
            App Service
            Environment.
          optional: true
        - id: siteEnvelope.cloningInfo.appSettingsOverrides
          type:
            - object
          description: >-
            Application

            setting overrides for cloned app. If specified, these settings
            override the

            settings cloned

            from source app. Otherwise, application settings from source app are

            retained.
          optional: true
        - id: siteEnvelope.cloningInfo.configureLoadBalancing
          type:
            - boolean
          description: >-
            <code>true</code> to configure load balancing for source and
            destination

            app.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileId
          type:
            - string
          description: >-
            ARM

            resource ID of the Traffic Manager profile to use, if it exists.
            Traffic

            Manager resource ID is of the form

            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
          optional: true
        - id: siteEnvelope.cloningInfo.trafficManagerProfileName
          type:
            - string
          description: >-
            Name of

            Traffic Manager profile to create. This is only needed if Traffic
            Manager

            profile does not already exist.
          optional: true
        - id: siteEnvelope.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteEnvelope.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteEnvelope.location
          type:
            - string
          description: Resource Location.
        - id: siteEnvelope.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteEnvelope.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot to create or update. By
            default, this API attempts to create or modify the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.skipDnsRegistration
          type:
            - boolean
          description: |-
            If true web app hostname is
            not registered with DNS on creation. This parameter is
            only used for app creation
          optional: true
        - id: options.skipCustomDomainVerification
          type:
            - boolean
          description: >-
            If true, custom (non

            *.azurewebsites.net) domains associated with web app are not
            verified.
          optional: true
        - id: options.forceDnsRegistration
          type:
            - boolean
          description: |-
            If true, web app hostname is
            force registered with DNS
          optional: true
        - id: options.ttlInSeconds
          type:
            - string
          description: |-
            Time to live in seconds for web app's
            default domain name
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreateOrUpdateSlot(resourceGroupName, name, siteEnvelope,
        slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#beginRestoreSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#beginRestoreSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      beginRestoreSlotWithHttpOperationResponse(resourceGroupName, name,
      backupId, request, slot, options)
    summary: |-
      Restores a specific backup to another app (or deployment slot, if
      specified).

      Restores a specific backup to another app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.beginRestoreSlotWithHttpOperationResponse(resourceGroupName,
      name, backupId, request, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: request
          type:
            - object
          description: Information on restore request
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.blobName
          type:
            - string
          description: Name of a blob which contains the backup.
          optional: true
        - id: request.overwrite
          type:
            - boolean
          description: >-
            <code>true</code> if the restore

            operation can overwrite target app; otherwise, <code>false</code>.

            <code>true</code> is needed if trying to restore over an existing
            app.
          optional: true
        - id: request.siteName
          type:
            - string
          description: Name of an app.
          optional: true
        - id: request.databases
          type:
            - array
          description: >-
            Collection of databases which should be

            restored. This list has to match the list of databases included in
            the

            backup.
          optional: true
        - id: request.ignoreConflictingHostNames
          type:
            - boolean
          description: >-
            Changes a logic when

            restoring an app with custom domains. <code>true</code> to remove
            custom

            domains automatically. If <code>false</code>, custom domains are
            added to

            the app's object when it is being restored, but that might fail due
            to

            conflicts during the operation.
          optional: true
        - id: request.operationType
          type:
            - string
          description: |-
            Operation type. Possible values
            include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.adjustConnectionStrings
          type:
            - boolean
          description: |-
            <code>true</code> if
            SiteConfig.ConnectionStrings should be set in new app; otherwise,
            <code>false</code>.
          optional: true
        - id: request.hostingEnvironment
          type:
            - string
          description: >-
            App Service Environment name,

            if needed (only when restoring an app to an App Service
            Environment).
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will restore a backup of the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginRestoreSlotWithHttpOperationResponse(resourceGroupName,
        name, backupId, request, slot, options)
  - uid: 'azure-arm-website.WebApps#beginRestoreSlot'
    id: 'azure-arm-website.WebApps#beginRestoreSlot'
    parent: azure-arm-website.WebApps
    name: >-
      beginRestoreSlot(resourceGroupName, name, backupId, request, slot,
      options, optionalCallback)
    summary: |-
      Restores a specific backup to another app (or deployment slot, if
      specified).

      Restores a specific backup to another app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.beginRestoreSlot(resourceGroupName, name,
      backupId, request, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: backupId
          type:
            - string
          description: ID of the backup.
        - id: request
          type:
            - object
          description: Information on restore request
        - id: request.storageAccountUrl
          type:
            - string
          description: SAS URL to the container.
          optional: true
        - id: request.blobName
          type:
            - string
          description: Name of a blob which contains the backup.
          optional: true
        - id: request.overwrite
          type:
            - boolean
          description: >-
            <code>true</code> if the restore

            operation can overwrite target app; otherwise, <code>false</code>.

            <code>true</code> is needed if trying to restore over an existing
            app.
          optional: true
        - id: request.siteName
          type:
            - string
          description: Name of an app.
          optional: true
        - id: request.databases
          type:
            - array
          description: >-
            Collection of databases which should be

            restored. This list has to match the list of databases included in
            the

            backup.
          optional: true
        - id: request.ignoreConflictingHostNames
          type:
            - boolean
          description: >-
            Changes a logic when

            restoring an app with custom domains. <code>true</code> to remove
            custom

            domains automatically. If <code>false</code>, custom domains are
            added to

            the app's object when it is being restored, but that might fail due
            to

            conflicts during the operation.
          optional: true
        - id: request.operationType
          type:
            - string
          description: |-
            Operation type. Possible values
            include: 'Default', 'Clone', 'Relocation'
          optional: true
        - id: request.adjustConnectionStrings
          type:
            - boolean
          description: |-
            <code>true</code> if
            SiteConfig.ConnectionStrings should be set in new app; otherwise,
            <code>false</code>.
          optional: true
        - id: request.hostingEnvironment
          type:
            - string
          description: >-
            App Service Environment name,

            if needed (only when restoring an app to an App Service
            Environment).
          optional: true
        - id: request.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: request.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: request.location
          type:
            - string
          description: Resource Location.
        - id: request.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: request.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of the deployment slot. If a slot is not
            specified, the API will restore a backup of the production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginRestoreSlot(resourceGroupName, name, backupId, request,
        slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#beginListPublishingCredentialsSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#beginListPublishingCredentialsSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      beginListPublishingCredentialsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    summary: |-
      Gets the Git/FTP publishing credentials of an app.

      Gets the Git/FTP publishing credentials of an app.
    fullName: >-
      azure-arm-website.WebApps.beginListPublishingCredentialsSlotWithHttpOperationResponse(resourceGroupName,
      name, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the publishing credentials for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginListPublishingCredentialsSlotWithHttpOperationResponse(resourceGroupName,
        name, slot, options)
  - uid: 'azure-arm-website.WebApps#beginListPublishingCredentialsSlot'
    id: 'azure-arm-website.WebApps#beginListPublishingCredentialsSlot'
    parent: azure-arm-website.WebApps
    name: >-
      beginListPublishingCredentialsSlot(resourceGroupName, name, slot, options,
      optionalCallback)
    summary: |-
      Gets the Git/FTP publishing credentials of an app.

      Gets the Git/FTP publishing credentials of an app.
    fullName: >-
      azure-arm-website.WebApps.beginListPublishingCredentialsSlot(resourceGroupName,
      name, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will get the publishing credentials for the
            production

            slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginListPublishingCredentialsSlot(resourceGroupName, name,
        slot, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#beginRecoverSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#beginRecoverSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      beginRecoverSlotWithHttpOperationResponse(resourceGroupName, name,
      recoveryEntity, slot, options)
    summary: |-
      Recovers a deleted web app.

      Recovers a deleted web app.
    fullName: >-
      azure-arm-website.WebApps.beginRecoverSlotWithHttpOperationResponse(resourceGroupName,
      name, recoveryEntity, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: recoveryEntity
          type:
            - object
          description: |-
            Snapshot data used for web app recovery.
            Snapshot information can be obtained by calling GetDeletedSites or
            GetSiteSnapshots API.
        - id: recoveryEntity.snapshotTime
          type:
            - date
          description: |-
            Point in time in which the app
            recovery should be attempted.
          optional: true
        - id: recoveryEntity.siteName
          type:
            - string
          description: >-
            [Optional] Destination app name

            into which app should be recovered. This is case when new app should
            be

            created instead.
          optional: true
        - id: recoveryEntity.slotName
          type:
            - string
          description: |-
            [Optional] Destination app slot
            name into which app should be recovered.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginRecoverSlotWithHttpOperationResponse(resourceGroupName,
        name, recoveryEntity, slot, options)
  - uid: 'azure-arm-website.WebApps#beginRecoverSlot'
    id: 'azure-arm-website.WebApps#beginRecoverSlot'
    parent: azure-arm-website.WebApps
    name: >-
      beginRecoverSlot(resourceGroupName, name, recoveryEntity, slot, options,
      optionalCallback)
    summary: |-
      Recovers a deleted web app.

      Recovers a deleted web app.
    fullName: >-
      azure-arm-website.WebApps.beginRecoverSlot(resourceGroupName, name,
      recoveryEntity, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of web app
        - id: recoveryEntity
          type:
            - object
          description: |-
            Snapshot data used for web app recovery.
            Snapshot information can be obtained by calling GetDeletedSites or
            GetSiteSnapshots API.
        - id: recoveryEntity.snapshotTime
          type:
            - date
          description: |-
            Point in time in which the app
            recovery should be attempted.
          optional: true
        - id: recoveryEntity.siteName
          type:
            - string
          description: >-
            [Optional] Destination app name

            into which app should be recovered. This is case when new app should
            be

            created instead.
          optional: true
        - id: recoveryEntity.slotName
          type:
            - string
          description: |-
            [Optional] Destination app slot
            name into which app should be recovered.
          optional: true
        - id: slot
          type:
            - string
          description: |-
            Name of web app slot. If not specified then will
            default to production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginRecoverSlot(resourceGroupName, name, recoveryEntity, slot,
        options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#beginSwapSlotSlotWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#beginSwapSlotSlotWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: >-
      beginSwapSlotSlotWithHttpOperationResponse(resourceGroupName, name,
      slotSwapEntity, slot, options)
    summary: |-
      Swaps two deployment slots of an app.

      Swaps two deployment slots of an app.
    fullName: >-
      azure-arm-website.WebApps.beginSwapSlotSlotWithHttpOperationResponse(resourceGroupName,
      name, slotSwapEntity, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: slot
          type:
            - string
          description: |-
            Name of the source slot. If a slot is not specified,
            the production slot is used as the source slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginSwapSlotSlotWithHttpOperationResponse(resourceGroupName,
        name, slotSwapEntity, slot, options)
  - uid: 'azure-arm-website.WebApps#beginSwapSlotSlot'
    id: 'azure-arm-website.WebApps#beginSwapSlotSlot'
    parent: azure-arm-website.WebApps
    name: >-
      beginSwapSlotSlot(resourceGroupName, name, slotSwapEntity, slot, options,
      optionalCallback)
    summary: |-
      Swaps two deployment slots of an app.

      Swaps two deployment slots of an app.
    fullName: >-
      azure-arm-website.WebApps.beginSwapSlotSlot(resourceGroupName, name,
      slotSwapEntity, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: slot
          type:
            - string
          description: |-
            Name of the source slot. If a slot is not specified,
            the production slot is used as the source slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginSwapSlotSlot(resourceGroupName, name, slotSwapEntity,
        slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#beginCreateOrUpdateSourceControlSlotWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#beginCreateOrUpdateSourceControlSlotWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      beginCreateOrUpdateSourceControlSlotWithHttpOperationResponse(resourceGroupName,
      name, siteSourceControl, slot, options)
    summary: |-
      Updates the source control configuration of an app.

      Updates the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.beginCreateOrUpdateSourceControlSlotWithHttpOperationResponse(resourceGroupName,
      name, siteSourceControl, slot, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - object
          description: |-
            JSON representation of a SiteSourceControl
            object. See example.
        - id: siteSourceControl.repoUrl
          type:
            - string
          description: |-
            Repository or source control
            URL.
          optional: true
        - id: siteSourceControl.branch
          type:
            - string
          description: |-
            Name of branch to use for
            deployment.
          optional: true
        - id: siteSourceControl.isManualIntegration
          type:
            - boolean
          description: >-
            <code>true</code>

            to limit to manual integration; <code>false</code> to enable
            continuous

            integration (which configures webhooks into online repos like
            GitHub).
          optional: true
        - id: siteSourceControl.deploymentRollbackEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable deployment rollback; otherwise,
            <code>false</code>.
          optional: true
        - id: siteSourceControl.isMercurial
          type:
            - boolean
          description: |-
            <code>true</code> for a
            Mercurial repository; <code>false</code> for a Git repository.
          optional: true
        - id: siteSourceControl.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteSourceControl.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteSourceControl.location
          type:
            - string
          description: Resource Location.
        - id: siteSourceControl.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteSourceControl.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the source control configuration for
            the

            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginCreateOrUpdateSourceControlSlotWithHttpOperationResponse(resourceGroupName,
        name, siteSourceControl, slot, options)
  - uid: 'azure-arm-website.WebApps#beginCreateOrUpdateSourceControlSlot'
    id: 'azure-arm-website.WebApps#beginCreateOrUpdateSourceControlSlot'
    parent: azure-arm-website.WebApps
    name: >-
      beginCreateOrUpdateSourceControlSlot(resourceGroupName, name,
      siteSourceControl, slot, options, optionalCallback)
    summary: |-
      Updates the source control configuration of an app.

      Updates the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.beginCreateOrUpdateSourceControlSlot(resourceGroupName,
      name, siteSourceControl, slot, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - object
          description: |-
            JSON representation of a SiteSourceControl
            object. See example.
        - id: siteSourceControl.repoUrl
          type:
            - string
          description: |-
            Repository or source control
            URL.
          optional: true
        - id: siteSourceControl.branch
          type:
            - string
          description: |-
            Name of branch to use for
            deployment.
          optional: true
        - id: siteSourceControl.isManualIntegration
          type:
            - boolean
          description: >-
            <code>true</code>

            to limit to manual integration; <code>false</code> to enable
            continuous

            integration (which configures webhooks into online repos like
            GitHub).
          optional: true
        - id: siteSourceControl.deploymentRollbackEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable deployment rollback; otherwise,
            <code>false</code>.
          optional: true
        - id: siteSourceControl.isMercurial
          type:
            - boolean
          description: |-
            <code>true</code> for a
            Mercurial repository; <code>false</code> for a Git repository.
          optional: true
        - id: siteSourceControl.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteSourceControl.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteSourceControl.location
          type:
            - string
          description: Resource Location.
        - id: siteSourceControl.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteSourceControl.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: slot
          type:
            - string
          description: >-
            Name of the deployment slot. If a slot is not

            specified, the API will update the source control configuration for
            the

            production slot.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreateOrUpdateSourceControlSlot(resourceGroupName, name,
        siteSourceControl, slot, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#beginSwapSlotWithProductionWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#beginSwapSlotWithProductionWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      beginSwapSlotWithProductionWithHttpOperationResponse(resourceGroupName,
      name, slotSwapEntity, options)
    summary: |-
      Swaps two deployment slots of an app.

      Swaps two deployment slots of an app.
    fullName: >-
      azure-arm-website.WebApps.beginSwapSlotWithProductionWithHttpOperationResponse(resourceGroupName,
      name, slotSwapEntity, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginSwapSlotWithProductionWithHttpOperationResponse(resourceGroupName,
        name, slotSwapEntity, options)
  - uid: 'azure-arm-website.WebApps#beginSwapSlotWithProduction'
    id: 'azure-arm-website.WebApps#beginSwapSlotWithProduction'
    parent: azure-arm-website.WebApps
    name: >-
      beginSwapSlotWithProduction(resourceGroupName, name, slotSwapEntity,
      options, optionalCallback)
    summary: |-
      Swaps two deployment slots of an app.

      Swaps two deployment slots of an app.
    fullName: >-
      azure-arm-website.WebApps.beginSwapSlotWithProduction(resourceGroupName,
      name, slotSwapEntity, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: slotSwapEntity
          type:
            - object
          description: |-
            JSON object that contains the target slot
            name. See example.
        - id: slotSwapEntity.targetSlot
          type:
            - string
          description: |-
            Destination deployment slot during
            swap operation.
        - id: slotSwapEntity.preserveVnet
          type:
            - boolean
          description: >-
            <code>true</code> to preserve

            Virtual Network to the slot during swap; otherwise,
            <code>false</code>.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginSwapSlotWithProduction(resourceGroupName, name,
        slotSwapEntity, options, optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#beginCreateOrUpdateSourceControlWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#beginCreateOrUpdateSourceControlWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      beginCreateOrUpdateSourceControlWithHttpOperationResponse(resourceGroupName,
      name, siteSourceControl, options)
    summary: |-
      Updates the source control configuration of an app.

      Updates the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.beginCreateOrUpdateSourceControlWithHttpOperationResponse(resourceGroupName,
      name, siteSourceControl, options)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - object
          description: |-
            JSON representation of a SiteSourceControl
            object. See example.
        - id: siteSourceControl.repoUrl
          type:
            - string
          description: |-
            Repository or source control
            URL.
          optional: true
        - id: siteSourceControl.branch
          type:
            - string
          description: |-
            Name of branch to use for
            deployment.
          optional: true
        - id: siteSourceControl.isManualIntegration
          type:
            - boolean
          description: >-
            <code>true</code>

            to limit to manual integration; <code>false</code> to enable
            continuous

            integration (which configures webhooks into online repos like
            GitHub).
          optional: true
        - id: siteSourceControl.deploymentRollbackEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable deployment rollback; otherwise,
            <code>false</code>.
          optional: true
        - id: siteSourceControl.isMercurial
          type:
            - boolean
          description: |-
            <code>true</code> for a
            Mercurial repository; <code>false</code> for a Git repository.
          optional: true
        - id: siteSourceControl.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteSourceControl.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteSourceControl.location
          type:
            - string
          description: Resource Location.
        - id: siteSourceControl.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteSourceControl.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginCreateOrUpdateSourceControlWithHttpOperationResponse(resourceGroupName,
        name, siteSourceControl, options)
  - uid: 'azure-arm-website.WebApps#beginCreateOrUpdateSourceControl'
    id: 'azure-arm-website.WebApps#beginCreateOrUpdateSourceControl'
    parent: azure-arm-website.WebApps
    name: >-
      beginCreateOrUpdateSourceControl(resourceGroupName, name,
      siteSourceControl, options, optionalCallback)
    summary: |-
      Updates the source control configuration of an app.

      Updates the source control configuration of an app.
    fullName: >-
      azure-arm-website.WebApps.beginCreateOrUpdateSourceControl(resourceGroupName,
      name, siteSourceControl, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: name
          type:
            - string
          description: Name of the app.
        - id: siteSourceControl
          type:
            - object
          description: |-
            JSON representation of a SiteSourceControl
            object. See example.
        - id: siteSourceControl.repoUrl
          type:
            - string
          description: |-
            Repository or source control
            URL.
          optional: true
        - id: siteSourceControl.branch
          type:
            - string
          description: |-
            Name of branch to use for
            deployment.
          optional: true
        - id: siteSourceControl.isManualIntegration
          type:
            - boolean
          description: >-
            <code>true</code>

            to limit to manual integration; <code>false</code> to enable
            continuous

            integration (which configures webhooks into online repos like
            GitHub).
          optional: true
        - id: siteSourceControl.deploymentRollbackEnabled
          type:
            - boolean
          description: |-
            <code>true</code> to enable deployment rollback; otherwise,
            <code>false</code>.
          optional: true
        - id: siteSourceControl.isMercurial
          type:
            - boolean
          description: |-
            <code>true</code> for a
            Mercurial repository; <code>false</code> for a Git repository.
          optional: true
        - id: siteSourceControl.name
          type:
            - string
          description: Resource Name.
          optional: true
        - id: siteSourceControl.kind
          type:
            - string
          description: Kind of resource.
          optional: true
        - id: siteSourceControl.location
          type:
            - string
          description: Resource Location.
        - id: siteSourceControl.type
          type:
            - string
          description: Resource type.
          optional: true
        - id: siteSourceControl.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreateOrUpdateSourceControl(resourceGroupName, name,
        siteSourceControl, options, optionalCallback)
  - uid: 'azure-arm-website.WebApps#listNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Get all apps for a subscription.

      Get all apps for a subscription.
    fullName: >-
      azure-arm-website.WebApps.listNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-arm-website.WebApps#listNext'
    id: 'azure-arm-website.WebApps#listNext'
    parent: azure-arm-website.WebApps
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Get all apps for a subscription.

      Get all apps for a subscription.
    fullName: >-
      azure-arm-website.WebApps.listNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#listByResourceGroupNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listByResourceGroupNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listByResourceGroupNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Gets all web, mobile, and API apps in the specified resource group.

      Gets all web, mobile, and API apps in the specified resource group.
    fullName: >-
      azure-arm-website.WebApps.listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listByResourceGroupNext'
    id: 'azure-arm-website.WebApps#listByResourceGroupNext'
    parent: azure-arm-website.WebApps
    name: 'listByResourceGroupNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets all web, mobile, and API apps in the specified resource group.

      Gets all web, mobile, and API apps in the specified resource group.
    fullName: >-
      azure-arm-website.WebApps.listByResourceGroupNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroupNext(nextPageLink, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listBackupsNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listBackupsNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listBackupsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Gets existing backups of an app.

      Gets existing backups of an app.
    fullName: >-
      azure-arm-website.WebApps.listBackupsNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listBackupsNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-arm-website.WebApps#listBackupsNext'
    id: 'azure-arm-website.WebApps#listBackupsNext'
    parent: azure-arm-website.WebApps
    name: 'listBackupsNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets existing backups of an app.

      Gets existing backups of an app.
    fullName: >-
      azure-arm-website.WebApps.listBackupsNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listBackupsNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#listDeploymentsNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listDeploymentsNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listDeploymentsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listDeploymentsNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listDeploymentsNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listDeploymentsNext'
    id: 'azure-arm-website.WebApps#listDeploymentsNext'
    parent: azure-arm-website.WebApps
    name: 'listDeploymentsNext(nextPageLink, options, optionalCallback)'
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listDeploymentsNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listDeploymentsNext(nextPageLink, options, optionalCallback)'
  - uid: >-
      azure-arm-website.WebApps#listDomainOwnershipIdentifiersNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listDomainOwnershipIdentifiersNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listDomainOwnershipIdentifiersNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: |-
      Lists ownership identifiers for domain associated with web app.

      Lists ownership identifiers for domain associated with web app.
    fullName: >-
      azure-arm-website.WebApps.listDomainOwnershipIdentifiersNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listDomainOwnershipIdentifiersNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listDomainOwnershipIdentifiersNext'
    id: 'azure-arm-website.WebApps#listDomainOwnershipIdentifiersNext'
    parent: azure-arm-website.WebApps
    name: >-
      listDomainOwnershipIdentifiersNext(nextPageLink, options,
      optionalCallback)
    summary: |-
      Lists ownership identifiers for domain associated with web app.

      Lists ownership identifiers for domain associated with web app.
    fullName: >-
      azure-arm-website.WebApps.listDomainOwnershipIdentifiersNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listDomainOwnershipIdentifiersNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listHostNameBindingsNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listHostNameBindingsNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: 'listHostNameBindingsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Get hostname bindings for an app or a deployment slot.

      Get hostname bindings for an app or a deployment slot.
    fullName: >-
      azure-arm-website.WebApps.listHostNameBindingsNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listHostNameBindingsNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listHostNameBindingsNext'
    id: 'azure-arm-website.WebApps#listHostNameBindingsNext'
    parent: azure-arm-website.WebApps
    name: 'listHostNameBindingsNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Get hostname bindings for an app or a deployment slot.

      Get hostname bindings for an app or a deployment slot.
    fullName: >-
      azure-arm-website.WebApps.listHostNameBindingsNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listHostNameBindingsNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listInstanceIdentifiersNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listInstanceIdentifiersNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listInstanceIdentifiersNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: |-
      Gets all scale-out instances of an app.

      Gets all scale-out instances of an app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceIdentifiersNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listInstanceIdentifiersNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listInstanceIdentifiersNext'
    id: 'azure-arm-website.WebApps#listInstanceIdentifiersNext'
    parent: azure-arm-website.WebApps
    name: 'listInstanceIdentifiersNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets all scale-out instances of an app.

      Gets all scale-out instances of an app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceIdentifiersNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listInstanceIdentifiersNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listInstanceDeploymentsNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listInstanceDeploymentsNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listInstanceDeploymentsNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceDeploymentsNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listInstanceDeploymentsNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listInstanceDeploymentsNext'
    id: 'azure-arm-website.WebApps#listInstanceDeploymentsNext'
    parent: azure-arm-website.WebApps
    name: 'listInstanceDeploymentsNext(nextPageLink, options, optionalCallback)'
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceDeploymentsNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listInstanceDeploymentsNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listMetricDefinitionsNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listMetricDefinitionsNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: 'listMetricDefinitionsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Gets all metric definitions of an app (or deployment slot, if
      specified).

      Gets all metric definitions of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricDefinitionsNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listMetricDefinitionsNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listMetricDefinitionsNext'
    id: 'azure-arm-website.WebApps#listMetricDefinitionsNext'
    parent: azure-arm-website.WebApps
    name: 'listMetricDefinitionsNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets all metric definitions of an app (or deployment slot, if
      specified).

      Gets all metric definitions of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricDefinitionsNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listMetricDefinitionsNext(nextPageLink, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listMetricsNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listMetricsNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listMetricsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Gets performance metrics of an app (or deployment slot, if
      specified).

      Gets performance metrics of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricsNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listMetricsNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-arm-website.WebApps#listMetricsNext'
    id: 'azure-arm-website.WebApps#listMetricsNext'
    parent: azure-arm-website.WebApps
    name: 'listMetricsNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets performance metrics of an app (or deployment slot, if
      specified).

      Gets performance metrics of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricsNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listMetricsNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#listPerfMonCountersNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listPerfMonCountersNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listPerfMonCountersNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Gets perfmon counters for web app.

      Gets perfmon counters for web app.
    fullName: >-
      azure-arm-website.WebApps.listPerfMonCountersNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listPerfMonCountersNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listPerfMonCountersNext'
    id: 'azure-arm-website.WebApps#listPerfMonCountersNext'
    parent: azure-arm-website.WebApps
    name: 'listPerfMonCountersNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets perfmon counters for web app.

      Gets perfmon counters for web app.
    fullName: >-
      azure-arm-website.WebApps.listPerfMonCountersNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listPerfMonCountersNext(nextPageLink, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listSlotsNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listSlotsNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listSlotsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Gets an app's deployment slots.

      Gets an app's deployment slots.
    fullName: >-
      azure-arm-website.WebApps.listSlotsNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listSlotsNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-arm-website.WebApps#listSlotsNext'
    id: 'azure-arm-website.WebApps#listSlotsNext'
    parent: azure-arm-website.WebApps
    name: 'listSlotsNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets an app's deployment slots.

      Gets an app's deployment slots.
    fullName: >-
      azure-arm-website.WebApps.listSlotsNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listSlotsNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#listBackupsSlotNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listBackupsSlotNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listBackupsSlotNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Gets existing backups of an app.

      Gets existing backups of an app.
    fullName: >-
      azure-arm-website.WebApps.listBackupsSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listBackupsSlotNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listBackupsSlotNext'
    id: 'azure-arm-website.WebApps#listBackupsSlotNext'
    parent: azure-arm-website.WebApps
    name: 'listBackupsSlotNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets existing backups of an app.

      Gets existing backups of an app.
    fullName: >-
      azure-arm-website.WebApps.listBackupsSlotNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listBackupsSlotNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#listDeploymentsSlotNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listDeploymentsSlotNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listDeploymentsSlotNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listDeploymentsSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listDeploymentsSlotNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listDeploymentsSlotNext'
    id: 'azure-arm-website.WebApps#listDeploymentsSlotNext'
    parent: azure-arm-website.WebApps
    name: 'listDeploymentsSlotNext(nextPageLink, options, optionalCallback)'
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listDeploymentsSlotNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listDeploymentsSlotNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listDomainOwnershipIdentifiersSlotNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listDomainOwnershipIdentifiersSlotNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listDomainOwnershipIdentifiersSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: |-
      Lists ownership identifiers for domain associated with web app.

      Lists ownership identifiers for domain associated with web app.
    fullName: >-
      azure-arm-website.WebApps.listDomainOwnershipIdentifiersSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listDomainOwnershipIdentifiersSlotNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listDomainOwnershipIdentifiersSlotNext'
    id: 'azure-arm-website.WebApps#listDomainOwnershipIdentifiersSlotNext'
    parent: azure-arm-website.WebApps
    name: >-
      listDomainOwnershipIdentifiersSlotNext(nextPageLink, options,
      optionalCallback)
    summary: |-
      Lists ownership identifiers for domain associated with web app.

      Lists ownership identifiers for domain associated with web app.
    fullName: >-
      azure-arm-website.WebApps.listDomainOwnershipIdentifiersSlotNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listDomainOwnershipIdentifiersSlotNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listHostNameBindingsSlotNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listHostNameBindingsSlotNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listHostNameBindingsSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: |-
      Get hostname bindings for an app or a deployment slot.

      Get hostname bindings for an app or a deployment slot.
    fullName: >-
      azure-arm-website.WebApps.listHostNameBindingsSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listHostNameBindingsSlotNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listHostNameBindingsSlotNext'
    id: 'azure-arm-website.WebApps#listHostNameBindingsSlotNext'
    parent: azure-arm-website.WebApps
    name: 'listHostNameBindingsSlotNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Get hostname bindings for an app or a deployment slot.

      Get hostname bindings for an app or a deployment slot.
    fullName: >-
      azure-arm-website.WebApps.listHostNameBindingsSlotNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listHostNameBindingsSlotNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listInstanceIdentifiersSlotNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listInstanceIdentifiersSlotNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listInstanceIdentifiersSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: |-
      Gets all scale-out instances of an app.

      Gets all scale-out instances of an app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceIdentifiersSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listInstanceIdentifiersSlotNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listInstanceIdentifiersSlotNext'
    id: 'azure-arm-website.WebApps#listInstanceIdentifiersSlotNext'
    parent: azure-arm-website.WebApps
    name: 'listInstanceIdentifiersSlotNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets all scale-out instances of an app.

      Gets all scale-out instances of an app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceIdentifiersSlotNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listInstanceIdentifiersSlotNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listInstanceDeploymentsSlotNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listInstanceDeploymentsSlotNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listInstanceDeploymentsSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceDeploymentsSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listInstanceDeploymentsSlotNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listInstanceDeploymentsSlotNext'
    id: 'azure-arm-website.WebApps#listInstanceDeploymentsSlotNext'
    parent: azure-arm-website.WebApps
    name: 'listInstanceDeploymentsSlotNext(nextPageLink, options, optionalCallback)'
    summary: |-
      List deployments for an app, or a deployment slot, or for an
      instance of a scaled-out app.

      List deployments for an app, or a deployment slot, or for an instance of a
      scaled-out app.
    fullName: >-
      azure-arm-website.WebApps.listInstanceDeploymentsSlotNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listInstanceDeploymentsSlotNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listMetricDefinitionsSlotNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listMetricDefinitionsSlotNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listMetricDefinitionsSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: |-
      Gets all metric definitions of an app (or deployment slot, if
      specified).

      Gets all metric definitions of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricDefinitionsSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listMetricDefinitionsSlotNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listMetricDefinitionsSlotNext'
    id: 'azure-arm-website.WebApps#listMetricDefinitionsSlotNext'
    parent: azure-arm-website.WebApps
    name: 'listMetricDefinitionsSlotNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets all metric definitions of an app (or deployment slot, if
      specified).

      Gets all metric definitions of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricDefinitionsSlotNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listMetricDefinitionsSlotNext(nextPageLink, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listMetricsSlotNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listMetricsSlotNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listMetricsSlotNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Gets performance metrics of an app (or deployment slot, if
      specified).

      Gets performance metrics of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricsSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listMetricsSlotNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listMetricsSlotNext'
    id: 'azure-arm-website.WebApps#listMetricsSlotNext'
    parent: azure-arm-website.WebApps
    name: 'listMetricsSlotNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets performance metrics of an app (or deployment slot, if
      specified).

      Gets performance metrics of an app (or deployment slot, if specified).
    fullName: >-
      azure-arm-website.WebApps.listMetricsSlotNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listMetricsSlotNext(nextPageLink, options, optionalCallback)'
  - uid: >-
      azure-arm-website.WebApps#listPerfMonCountersSlotNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listPerfMonCountersSlotNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listPerfMonCountersSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: |-
      Gets perfmon counters for web app.

      Gets perfmon counters for web app.
    fullName: >-
      azure-arm-website.WebApps.listPerfMonCountersSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listPerfMonCountersSlotNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listPerfMonCountersSlotNext'
    id: 'azure-arm-website.WebApps#listPerfMonCountersSlotNext'
    parent: azure-arm-website.WebApps
    name: 'listPerfMonCountersSlotNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets perfmon counters for web app.

      Gets perfmon counters for web app.
    fullName: >-
      azure-arm-website.WebApps.listPerfMonCountersSlotNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listPerfMonCountersSlotNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-arm-website.WebApps#listSlotDifferencesSlotNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listSlotDifferencesSlotNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listSlotDifferencesSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: |-
      Get the difference in configuration settings between two web app
      slots.

      Get the difference in configuration settings between two web app slots.
    fullName: >-
      azure-arm-website.WebApps.listSlotDifferencesSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listSlotDifferencesSlotNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listSlotDifferencesSlotNext'
    id: 'azure-arm-website.WebApps#listSlotDifferencesSlotNext'
    parent: azure-arm-website.WebApps
    name: 'listSlotDifferencesSlotNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Get the difference in configuration settings between two web app
      slots.

      Get the difference in configuration settings between two web app slots.
    fullName: >-
      azure-arm-website.WebApps.listSlotDifferencesSlotNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listSlotDifferencesSlotNext(nextPageLink, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listSnapshotsSlotNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listSnapshotsSlotNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listSnapshotsSlotNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Returns all Snapshots to the user.

      Returns all Snapshots to the user.
    fullName: >-
      azure-arm-website.WebApps.listSnapshotsSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listSnapshotsSlotNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listSnapshotsSlotNext'
    id: 'azure-arm-website.WebApps#listSnapshotsSlotNext'
    parent: azure-arm-website.WebApps
    name: 'listSnapshotsSlotNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Returns all Snapshots to the user.

      Returns all Snapshots to the user.
    fullName: >-
      azure-arm-website.WebApps.listSnapshotsSlotNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listSnapshotsSlotNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#listUsagesSlotNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listUsagesSlotNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listUsagesSlotNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Gets the quota usage information of an app (or deployment slot, if
      specified).

      Gets the quota usage information of an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listUsagesSlotNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listUsagesSlotNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listUsagesSlotNext'
    id: 'azure-arm-website.WebApps#listUsagesSlotNext'
    parent: azure-arm-website.WebApps
    name: 'listUsagesSlotNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets the quota usage information of an app (or deployment slot, if
      specified).

      Gets the quota usage information of an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listUsagesSlotNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listUsagesSlotNext(nextPageLink, options, optionalCallback)'
  - uid: >-
      azure-arm-website.WebApps#listSlotDifferencesFromProductionNextWithHttpOperationResponse
    id: >-
      azure-arm-website.WebApps#listSlotDifferencesFromProductionNextWithHttpOperationResponse
    parent: azure-arm-website.WebApps
    name: >-
      listSlotDifferencesFromProductionNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: |-
      Get the difference in configuration settings between two web app
      slots.

      Get the difference in configuration settings between two web app slots.
    fullName: >-
      azure-arm-website.WebApps.listSlotDifferencesFromProductionNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listSlotDifferencesFromProductionNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listSlotDifferencesFromProductionNext'
    id: 'azure-arm-website.WebApps#listSlotDifferencesFromProductionNext'
    parent: azure-arm-website.WebApps
    name: >-
      listSlotDifferencesFromProductionNext(nextPageLink, options,
      optionalCallback)
    summary: |-
      Get the difference in configuration settings between two web app
      slots.

      Get the difference in configuration settings between two web app slots.
    fullName: >-
      azure-arm-website.WebApps.listSlotDifferencesFromProductionNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listSlotDifferencesFromProductionNext(nextPageLink, options,
        optionalCallback)
  - uid: 'azure-arm-website.WebApps#listSnapshotsNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listSnapshotsNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listSnapshotsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Returns all Snapshots to the user.

      Returns all Snapshots to the user.
    fullName: >-
      azure-arm-website.WebApps.listSnapshotsNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listSnapshotsNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-website.WebApps#listSnapshotsNext'
    id: 'azure-arm-website.WebApps#listSnapshotsNext'
    parent: azure-arm-website.WebApps
    name: 'listSnapshotsNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Returns all Snapshots to the user.

      Returns all Snapshots to the user.
    fullName: >-
      azure-arm-website.WebApps.listSnapshotsNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listSnapshotsNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-arm-website.WebApps#listUsagesNextWithHttpOperationResponse'
    id: 'azure-arm-website.WebApps#listUsagesNextWithHttpOperationResponse'
    parent: azure-arm-website.WebApps
    name: 'listUsagesNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Gets the quota usage information of an app (or deployment slot, if
      specified).

      Gets the quota usage information of an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listUsagesNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listUsagesNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-arm-website.WebApps#listUsagesNext'
    id: 'azure-arm-website.WebApps#listUsagesNext'
    parent: azure-arm-website.WebApps
    name: 'listUsagesNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets the quota usage information of an app (or deployment slot, if
      specified).

      Gets the quota usage information of an app (or deployment slot, if
      specified).
    fullName: >-
      azure-arm-website.WebApps.listUsagesNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listUsagesNext(nextPageLink, options, optionalCallback)'
references:
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: Promise
    name: Promise
    fullName: Promise
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: date
    name: date
    fullName: date
    isExternal: true
