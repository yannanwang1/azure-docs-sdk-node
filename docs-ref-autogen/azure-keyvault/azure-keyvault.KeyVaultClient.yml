### YamlMime:JavaScriptReference
items:
  - uid: azure-keyvault.KeyVaultClient
    id: azure-keyvault.KeyVaultClient
    name: KeyVaultClient
    summary: ''
    fullName: azure-keyvault.KeyVaultClient
    type: Class
    children:
      - 'azure-keyvault.KeyVaultClient.#ctor'
      - 'azure-keyvault.KeyVaultClient#apiVersion'
      - 'azure-keyvault.KeyVaultClient#acceptLanguage'
      - 'azure-keyvault.KeyVaultClient#longRunningOperationRetryTimeout'
      - 'azure-keyvault.KeyVaultClient#generateClientRequestId'
      - 'azure-keyvault.KeyVaultClient#baseUri'
      - 'azure-keyvault.KeyVaultClient#credentials'
      - 'azure-keyvault.KeyVaultClient#apiVersion'
      - 'azure-keyvault.KeyVaultClient#acceptLanguage'
      - 'azure-keyvault.KeyVaultClient#longRunningOperationRetryTimeout'
      - 'azure-keyvault.KeyVaultClient#generateClientRequestId'
      - 'azure-keyvault.KeyVaultClient#models'
      - 'azure-keyvault.KeyVaultClient#_createKey'
      - 'azure-keyvault.KeyVaultClient#_importKey'
      - 'azure-keyvault.KeyVaultClient#_deleteKey'
      - 'azure-keyvault.KeyVaultClient#_updateKey'
      - 'azure-keyvault.KeyVaultClient#_getKey'
      - 'azure-keyvault.KeyVaultClient#_getKeyVersions'
      - 'azure-keyvault.KeyVaultClient#_getKeys'
      - 'azure-keyvault.KeyVaultClient#_backupKey'
      - 'azure-keyvault.KeyVaultClient#_restoreKey'
      - 'azure-keyvault.KeyVaultClient#_encrypt'
      - 'azure-keyvault.KeyVaultClient#_decrypt'
      - 'azure-keyvault.KeyVaultClient#_sign'
      - 'azure-keyvault.KeyVaultClient#_verify'
      - 'azure-keyvault.KeyVaultClient#_wrapKey'
      - 'azure-keyvault.KeyVaultClient#_unwrapKey'
      - 'azure-keyvault.KeyVaultClient#_setSecret'
      - 'azure-keyvault.KeyVaultClient#_deleteSecret'
      - 'azure-keyvault.KeyVaultClient#_updateSecret'
      - 'azure-keyvault.KeyVaultClient#_getSecret'
      - 'azure-keyvault.KeyVaultClient#_getSecrets'
      - 'azure-keyvault.KeyVaultClient#_getSecretVersions'
      - 'azure-keyvault.KeyVaultClient#_getCertificates'
      - 'azure-keyvault.KeyVaultClient#_deleteCertificate'
      - 'azure-keyvault.KeyVaultClient#_setCertificateContacts'
      - 'azure-keyvault.KeyVaultClient#_getCertificateContacts'
      - 'azure-keyvault.KeyVaultClient#_deleteCertificateContacts'
      - 'azure-keyvault.KeyVaultClient#_getCertificateIssuers'
      - 'azure-keyvault.KeyVaultClient#_setCertificateIssuer'
      - 'azure-keyvault.KeyVaultClient#_updateCertificateIssuer'
      - 'azure-keyvault.KeyVaultClient#_getCertificateIssuer'
      - 'azure-keyvault.KeyVaultClient#_deleteCertificateIssuer'
      - 'azure-keyvault.KeyVaultClient#_createCertificate'
      - 'azure-keyvault.KeyVaultClient#_importCertificate'
      - 'azure-keyvault.KeyVaultClient#_getCertificateVersions'
      - 'azure-keyvault.KeyVaultClient#_getCertificatePolicy'
      - 'azure-keyvault.KeyVaultClient#_updateCertificatePolicy'
      - 'azure-keyvault.KeyVaultClient#_updateCertificate'
      - 'azure-keyvault.KeyVaultClient#_getCertificate'
      - 'azure-keyvault.KeyVaultClient#_updateCertificateOperation'
      - 'azure-keyvault.KeyVaultClient#_getCertificateOperation'
      - 'azure-keyvault.KeyVaultClient#_deleteCertificateOperation'
      - 'azure-keyvault.KeyVaultClient#_mergeCertificate'
      - 'azure-keyvault.KeyVaultClient#_getKeyVersionsNext'
      - 'azure-keyvault.KeyVaultClient#_getKeysNext'
      - 'azure-keyvault.KeyVaultClient#_getSecretsNext'
      - 'azure-keyvault.KeyVaultClient#_getSecretVersionsNext'
      - 'azure-keyvault.KeyVaultClient#_getCertificatesNext'
      - 'azure-keyvault.KeyVaultClient#_getCertificateIssuersNext'
      - 'azure-keyvault.KeyVaultClient#_getCertificateVersionsNext'
      - 'azure-keyvault.KeyVaultClient#createKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#createKey'
      - 'azure-keyvault.KeyVaultClient#importKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#importKey'
      - 'azure-keyvault.KeyVaultClient#deleteKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#deleteKey'
      - 'azure-keyvault.KeyVaultClient#updateKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#updateKey'
      - 'azure-keyvault.KeyVaultClient#getKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getKey'
      - 'azure-keyvault.KeyVaultClient#getKeyVersionsWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getKeyVersions'
      - 'azure-keyvault.KeyVaultClient#getKeysWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getKeys'
      - 'azure-keyvault.KeyVaultClient#backupKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#backupKey'
      - 'azure-keyvault.KeyVaultClient#restoreKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#restoreKey'
      - 'azure-keyvault.KeyVaultClient#encryptWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#encrypt'
      - 'azure-keyvault.KeyVaultClient#decryptWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#decrypt'
      - 'azure-keyvault.KeyVaultClient#signWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#sign'
      - 'azure-keyvault.KeyVaultClient#verifyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#verify'
      - 'azure-keyvault.KeyVaultClient#wrapKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#wrapKey'
      - 'azure-keyvault.KeyVaultClient#unwrapKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#unwrapKey'
      - 'azure-keyvault.KeyVaultClient#setSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#setSecret'
      - 'azure-keyvault.KeyVaultClient#deleteSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#deleteSecret'
      - 'azure-keyvault.KeyVaultClient#updateSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#updateSecret'
      - 'azure-keyvault.KeyVaultClient#getSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSecret'
      - 'azure-keyvault.KeyVaultClient#getSecretsWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSecrets'
      - 'azure-keyvault.KeyVaultClient#getSecretVersionsWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSecretVersions'
      - 'azure-keyvault.KeyVaultClient#getCertificatesWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getCertificates'
      - 'azure-keyvault.KeyVaultClient#deleteCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#deleteCertificate'
      - >-
        azure-keyvault.KeyVaultClient#setCertificateContactsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#setCertificateContacts'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateContactsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateContacts'
      - >-
        azure-keyvault.KeyVaultClient#deleteCertificateContactsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#deleteCertificateContacts'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateIssuersWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateIssuers'
      - >-
        azure-keyvault.KeyVaultClient#setCertificateIssuerWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#setCertificateIssuer'
      - >-
        azure-keyvault.KeyVaultClient#updateCertificateIssuerWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#updateCertificateIssuer'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateIssuerWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateIssuer'
      - >-
        azure-keyvault.KeyVaultClient#deleteCertificateIssuerWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#deleteCertificateIssuer'
      - 'azure-keyvault.KeyVaultClient#createCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#createCertificate'
      - 'azure-keyvault.KeyVaultClient#importCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#importCertificate'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateVersionsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateVersions'
      - >-
        azure-keyvault.KeyVaultClient#getCertificatePolicyWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificatePolicy'
      - >-
        azure-keyvault.KeyVaultClient#updateCertificatePolicyWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#updateCertificatePolicy'
      - 'azure-keyvault.KeyVaultClient#updateCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#updateCertificate'
      - 'azure-keyvault.KeyVaultClient#getCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getCertificate'
      - >-
        azure-keyvault.KeyVaultClient#updateCertificateOperationWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#updateCertificateOperation'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateOperationWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateOperation'
      - >-
        azure-keyvault.KeyVaultClient#deleteCertificateOperationWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#deleteCertificateOperation'
      - 'azure-keyvault.KeyVaultClient#mergeCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#mergeCertificate'
      - >-
        azure-keyvault.KeyVaultClient#getKeyVersionsNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getKeyVersionsNext'
      - 'azure-keyvault.KeyVaultClient#getKeysNextWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getKeysNext'
      - 'azure-keyvault.KeyVaultClient#getSecretsNextWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSecretsNext'
      - >-
        azure-keyvault.KeyVaultClient#getSecretVersionsNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getSecretVersionsNext'
      - >-
        azure-keyvault.KeyVaultClient#getCertificatesNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificatesNext'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateIssuersNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateIssuersNext'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateVersionsNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateVersionsNext'
  - id: 'azure-keyvault.KeyVaultClient.#ctor'
    uid: 'azure-keyvault.KeyVaultClient.#ctor'
    parent: azure-keyvault.KeyVaultClient
    name: KeyVaultClient()
    fullName: azure-keyvault.KeyVaultClient.KeyVaultClient()
    summary: ''
    type: Constructor
    syntax:
      content: new KeyVaultClient()
  - uid: 'azure-keyvault.KeyVaultClient#apiVersion'
    id: 'azure-keyvault.KeyVaultClient#apiVersion'
    parent: azure-keyvault.KeyVaultClient
    name: apiVersion
    summary: ''
    fullName: azure-keyvault.KeyVaultClient.apiVersion
    type: Field
    syntax:
      content: apiVersion
  - uid: 'azure-keyvault.KeyVaultClient#acceptLanguage'
    id: 'azure-keyvault.KeyVaultClient#acceptLanguage'
    parent: azure-keyvault.KeyVaultClient
    name: acceptLanguage
    summary: ''
    fullName: azure-keyvault.KeyVaultClient.acceptLanguage
    type: Field
    syntax:
      content: acceptLanguage
  - uid: 'azure-keyvault.KeyVaultClient#longRunningOperationRetryTimeout'
    id: 'azure-keyvault.KeyVaultClient#longRunningOperationRetryTimeout'
    parent: azure-keyvault.KeyVaultClient
    name: longRunningOperationRetryTimeout
    summary: ''
    fullName: azure-keyvault.KeyVaultClient.longRunningOperationRetryTimeout
    type: Field
    syntax:
      content: longRunningOperationRetryTimeout
  - uid: 'azure-keyvault.KeyVaultClient#generateClientRequestId'
    id: 'azure-keyvault.KeyVaultClient#generateClientRequestId'
    parent: azure-keyvault.KeyVaultClient
    name: generateClientRequestId
    summary: ''
    fullName: azure-keyvault.KeyVaultClient.generateClientRequestId
    type: Field
    syntax:
      content: generateClientRequestId
  - uid: 'azure-keyvault.KeyVaultClient#baseUri'
    id: 'azure-keyvault.KeyVaultClient#baseUri'
    parent: azure-keyvault.KeyVaultClient
    name: baseUri
    summary: ''
    fullName: azure-keyvault.KeyVaultClient.baseUri
    type: Field
    syntax:
      content: baseUri
  - uid: 'azure-keyvault.KeyVaultClient#credentials'
    id: 'azure-keyvault.KeyVaultClient#credentials'
    parent: azure-keyvault.KeyVaultClient
    name: credentials
    summary: ''
    fullName: azure-keyvault.KeyVaultClient.credentials
    type: Field
    syntax:
      content: credentials
  - uid: 'azure-keyvault.KeyVaultClient#apiVersion'
    id: 'azure-keyvault.KeyVaultClient#apiVersion'
    parent: azure-keyvault.KeyVaultClient
    name: apiVersion
    summary: ''
    fullName: azure-keyvault.KeyVaultClient.apiVersion
    type: Field
    syntax:
      content: apiVersion
  - uid: 'azure-keyvault.KeyVaultClient#acceptLanguage'
    id: 'azure-keyvault.KeyVaultClient#acceptLanguage'
    parent: azure-keyvault.KeyVaultClient
    name: acceptLanguage
    summary: ''
    fullName: azure-keyvault.KeyVaultClient.acceptLanguage
    type: Field
    syntax:
      content: acceptLanguage
  - uid: 'azure-keyvault.KeyVaultClient#longRunningOperationRetryTimeout'
    id: 'azure-keyvault.KeyVaultClient#longRunningOperationRetryTimeout'
    parent: azure-keyvault.KeyVaultClient
    name: longRunningOperationRetryTimeout
    summary: ''
    fullName: azure-keyvault.KeyVaultClient.longRunningOperationRetryTimeout
    type: Field
    syntax:
      content: longRunningOperationRetryTimeout
  - uid: 'azure-keyvault.KeyVaultClient#generateClientRequestId'
    id: 'azure-keyvault.KeyVaultClient#generateClientRequestId'
    parent: azure-keyvault.KeyVaultClient
    name: generateClientRequestId
    summary: ''
    fullName: azure-keyvault.KeyVaultClient.generateClientRequestId
    type: Field
    syntax:
      content: generateClientRequestId
  - uid: 'azure-keyvault.KeyVaultClient#models'
    id: 'azure-keyvault.KeyVaultClient#models'
    parent: azure-keyvault.KeyVaultClient
    name: models
    summary: ''
    fullName: azure-keyvault.KeyVaultClient.models
    type: Field
    syntax:
      content: models
  - uid: 'azure-keyvault.KeyVaultClient#_createKey'
    id: 'azure-keyvault.KeyVaultClient#_createKey'
    parent: azure-keyvault.KeyVaultClient
    name: _createKey
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._createKey
    type: Field
    syntax:
      content: _createKey
  - uid: 'azure-keyvault.KeyVaultClient#_importKey'
    id: 'azure-keyvault.KeyVaultClient#_importKey'
    parent: azure-keyvault.KeyVaultClient
    name: _importKey
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._importKey
    type: Field
    syntax:
      content: _importKey
  - uid: 'azure-keyvault.KeyVaultClient#_deleteKey'
    id: 'azure-keyvault.KeyVaultClient#_deleteKey'
    parent: azure-keyvault.KeyVaultClient
    name: _deleteKey
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._deleteKey
    type: Field
    syntax:
      content: _deleteKey
  - uid: 'azure-keyvault.KeyVaultClient#_updateKey'
    id: 'azure-keyvault.KeyVaultClient#_updateKey'
    parent: azure-keyvault.KeyVaultClient
    name: _updateKey
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._updateKey
    type: Field
    syntax:
      content: _updateKey
  - uid: 'azure-keyvault.KeyVaultClient#_getKey'
    id: 'azure-keyvault.KeyVaultClient#_getKey'
    parent: azure-keyvault.KeyVaultClient
    name: _getKey
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getKey
    type: Field
    syntax:
      content: _getKey
  - uid: 'azure-keyvault.KeyVaultClient#_getKeyVersions'
    id: 'azure-keyvault.KeyVaultClient#_getKeyVersions'
    parent: azure-keyvault.KeyVaultClient
    name: _getKeyVersions
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getKeyVersions
    type: Field
    syntax:
      content: _getKeyVersions
  - uid: 'azure-keyvault.KeyVaultClient#_getKeys'
    id: 'azure-keyvault.KeyVaultClient#_getKeys'
    parent: azure-keyvault.KeyVaultClient
    name: _getKeys
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getKeys
    type: Field
    syntax:
      content: _getKeys
  - uid: 'azure-keyvault.KeyVaultClient#_backupKey'
    id: 'azure-keyvault.KeyVaultClient#_backupKey'
    parent: azure-keyvault.KeyVaultClient
    name: _backupKey
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._backupKey
    type: Field
    syntax:
      content: _backupKey
  - uid: 'azure-keyvault.KeyVaultClient#_restoreKey'
    id: 'azure-keyvault.KeyVaultClient#_restoreKey'
    parent: azure-keyvault.KeyVaultClient
    name: _restoreKey
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._restoreKey
    type: Field
    syntax:
      content: _restoreKey
  - uid: 'azure-keyvault.KeyVaultClient#_encrypt'
    id: 'azure-keyvault.KeyVaultClient#_encrypt'
    parent: azure-keyvault.KeyVaultClient
    name: _encrypt
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._encrypt
    type: Field
    syntax:
      content: _encrypt
  - uid: 'azure-keyvault.KeyVaultClient#_decrypt'
    id: 'azure-keyvault.KeyVaultClient#_decrypt'
    parent: azure-keyvault.KeyVaultClient
    name: _decrypt
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._decrypt
    type: Field
    syntax:
      content: _decrypt
  - uid: 'azure-keyvault.KeyVaultClient#_sign'
    id: 'azure-keyvault.KeyVaultClient#_sign'
    parent: azure-keyvault.KeyVaultClient
    name: _sign
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._sign
    type: Field
    syntax:
      content: _sign
  - uid: 'azure-keyvault.KeyVaultClient#_verify'
    id: 'azure-keyvault.KeyVaultClient#_verify'
    parent: azure-keyvault.KeyVaultClient
    name: _verify
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._verify
    type: Field
    syntax:
      content: _verify
  - uid: 'azure-keyvault.KeyVaultClient#_wrapKey'
    id: 'azure-keyvault.KeyVaultClient#_wrapKey'
    parent: azure-keyvault.KeyVaultClient
    name: _wrapKey
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._wrapKey
    type: Field
    syntax:
      content: _wrapKey
  - uid: 'azure-keyvault.KeyVaultClient#_unwrapKey'
    id: 'azure-keyvault.KeyVaultClient#_unwrapKey'
    parent: azure-keyvault.KeyVaultClient
    name: _unwrapKey
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._unwrapKey
    type: Field
    syntax:
      content: _unwrapKey
  - uid: 'azure-keyvault.KeyVaultClient#_setSecret'
    id: 'azure-keyvault.KeyVaultClient#_setSecret'
    parent: azure-keyvault.KeyVaultClient
    name: _setSecret
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._setSecret
    type: Field
    syntax:
      content: _setSecret
  - uid: 'azure-keyvault.KeyVaultClient#_deleteSecret'
    id: 'azure-keyvault.KeyVaultClient#_deleteSecret'
    parent: azure-keyvault.KeyVaultClient
    name: _deleteSecret
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._deleteSecret
    type: Field
    syntax:
      content: _deleteSecret
  - uid: 'azure-keyvault.KeyVaultClient#_updateSecret'
    id: 'azure-keyvault.KeyVaultClient#_updateSecret'
    parent: azure-keyvault.KeyVaultClient
    name: _updateSecret
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._updateSecret
    type: Field
    syntax:
      content: _updateSecret
  - uid: 'azure-keyvault.KeyVaultClient#_getSecret'
    id: 'azure-keyvault.KeyVaultClient#_getSecret'
    parent: azure-keyvault.KeyVaultClient
    name: _getSecret
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getSecret
    type: Field
    syntax:
      content: _getSecret
  - uid: 'azure-keyvault.KeyVaultClient#_getSecrets'
    id: 'azure-keyvault.KeyVaultClient#_getSecrets'
    parent: azure-keyvault.KeyVaultClient
    name: _getSecrets
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getSecrets
    type: Field
    syntax:
      content: _getSecrets
  - uid: 'azure-keyvault.KeyVaultClient#_getSecretVersions'
    id: 'azure-keyvault.KeyVaultClient#_getSecretVersions'
    parent: azure-keyvault.KeyVaultClient
    name: _getSecretVersions
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getSecretVersions
    type: Field
    syntax:
      content: _getSecretVersions
  - uid: 'azure-keyvault.KeyVaultClient#_getCertificates'
    id: 'azure-keyvault.KeyVaultClient#_getCertificates'
    parent: azure-keyvault.KeyVaultClient
    name: _getCertificates
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getCertificates
    type: Field
    syntax:
      content: _getCertificates
  - uid: 'azure-keyvault.KeyVaultClient#_deleteCertificate'
    id: 'azure-keyvault.KeyVaultClient#_deleteCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: _deleteCertificate
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._deleteCertificate
    type: Field
    syntax:
      content: _deleteCertificate
  - uid: 'azure-keyvault.KeyVaultClient#_setCertificateContacts'
    id: 'azure-keyvault.KeyVaultClient#_setCertificateContacts'
    parent: azure-keyvault.KeyVaultClient
    name: _setCertificateContacts
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._setCertificateContacts
    type: Field
    syntax:
      content: _setCertificateContacts
  - uid: 'azure-keyvault.KeyVaultClient#_getCertificateContacts'
    id: 'azure-keyvault.KeyVaultClient#_getCertificateContacts'
    parent: azure-keyvault.KeyVaultClient
    name: _getCertificateContacts
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getCertificateContacts
    type: Field
    syntax:
      content: _getCertificateContacts
  - uid: 'azure-keyvault.KeyVaultClient#_deleteCertificateContacts'
    id: 'azure-keyvault.KeyVaultClient#_deleteCertificateContacts'
    parent: azure-keyvault.KeyVaultClient
    name: _deleteCertificateContacts
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._deleteCertificateContacts
    type: Field
    syntax:
      content: _deleteCertificateContacts
  - uid: 'azure-keyvault.KeyVaultClient#_getCertificateIssuers'
    id: 'azure-keyvault.KeyVaultClient#_getCertificateIssuers'
    parent: azure-keyvault.KeyVaultClient
    name: _getCertificateIssuers
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getCertificateIssuers
    type: Field
    syntax:
      content: _getCertificateIssuers
  - uid: 'azure-keyvault.KeyVaultClient#_setCertificateIssuer'
    id: 'azure-keyvault.KeyVaultClient#_setCertificateIssuer'
    parent: azure-keyvault.KeyVaultClient
    name: _setCertificateIssuer
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._setCertificateIssuer
    type: Field
    syntax:
      content: _setCertificateIssuer
  - uid: 'azure-keyvault.KeyVaultClient#_updateCertificateIssuer'
    id: 'azure-keyvault.KeyVaultClient#_updateCertificateIssuer'
    parent: azure-keyvault.KeyVaultClient
    name: _updateCertificateIssuer
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._updateCertificateIssuer
    type: Field
    syntax:
      content: _updateCertificateIssuer
  - uid: 'azure-keyvault.KeyVaultClient#_getCertificateIssuer'
    id: 'azure-keyvault.KeyVaultClient#_getCertificateIssuer'
    parent: azure-keyvault.KeyVaultClient
    name: _getCertificateIssuer
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getCertificateIssuer
    type: Field
    syntax:
      content: _getCertificateIssuer
  - uid: 'azure-keyvault.KeyVaultClient#_deleteCertificateIssuer'
    id: 'azure-keyvault.KeyVaultClient#_deleteCertificateIssuer'
    parent: azure-keyvault.KeyVaultClient
    name: _deleteCertificateIssuer
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._deleteCertificateIssuer
    type: Field
    syntax:
      content: _deleteCertificateIssuer
  - uid: 'azure-keyvault.KeyVaultClient#_createCertificate'
    id: 'azure-keyvault.KeyVaultClient#_createCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: _createCertificate
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._createCertificate
    type: Field
    syntax:
      content: _createCertificate
  - uid: 'azure-keyvault.KeyVaultClient#_importCertificate'
    id: 'azure-keyvault.KeyVaultClient#_importCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: _importCertificate
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._importCertificate
    type: Field
    syntax:
      content: _importCertificate
  - uid: 'azure-keyvault.KeyVaultClient#_getCertificateVersions'
    id: 'azure-keyvault.KeyVaultClient#_getCertificateVersions'
    parent: azure-keyvault.KeyVaultClient
    name: _getCertificateVersions
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getCertificateVersions
    type: Field
    syntax:
      content: _getCertificateVersions
  - uid: 'azure-keyvault.KeyVaultClient#_getCertificatePolicy'
    id: 'azure-keyvault.KeyVaultClient#_getCertificatePolicy'
    parent: azure-keyvault.KeyVaultClient
    name: _getCertificatePolicy
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getCertificatePolicy
    type: Field
    syntax:
      content: _getCertificatePolicy
  - uid: 'azure-keyvault.KeyVaultClient#_updateCertificatePolicy'
    id: 'azure-keyvault.KeyVaultClient#_updateCertificatePolicy'
    parent: azure-keyvault.KeyVaultClient
    name: _updateCertificatePolicy
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._updateCertificatePolicy
    type: Field
    syntax:
      content: _updateCertificatePolicy
  - uid: 'azure-keyvault.KeyVaultClient#_updateCertificate'
    id: 'azure-keyvault.KeyVaultClient#_updateCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: _updateCertificate
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._updateCertificate
    type: Field
    syntax:
      content: _updateCertificate
  - uid: 'azure-keyvault.KeyVaultClient#_getCertificate'
    id: 'azure-keyvault.KeyVaultClient#_getCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: _getCertificate
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getCertificate
    type: Field
    syntax:
      content: _getCertificate
  - uid: 'azure-keyvault.KeyVaultClient#_updateCertificateOperation'
    id: 'azure-keyvault.KeyVaultClient#_updateCertificateOperation'
    parent: azure-keyvault.KeyVaultClient
    name: _updateCertificateOperation
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._updateCertificateOperation
    type: Field
    syntax:
      content: _updateCertificateOperation
  - uid: 'azure-keyvault.KeyVaultClient#_getCertificateOperation'
    id: 'azure-keyvault.KeyVaultClient#_getCertificateOperation'
    parent: azure-keyvault.KeyVaultClient
    name: _getCertificateOperation
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getCertificateOperation
    type: Field
    syntax:
      content: _getCertificateOperation
  - uid: 'azure-keyvault.KeyVaultClient#_deleteCertificateOperation'
    id: 'azure-keyvault.KeyVaultClient#_deleteCertificateOperation'
    parent: azure-keyvault.KeyVaultClient
    name: _deleteCertificateOperation
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._deleteCertificateOperation
    type: Field
    syntax:
      content: _deleteCertificateOperation
  - uid: 'azure-keyvault.KeyVaultClient#_mergeCertificate'
    id: 'azure-keyvault.KeyVaultClient#_mergeCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: _mergeCertificate
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._mergeCertificate
    type: Field
    syntax:
      content: _mergeCertificate
  - uid: 'azure-keyvault.KeyVaultClient#_getKeyVersionsNext'
    id: 'azure-keyvault.KeyVaultClient#_getKeyVersionsNext'
    parent: azure-keyvault.KeyVaultClient
    name: _getKeyVersionsNext
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getKeyVersionsNext
    type: Field
    syntax:
      content: _getKeyVersionsNext
  - uid: 'azure-keyvault.KeyVaultClient#_getKeysNext'
    id: 'azure-keyvault.KeyVaultClient#_getKeysNext'
    parent: azure-keyvault.KeyVaultClient
    name: _getKeysNext
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getKeysNext
    type: Field
    syntax:
      content: _getKeysNext
  - uid: 'azure-keyvault.KeyVaultClient#_getSecretsNext'
    id: 'azure-keyvault.KeyVaultClient#_getSecretsNext'
    parent: azure-keyvault.KeyVaultClient
    name: _getSecretsNext
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getSecretsNext
    type: Field
    syntax:
      content: _getSecretsNext
  - uid: 'azure-keyvault.KeyVaultClient#_getSecretVersionsNext'
    id: 'azure-keyvault.KeyVaultClient#_getSecretVersionsNext'
    parent: azure-keyvault.KeyVaultClient
    name: _getSecretVersionsNext
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getSecretVersionsNext
    type: Field
    syntax:
      content: _getSecretVersionsNext
  - uid: 'azure-keyvault.KeyVaultClient#_getCertificatesNext'
    id: 'azure-keyvault.KeyVaultClient#_getCertificatesNext'
    parent: azure-keyvault.KeyVaultClient
    name: _getCertificatesNext
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getCertificatesNext
    type: Field
    syntax:
      content: _getCertificatesNext
  - uid: 'azure-keyvault.KeyVaultClient#_getCertificateIssuersNext'
    id: 'azure-keyvault.KeyVaultClient#_getCertificateIssuersNext'
    parent: azure-keyvault.KeyVaultClient
    name: _getCertificateIssuersNext
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getCertificateIssuersNext
    type: Field
    syntax:
      content: _getCertificateIssuersNext
  - uid: 'azure-keyvault.KeyVaultClient#_getCertificateVersionsNext'
    id: 'azure-keyvault.KeyVaultClient#_getCertificateVersionsNext'
    parent: azure-keyvault.KeyVaultClient
    name: _getCertificateVersionsNext
    summary: ''
    fullName: azure-keyvault.KeyVaultClient._getCertificateVersionsNext
    type: Field
    syntax:
      content: _getCertificateVersionsNext
  - uid: 'azure-keyvault.KeyVaultClient#createKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#createKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'createKeyWithHttpOperationResponse(vaultBaseUrl, keyName, kty, options)'
    summary: >-
      Creates a new key, stores it, then returns key parameters and attributes
      to

      the client. The create key operation can be used to create any key type in

      Azure Key Vault. If the named key already exists, Azure Key Vault creates
      a

      new version of the key. Authorization: Requires the keys/create
      permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.createKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, kty, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |-
            The name for the new key. The system will generate
            the version name for the new key.
        - id: kty
          type:
            - string
          description: >-
            The type of key to create. For valid key types, see

            JsonWebKeyType. Supported JsonWebKey key types (kty) for Elliptic
            Curve,

            RSA, HSM, Octet. Possible values include: 'EC', 'RSA', 'RSA-HSM',
            'oct'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.keySize
          type:
            - number
          description: |-
            The key size in bytes. For example, 1024
            or 2048.
          optional: true
        - id: options.keyOps
          type:
            - array
          description: ''
          optional: true
        - id: options.keyAttributes
          type:
            - object
          description: ''
          optional: true
        - id: options.keyAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the
            object is enabled.
          optional: true
        - id: options.keyAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.keyAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createKeyWithHttpOperationResponse(vaultBaseUrl, keyName, kty,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#createKey'
    id: 'azure-keyvault.KeyVaultClient#createKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'createKey(vaultBaseUrl, keyName, kty, options, optionalCallback)'
    summary: >-
      Creates a new key, stores it, then returns key parameters and attributes
      to

      the client. The create key operation can be used to create any key type in

      Azure Key Vault. If the named key already exists, Azure Key Vault creates
      a

      new version of the key. Authorization: Requires the keys/create
      permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.createKey(vaultBaseUrl, keyName, kty,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |-
            The name for the new key. The system will generate
            the version name for the new key.
        - id: kty
          type:
            - string
          description: >-
            The type of key to create. For valid key types, see

            JsonWebKeyType. Supported JsonWebKey key types (kty) for Elliptic
            Curve,

            RSA, HSM, Octet. Possible values include: 'EC', 'RSA', 'RSA-HSM',
            'oct'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.keySize
          type:
            - number
          description: |-
            The key size in bytes. For example, 1024
            or 2048.
          optional: true
        - id: options.keyOps
          type:
            - array
          description: ''
          optional: true
        - id: options.keyAttributes
          type:
            - object
          description: ''
          optional: true
        - id: options.keyAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the
            object is enabled.
          optional: true
        - id: options.keyAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.keyAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createKey(vaultBaseUrl, keyName, kty, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#importKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#importKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'importKeyWithHttpOperationResponse(vaultBaseUrl, keyName, key, options)'
    summary: >-
      Imports an externally created key, stores it, and returns key parameters
      and

      attributes to the client. The import key operation may be used to import
      any

      key type into an Azure Key Vault. If the named key already exists, Azure
      Key

      Vault creates a new version of the key. Authorization: requires the

      keys/import permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.importKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, key, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: Name for the imported key.
        - id: key
          type:
            - object
          description: The Json web key
        - id: key.kid
          type:
            - string
          description: Key identifier.
          optional: true
        - id: key.kty
          type:
            - string
          description: >-
            Supported JsonWebKey key types (kty) for Elliptic

            Curve, RSA, HSM, Octet. Kty is usually set to RSA. Possible values
            include:

            'EC', 'RSA', 'RSA-HSM', 'oct'
          optional: true
        - id: key.keyOps
          type:
            - array
          description: ''
          optional: true
        - id: key.n
          type:
            - azure-keyvault.buffer
          description: RSA modulus.
          optional: true
        - id: key.e
          type:
            - azure-keyvault.buffer
          description: RSA public exponent.
          optional: true
        - id: key.d
          type:
            - azure-keyvault.buffer
          description: RSA private exponent.
          optional: true
        - id: key.dp
          type:
            - azure-keyvault.buffer
          description: RSA private key parameter.
          optional: true
        - id: key.dq
          type:
            - azure-keyvault.buffer
          description: RSA private key parameter.
          optional: true
        - id: key.qi
          type:
            - azure-keyvault.buffer
          description: RSA private key parameter.
          optional: true
        - id: key.p
          type:
            - azure-keyvault.buffer
          description: RSA secret prime.
          optional: true
        - id: key.q
          type:
            - azure-keyvault.buffer
          description: 'RSA secret prime, with p < q.'
          optional: true
        - id: key.k
          type:
            - azure-keyvault.buffer
          description: Symmetric key.
          optional: true
        - id: key.t
          type:
            - azure-keyvault.buffer
          description: 'HSM Token, used with ''Bring Your Own Key''.'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.hsm
          type:
            - boolean
          description: |-
            Whether to import as a hardware key (HSM) or
            software key.
          optional: true
        - id: options.keyAttributes
          type:
            - object
          description: The key management attributes.
          optional: true
        - id: options.keyAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the
            object is enabled.
          optional: true
        - id: options.keyAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.keyAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function importKeyWithHttpOperationResponse(vaultBaseUrl, keyName, key,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#importKey'
    id: 'azure-keyvault.KeyVaultClient#importKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'importKey(vaultBaseUrl, keyName, key, options, optionalCallback)'
    summary: >-
      Imports an externally created key, stores it, and returns key parameters
      and

      attributes to the client. The import key operation may be used to import
      any

      key type into an Azure Key Vault. If the named key already exists, Azure
      Key

      Vault creates a new version of the key. Authorization: requires the

      keys/import permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.importKey(vaultBaseUrl, keyName, key,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: Name for the imported key.
        - id: key
          type:
            - object
          description: The Json web key
        - id: key.kid
          type:
            - string
          description: Key identifier.
          optional: true
        - id: key.kty
          type:
            - string
          description: >-
            Supported JsonWebKey key types (kty) for Elliptic

            Curve, RSA, HSM, Octet. Kty is usually set to RSA. Possible values
            include:

            'EC', 'RSA', 'RSA-HSM', 'oct'
          optional: true
        - id: key.keyOps
          type:
            - array
          description: ''
          optional: true
        - id: key.n
          type:
            - azure-keyvault.buffer
          description: RSA modulus.
          optional: true
        - id: key.e
          type:
            - azure-keyvault.buffer
          description: RSA public exponent.
          optional: true
        - id: key.d
          type:
            - azure-keyvault.buffer
          description: RSA private exponent.
          optional: true
        - id: key.dp
          type:
            - azure-keyvault.buffer
          description: RSA private key parameter.
          optional: true
        - id: key.dq
          type:
            - azure-keyvault.buffer
          description: RSA private key parameter.
          optional: true
        - id: key.qi
          type:
            - azure-keyvault.buffer
          description: RSA private key parameter.
          optional: true
        - id: key.p
          type:
            - azure-keyvault.buffer
          description: RSA secret prime.
          optional: true
        - id: key.q
          type:
            - azure-keyvault.buffer
          description: 'RSA secret prime, with p < q.'
          optional: true
        - id: key.k
          type:
            - azure-keyvault.buffer
          description: Symmetric key.
          optional: true
        - id: key.t
          type:
            - azure-keyvault.buffer
          description: 'HSM Token, used with ''Bring Your Own Key''.'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.hsm
          type:
            - boolean
          description: |-
            Whether to import as a hardware key (HSM) or
            software key.
          optional: true
        - id: options.keyAttributes
          type:
            - object
          description: The key management attributes.
          optional: true
        - id: options.keyAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the
            object is enabled.
          optional: true
        - id: options.keyAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.keyAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function importKey(vaultBaseUrl, keyName, key, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#deleteKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#deleteKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'deleteKeyWithHttpOperationResponse(vaultBaseUrl, keyName, options)'
    summary: >-
      Deletes a key of any type from storage in Azure Key Vault. The delete key

      operation cannot be used to remove individual versions of a key. This

      operation removes the cryptographic material associated with the key,
      which

      means the key is not usable for Sign/Verify, Wrap/Unwrap or
      Encrypt/Decrypt

      operations. Authorization: Requires the keys/delete permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteKeyWithHttpOperationResponse(vaultBaseUrl, keyName,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#deleteKey'
    id: 'azure-keyvault.KeyVaultClient#deleteKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'deleteKey(vaultBaseUrl, keyName, options, optionalCallback)'
    summary: >-
      Deletes a key of any type from storage in Azure Key Vault. The delete key

      operation cannot be used to remove individual versions of a key. This

      operation removes the cryptographic material associated with the key,
      which

      means the key is not usable for Sign/Verify, Wrap/Unwrap or
      Encrypt/Decrypt

      operations. Authorization: Requires the keys/delete permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteKey(vaultBaseUrl, keyName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function deleteKey(vaultBaseUrl, keyName, options, optionalCallback)'
  - uid: 'azure-keyvault.KeyVaultClient#updateKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#updateKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateKeyWithHttpOperationResponse(vaultBaseUrl, keyName, keyVersion,
      options)
    summary: |-
      The update key operation changes specified attributes of a stored key and
      can be applied to any key type and key version stored in Azure Key Vault.
      The cryptographic material of a key itself cannot be changed. In order to
      perform this operation, the key must already exist in the Key Vault.
      Authorization: requires the keys/update permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, keyVersion, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of key to update.
        - id: keyVersion
          type:
            - string
          description: The version of the key to update.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.keyOps
          type:
            - array
          description: |-
            Json web key operations. For more
            information on possible key operations, see JsonWebKeyOperation.
          optional: true
        - id: options.keyAttributes
          type:
            - object
          description: ''
          optional: true
        - id: options.keyAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the
            object is enabled.
          optional: true
        - id: options.keyAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.keyAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateKeyWithHttpOperationResponse(vaultBaseUrl, keyName,
        keyVersion, options)
  - uid: 'azure-keyvault.KeyVaultClient#updateKey'
    id: 'azure-keyvault.KeyVaultClient#updateKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'updateKey(vaultBaseUrl, keyName, keyVersion, options, optionalCallback)'
    summary: |-
      The update key operation changes specified attributes of a stored key and
      can be applied to any key type and key version stored in Azure Key Vault.
      The cryptographic material of a key itself cannot be changed. In order to
      perform this operation, the key must already exist in the Key Vault.
      Authorization: requires the keys/update permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateKey(vaultBaseUrl, keyName, keyVersion,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of key to update.
        - id: keyVersion
          type:
            - string
          description: The version of the key to update.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.keyOps
          type:
            - array
          description: |-
            Json web key operations. For more
            information on possible key operations, see JsonWebKeyOperation.
          optional: true
        - id: options.keyAttributes
          type:
            - object
          description: ''
          optional: true
        - id: options.keyAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the
            object is enabled.
          optional: true
        - id: options.keyAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.keyAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateKey(vaultBaseUrl, keyName, keyVersion, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#getKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getKeyWithHttpOperationResponse(vaultBaseUrl, keyName, keyVersion,
      options)
    summary: >-
      Gets the public part of a stored key. The get key operation is applicable
      to

      all key types. If the requested key is symmetric, then no key material is

      released in the response. Authorization: Requires the keys/get permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, keyVersion, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key to get.
        - id: keyVersion
          type:
            - string
          description: |-
            Adding the version parameter retrieves a specific
            version of a key.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getKeyWithHttpOperationResponse(vaultBaseUrl, keyName,
        keyVersion, options)
  - uid: 'azure-keyvault.KeyVaultClient#getKey'
    id: 'azure-keyvault.KeyVaultClient#getKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKey(vaultBaseUrl, keyName, keyVersion, options, optionalCallback)'
    summary: >-
      Gets the public part of a stored key. The get key operation is applicable
      to

      all key types. If the requested key is symmetric, then no key material is

      released in the response. Authorization: Requires the keys/get permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKey(vaultBaseUrl, keyName, keyVersion,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key to get.
        - id: keyVersion
          type:
            - string
          description: |-
            Adding the version parameter retrieves a specific
            version of a key.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getKey(vaultBaseUrl, keyName, keyVersion, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#getKeyVersionsWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getKeyVersionsWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeyVersionsWithHttpOperationResponse(vaultBaseUrl, keyName, options)'
    summary: >-
      Retrieves a list of individual key versions with the same key name. The
      full

      key identifier, attributes, and tags are provided in the response.

      Authorization: Requires the keys/list permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeyVersionsWithHttpOperationResponse(vaultBaseUrl,
      keyName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getKeyVersionsWithHttpOperationResponse(vaultBaseUrl, keyName,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#getKeyVersions'
    id: 'azure-keyvault.KeyVaultClient#getKeyVersions'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeyVersions(vaultBaseUrl, keyName, options, optionalCallback)'
    summary: >-
      Retrieves a list of individual key versions with the same key name. The
      full

      key identifier, attributes, and tags are provided in the response.

      Authorization: Requires the keys/list permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeyVersions(vaultBaseUrl, keyName,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getKeyVersions(vaultBaseUrl, keyName, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#getKeysWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getKeysWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeysWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: List keys in the specified vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeysWithHttpOperationResponse(vaultBaseUrl,
      options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getKeysWithHttpOperationResponse(vaultBaseUrl, options)'
  - uid: 'azure-keyvault.KeyVaultClient#getKeys'
    id: 'azure-keyvault.KeyVaultClient#getKeys'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeys(vaultBaseUrl, options, optionalCallback)'
    summary: List keys in the specified vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeys(vaultBaseUrl, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getKeys(vaultBaseUrl, options, optionalCallback)'
  - uid: 'azure-keyvault.KeyVaultClient#backupKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#backupKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'backupKeyWithHttpOperationResponse(vaultBaseUrl, keyName, options)'
    summary: Requests that a backup of the specified key be downloaded to the client.
    fullName: >-
      azure-keyvault.KeyVaultClient.backupKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function backupKeyWithHttpOperationResponse(vaultBaseUrl, keyName,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#backupKey'
    id: 'azure-keyvault.KeyVaultClient#backupKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'backupKey(vaultBaseUrl, keyName, options, optionalCallback)'
    summary: Requests that a backup of the specified key be downloaded to the client.
    fullName: >-
      azure-keyvault.KeyVaultClient.backupKey(vaultBaseUrl, keyName, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function backupKey(vaultBaseUrl, keyName, options, optionalCallback)'
  - uid: 'azure-keyvault.KeyVaultClient#restoreKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#restoreKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      restoreKeyWithHttpOperationResponse(vaultBaseUrl, keyBundleBackup,
      options)
    summary: Restores a backed up key to a vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.restoreKeyWithHttpOperationResponse(vaultBaseUrl,
      keyBundleBackup, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyBundleBackup
          type:
            - azure-keyvault.buffer
          description: |-
            The backup blob associated with a key
            bundle.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function restoreKeyWithHttpOperationResponse(vaultBaseUrl,
        keyBundleBackup, options)
  - uid: 'azure-keyvault.KeyVaultClient#restoreKey'
    id: 'azure-keyvault.KeyVaultClient#restoreKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'restoreKey(vaultBaseUrl, keyBundleBackup, options, optionalCallback)'
    summary: Restores a backed up key to a vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.restoreKey(vaultBaseUrl, keyBundleBackup,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyBundleBackup
          type:
            - azure-keyvault.buffer
          description: |-
            The backup blob associated with a key
            bundle.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function restoreKey(vaultBaseUrl, keyBundleBackup, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#encryptWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#encryptWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      encryptWithHttpOperationResponse(vaultBaseUrl, keyName, keyVersion,
      algorithm, value, options)
    summary: |-
      Encrypts an arbitrary sequence of bytes using an encryption key that is
      stored in a key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.encryptWithHttpOperationResponse(vaultBaseUrl,
      keyName, keyVersion, algorithm, value, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: keyVersion
          type:
            - string
          description: The version of the key.
        - id: algorithm
          type:
            - string
          description: |-
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA1_5'
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function encryptWithHttpOperationResponse(vaultBaseUrl, keyName,
        keyVersion, algorithm, value, options)
  - uid: 'azure-keyvault.KeyVaultClient#encrypt'
    id: 'azure-keyvault.KeyVaultClient#encrypt'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      encrypt(vaultBaseUrl, keyName, keyVersion, algorithm, value, options,
      optionalCallback)
    summary: |-
      Encrypts an arbitrary sequence of bytes using an encryption key that is
      stored in a key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.encrypt(vaultBaseUrl, keyName, keyVersion,
      algorithm, value, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: keyVersion
          type:
            - string
          description: The version of the key.
        - id: algorithm
          type:
            - string
          description: |-
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA1_5'
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function encrypt(vaultBaseUrl, keyName, keyVersion, algorithm, value,
        options, optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#decryptWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#decryptWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      decryptWithHttpOperationResponse(vaultBaseUrl, keyName, keyVersion,
      algorithm, value, options)
    summary: Decrypts a single block of encrypted data.
    fullName: >-
      azure-keyvault.KeyVaultClient.decryptWithHttpOperationResponse(vaultBaseUrl,
      keyName, keyVersion, algorithm, value, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: keyVersion
          type:
            - string
          description: The version of the key.
        - id: algorithm
          type:
            - string
          description: |-
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA1_5'
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function decryptWithHttpOperationResponse(vaultBaseUrl, keyName,
        keyVersion, algorithm, value, options)
  - uid: 'azure-keyvault.KeyVaultClient#decrypt'
    id: 'azure-keyvault.KeyVaultClient#decrypt'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      decrypt(vaultBaseUrl, keyName, keyVersion, algorithm, value, options,
      optionalCallback)
    summary: Decrypts a single block of encrypted data.
    fullName: >-
      azure-keyvault.KeyVaultClient.decrypt(vaultBaseUrl, keyName, keyVersion,
      algorithm, value, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: keyVersion
          type:
            - string
          description: The version of the key.
        - id: algorithm
          type:
            - string
          description: |-
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA1_5'
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function decrypt(vaultBaseUrl, keyName, keyVersion, algorithm, value,
        options, optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#signWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#signWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      signWithHttpOperationResponse(vaultBaseUrl, keyName, keyVersion,
      algorithm, value, options)
    summary: Creates a signature from a digest using the specified key.
    fullName: >-
      azure-keyvault.KeyVaultClient.signWithHttpOperationResponse(vaultBaseUrl,
      keyName, keyVersion, algorithm, value, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: keyVersion
          type:
            - string
          description: The version of the key.
        - id: algorithm
          type:
            - string
          description: >-
            The signing/verification algorithm identifier. For

            more information on possible algorithm types, see

            JsonWebKeySignatureAlgorithm. Possible values include: 'RS256',
            'RS384',

            'RS512', 'RSNULL'
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function signWithHttpOperationResponse(vaultBaseUrl, keyName,
        keyVersion, algorithm, value, options)
  - uid: 'azure-keyvault.KeyVaultClient#sign'
    id: 'azure-keyvault.KeyVaultClient#sign'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      sign(vaultBaseUrl, keyName, keyVersion, algorithm, value, options,
      optionalCallback)
    summary: Creates a signature from a digest using the specified key.
    fullName: >-
      azure-keyvault.KeyVaultClient.sign(vaultBaseUrl, keyName, keyVersion,
      algorithm, value, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: keyVersion
          type:
            - string
          description: The version of the key.
        - id: algorithm
          type:
            - string
          description: >-
            The signing/verification algorithm identifier. For

            more information on possible algorithm types, see

            JsonWebKeySignatureAlgorithm. Possible values include: 'RS256',
            'RS384',

            'RS512', 'RSNULL'
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function sign(vaultBaseUrl, keyName, keyVersion, algorithm, value,
        options, optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#verifyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#verifyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      verifyWithHttpOperationResponse(vaultBaseUrl, keyName, keyVersion,
      algorithm, digest, signature, options)
    summary: Verifies a signature using a specified key.
    fullName: >-
      azure-keyvault.KeyVaultClient.verifyWithHttpOperationResponse(vaultBaseUrl,
      keyName, keyVersion, algorithm, digest, signature, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: keyVersion
          type:
            - string
          description: The version of the key.
        - id: algorithm
          type:
            - string
          description: >-
            The signing/verification algorithm. For more

            information on possible algorithm types, see
            JsonWebKeySignatureAlgorithm.

            Possible values include: 'RS256', 'RS384', 'RS512', 'RSNULL'
        - id: digest
          type:
            - azure-keyvault.buffer
          description: The digest used for signing.
        - id: signature
          type:
            - azure-keyvault.buffer
          description: The signature to be verified.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function verifyWithHttpOperationResponse(vaultBaseUrl, keyName,
        keyVersion, algorithm, digest, signature, options)
  - uid: 'azure-keyvault.KeyVaultClient#verify'
    id: 'azure-keyvault.KeyVaultClient#verify'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      verify(vaultBaseUrl, keyName, keyVersion, algorithm, digest, signature,
      options, optionalCallback)
    summary: Verifies a signature using a specified key.
    fullName: >-
      azure-keyvault.KeyVaultClient.verify(vaultBaseUrl, keyName, keyVersion,
      algorithm, digest, signature, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: keyVersion
          type:
            - string
          description: The version of the key.
        - id: algorithm
          type:
            - string
          description: >-
            The signing/verification algorithm. For more

            information on possible algorithm types, see
            JsonWebKeySignatureAlgorithm.

            Possible values include: 'RS256', 'RS384', 'RS512', 'RSNULL'
        - id: digest
          type:
            - azure-keyvault.buffer
          description: The digest used for signing.
        - id: signature
          type:
            - azure-keyvault.buffer
          description: The signature to be verified.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function verify(vaultBaseUrl, keyName, keyVersion, algorithm, digest,
        signature, options, optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#wrapKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#wrapKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      wrapKeyWithHttpOperationResponse(vaultBaseUrl, keyName, keyVersion,
      algorithm, value, options)
    summary: Wraps a symmetric key using a specified key.
    fullName: >-
      azure-keyvault.KeyVaultClient.wrapKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, keyVersion, algorithm, value, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: keyVersion
          type:
            - string
          description: The version of the key.
        - id: algorithm
          type:
            - string
          description: |-
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA1_5'
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function wrapKeyWithHttpOperationResponse(vaultBaseUrl, keyName,
        keyVersion, algorithm, value, options)
  - uid: 'azure-keyvault.KeyVaultClient#wrapKey'
    id: 'azure-keyvault.KeyVaultClient#wrapKey'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      wrapKey(vaultBaseUrl, keyName, keyVersion, algorithm, value, options,
      optionalCallback)
    summary: Wraps a symmetric key using a specified key.
    fullName: >-
      azure-keyvault.KeyVaultClient.wrapKey(vaultBaseUrl, keyName, keyVersion,
      algorithm, value, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: keyVersion
          type:
            - string
          description: The version of the key.
        - id: algorithm
          type:
            - string
          description: |-
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA1_5'
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function wrapKey(vaultBaseUrl, keyName, keyVersion, algorithm, value,
        options, optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#unwrapKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#unwrapKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      unwrapKeyWithHttpOperationResponse(vaultBaseUrl, keyName, keyVersion,
      algorithm, value, options)
    summary: >-
      Unwraps a symmetric key using the specified key that was initially used
      for

      wrapping that key.
    fullName: >-
      azure-keyvault.KeyVaultClient.unwrapKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, keyVersion, algorithm, value, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: keyVersion
          type:
            - string
          description: The version of the key.
        - id: algorithm
          type:
            - string
          description: |-
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA1_5'
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function unwrapKeyWithHttpOperationResponse(vaultBaseUrl, keyName,
        keyVersion, algorithm, value, options)
  - uid: 'azure-keyvault.KeyVaultClient#unwrapKey'
    id: 'azure-keyvault.KeyVaultClient#unwrapKey'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      unwrapKey(vaultBaseUrl, keyName, keyVersion, algorithm, value, options,
      optionalCallback)
    summary: >-
      Unwraps a symmetric key using the specified key that was initially used
      for

      wrapping that key.
    fullName: >-
      azure-keyvault.KeyVaultClient.unwrapKey(vaultBaseUrl, keyName, keyVersion,
      algorithm, value, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: keyVersion
          type:
            - string
          description: The version of the key.
        - id: algorithm
          type:
            - string
          description: |-
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA1_5'
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function unwrapKey(vaultBaseUrl, keyName, keyVersion, algorithm, value,
        options, optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#setSecretWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#setSecretWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      setSecretWithHttpOperationResponse(vaultBaseUrl, secretName, value,
      options)
    summary: Sets a secret in a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.setSecretWithHttpOperationResponse(vaultBaseUrl,
      secretName, value, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: value
          type:
            - string
          description: The value of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.contentType
          type:
            - string
          description: |-
            Type of the secret value such as a
            password.
          optional: true
        - id: options.secretAttributes
          type:
            - object
          description: The secret management attributes.
          optional: true
        - id: options.secretAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the
            object is enabled.
          optional: true
        - id: options.secretAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.secretAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function setSecretWithHttpOperationResponse(vaultBaseUrl, secretName,
        value, options)
  - uid: 'azure-keyvault.KeyVaultClient#setSecret'
    id: 'azure-keyvault.KeyVaultClient#setSecret'
    parent: azure-keyvault.KeyVaultClient
    name: 'setSecret(vaultBaseUrl, secretName, value, options, optionalCallback)'
    summary: Sets a secret in a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.setSecret(vaultBaseUrl, secretName, value,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: value
          type:
            - string
          description: The value of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.contentType
          type:
            - string
          description: |-
            Type of the secret value such as a
            password.
          optional: true
        - id: options.secretAttributes
          type:
            - object
          description: The secret management attributes.
          optional: true
        - id: options.secretAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the
            object is enabled.
          optional: true
        - id: options.secretAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.secretAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function setSecret(vaultBaseUrl, secretName, value, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#deleteSecretWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#deleteSecretWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'deleteSecretWithHttpOperationResponse(vaultBaseUrl, secretName, options)'
    summary: Deletes a secret from a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteSecretWithHttpOperationResponse(vaultBaseUrl,
      secretName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteSecretWithHttpOperationResponse(vaultBaseUrl, secretName,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#deleteSecret'
    id: 'azure-keyvault.KeyVaultClient#deleteSecret'
    parent: azure-keyvault.KeyVaultClient
    name: 'deleteSecret(vaultBaseUrl, secretName, options, optionalCallback)'
    summary: Deletes a secret from a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteSecret(vaultBaseUrl, secretName,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteSecret(vaultBaseUrl, secretName, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#updateSecretWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#updateSecretWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateSecretWithHttpOperationResponse(vaultBaseUrl, secretName,
      secretVersion, options)
    summary: |-
      Updates the attributes associated with a specified secret in a given key
      vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateSecretWithHttpOperationResponse(vaultBaseUrl,
      secretName, secretVersion, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: secretVersion
          type:
            - string
          description: The version of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.contentType
          type:
            - string
          description: |-
            Type of the secret value such as a
            password.
          optional: true
        - id: options.secretAttributes
          type:
            - object
          description: The secret management attributes.
          optional: true
        - id: options.secretAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the
            object is enabled.
          optional: true
        - id: options.secretAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.secretAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateSecretWithHttpOperationResponse(vaultBaseUrl, secretName,
        secretVersion, options)
  - uid: 'azure-keyvault.KeyVaultClient#updateSecret'
    id: 'azure-keyvault.KeyVaultClient#updateSecret'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateSecret(vaultBaseUrl, secretName, secretVersion, options,
      optionalCallback)
    summary: |-
      Updates the attributes associated with a specified secret in a given key
      vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateSecret(vaultBaseUrl, secretName,
      secretVersion, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: secretVersion
          type:
            - string
          description: The version of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.contentType
          type:
            - string
          description: |-
            Type of the secret value such as a
            password.
          optional: true
        - id: options.secretAttributes
          type:
            - object
          description: The secret management attributes.
          optional: true
        - id: options.secretAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the
            object is enabled.
          optional: true
        - id: options.secretAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.secretAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateSecret(vaultBaseUrl, secretName, secretVersion, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#getSecretWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getSecretWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getSecretWithHttpOperationResponse(vaultBaseUrl, secretName,
      secretVersion, options)
    summary: Get a specified secret from a given key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretWithHttpOperationResponse(vaultBaseUrl,
      secretName, secretVersion, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: secretVersion
          type:
            - string
          description: The version of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getSecretWithHttpOperationResponse(vaultBaseUrl, secretName,
        secretVersion, options)
  - uid: 'azure-keyvault.KeyVaultClient#getSecret'
    id: 'azure-keyvault.KeyVaultClient#getSecret'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getSecret(vaultBaseUrl, secretName, secretVersion, options,
      optionalCallback)
    summary: Get a specified secret from a given key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecret(vaultBaseUrl, secretName,
      secretVersion, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: secretVersion
          type:
            - string
          description: The version of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getSecret(vaultBaseUrl, secretName, secretVersion, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#getSecretsWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getSecretsWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretsWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: List secrets in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretsWithHttpOperationResponse(vaultBaseUrl,
      options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getSecretsWithHttpOperationResponse(vaultBaseUrl, options)'
  - uid: 'azure-keyvault.KeyVaultClient#getSecrets'
    id: 'azure-keyvault.KeyVaultClient#getSecrets'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecrets(vaultBaseUrl, options, optionalCallback)'
    summary: List secrets in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecrets(vaultBaseUrl, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getSecrets(vaultBaseUrl, options, optionalCallback)'
  - uid: 'azure-keyvault.KeyVaultClient#getSecretVersionsWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getSecretVersionsWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getSecretVersionsWithHttpOperationResponse(vaultBaseUrl, secretName,
      options)
    summary: List the versions of the specified secret.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretVersionsWithHttpOperationResponse(vaultBaseUrl,
      secretName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getSecretVersionsWithHttpOperationResponse(vaultBaseUrl,
        secretName, options)
  - uid: 'azure-keyvault.KeyVaultClient#getSecretVersions'
    id: 'azure-keyvault.KeyVaultClient#getSecretVersions'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretVersions(vaultBaseUrl, secretName, options, optionalCallback)'
    summary: List the versions of the specified secret.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretVersions(vaultBaseUrl, secretName,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getSecretVersions(vaultBaseUrl, secretName, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#getCertificatesWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getCertificatesWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificatesWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: List certificates in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificatesWithHttpOperationResponse(vaultBaseUrl,
      options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getCertificatesWithHttpOperationResponse(vaultBaseUrl, options)'
  - uid: 'azure-keyvault.KeyVaultClient#getCertificates'
    id: 'azure-keyvault.KeyVaultClient#getCertificates'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificates(vaultBaseUrl, options, optionalCallback)'
    summary: List certificates in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificates(vaultBaseUrl, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getCertificates(vaultBaseUrl, options, optionalCallback)'
  - uid: 'azure-keyvault.KeyVaultClient#deleteCertificateWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#deleteCertificateWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteCertificateWithHttpOperationResponse(vaultBaseUrl, certificateName,
      options)
    summary: Deletes a certificate from a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
  - uid: 'azure-keyvault.KeyVaultClient#deleteCertificate'
    id: 'azure-keyvault.KeyVaultClient#deleteCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteCertificate(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: Deletes a certificate from a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificate(vaultBaseUrl,
      certificateName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteCertificate(vaultBaseUrl, certificateName, options,
        optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#setCertificateContactsWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#setCertificateContactsWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      setCertificateContactsWithHttpOperationResponse(vaultBaseUrl, contacts,
      options)
    summary: Sets the certificate contacts for the specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.setCertificateContactsWithHttpOperationResponse(vaultBaseUrl,
      contacts, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: contacts
          type:
            - object
          description: The contacts for the key vault certificate.
        - id: contacts.contactList
          type:
            - array
          description: |-
            The contact list for the vault
            certificates.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function setCertificateContactsWithHttpOperationResponse(vaultBaseUrl,
        contacts, options)
  - uid: 'azure-keyvault.KeyVaultClient#setCertificateContacts'
    id: 'azure-keyvault.KeyVaultClient#setCertificateContacts'
    parent: azure-keyvault.KeyVaultClient
    name: 'setCertificateContacts(vaultBaseUrl, contacts, options, optionalCallback)'
    summary: Sets the certificate contacts for the specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.setCertificateContacts(vaultBaseUrl,
      contacts, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: contacts
          type:
            - object
          description: The contacts for the key vault certificate.
        - id: contacts.contactList
          type:
            - array
          description: |-
            The contact list for the vault
            certificates.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function setCertificateContacts(vaultBaseUrl, contacts, options,
        optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateContactsWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateContactsWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateContactsWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: Lists the certificate contacts for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateContactsWithHttpOperationResponse(vaultBaseUrl,
      options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificateContactsWithHttpOperationResponse(vaultBaseUrl,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateContacts'
    id: 'azure-keyvault.KeyVaultClient#getCertificateContacts'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateContacts(vaultBaseUrl, options, optionalCallback)'
    summary: Lists the certificate contacts for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateContacts(vaultBaseUrl,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getCertificateContacts(vaultBaseUrl, options, optionalCallback)'
  - uid: >-
      azure-keyvault.KeyVaultClient#deleteCertificateContactsWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#deleteCertificateContactsWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'deleteCertificateContactsWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: Deletes the certificate contacts for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateContactsWithHttpOperationResponse(vaultBaseUrl,
      options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteCertificateContactsWithHttpOperationResponse(vaultBaseUrl,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#deleteCertificateContacts'
    id: 'azure-keyvault.KeyVaultClient#deleteCertificateContacts'
    parent: azure-keyvault.KeyVaultClient
    name: 'deleteCertificateContacts(vaultBaseUrl, options, optionalCallback)'
    summary: Deletes the certificate contacts for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateContacts(vaultBaseUrl,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteCertificateContacts(vaultBaseUrl, options,
        optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateIssuersWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateIssuersWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateIssuersWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: List certificate issuers for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuersWithHttpOperationResponse(vaultBaseUrl,
      options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificateIssuersWithHttpOperationResponse(vaultBaseUrl,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateIssuers'
    id: 'azure-keyvault.KeyVaultClient#getCertificateIssuers'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateIssuers(vaultBaseUrl, options, optionalCallback)'
    summary: List certificate issuers for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuers(vaultBaseUrl, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getCertificateIssuers(vaultBaseUrl, options, optionalCallback)'
  - uid: >-
      azure-keyvault.KeyVaultClient#setCertificateIssuerWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#setCertificateIssuerWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      setCertificateIssuerWithHttpOperationResponse(vaultBaseUrl, issuerName,
      provider, options)
    summary: Sets the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.setCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
      issuerName, provider, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: provider
          type:
            - string
          description: The issuer provider.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.credentials
          type:
            - object
          description: |-
            The credentials to be used for the
            issuer.
          optional: true
        - id: options.credentials.accountId
          type:
            - string
          description: |-
            The user name/account
            name/account id.
          optional: true
        - id: options.credentials.password
          type:
            - string
          description: |-
            The password/secret/account
            key.
          optional: true
        - id: options.organizationDetails
          type:
            - object
          description: |-
            Details of the organization as
            provided to the issuer.
          optional: true
        - id: options.organizationDetails.id
          type:
            - string
          description: Id of the organization.
          optional: true
        - id: options.organizationDetails.adminDetails
          type:
            - array
          description: |-
            Details of the
            organization administrator.
          optional: true
        - id: options.attributes
          type:
            - object
          description: Attributes of the issuer object.
          optional: true
        - id: options.attributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the issuer
            is enabled.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function setCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
        issuerName, provider, options)
  - uid: 'azure-keyvault.KeyVaultClient#setCertificateIssuer'
    id: 'azure-keyvault.KeyVaultClient#setCertificateIssuer'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      setCertificateIssuer(vaultBaseUrl, issuerName, provider, options,
      optionalCallback)
    summary: Sets the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.setCertificateIssuer(vaultBaseUrl,
      issuerName, provider, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: provider
          type:
            - string
          description: The issuer provider.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.credentials
          type:
            - object
          description: |-
            The credentials to be used for the
            issuer.
          optional: true
        - id: options.credentials.accountId
          type:
            - string
          description: |-
            The user name/account
            name/account id.
          optional: true
        - id: options.credentials.password
          type:
            - string
          description: |-
            The password/secret/account
            key.
          optional: true
        - id: options.organizationDetails
          type:
            - object
          description: |-
            Details of the organization as
            provided to the issuer.
          optional: true
        - id: options.organizationDetails.id
          type:
            - string
          description: Id of the organization.
          optional: true
        - id: options.organizationDetails.adminDetails
          type:
            - array
          description: |-
            Details of the
            organization administrator.
          optional: true
        - id: options.attributes
          type:
            - object
          description: Attributes of the issuer object.
          optional: true
        - id: options.attributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the issuer
            is enabled.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function setCertificateIssuer(vaultBaseUrl, issuerName, provider,
        options, optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#updateCertificateIssuerWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#updateCertificateIssuerWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificateIssuerWithHttpOperationResponse(vaultBaseUrl, issuerName,
      options)
    summary: Updates the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
      issuerName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.provider
          type:
            - string
          description: The issuer provider.
          optional: true
        - id: options.credentials
          type:
            - object
          description: |-
            The credentials to be used for the
            issuer.
          optional: true
        - id: options.credentials.accountId
          type:
            - string
          description: |-
            The user name/account
            name/account id.
          optional: true
        - id: options.credentials.password
          type:
            - string
          description: |-
            The password/secret/account
            key.
          optional: true
        - id: options.organizationDetails
          type:
            - object
          description: |-
            Details of the organization as
            provided to the issuer.
          optional: true
        - id: options.organizationDetails.id
          type:
            - string
          description: Id of the organization.
          optional: true
        - id: options.organizationDetails.adminDetails
          type:
            - array
          description: |-
            Details of the
            organization administrator.
          optional: true
        - id: options.attributes
          type:
            - object
          description: Attributes of the issuer object.
          optional: true
        - id: options.attributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the issuer
            is enabled.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
        issuerName, options)
  - uid: 'azure-keyvault.KeyVaultClient#updateCertificateIssuer'
    id: 'azure-keyvault.KeyVaultClient#updateCertificateIssuer'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificateIssuer(vaultBaseUrl, issuerName, options,
      optionalCallback)
    summary: Updates the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificateIssuer(vaultBaseUrl,
      issuerName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.provider
          type:
            - string
          description: The issuer provider.
          optional: true
        - id: options.credentials
          type:
            - object
          description: |-
            The credentials to be used for the
            issuer.
          optional: true
        - id: options.credentials.accountId
          type:
            - string
          description: |-
            The user name/account
            name/account id.
          optional: true
        - id: options.credentials.password
          type:
            - string
          description: |-
            The password/secret/account
            key.
          optional: true
        - id: options.organizationDetails
          type:
            - object
          description: |-
            Details of the organization as
            provided to the issuer.
          optional: true
        - id: options.organizationDetails.id
          type:
            - string
          description: Id of the organization.
          optional: true
        - id: options.organizationDetails.adminDetails
          type:
            - array
          description: |-
            Details of the
            organization administrator.
          optional: true
        - id: options.attributes
          type:
            - object
          description: Attributes of the issuer object.
          optional: true
        - id: options.attributes.enabled
          type:
            - boolean
          description: |-
            Determines whether the issuer
            is enabled.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateCertificateIssuer(vaultBaseUrl, issuerName, options,
        optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateIssuerWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateIssuerWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificateIssuerWithHttpOperationResponse(vaultBaseUrl, issuerName,
      options)
    summary: Lists the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
      issuerName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
        issuerName, options)
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateIssuer'
    id: 'azure-keyvault.KeyVaultClient#getCertificateIssuer'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateIssuer(vaultBaseUrl, issuerName, options, optionalCallback)'
    summary: Lists the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuer(vaultBaseUrl,
      issuerName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getCertificateIssuer(vaultBaseUrl, issuerName, options,
        optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#deleteCertificateIssuerWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#deleteCertificateIssuerWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteCertificateIssuerWithHttpOperationResponse(vaultBaseUrl, issuerName,
      options)
    summary: Deletes the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
      issuerName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
        issuerName, options)
  - uid: 'azure-keyvault.KeyVaultClient#deleteCertificateIssuer'
    id: 'azure-keyvault.KeyVaultClient#deleteCertificateIssuer'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteCertificateIssuer(vaultBaseUrl, issuerName, options,
      optionalCallback)
    summary: Deletes the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateIssuer(vaultBaseUrl,
      issuerName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteCertificateIssuer(vaultBaseUrl, issuerName, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#createCertificateWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#createCertificateWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      createCertificateWithHttpOperationResponse(vaultBaseUrl, certificateName,
      options)
    summary: |-
      Creates a new certificate. If this is the first version, the certificate
      resource is created.
    fullName: >-
      azure-keyvault.KeyVaultClient.createCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.certificatePolicy
          type:
            - object
          description: |-
            The management policy for the
            certificate.
          optional: true
        - id: options.certificatePolicy.keyProperties
          type:
            - object
          description: |-
            Properties of the
            key backing a certificate.
          optional: true
        - id: options.certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: Indicates if the private key can be exported.
          optional: true
        - id: options.certificatePolicy.keyProperties.keyType
          type:
            - string
          description: |-
            The key
            type.
          optional: true
        - id: options.certificatePolicy.keyProperties.keySize
          type:
            - number
          description: |-
            The key
            size in bytes. For example;  1024 or 2048.
          optional: true
        - id: options.certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: Indicates if the same key pair will be used on certificate renewal.
          optional: true
        - id: options.certificatePolicy.secretProperties
          type:
            - object
          description: |-
            Properties of
            the secret backing a certificate.
          optional: true
        - id: options.certificatePolicy.secretProperties.contentType
          type:
            - string
          description: |-
            The
            media type (MIME type).
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties
          type:
            - object
          description: Properties of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: |-
            The subject
            name. Should be a valid X509 distinguished Name.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: The enhanced key usage.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: The subject alternative names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: |-
            List of key
            usages.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: |-
            The
            duration that the ceritifcate is valid in months.
          optional: true
        - id: options.certificatePolicy.lifetimeActions
          type:
            - array
          description: |-
            Actions that will
            be performed by Key Vault over the lifetime of a certificate.
          optional: true
        - id: options.certificatePolicy.issuerParameters
          type:
            - object
          description: |-
            Parameters for
            the issuer of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.issuerParameters.name
          type:
            - string
          description: >-
            Name of

            the referenced issuer object or reserved names; for example, 'Self'
            or

            'Unknown'.
          optional: true
        - id: options.certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: Type of certificate to be requested from the issuer provider.
          optional: true
        - id: options.certificatePolicy.attributes
          type:
            - object
          description: |-
            The certificate
            attributes.
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: |-
            The attributes of the
            certificate (optional).
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether
            the object is enabled.
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: |-
            Not before date in
            UTC.
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
  - uid: 'azure-keyvault.KeyVaultClient#createCertificate'
    id: 'azure-keyvault.KeyVaultClient#createCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      createCertificate(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: |-
      Creates a new certificate. If this is the first version, the certificate
      resource is created.
    fullName: >-
      azure-keyvault.KeyVaultClient.createCertificate(vaultBaseUrl,
      certificateName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.certificatePolicy
          type:
            - object
          description: |-
            The management policy for the
            certificate.
          optional: true
        - id: options.certificatePolicy.keyProperties
          type:
            - object
          description: |-
            Properties of the
            key backing a certificate.
          optional: true
        - id: options.certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: Indicates if the private key can be exported.
          optional: true
        - id: options.certificatePolicy.keyProperties.keyType
          type:
            - string
          description: |-
            The key
            type.
          optional: true
        - id: options.certificatePolicy.keyProperties.keySize
          type:
            - number
          description: |-
            The key
            size in bytes. For example;  1024 or 2048.
          optional: true
        - id: options.certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: Indicates if the same key pair will be used on certificate renewal.
          optional: true
        - id: options.certificatePolicy.secretProperties
          type:
            - object
          description: |-
            Properties of
            the secret backing a certificate.
          optional: true
        - id: options.certificatePolicy.secretProperties.contentType
          type:
            - string
          description: |-
            The
            media type (MIME type).
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties
          type:
            - object
          description: Properties of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: |-
            The subject
            name. Should be a valid X509 distinguished Name.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: The enhanced key usage.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: The subject alternative names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: |-
            List of key
            usages.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: |-
            The
            duration that the ceritifcate is valid in months.
          optional: true
        - id: options.certificatePolicy.lifetimeActions
          type:
            - array
          description: |-
            Actions that will
            be performed by Key Vault over the lifetime of a certificate.
          optional: true
        - id: options.certificatePolicy.issuerParameters
          type:
            - object
          description: |-
            Parameters for
            the issuer of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.issuerParameters.name
          type:
            - string
          description: >-
            Name of

            the referenced issuer object or reserved names; for example, 'Self'
            or

            'Unknown'.
          optional: true
        - id: options.certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: Type of certificate to be requested from the issuer provider.
          optional: true
        - id: options.certificatePolicy.attributes
          type:
            - object
          description: |-
            The certificate
            attributes.
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: |-
            The attributes of the
            certificate (optional).
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether
            the object is enabled.
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: |-
            Not before date in
            UTC.
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createCertificate(vaultBaseUrl, certificateName, options,
        optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#importCertificateWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#importCertificateWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      importCertificateWithHttpOperationResponse(vaultBaseUrl, certificateName,
      base64EncodedCertificate, options)
    summary: Imports a certificate into a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.importCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, base64EncodedCertificate, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: base64EncodedCertificate
          type:
            - string
          description: >-
            Base64 encoded representation of

            the certificate object to import. This certificate needs to contain
            the

            private key.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.password
          type:
            - string
          description: >-
            If the private key in

            base64EncodedCertificate is encrypted, the password used for
            encryption.
          optional: true
        - id: options.certificatePolicy
          type:
            - object
          description: |-
            The management policy for the
            certificate.
          optional: true
        - id: options.certificatePolicy.keyProperties
          type:
            - object
          description: |-
            Properties of the
            key backing a certificate.
          optional: true
        - id: options.certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: Indicates if the private key can be exported.
          optional: true
        - id: options.certificatePolicy.keyProperties.keyType
          type:
            - string
          description: |-
            The key
            type.
          optional: true
        - id: options.certificatePolicy.keyProperties.keySize
          type:
            - number
          description: |-
            The key
            size in bytes. For example;  1024 or 2048.
          optional: true
        - id: options.certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: Indicates if the same key pair will be used on certificate renewal.
          optional: true
        - id: options.certificatePolicy.secretProperties
          type:
            - object
          description: |-
            Properties of
            the secret backing a certificate.
          optional: true
        - id: options.certificatePolicy.secretProperties.contentType
          type:
            - string
          description: |-
            The
            media type (MIME type).
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties
          type:
            - object
          description: Properties of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: |-
            The subject
            name. Should be a valid X509 distinguished Name.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: The enhanced key usage.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: The subject alternative names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: |-
            List of key
            usages.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: |-
            The
            duration that the ceritifcate is valid in months.
          optional: true
        - id: options.certificatePolicy.lifetimeActions
          type:
            - array
          description: |-
            Actions that will
            be performed by Key Vault over the lifetime of a certificate.
          optional: true
        - id: options.certificatePolicy.issuerParameters
          type:
            - object
          description: |-
            Parameters for
            the issuer of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.issuerParameters.name
          type:
            - string
          description: >-
            Name of

            the referenced issuer object or reserved names; for example, 'Self'
            or

            'Unknown'.
          optional: true
        - id: options.certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: Type of certificate to be requested from the issuer provider.
          optional: true
        - id: options.certificatePolicy.attributes
          type:
            - object
          description: |-
            The certificate
            attributes.
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: |-
            The attributes of the
            certificate (optional).
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether
            the object is enabled.
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: |-
            Not before date in
            UTC.
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function importCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, base64EncodedCertificate, options)
  - uid: 'azure-keyvault.KeyVaultClient#importCertificate'
    id: 'azure-keyvault.KeyVaultClient#importCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      importCertificate(vaultBaseUrl, certificateName, base64EncodedCertificate,
      options, optionalCallback)
    summary: Imports a certificate into a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.importCertificate(vaultBaseUrl,
      certificateName, base64EncodedCertificate, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: base64EncodedCertificate
          type:
            - string
          description: >-
            Base64 encoded representation of

            the certificate object to import. This certificate needs to contain
            the

            private key.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.password
          type:
            - string
          description: >-
            If the private key in

            base64EncodedCertificate is encrypted, the password used for
            encryption.
          optional: true
        - id: options.certificatePolicy
          type:
            - object
          description: |-
            The management policy for the
            certificate.
          optional: true
        - id: options.certificatePolicy.keyProperties
          type:
            - object
          description: |-
            Properties of the
            key backing a certificate.
          optional: true
        - id: options.certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: Indicates if the private key can be exported.
          optional: true
        - id: options.certificatePolicy.keyProperties.keyType
          type:
            - string
          description: |-
            The key
            type.
          optional: true
        - id: options.certificatePolicy.keyProperties.keySize
          type:
            - number
          description: |-
            The key
            size in bytes. For example;  1024 or 2048.
          optional: true
        - id: options.certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: Indicates if the same key pair will be used on certificate renewal.
          optional: true
        - id: options.certificatePolicy.secretProperties
          type:
            - object
          description: |-
            Properties of
            the secret backing a certificate.
          optional: true
        - id: options.certificatePolicy.secretProperties.contentType
          type:
            - string
          description: |-
            The
            media type (MIME type).
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties
          type:
            - object
          description: Properties of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: |-
            The subject
            name. Should be a valid X509 distinguished Name.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: The enhanced key usage.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: The subject alternative names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: |-
            List of key
            usages.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: |-
            The
            duration that the ceritifcate is valid in months.
          optional: true
        - id: options.certificatePolicy.lifetimeActions
          type:
            - array
          description: |-
            Actions that will
            be performed by Key Vault over the lifetime of a certificate.
          optional: true
        - id: options.certificatePolicy.issuerParameters
          type:
            - object
          description: |-
            Parameters for
            the issuer of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.issuerParameters.name
          type:
            - string
          description: >-
            Name of

            the referenced issuer object or reserved names; for example, 'Self'
            or

            'Unknown'.
          optional: true
        - id: options.certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: Type of certificate to be requested from the issuer provider.
          optional: true
        - id: options.certificatePolicy.attributes
          type:
            - object
          description: |-
            The certificate
            attributes.
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: |-
            The attributes of the
            certificate (optional).
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether
            the object is enabled.
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: |-
            Not before date in
            UTC.
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function importCertificate(vaultBaseUrl, certificateName,
        base64EncodedCertificate, options, optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateVersionsWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateVersionsWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificateVersionsWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    summary: List the versions of a certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateVersionsWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificateVersionsWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateVersions'
    id: 'azure-keyvault.KeyVaultClient#getCertificateVersions'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificateVersions(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: List the versions of a certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateVersions(vaultBaseUrl,
      certificateName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: |-
            Maximum number of results to return in
            a page. If not specified the service will return up to 25 results.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getCertificateVersions(vaultBaseUrl, certificateName, options,
        optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificatePolicyWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificatePolicyWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificatePolicyWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    summary: Lists the policy for a certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificatePolicyWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |-
            The name of the certificate in a given key
            vault.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificatePolicyWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
  - uid: 'azure-keyvault.KeyVaultClient#getCertificatePolicy'
    id: 'azure-keyvault.KeyVaultClient#getCertificatePolicy'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificatePolicy(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: Lists the policy for a certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificatePolicy(vaultBaseUrl,
      certificateName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |-
            The name of the certificate in a given key
            vault.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getCertificatePolicy(vaultBaseUrl, certificateName, options,
        optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#updateCertificatePolicyWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#updateCertificatePolicyWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificatePolicyWithHttpOperationResponse(vaultBaseUrl,
      certificateName, certificatePolicy, options)
    summary: |-
      Updates the policy for a certificate. Set specified members in the
      certificate policy. Leave others as null.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificatePolicyWithHttpOperationResponse(vaultBaseUrl,
      certificateName, certificatePolicy, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |-
            The name of the certificate in the given
            vault.
        - id: certificatePolicy
          type:
            - object
          description: The policy for the certificate.
        - id: certificatePolicy.keyProperties
          type:
            - object
          description: |-
            Properties of the key
            backing a certificate.
          optional: true
        - id: certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: |-
            Indicates if
            the private key can be exported.
          optional: true
        - id: certificatePolicy.keyProperties.keyType
          type:
            - string
          description: The key type.
          optional: true
        - id: certificatePolicy.keyProperties.keySize
          type:
            - number
          description: |-
            The key size in
            bytes. For example;  1024 or 2048.
          optional: true
        - id: certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: |-
            Indicates if the
            same key pair will be used on certificate renewal.
          optional: true
        - id: certificatePolicy.secretProperties
          type:
            - object
          description: |-
            Properties of the
            secret backing a certificate.
          optional: true
        - id: certificatePolicy.secretProperties.contentType
          type:
            - string
          description: |-
            The media
            type (MIME type).
          optional: true
        - id: certificatePolicy.x509CertificateProperties
          type:
            - object
          description: |-
            Properties of
            the X509 component of a certificate.
          optional: true
        - id: certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: |-
            The
            subject name. Should be a valid X509 distinguished Name.
          optional: true
        - id: certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: |-
            The
            enhanced key usage.
          optional: true
        - id: certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: |-
            The
            subject alternative names.
          optional: true
        - id: >-
            certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: |-
            List
            of key usages.
          optional: true
        - id: certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: |-
            The duration
            that the ceritifcate is valid in months.
          optional: true
        - id: certificatePolicy.lifetimeActions
          type:
            - array
          description: |-
            Actions that will be
            performed by Key Vault over the lifetime of a certificate.
          optional: true
        - id: certificatePolicy.issuerParameters
          type:
            - object
          description: |-
            Parameters for the
            issuer of the X509 component of a certificate.
          optional: true
        - id: certificatePolicy.issuerParameters.name
          type:
            - string
          description: |-
            Name of the
            referenced issuer object or reserved names; for example, 'Self' or
            'Unknown'.
          optional: true
        - id: certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: |-
            Type of
            certificate to be requested from the issuer provider.
          optional: true
        - id: certificatePolicy.attributes
          type:
            - object
          description: The certificate attributes.
          optional: true
        - id: certificatePolicy.attributes.enabled
          type:
            - boolean
          description: |-
            Determines whether
            the object is enabled.
          optional: true
        - id: certificatePolicy.attributes.notBefore
          type:
            - date
          description: |-
            Not before date in
            UTC.
          optional: true
        - id: certificatePolicy.attributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateCertificatePolicyWithHttpOperationResponse(vaultBaseUrl,
        certificateName, certificatePolicy, options)
  - uid: 'azure-keyvault.KeyVaultClient#updateCertificatePolicy'
    id: 'azure-keyvault.KeyVaultClient#updateCertificatePolicy'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificatePolicy(vaultBaseUrl, certificateName, certificatePolicy,
      options, optionalCallback)
    summary: |-
      Updates the policy for a certificate. Set specified members in the
      certificate policy. Leave others as null.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificatePolicy(vaultBaseUrl,
      certificateName, certificatePolicy, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |-
            The name of the certificate in the given
            vault.
        - id: certificatePolicy
          type:
            - object
          description: The policy for the certificate.
        - id: certificatePolicy.keyProperties
          type:
            - object
          description: |-
            Properties of the key
            backing a certificate.
          optional: true
        - id: certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: |-
            Indicates if
            the private key can be exported.
          optional: true
        - id: certificatePolicy.keyProperties.keyType
          type:
            - string
          description: The key type.
          optional: true
        - id: certificatePolicy.keyProperties.keySize
          type:
            - number
          description: |-
            The key size in
            bytes. For example;  1024 or 2048.
          optional: true
        - id: certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: |-
            Indicates if the
            same key pair will be used on certificate renewal.
          optional: true
        - id: certificatePolicy.secretProperties
          type:
            - object
          description: |-
            Properties of the
            secret backing a certificate.
          optional: true
        - id: certificatePolicy.secretProperties.contentType
          type:
            - string
          description: |-
            The media
            type (MIME type).
          optional: true
        - id: certificatePolicy.x509CertificateProperties
          type:
            - object
          description: |-
            Properties of
            the X509 component of a certificate.
          optional: true
        - id: certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: |-
            The
            subject name. Should be a valid X509 distinguished Name.
          optional: true
        - id: certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: |-
            The
            enhanced key usage.
          optional: true
        - id: certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: |-
            The
            subject alternative names.
          optional: true
        - id: >-
            certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: |-
            List
            of key usages.
          optional: true
        - id: certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: |-
            The duration
            that the ceritifcate is valid in months.
          optional: true
        - id: certificatePolicy.lifetimeActions
          type:
            - array
          description: |-
            Actions that will be
            performed by Key Vault over the lifetime of a certificate.
          optional: true
        - id: certificatePolicy.issuerParameters
          type:
            - object
          description: |-
            Parameters for the
            issuer of the X509 component of a certificate.
          optional: true
        - id: certificatePolicy.issuerParameters.name
          type:
            - string
          description: |-
            Name of the
            referenced issuer object or reserved names; for example, 'Self' or
            'Unknown'.
          optional: true
        - id: certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: |-
            Type of
            certificate to be requested from the issuer provider.
          optional: true
        - id: certificatePolicy.attributes
          type:
            - object
          description: The certificate attributes.
          optional: true
        - id: certificatePolicy.attributes.enabled
          type:
            - boolean
          description: |-
            Determines whether
            the object is enabled.
          optional: true
        - id: certificatePolicy.attributes.notBefore
          type:
            - date
          description: |-
            Not before date in
            UTC.
          optional: true
        - id: certificatePolicy.attributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateCertificatePolicy(vaultBaseUrl, certificateName,
        certificatePolicy, options, optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#updateCertificateWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#updateCertificateWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificateWithHttpOperationResponse(vaultBaseUrl, certificateName,
      certificateVersion, options)
    summary: Updates the specified attributes associated with the given certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, certificateVersion, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |-
            The name of the certificate in the given key
            vault.
        - id: certificateVersion
          type:
            - string
          description: The version of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.certificatePolicy
          type:
            - object
          description: |-
            The management policy for the
            certificate.
          optional: true
        - id: options.certificatePolicy.keyProperties
          type:
            - object
          description: |-
            Properties of the
            key backing a certificate.
          optional: true
        - id: options.certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: Indicates if the private key can be exported.
          optional: true
        - id: options.certificatePolicy.keyProperties.keyType
          type:
            - string
          description: |-
            The key
            type.
          optional: true
        - id: options.certificatePolicy.keyProperties.keySize
          type:
            - number
          description: |-
            The key
            size in bytes. For example;  1024 or 2048.
          optional: true
        - id: options.certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: Indicates if the same key pair will be used on certificate renewal.
          optional: true
        - id: options.certificatePolicy.secretProperties
          type:
            - object
          description: |-
            Properties of
            the secret backing a certificate.
          optional: true
        - id: options.certificatePolicy.secretProperties.contentType
          type:
            - string
          description: |-
            The
            media type (MIME type).
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties
          type:
            - object
          description: Properties of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: |-
            The subject
            name. Should be a valid X509 distinguished Name.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: The enhanced key usage.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: The subject alternative names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: |-
            List of key
            usages.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: |-
            The
            duration that the ceritifcate is valid in months.
          optional: true
        - id: options.certificatePolicy.lifetimeActions
          type:
            - array
          description: |-
            Actions that will
            be performed by Key Vault over the lifetime of a certificate.
          optional: true
        - id: options.certificatePolicy.issuerParameters
          type:
            - object
          description: |-
            Parameters for
            the issuer of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.issuerParameters.name
          type:
            - string
          description: >-
            Name of

            the referenced issuer object or reserved names; for example, 'Self'
            or

            'Unknown'.
          optional: true
        - id: options.certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: Type of certificate to be requested from the issuer provider.
          optional: true
        - id: options.certificatePolicy.attributes
          type:
            - object
          description: |-
            The certificate
            attributes.
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: |-
            The attributes of the
            certificate (optional).
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether
            the object is enabled.
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: |-
            Not before date in
            UTC.
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, certificateVersion, options)
  - uid: 'azure-keyvault.KeyVaultClient#updateCertificate'
    id: 'azure-keyvault.KeyVaultClient#updateCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificate(vaultBaseUrl, certificateName, certificateVersion,
      options, optionalCallback)
    summary: Updates the specified attributes associated with the given certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificate(vaultBaseUrl,
      certificateName, certificateVersion, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |-
            The name of the certificate in the given key
            vault.
        - id: certificateVersion
          type:
            - string
          description: The version of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.certificatePolicy
          type:
            - object
          description: |-
            The management policy for the
            certificate.
          optional: true
        - id: options.certificatePolicy.keyProperties
          type:
            - object
          description: |-
            Properties of the
            key backing a certificate.
          optional: true
        - id: options.certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: Indicates if the private key can be exported.
          optional: true
        - id: options.certificatePolicy.keyProperties.keyType
          type:
            - string
          description: |-
            The key
            type.
          optional: true
        - id: options.certificatePolicy.keyProperties.keySize
          type:
            - number
          description: |-
            The key
            size in bytes. For example;  1024 or 2048.
          optional: true
        - id: options.certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: Indicates if the same key pair will be used on certificate renewal.
          optional: true
        - id: options.certificatePolicy.secretProperties
          type:
            - object
          description: |-
            Properties of
            the secret backing a certificate.
          optional: true
        - id: options.certificatePolicy.secretProperties.contentType
          type:
            - string
          description: |-
            The
            media type (MIME type).
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties
          type:
            - object
          description: Properties of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: |-
            The subject
            name. Should be a valid X509 distinguished Name.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: The enhanced key usage.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: The subject alternative names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: |-
            List of key
            usages.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: |-
            The
            duration that the ceritifcate is valid in months.
          optional: true
        - id: options.certificatePolicy.lifetimeActions
          type:
            - array
          description: |-
            Actions that will
            be performed by Key Vault over the lifetime of a certificate.
          optional: true
        - id: options.certificatePolicy.issuerParameters
          type:
            - object
          description: |-
            Parameters for
            the issuer of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.issuerParameters.name
          type:
            - string
          description: >-
            Name of

            the referenced issuer object or reserved names; for example, 'Self'
            or

            'Unknown'.
          optional: true
        - id: options.certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: Type of certificate to be requested from the issuer provider.
          optional: true
        - id: options.certificatePolicy.attributes
          type:
            - object
          description: |-
            The certificate
            attributes.
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: |-
            The attributes of the
            certificate (optional).
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether
            the object is enabled.
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: |-
            Not before date in
            UTC.
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateCertificate(vaultBaseUrl, certificateName,
        certificateVersion, options, optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getCertificateWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificateWithHttpOperationResponse(vaultBaseUrl, certificateName,
      certificateVersion, options)
    summary: Gets information about a specified certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, certificateVersion, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |-
            The name of the certificate in the given
            vault.
        - id: certificateVersion
          type:
            - string
          description: The version of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, certificateVersion, options)
  - uid: 'azure-keyvault.KeyVaultClient#getCertificate'
    id: 'azure-keyvault.KeyVaultClient#getCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificate(vaultBaseUrl, certificateName, certificateVersion, options,
      optionalCallback)
    summary: Gets information about a specified certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificate(vaultBaseUrl,
      certificateName, certificateVersion, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |-
            The name of the certificate in the given
            vault.
        - id: certificateVersion
          type:
            - string
          description: The version of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getCertificate(vaultBaseUrl, certificateName,
        certificateVersion, options, optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#updateCertificateOperationWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#updateCertificateOperationWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
      certificateName, cancellationRequested, options)
    summary: Updates a certificate operation.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
      certificateName, cancellationRequested, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: cancellationRequested
          type:
            - boolean
          description: |-
            Indicates if cancellation was
            requested on the certificate operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
        certificateName, cancellationRequested, options)
  - uid: 'azure-keyvault.KeyVaultClient#updateCertificateOperation'
    id: 'azure-keyvault.KeyVaultClient#updateCertificateOperation'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificateOperation(vaultBaseUrl, certificateName,
      cancellationRequested, options, optionalCallback)
    summary: Updates a certificate operation.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificateOperation(vaultBaseUrl,
      certificateName, cancellationRequested, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: cancellationRequested
          type:
            - boolean
          description: |-
            Indicates if cancellation was
            requested on the certificate operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateCertificateOperation(vaultBaseUrl, certificateName,
        cancellationRequested, options, optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateOperationWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateOperationWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    summary: Gets the operation associated with a specified certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateOperation'
    id: 'azure-keyvault.KeyVaultClient#getCertificateOperation'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificateOperation(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: Gets the operation associated with a specified certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateOperation(vaultBaseUrl,
      certificateName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getCertificateOperation(vaultBaseUrl, certificateName, options,
        optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#deleteCertificateOperationWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#deleteCertificateOperationWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    summary: Deletes the operation for a specified certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
  - uid: 'azure-keyvault.KeyVaultClient#deleteCertificateOperation'
    id: 'azure-keyvault.KeyVaultClient#deleteCertificateOperation'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteCertificateOperation(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: Deletes the operation for a specified certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateOperation(vaultBaseUrl,
      certificateName, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteCertificateOperation(vaultBaseUrl, certificateName,
        options, optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#mergeCertificateWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#mergeCertificateWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      mergeCertificateWithHttpOperationResponse(vaultBaseUrl, certificateName,
      x509Certificates, options)
    summary: >-
      Merges a certificate or a certificate chain with a key pair existing on
      the

      server.
    fullName: >-
      azure-keyvault.KeyVaultClient.mergeCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, x509Certificates, options)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: x509Certificates
          type:
            - array
          description: |-
            The certificate or the certificate chain to
            merge.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: |-
            The attributes of the
            certificate (optional).
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether
            the object is enabled.
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: |-
            Not before date in
            UTC.
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function mergeCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, x509Certificates, options)
  - uid: 'azure-keyvault.KeyVaultClient#mergeCertificate'
    id: 'azure-keyvault.KeyVaultClient#mergeCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      mergeCertificate(vaultBaseUrl, certificateName, x509Certificates, options,
      optionalCallback)
    summary: >-
      Merges a certificate or a certificate chain with a key pair existing on
      the

      server.
    fullName: >-
      azure-keyvault.KeyVaultClient.mergeCertificate(vaultBaseUrl,
      certificateName, x509Certificates, options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |-
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: x509Certificates
          type:
            - array
          description: |-
            The certificate or the certificate chain to
            merge.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: |-
            The attributes of the
            certificate (optional).
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: |-
            Determines whether
            the object is enabled.
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: |-
            Not before date in
            UTC.
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: |-
            Application specific metadata in the form of
            key-value pairs.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function mergeCertificate(vaultBaseUrl, certificateName,
        x509Certificates, options, optionalCallback)
  - uid: 'azure-keyvault.KeyVaultClient#getKeyVersionsNextWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getKeyVersionsNextWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeyVersionsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: >-
      Retrieves a list of individual key versions with the same key name. The
      full

      key identifier, attributes, and tags are provided in the response.

      Authorization: Requires the keys/list permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeyVersionsNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getKeyVersionsNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#getKeyVersionsNext'
    id: 'azure-keyvault.KeyVaultClient#getKeyVersionsNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeyVersionsNext(nextPageLink, options, optionalCallback)'
    summary: >-
      Retrieves a list of individual key versions with the same key name. The
      full

      key identifier, attributes, and tags are provided in the response.

      Authorization: Requires the keys/list permission.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeyVersionsNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getKeyVersionsNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-keyvault.KeyVaultClient#getKeysNextWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getKeysNextWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeysNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List keys in the specified vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeysNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getKeysNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-keyvault.KeyVaultClient#getKeysNext'
    id: 'azure-keyvault.KeyVaultClient#getKeysNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeysNext(nextPageLink, options, optionalCallback)'
    summary: List keys in the specified vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeysNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getKeysNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-keyvault.KeyVaultClient#getSecretsNextWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getSecretsNextWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List secrets in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretsNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getSecretsNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-keyvault.KeyVaultClient#getSecretsNext'
    id: 'azure-keyvault.KeyVaultClient#getSecretsNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretsNext(nextPageLink, options, optionalCallback)'
    summary: List secrets in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretsNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getSecretsNext(nextPageLink, options, optionalCallback)'
  - uid: >-
      azure-keyvault.KeyVaultClient#getSecretVersionsNextWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getSecretVersionsNextWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretVersionsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List the versions of the specified secret.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretVersionsNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getSecretVersionsNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#getSecretVersionsNext'
    id: 'azure-keyvault.KeyVaultClient#getSecretVersionsNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretVersionsNext(nextPageLink, options, optionalCallback)'
    summary: List the versions of the specified secret.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretVersionsNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getSecretVersionsNext(nextPageLink, options, optionalCallback)'
  - uid: 'azure-keyvault.KeyVaultClient#getCertificatesNextWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getCertificatesNextWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificatesNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List certificates in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificatesNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificatesNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#getCertificatesNext'
    id: 'azure-keyvault.KeyVaultClient#getCertificatesNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificatesNext(nextPageLink, options, optionalCallback)'
    summary: List certificates in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificatesNext(nextPageLink, options,
      optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getCertificatesNext(nextPageLink, options, optionalCallback)'
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateIssuersNextWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateIssuersNextWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateIssuersNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List certificate issuers for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuersNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getCertificateIssuersNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateIssuersNext'
    id: 'azure-keyvault.KeyVaultClient#getCertificateIssuersNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateIssuersNext(nextPageLink, options, optionalCallback)'
    summary: List certificate issuers for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuersNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getCertificateIssuersNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateVersionsNextWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateVersionsNextWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateVersionsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List the versions of a certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateVersionsNextWithHttpOperationResponse(nextPageLink,
      options)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getCertificateVersionsNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateVersionsNext'
    id: 'azure-keyvault.KeyVaultClient#getCertificateVersionsNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateVersionsNext(nextPageLink, options, optionalCallback)'
    summary: List the versions of a certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateVersionsNext(nextPageLink,
      options, optionalCallback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getCertificateVersionsNext(nextPageLink, options,
        optionalCallback)
references:
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: date
    name: date
    fullName: date
    isExternal: true
  - uid: Promise
    name: Promise
    fullName: Promise
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: azure-keyvault.buffer
    name: buffer
    fullName: azure-keyvault.buffer
    isExternal: true
